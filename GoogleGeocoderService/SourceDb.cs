#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.6387
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SourceDb
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="interactive")]
	public partial class SourceDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACTIVITY_LOG(ACTIVITY_LOG instance);
    partial void UpdateACTIVITY_LOG(ACTIVITY_LOG instance);
    partial void DeleteACTIVITY_LOG(ACTIVITY_LOG instance);
    partial void InsertASSET_CATEGORIES(ASSET_CATEGORIES instance);
    partial void UpdateASSET_CATEGORIES(ASSET_CATEGORIES instance);
    partial void DeleteASSET_CATEGORIES(ASSET_CATEGORIES instance);
    partial void InsertASSET_REGISTER(ASSET_REGISTER instance);
    partial void UpdateASSET_REGISTER(ASSET_REGISTER instance);
    partial void DeleteASSET_REGISTER(ASSET_REGISTER instance);
    partial void InsertAUDIT_CREDITORS_MONTH(AUDIT_CREDITORS_MONTH instance);
    partial void UpdateAUDIT_CREDITORS_MONTH(AUDIT_CREDITORS_MONTH instance);
    partial void DeleteAUDIT_CREDITORS_MONTH(AUDIT_CREDITORS_MONTH instance);
    partial void InsertAUDIT_DEBTORS(AUDIT_DEBTORS instance);
    partial void UpdateAUDIT_DEBTORS(AUDIT_DEBTORS instance);
    partial void DeleteAUDIT_DEBTORS(AUDIT_DEBTORS instance);
    partial void InsertAUDIT_DEBTORS_DAY(AUDIT_DEBTORS_DAY instance);
    partial void UpdateAUDIT_DEBTORS_DAY(AUDIT_DEBTORS_DAY instance);
    partial void DeleteAUDIT_DEBTORS_DAY(AUDIT_DEBTORS_DAY instance);
    partial void InsertAUDIT_DEBTORS_MONTH(AUDIT_DEBTORS_MONTH instance);
    partial void UpdateAUDIT_DEBTORS_MONTH(AUDIT_DEBTORS_MONTH instance);
    partial void DeleteAUDIT_DEBTORS_MONTH(AUDIT_DEBTORS_MONTH instance);
    partial void InsertBANK_DEPOSITS(BANK_DEPOSITS instance);
    partial void UpdateBANK_DEPOSITS(BANK_DEPOSITS instance);
    partial void DeleteBANK_DEPOSITS(BANK_DEPOSITS instance);
    partial void InsertBOM_PRODUCT_REVENUE_REPORT_ORDER(BOM_PRODUCT_REVENUE_REPORT_ORDER instance);
    partial void UpdateBOM_PRODUCT_REVENUE_REPORT_ORDER(BOM_PRODUCT_REVENUE_REPORT_ORDER instance);
    partial void DeleteBOM_PRODUCT_REVENUE_REPORT_ORDER(BOM_PRODUCT_REVENUE_REPORT_ORDER instance);
    partial void InsertBOM_STATE_DEFINITION(BOM_STATE_DEFINITION instance);
    partial void UpdateBOM_STATE_DEFINITION(BOM_STATE_DEFINITION instance);
    partial void DeleteBOM_STATE_DEFINITION(BOM_STATE_DEFINITION instance);
    partial void InsertBRANCHES(BRANCHES instance);
    partial void UpdateBRANCHES(BRANCHES instance);
    partial void DeleteBRANCHES(BRANCHES instance);
    partial void InsertCHEQ_BATCH_NUM(CHEQ_BATCH_NUM instance);
    partial void UpdateCHEQ_BATCH_NUM(CHEQ_BATCH_NUM instance);
    partial void DeleteCHEQ_BATCH_NUM(CHEQ_BATCH_NUM instance);
    partial void InsertCOMPANY_APPROVALS(COMPANY_APPROVALS instance);
    partial void UpdateCOMPANY_APPROVALS(COMPANY_APPROVALS instance);
    partial void DeleteCOMPANY_APPROVALS(COMPANY_APPROVALS instance);
    partial void InsertCOMPANY_APPROVALS_TMP(COMPANY_APPROVALS_TMP instance);
    partial void UpdateCOMPANY_APPROVALS_TMP(COMPANY_APPROVALS_TMP instance);
    partial void DeleteCOMPANY_APPROVALS_TMP(COMPANY_APPROVALS_TMP instance);
    partial void InsertCOMPANY_MERGE_TEMP(COMPANY_MERGE_TEMP instance);
    partial void UpdateCOMPANY_MERGE_TEMP(COMPANY_MERGE_TEMP instance);
    partial void DeleteCOMPANY_MERGE_TEMP(COMPANY_MERGE_TEMP instance);
    partial void InsertCONTACTS(CONTACTS instance);
    partial void UpdateCONTACTS(CONTACTS instance);
    partial void DeleteCONTACTS(CONTACTS instance);
    partial void InsertCONTACTS_CREDITORS(CONTACTS_CREDITORS instance);
    partial void UpdateCONTACTS_CREDITORS(CONTACTS_CREDITORS instance);
    partial void DeleteCONTACTS_CREDITORS(CONTACTS_CREDITORS instance);
    partial void InsertCONTACTS_MERGEHISTORY(CONTACTS_MERGEHISTORY instance);
    partial void UpdateCONTACTS_MERGEHISTORY(CONTACTS_MERGEHISTORY instance);
    partial void DeleteCONTACTS_MERGEHISTORY(CONTACTS_MERGEHISTORY instance);
    partial void InsertCOUNTRIES(COUNTRIES instance);
    partial void UpdateCOUNTRIES(COUNTRIES instance);
    partial void DeleteCOUNTRIES(COUNTRIES instance);
    partial void InsertCOURIERS(COURIERS instance);
    partial void UpdateCOURIERS(COURIERS instance);
    partial void DeleteCOURIERS(COURIERS instance);
    partial void InsertCreditor_CHEQUES(Creditor_CHEQUES instance);
    partial void UpdateCreditor_CHEQUES(Creditor_CHEQUES instance);
    partial void DeleteCreditor_CHEQUES(Creditor_CHEQUES instance);
    partial void InsertCREDITORS(CREDITORS instance);
    partial void UpdateCREDITORS(CREDITORS instance);
    partial void DeleteCREDITORS(CREDITORS instance);
    partial void InsertCREDITORS_ACCPAC_VENDORS(CREDITORS_ACCPAC_VENDORS instance);
    partial void UpdateCREDITORS_ACCPAC_VENDORS(CREDITORS_ACCPAC_VENDORS instance);
    partial void DeleteCREDITORS_ACCPAC_VENDORS(CREDITORS_ACCPAC_VENDORS instance);
    partial void InsertCREDITORS_BAL(CREDITORS_BAL instance);
    partial void UpdateCREDITORS_BAL(CREDITORS_BAL instance);
    partial void DeleteCREDITORS_BAL(CREDITORS_BAL instance);
    partial void InsertCREDITORS_CURRENT_PERIOD(CREDITORS_CURRENT_PERIOD instance);
    partial void UpdateCREDITORS_CURRENT_PERIOD(CREDITORS_CURRENT_PERIOD instance);
    partial void DeleteCREDITORS_CURRENT_PERIOD(CREDITORS_CURRENT_PERIOD instance);
    partial void InsertCREDITORS_JNL(CREDITORS_JNL instance);
    partial void UpdateCREDITORS_JNL(CREDITORS_JNL instance);
    partial void DeleteCREDITORS_JNL(CREDITORS_JNL instance);
    partial void InsertCREDITORS_TEMP(CREDITORS_TEMP instance);
    partial void UpdateCREDITORS_TEMP(CREDITORS_TEMP instance);
    partial void DeleteCREDITORS_TEMP(CREDITORS_TEMP instance);
    partial void InsertCRM_CALLS(CRM_CALLS instance);
    partial void UpdateCRM_CALLS(CRM_CALLS instance);
    partial void DeleteCRM_CALLS(CRM_CALLS instance);
    partial void InsertCTRAC_BSG_DELIVERY_STATUS(CTRAC_BSG_DELIVERY_STATUS instance);
    partial void UpdateCTRAC_BSG_DELIVERY_STATUS(CTRAC_BSG_DELIVERY_STATUS instance);
    partial void DeleteCTRAC_BSG_DELIVERY_STATUS(CTRAC_BSG_DELIVERY_STATUS instance);
    partial void InsertCTRAC_CHANGE_TYPES(CTRAC_CHANGE_TYPES instance);
    partial void UpdateCTRAC_CHANGE_TYPES(CTRAC_CHANGE_TYPES instance);
    partial void DeleteCTRAC_CHANGE_TYPES(CTRAC_CHANGE_TYPES instance);
    partial void InsertCTRAC_DEAL_TYPES(CTRAC_DEAL_TYPES instance);
    partial void UpdateCTRAC_DEAL_TYPES(CTRAC_DEAL_TYPES instance);
    partial void DeleteCTRAC_DEAL_TYPES(CTRAC_DEAL_TYPES instance);
    partial void InsertCTRAC_HEADER(CTRAC_HEADER instance);
    partial void UpdateCTRAC_HEADER(CTRAC_HEADER instance);
    partial void DeleteCTRAC_HEADER(CTRAC_HEADER instance);
    partial void InsertCTRAC_ITEM(CTRAC_ITEM instance);
    partial void UpdateCTRAC_ITEM(CTRAC_ITEM instance);
    partial void DeleteCTRAC_ITEM(CTRAC_ITEM instance);
    partial void InsertCTRAC_ITEM_CARBON_TAX_RAW(CTRAC_ITEM_CARBON_TAX_RAW instance);
    partial void UpdateCTRAC_ITEM_CARBON_TAX_RAW(CTRAC_ITEM_CARBON_TAX_RAW instance);
    partial void DeleteCTRAC_ITEM_CARBON_TAX_RAW(CTRAC_ITEM_CARBON_TAX_RAW instance);
    partial void InsertCTRAC_ITEM_CARBON_TAX_RAW_ERRORS(CTRAC_ITEM_CARBON_TAX_RAW_ERRORS instance);
    partial void UpdateCTRAC_ITEM_CARBON_TAX_RAW_ERRORS(CTRAC_ITEM_CARBON_TAX_RAW_ERRORS instance);
    partial void DeleteCTRAC_ITEM_CARBON_TAX_RAW_ERRORS(CTRAC_ITEM_CARBON_TAX_RAW_ERRORS instance);
    partial void InsertCTRAC_ITEM_IMPORT(CTRAC_ITEM_IMPORT instance);
    partial void UpdateCTRAC_ITEM_IMPORT(CTRAC_ITEM_IMPORT instance);
    partial void DeleteCTRAC_ITEM_IMPORT(CTRAC_ITEM_IMPORT instance);
    partial void InsertCTRAC_ITEM_IMPORT_FIELDS(CTRAC_ITEM_IMPORT_FIELDS instance);
    partial void UpdateCTRAC_ITEM_IMPORT_FIELDS(CTRAC_ITEM_IMPORT_FIELDS instance);
    partial void DeleteCTRAC_ITEM_IMPORT_FIELDS(CTRAC_ITEM_IMPORT_FIELDS instance);
    partial void InsertCTRAC_ITEM_IMPORT_ITEM_EXCEPTION(CTRAC_ITEM_IMPORT_ITEM_EXCEPTION instance);
    partial void UpdateCTRAC_ITEM_IMPORT_ITEM_EXCEPTION(CTRAC_ITEM_IMPORT_ITEM_EXCEPTION instance);
    partial void DeleteCTRAC_ITEM_IMPORT_ITEM_EXCEPTION(CTRAC_ITEM_IMPORT_ITEM_EXCEPTION instance);
    partial void InsertCTRAC_MERGEHISTORY(CTRAC_MERGEHISTORY instance);
    partial void UpdateCTRAC_MERGEHISTORY(CTRAC_MERGEHISTORY instance);
    partial void DeleteCTRAC_MERGEHISTORY(CTRAC_MERGEHISTORY instance);
    partial void InsertCTRAC_PM_DATES(CTRAC_PM_DATES instance);
    partial void UpdateCTRAC_PM_DATES(CTRAC_PM_DATES instance);
    partial void DeleteCTRAC_PM_DATES(CTRAC_PM_DATES instance);
    partial void InsertCTRAC_TYPE(CTRAC_TYPE instance);
    partial void UpdateCTRAC_TYPE(CTRAC_TYPE instance);
    partial void DeleteCTRAC_TYPE(CTRAC_TYPE instance);
    partial void InsertCURRENT_PERIOD(CURRENT_PERIOD instance);
    partial void UpdateCURRENT_PERIOD(CURRENT_PERIOD instance);
    partial void DeleteCURRENT_PERIOD(CURRENT_PERIOD instance);
    partial void InsertDEBTORS(DEBTORS instance);
    partial void UpdateDEBTORS(DEBTORS instance);
    partial void DeleteDEBTORS(DEBTORS instance);
    partial void InsertDEBTORS_3P_AGREEMENTS(DEBTORS_3P_AGREEMENTS instance);
    partial void UpdateDEBTORS_3P_AGREEMENTS(DEBTORS_3P_AGREEMENTS instance);
    partial void DeleteDEBTORS_3P_AGREEMENTS(DEBTORS_3P_AGREEMENTS instance);
    partial void InsertDEBTORS_3P_INVOICES(DEBTORS_3P_INVOICES instance);
    partial void UpdateDEBTORS_3P_INVOICES(DEBTORS_3P_INVOICES instance);
    partial void DeleteDEBTORS_3P_INVOICES(DEBTORS_3P_INVOICES instance);
    partial void InsertDEBTORS_3P_INVOICES_ITEMS(DEBTORS_3P_INVOICES_ITEMS instance);
    partial void UpdateDEBTORS_3P_INVOICES_ITEMS(DEBTORS_3P_INVOICES_ITEMS instance);
    partial void DeleteDEBTORS_3P_INVOICES_ITEMS(DEBTORS_3P_INVOICES_ITEMS instance);
    partial void InsertDEBTORS_BAL(DEBTORS_BAL instance);
    partial void UpdateDEBTORS_BAL(DEBTORS_BAL instance);
    partial void DeleteDEBTORS_BAL(DEBTORS_BAL instance);
    partial void InsertDEBTORS_JNL_DETAILS(DEBTORS_JNL_DETAILS instance);
    partial void UpdateDEBTORS_JNL_DETAILS(DEBTORS_JNL_DETAILS instance);
    partial void DeleteDEBTORS_JNL_DETAILS(DEBTORS_JNL_DETAILS instance);
    partial void InsertDEBTORS_JOURNALS(DEBTORS_JOURNALS instance);
    partial void UpdateDEBTORS_JOURNALS(DEBTORS_JOURNALS instance);
    partial void DeleteDEBTORS_JOURNALS(DEBTORS_JOURNALS instance);
    partial void InsertDEBTORS_LOCATION_IMPORT(DEBTORS_LOCATION_IMPORT instance);
    partial void UpdateDEBTORS_LOCATION_IMPORT(DEBTORS_LOCATION_IMPORT instance);
    partial void DeleteDEBTORS_LOCATION_IMPORT(DEBTORS_LOCATION_IMPORT instance);
    partial void InsertDEBTORS_LOCATION_IMPORT_FIELDS(DEBTORS_LOCATION_IMPORT_FIELDS instance);
    partial void UpdateDEBTORS_LOCATION_IMPORT_FIELDS(DEBTORS_LOCATION_IMPORT_FIELDS instance);
    partial void DeleteDEBTORS_LOCATION_IMPORT_FIELDS(DEBTORS_LOCATION_IMPORT_FIELDS instance);
    partial void InsertDEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION(DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION instance);
    partial void UpdateDEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION(DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION instance);
    partial void DeleteDEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION(DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION instance);
    partial void InsertDEBTORS_MERGEHISTORY(DEBTORS_MERGEHISTORY instance);
    partial void UpdateDEBTORS_MERGEHISTORY(DEBTORS_MERGEHISTORY instance);
    partial void DeleteDEBTORS_MERGEHISTORY(DEBTORS_MERGEHISTORY instance);
    partial void InsertDEBTORS_MERGERESULT(DEBTORS_MERGERESULT instance);
    partial void UpdateDEBTORS_MERGERESULT(DEBTORS_MERGERESULT instance);
    partial void DeleteDEBTORS_MERGERESULT(DEBTORS_MERGERESULT instance);
    partial void InsertDEBTORS_PM_VISITS(DEBTORS_PM_VISITS instance);
    partial void UpdateDEBTORS_PM_VISITS(DEBTORS_PM_VISITS instance);
    partial void DeleteDEBTORS_PM_VISITS(DEBTORS_PM_VISITS instance);
    partial void InsertDEBTORS_PM_VISITS_NOTES(DEBTORS_PM_VISITS_NOTES instance);
    partial void UpdateDEBTORS_PM_VISITS_NOTES(DEBTORS_PM_VISITS_NOTES instance);
    partial void DeleteDEBTORS_PM_VISITS_NOTES(DEBTORS_PM_VISITS_NOTES instance);
    partial void InsertDEBTORS_RECEIPT_DETAILS(DEBTORS_RECEIPT_DETAILS instance);
    partial void UpdateDEBTORS_RECEIPT_DETAILS(DEBTORS_RECEIPT_DETAILS instance);
    partial void DeleteDEBTORS_RECEIPT_DETAILS(DEBTORS_RECEIPT_DETAILS instance);
    partial void InsertDEBTORS_RECEIPTS(DEBTORS_RECEIPTS instance);
    partial void UpdateDEBTORS_RECEIPTS(DEBTORS_RECEIPTS instance);
    partial void DeleteDEBTORS_RECEIPTS(DEBTORS_RECEIPTS instance);
    partial void InsertDEBTORS_UPDATE_HISTORY(DEBTORS_UPDATE_HISTORY instance);
    partial void UpdateDEBTORS_UPDATE_HISTORY(DEBTORS_UPDATE_HISTORY instance);
    partial void DeleteDEBTORS_UPDATE_HISTORY(DEBTORS_UPDATE_HISTORY instance);
    partial void InsertDEPARTMENTS(DEPARTMENTS instance);
    partial void UpdateDEPARTMENTS(DEPARTMENTS instance);
    partial void DeleteDEPARTMENTS(DEPARTMENTS instance);
    partial void InsertEMAIL_TYPES(EMAIL_TYPES instance);
    partial void UpdateEMAIL_TYPES(EMAIL_TYPES instance);
    partial void DeleteEMAIL_TYPES(EMAIL_TYPES instance);
    partial void InsertEMP_CO(EMP_CO instance);
    partial void UpdateEMP_CO(EMP_CO instance);
    partial void DeleteEMP_CO(EMP_CO instance);
    partial void InsertEMP_SPID_CO(EMP_SPID_CO instance);
    partial void UpdateEMP_SPID_CO(EMP_SPID_CO instance);
    partial void DeleteEMP_SPID_CO(EMP_SPID_CO instance);
    partial void InsertEMPLOYEE_COMPANY(EMPLOYEE_COMPANY instance);
    partial void UpdateEMPLOYEE_COMPANY(EMPLOYEE_COMPANY instance);
    partial void DeleteEMPLOYEE_COMPANY(EMPLOYEE_COMPANY instance);
    partial void InsertEMPLOYEES(EMPLOYEES instance);
    partial void UpdateEMPLOYEES(EMPLOYEES instance);
    partial void DeleteEMPLOYEES(EMPLOYEES instance);
    partial void InsertEMPLOYEES_APPROVALS(EMPLOYEES_APPROVALS instance);
    partial void UpdateEMPLOYEES_APPROVALS(EMPLOYEES_APPROVALS instance);
    partial void DeleteEMPLOYEES_APPROVALS(EMPLOYEES_APPROVALS instance);
    partial void InsertEMPLOYEES_APPROVALS_TMP(EMPLOYEES_APPROVALS_TMP instance);
    partial void UpdateEMPLOYEES_APPROVALS_TMP(EMPLOYEES_APPROVALS_TMP instance);
    partial void DeleteEMPLOYEES_APPROVALS_TMP(EMPLOYEES_APPROVALS_TMP instance);
    partial void InsertEMPLOYEES_STATE(EMPLOYEES_STATE instance);
    partial void UpdateEMPLOYEES_STATE(EMPLOYEES_STATE instance);
    partial void DeleteEMPLOYEES_STATE(EMPLOYEES_STATE instance);
    partial void InsertEMPLOYEES_TMP(EMPLOYEES_TMP instance);
    partial void UpdateEMPLOYEES_TMP(EMPLOYEES_TMP instance);
    partial void DeleteEMPLOYEES_TMP(EMPLOYEES_TMP instance);
    partial void InsertERRMSG(ERRMSG instance);
    partial void UpdateERRMSG(ERRMSG instance);
    partial void DeleteERRMSG(ERRMSG instance);
    partial void InsertERROR_LOG(ERROR_LOG instance);
    partial void UpdateERROR_LOG(ERROR_LOG instance);
    partial void DeleteERROR_LOG(ERROR_LOG instance);
    partial void InsertGL_ACCOUNT_STATUS(GL_ACCOUNT_STATUS instance);
    partial void UpdateGL_ACCOUNT_STATUS(GL_ACCOUNT_STATUS instance);
    partial void DeleteGL_ACCOUNT_STATUS(GL_ACCOUNT_STATUS instance);
    partial void InsertGL_ACCOUNT_STATUS_TMP(GL_ACCOUNT_STATUS_TMP instance);
    partial void UpdateGL_ACCOUNT_STATUS_TMP(GL_ACCOUNT_STATUS_TMP instance);
    partial void DeleteGL_ACCOUNT_STATUS_TMP(GL_ACCOUNT_STATUS_TMP instance);
    partial void InsertGL_ACCOUNTS(GL_ACCOUNTS instance);
    partial void UpdateGL_ACCOUNTS(GL_ACCOUNTS instance);
    partial void DeleteGL_ACCOUNTS(GL_ACCOUNTS instance);
    partial void InsertGL_ACCOUNTS_TMP(GL_ACCOUNTS_TMP instance);
    partial void UpdateGL_ACCOUNTS_TMP(GL_ACCOUNTS_TMP instance);
    partial void DeleteGL_ACCOUNTS_TMP(GL_ACCOUNTS_TMP instance);
    partial void InsertGL_BANKS(GL_BANKS instance);
    partial void UpdateGL_BANKS(GL_BANKS instance);
    partial void DeleteGL_BANKS(GL_BANKS instance);
    partial void InsertGL_BUSINESS_UNITS(GL_BUSINESS_UNITS instance);
    partial void UpdateGL_BUSINESS_UNITS(GL_BUSINESS_UNITS instance);
    partial void DeleteGL_BUSINESS_UNITS(GL_BUSINESS_UNITS instance);
    partial void InsertGL_BUSINESS_UNITS_ALLOWED(GL_BUSINESS_UNITS_ALLOWED instance);
    partial void UpdateGL_BUSINESS_UNITS_ALLOWED(GL_BUSINESS_UNITS_ALLOWED instance);
    partial void DeleteGL_BUSINESS_UNITS_ALLOWED(GL_BUSINESS_UNITS_ALLOWED instance);
    partial void InsertGL_CODES_OLDNEW(GL_CODES_OLDNEW instance);
    partial void UpdateGL_CODES_OLDNEW(GL_CODES_OLDNEW instance);
    partial void DeleteGL_CODES_OLDNEW(GL_CODES_OLDNEW instance);
    partial void InsertGL_CODES_TYPES(GL_CODES_TYPES instance);
    partial void UpdateGL_CODES_TYPES(GL_CODES_TYPES instance);
    partial void DeleteGL_CODES_TYPES(GL_CODES_TYPES instance);
    partial void InsertGL_CONTROLS(GL_CONTROLS instance);
    partial void UpdateGL_CONTROLS(GL_CONTROLS instance);
    partial void DeleteGL_CONTROLS(GL_CONTROLS instance);
    partial void InsertGL_CONTROLS_ALLOWED(GL_CONTROLS_ALLOWED instance);
    partial void UpdateGL_CONTROLS_ALLOWED(GL_CONTROLS_ALLOWED instance);
    partial void DeleteGL_CONTROLS_ALLOWED(GL_CONTROLS_ALLOWED instance);
    partial void InsertGL_CURRENCY_EXCHANGE(GL_CURRENCY_EXCHANGE instance);
    partial void UpdateGL_CURRENCY_EXCHANGE(GL_CURRENCY_EXCHANGE instance);
    partial void DeleteGL_CURRENCY_EXCHANGE(GL_CURRENCY_EXCHANGE instance);
    partial void InsertGL_DETAILS(GL_DETAILS instance);
    partial void UpdateGL_DETAILS(GL_DETAILS instance);
    partial void DeleteGL_DETAILS(GL_DETAILS instance);
    partial void InsertGL_GROUPS(GL_GROUPS instance);
    partial void UpdateGL_GROUPS(GL_GROUPS instance);
    partial void DeleteGL_GROUPS(GL_GROUPS instance);
    partial void InsertGL_JOURNALS(GL_JOURNALS instance);
    partial void UpdateGL_JOURNALS(GL_JOURNALS instance);
    partial void DeleteGL_JOURNALS(GL_JOURNALS instance);
    partial void InsertGL_OBJECTS(GL_OBJECTS instance);
    partial void UpdateGL_OBJECTS(GL_OBJECTS instance);
    partial void DeleteGL_OBJECTS(GL_OBJECTS instance);
    partial void InsertGL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED instance);
    partial void UpdateGL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED instance);
    partial void DeleteGL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED instance);
    partial void InsertGL_OBJECTS_GROUPS(GL_OBJECTS_GROUPS instance);
    partial void UpdateGL_OBJECTS_GROUPS(GL_OBJECTS_GROUPS instance);
    partial void DeleteGL_OBJECTS_GROUPS(GL_OBJECTS_GROUPS instance);
    partial void InsertGL_SERVICES(GL_SERVICES instance);
    partial void UpdateGL_SERVICES(GL_SERVICES instance);
    partial void DeleteGL_SERVICES(GL_SERVICES instance);
    partial void InsertGL_STATES(GL_STATES instance);
    partial void UpdateGL_STATES(GL_STATES instance);
    partial void DeleteGL_STATES(GL_STATES instance);
    partial void InsertGL_SUBS(GL_SUBS instance);
    partial void UpdateGL_SUBS(GL_SUBS instance);
    partial void DeleteGL_SUBS(GL_SUBS instance);
    partial void InsertGL_TO_ASSETCAT(GL_TO_ASSETCAT instance);
    partial void UpdateGL_TO_ASSETCAT(GL_TO_ASSETCAT instance);
    partial void DeleteGL_TO_ASSETCAT(GL_TO_ASSETCAT instance);
    partial void InsertIMPORTS_COSTING(IMPORTS_COSTING instance);
    partial void UpdateIMPORTS_COSTING(IMPORTS_COSTING instance);
    partial void DeleteIMPORTS_COSTING(IMPORTS_COSTING instance);
    partial void InsertINT_ACTUAL_INVOICES(INT_ACTUAL_INVOICES instance);
    partial void UpdateINT_ACTUAL_INVOICES(INT_ACTUAL_INVOICES instance);
    partial void DeleteINT_ACTUAL_INVOICES(INT_ACTUAL_INVOICES instance);
    partial void InsertINT_BUSINESS_UNIT_TARGETS(INT_BUSINESS_UNIT_TARGETS instance);
    partial void UpdateINT_BUSINESS_UNIT_TARGETS(INT_BUSINESS_UNIT_TARGETS instance);
    partial void DeleteINT_BUSINESS_UNIT_TARGETS(INT_BUSINESS_UNIT_TARGETS instance);
    partial void InsertINT_BUSINESS_UNITS(INT_BUSINESS_UNITS instance);
    partial void UpdateINT_BUSINESS_UNITS(INT_BUSINESS_UNITS instance);
    partial void DeleteINT_BUSINESS_UNITS(INT_BUSINESS_UNITS instance);
    partial void InsertINT_COMPANY_GROUP(INT_COMPANY_GROUP instance);
    partial void UpdateINT_COMPANY_GROUP(INT_COMPANY_GROUP instance);
    partial void DeleteINT_COMPANY_GROUP(INT_COMPANY_GROUP instance);
    partial void InsertINT_COMPANY_TARGETS(INT_COMPANY_TARGETS instance);
    partial void UpdateINT_COMPANY_TARGETS(INT_COMPANY_TARGETS instance);
    partial void DeleteINT_COMPANY_TARGETS(INT_COMPANY_TARGETS instance);
    partial void InsertINT_CTRAC_TEXT(INT_CTRAC_TEXT instance);
    partial void UpdateINT_CTRAC_TEXT(INT_CTRAC_TEXT instance);
    partial void DeleteINT_CTRAC_TEXT(INT_CTRAC_TEXT instance);
    partial void InsertINT_DAILYAUDIT_YTD_CREDITS(INT_DAILYAUDIT_YTD_CREDITS instance);
    partial void UpdateINT_DAILYAUDIT_YTD_CREDITS(INT_DAILYAUDIT_YTD_CREDITS instance);
    partial void DeleteINT_DAILYAUDIT_YTD_CREDITS(INT_DAILYAUDIT_YTD_CREDITS instance);
    partial void InsertINT_DAILYAUDIT_YTD_INVFROMOTHERPERIODS(INT_DAILYAUDIT_YTD_INVFROMOTHERPERIODS instance);
    partial void UpdateINT_DAILYAUDIT_YTD_INVFROMOTHERPERIODS(INT_DAILYAUDIT_YTD_INVFROMOTHERPERIODS instance);
    partial void DeleteINT_DAILYAUDIT_YTD_INVFROMOTHERPERIODS(INT_DAILYAUDIT_YTD_INVFROMOTHERPERIODS instance);
    partial void InsertINT_DAILYAUDIT_YTD_INVOICES(INT_DAILYAUDIT_YTD_INVOICES instance);
    partial void UpdateINT_DAILYAUDIT_YTD_INVOICES(INT_DAILYAUDIT_YTD_INVOICES instance);
    partial void DeleteINT_DAILYAUDIT_YTD_INVOICES(INT_DAILYAUDIT_YTD_INVOICES instance);
    partial void InsertINT_ENGINEERS_COMMISSION_REPORT(INT_ENGINEERS_COMMISSION_REPORT instance);
    partial void UpdateINT_ENGINEERS_COMMISSION_REPORT(INT_ENGINEERS_COMMISSION_REPORT instance);
    partial void DeleteINT_ENGINEERS_COMMISSION_REPORT(INT_ENGINEERS_COMMISSION_REPORT instance);
    partial void InsertINT_EXPECTED_INVOICES(INT_EXPECTED_INVOICES instance);
    partial void UpdateINT_EXPECTED_INVOICES(INT_EXPECTED_INVOICES instance);
    partial void DeleteINT_EXPECTED_INVOICES(INT_EXPECTED_INVOICES instance);
    partial void InsertINT_INV_BATCH_CONTROL(INT_INV_BATCH_CONTROL instance);
    partial void UpdateINT_INV_BATCH_CONTROL(INT_INV_BATCH_CONTROL instance);
    partial void DeleteINT_INV_BATCH_CONTROL(INT_INV_BATCH_CONTROL instance);
    partial void InsertINT_INV_BATCH_CONTROL_DRAFT(INT_INV_BATCH_CONTROL_DRAFT instance);
    partial void UpdateINT_INV_BATCH_CONTROL_DRAFT(INT_INV_BATCH_CONTROL_DRAFT instance);
    partial void DeleteINT_INV_BATCH_CONTROL_DRAFT(INT_INV_BATCH_CONTROL_DRAFT instance);
    partial void InsertINT_INV_BATCH_HEADER(INT_INV_BATCH_HEADER instance);
    partial void UpdateINT_INV_BATCH_HEADER(INT_INV_BATCH_HEADER instance);
    partial void DeleteINT_INV_BATCH_HEADER(INT_INV_BATCH_HEADER instance);
    partial void InsertINT_INV_BATCH_HEADER_DRAFT(INT_INV_BATCH_HEADER_DRAFT instance);
    partial void UpdateINT_INV_BATCH_HEADER_DRAFT(INT_INV_BATCH_HEADER_DRAFT instance);
    partial void DeleteINT_INV_BATCH_HEADER_DRAFT(INT_INV_BATCH_HEADER_DRAFT instance);
    partial void InsertINT_INV_CHECK_TMP(INT_INV_CHECK_TMP instance);
    partial void UpdateINT_INV_CHECK_TMP(INT_INV_CHECK_TMP instance);
    partial void DeleteINT_INV_CHECK_TMP(INT_INV_CHECK_TMP instance);
    partial void InsertINT_INV_LINE_TEXT(INT_INV_LINE_TEXT instance);
    partial void UpdateINT_INV_LINE_TEXT(INT_INV_LINE_TEXT instance);
    partial void DeleteINT_INV_LINE_TEXT(INT_INV_LINE_TEXT instance);
    partial void InsertINT_INV_LINE_TEXT_DRAFT(INT_INV_LINE_TEXT_DRAFT instance);
    partial void UpdateINT_INV_LINE_TEXT_DRAFT(INT_INV_LINE_TEXT_DRAFT instance);
    partial void DeleteINT_INV_LINE_TEXT_DRAFT(INT_INV_LINE_TEXT_DRAFT instance);
    partial void InsertINT_INVOICE_STYLE(INT_INVOICE_STYLE instance);
    partial void UpdateINT_INVOICE_STYLE(INT_INVOICE_STYLE instance);
    partial void DeleteINT_INVOICE_STYLE(INT_INVOICE_STYLE instance);
    partial void InsertINT_PLATFORM(INT_PLATFORM instance);
    partial void UpdateINT_PLATFORM(INT_PLATFORM instance);
    partial void DeleteINT_PLATFORM(INT_PLATFORM instance);
    partial void InsertINT_PM_HISTORY(INT_PM_HISTORY instance);
    partial void UpdateINT_PM_HISTORY(INT_PM_HISTORY instance);
    partial void DeleteINT_PM_HISTORY(INT_PM_HISTORY instance);
    partial void InsertINT_REPORTING_GROUPS(INT_REPORTING_GROUPS instance);
    partial void UpdateINT_REPORTING_GROUPS(INT_REPORTING_GROUPS instance);
    partial void DeleteINT_REPORTING_GROUPS(INT_REPORTING_GROUPS instance);
    partial void InsertINT_RESPONSE_TIME(INT_RESPONSE_TIME instance);
    partial void UpdateINT_RESPONSE_TIME(INT_RESPONSE_TIME instance);
    partial void DeleteINT_RESPONSE_TIME(INT_RESPONSE_TIME instance);
    partial void InsertINT_SERVICE_ID(INT_SERVICE_ID instance);
    partial void UpdateINT_SERVICE_ID(INT_SERVICE_ID instance);
    partial void DeleteINT_SERVICE_ID(INT_SERVICE_ID instance);
    partial void InsertINT_SERVICE_LEVEL(INT_SERVICE_LEVEL instance);
    partial void UpdateINT_SERVICE_LEVEL(INT_SERVICE_LEVEL instance);
    partial void DeleteINT_SERVICE_LEVEL(INT_SERVICE_LEVEL instance);
    partial void InsertINT_SNAPSHOT_FORECAST_DELAYED_ITEM(INT_SNAPSHOT_FORECAST_DELAYED_ITEM instance);
    partial void UpdateINT_SNAPSHOT_FORECAST_DELAYED_ITEM(INT_SNAPSHOT_FORECAST_DELAYED_ITEM instance);
    partial void DeleteINT_SNAPSHOT_FORECAST_DELAYED_ITEM(INT_SNAPSHOT_FORECAST_DELAYED_ITEM instance);
    partial void InsertINT_SNAPSHOT_FORECAST_ITEM(INT_SNAPSHOT_FORECAST_ITEM instance);
    partial void UpdateINT_SNAPSHOT_FORECAST_ITEM(INT_SNAPSHOT_FORECAST_ITEM instance);
    partial void DeleteINT_SNAPSHOT_FORECAST_ITEM(INT_SNAPSHOT_FORECAST_ITEM instance);
    partial void InsertINT_SNAPSHOT_FORECAST_UNDELAYED_ITEM(INT_SNAPSHOT_FORECAST_UNDELAYED_ITEM instance);
    partial void UpdateINT_SNAPSHOT_FORECAST_UNDELAYED_ITEM(INT_SNAPSHOT_FORECAST_UNDELAYED_ITEM instance);
    partial void DeleteINT_SNAPSHOT_FORECAST_UNDELAYED_ITEM(INT_SNAPSHOT_FORECAST_UNDELAYED_ITEM instance);
    partial void InsertINT_SNAPSHOT_HEADER(INT_SNAPSHOT_HEADER instance);
    partial void UpdateINT_SNAPSHOT_HEADER(INT_SNAPSHOT_HEADER instance);
    partial void DeleteINT_SNAPSHOT_HEADER(INT_SNAPSHOT_HEADER instance);
    partial void InsertINT_SNAPSHOT_ITEM(INT_SNAPSHOT_ITEM instance);
    partial void UpdateINT_SNAPSHOT_ITEM(INT_SNAPSHOT_ITEM instance);
    partial void DeleteINT_SNAPSHOT_ITEM(INT_SNAPSHOT_ITEM instance);
    partial void InsertINT_SNAPSHOT_ITEM_DELETED_DEVICES(INT_SNAPSHOT_ITEM_DELETED_DEVICES instance);
    partial void UpdateINT_SNAPSHOT_ITEM_DELETED_DEVICES(INT_SNAPSHOT_ITEM_DELETED_DEVICES instance);
    partial void DeleteINT_SNAPSHOT_ITEM_DELETED_DEVICES(INT_SNAPSHOT_ITEM_DELETED_DEVICES instance);
    partial void InsertINT_SNAPSHOT_ITEM_IMPORT(INT_SNAPSHOT_ITEM_IMPORT instance);
    partial void UpdateINT_SNAPSHOT_ITEM_IMPORT(INT_SNAPSHOT_ITEM_IMPORT instance);
    partial void DeleteINT_SNAPSHOT_ITEM_IMPORT(INT_SNAPSHOT_ITEM_IMPORT instance);
    partial void InsertINT_SNAPSHOT_ITEM_TEMP(INT_SNAPSHOT_ITEM_TEMP instance);
    partial void UpdateINT_SNAPSHOT_ITEM_TEMP(INT_SNAPSHOT_ITEM_TEMP instance);
    partial void DeleteINT_SNAPSHOT_ITEM_TEMP(INT_SNAPSHOT_ITEM_TEMP instance);
    partial void InsertINT_SNAPSHOT_REPORT(INT_SNAPSHOT_REPORT instance);
    partial void UpdateINT_SNAPSHOT_REPORT(INT_SNAPSHOT_REPORT instance);
    partial void DeleteINT_SNAPSHOT_REPORT(INT_SNAPSHOT_REPORT instance);
    partial void InsertINT_STKORD_INVOICE_FREQUENCIES(INT_STKORD_INVOICE_FREQUENCIES instance);
    partial void UpdateINT_STKORD_INVOICE_FREQUENCIES(INT_STKORD_INVOICE_FREQUENCIES instance);
    partial void DeleteINT_STKORD_INVOICE_FREQUENCIES(INT_STKORD_INVOICE_FREQUENCIES instance);
    partial void InsertINT_STKORD_REASON(INT_STKORD_REASON instance);
    partial void UpdateINT_STKORD_REASON(INT_STKORD_REASON instance);
    partial void DeleteINT_STKORD_REASON(INT_STKORD_REASON instance);
    partial void InsertINT_STKORD_REASON_TYPES(INT_STKORD_REASON_TYPES instance);
    partial void UpdateINT_STKORD_REASON_TYPES(INT_STKORD_REASON_TYPES instance);
    partial void DeleteINT_STKORD_REASON_TYPES(INT_STKORD_REASON_TYPES instance);
    partial void InsertINT_STOCK_ALIAS(INT_STOCK_ALIAS instance);
    partial void UpdateINT_STOCK_ALIAS(INT_STOCK_ALIAS instance);
    partial void DeleteINT_STOCK_ALIAS(INT_STOCK_ALIAS instance);
    partial void InsertINT_STOCK_BM(INT_STOCK_BM instance);
    partial void UpdateINT_STOCK_BM(INT_STOCK_BM instance);
    partial void DeleteINT_STOCK_BM(INT_STOCK_BM instance);
    partial void InsertINT_STOCK_COMPATIBILITY(INT_STOCK_COMPATIBILITY instance);
    partial void UpdateINT_STOCK_COMPATIBILITY(INT_STOCK_COMPATIBILITY instance);
    partial void DeleteINT_STOCK_COMPATIBILITY(INT_STOCK_COMPATIBILITY instance);
    partial void InsertINT_STOCK_LOC_SPECIFIC(INT_STOCK_LOC_SPECIFIC instance);
    partial void UpdateINT_STOCK_LOC_SPECIFIC(INT_STOCK_LOC_SPECIFIC instance);
    partial void DeleteINT_STOCK_LOC_SPECIFIC(INT_STOCK_LOC_SPECIFIC instance);
    partial void InsertINT_STOCK_OUTAGE(INT_STOCK_OUTAGE instance);
    partial void UpdateINT_STOCK_OUTAGE(INT_STOCK_OUTAGE instance);
    partial void DeleteINT_STOCK_OUTAGE(INT_STOCK_OUTAGE instance);
    partial void InsertINT_STOCK_TRANSFER_BATCH(INT_STOCK_TRANSFER_BATCH instance);
    partial void UpdateINT_STOCK_TRANSFER_BATCH(INT_STOCK_TRANSFER_BATCH instance);
    partial void DeleteINT_STOCK_TRANSFER_BATCH(INT_STOCK_TRANSFER_BATCH instance);
    partial void InsertINT_STOCK_TRANSFER_STATUS(INT_STOCK_TRANSFER_STATUS instance);
    partial void UpdateINT_STOCK_TRANSFER_STATUS(INT_STOCK_TRANSFER_STATUS instance);
    partial void DeleteINT_STOCK_TRANSFER_STATUS(INT_STOCK_TRANSFER_STATUS instance);
    partial void InsertINT_STOCK_USAGE(INT_STOCK_USAGE instance);
    partial void UpdateINT_STOCK_USAGE(INT_STOCK_USAGE instance);
    partial void DeleteINT_STOCK_USAGE(INT_STOCK_USAGE instance);
    partial void InsertINT_STOCKTRANSIT(INT_STOCKTRANSIT instance);
    partial void UpdateINT_STOCKTRANSIT(INT_STOCKTRANSIT instance);
    partial void DeleteINT_STOCKTRANSIT(INT_STOCKTRANSIT instance);
    partial void InsertINT_TM_INVOICE_COMMISSION_RUNS(INT_TM_INVOICE_COMMISSION_RUNS instance);
    partial void UpdateINT_TM_INVOICE_COMMISSION_RUNS(INT_TM_INVOICE_COMMISSION_RUNS instance);
    partial void DeleteINT_TM_INVOICE_COMMISSION_RUNS(INT_TM_INVOICE_COMMISSION_RUNS instance);
    partial void InsertINT_TM_INVOICE_COMMISSIONS(INT_TM_INVOICE_COMMISSIONS instance);
    partial void UpdateINT_TM_INVOICE_COMMISSIONS(INT_TM_INVOICE_COMMISSIONS instance);
    partial void DeleteINT_TM_INVOICE_COMMISSIONS(INT_TM_INVOICE_COMMISSIONS instance);
    partial void InsertINT_TM_INVOICE_EXPENSEITEMS(INT_TM_INVOICE_EXPENSEITEMS instance);
    partial void UpdateINT_TM_INVOICE_EXPENSEITEMS(INT_TM_INVOICE_EXPENSEITEMS instance);
    partial void DeleteINT_TM_INVOICE_EXPENSEITEMS(INT_TM_INVOICE_EXPENSEITEMS instance);
    partial void InsertINT_TM_INVOICEITEMS(INT_TM_INVOICEITEMS instance);
    partial void UpdateINT_TM_INVOICEITEMS(INT_TM_INVOICEITEMS instance);
    partial void DeleteINT_TM_INVOICEITEMS(INT_TM_INVOICEITEMS instance);
    partial void InsertLABELHEADINGS(LABELHEADINGS instance);
    partial void UpdateLABELHEADINGS(LABELHEADINGS instance);
    partial void DeleteLABELHEADINGS(LABELHEADINGS instance);
    partial void InsertLOCATIONS(LOCATIONS instance);
    partial void UpdateLOCATIONS(LOCATIONS instance);
    partial void DeleteLOCATIONS(LOCATIONS instance);
    partial void InsertLOCATIONS_GROUP(LOCATIONS_GROUP instance);
    partial void UpdateLOCATIONS_GROUP(LOCATIONS_GROUP instance);
    partial void DeleteLOCATIONS_GROUP(LOCATIONS_GROUP instance);
    partial void InsertLOCATIONS_SHELF(LOCATIONS_SHELF instance);
    partial void UpdateLOCATIONS_SHELF(LOCATIONS_SHELF instance);
    partial void DeleteLOCATIONS_SHELF(LOCATIONS_SHELF instance);
    partial void InsertLOCATIONS_TYPE(LOCATIONS_TYPE instance);
    partial void UpdateLOCATIONS_TYPE(LOCATIONS_TYPE instance);
    partial void DeleteLOCATIONS_TYPE(LOCATIONS_TYPE instance);
    partial void InsertORDER_TYPES(ORDER_TYPES instance);
    partial void UpdateORDER_TYPES(ORDER_TYPES instance);
    partial void DeleteORDER_TYPES(ORDER_TYPES instance);
    partial void InsertPARTS_MERGE(PARTS_MERGE instance);
    partial void UpdatePARTS_MERGE(PARTS_MERGE instance);
    partial void DeletePARTS_MERGE(PARTS_MERGE instance);
    partial void InsertPARTS_MERGE_ITEMS(PARTS_MERGE_ITEMS instance);
    partial void UpdatePARTS_MERGE_ITEMS(PARTS_MERGE_ITEMS instance);
    partial void DeletePARTS_MERGE_ITEMS(PARTS_MERGE_ITEMS instance);
    partial void InsertPARTS_MERGE_LOG(PARTS_MERGE_LOG instance);
    partial void UpdatePARTS_MERGE_LOG(PARTS_MERGE_LOG instance);
    partial void DeletePARTS_MERGE_LOG(PARTS_MERGE_LOG instance);
    partial void InsertPRICELISTS(PRICELISTS instance);
    partial void UpdatePRICELISTS(PRICELISTS instance);
    partial void DeletePRICELISTS(PRICELISTS instance);
    partial void InsertPRINTER_SETUP(PRINTER_SETUP instance);
    partial void UpdatePRINTER_SETUP(PRINTER_SETUP instance);
    partial void DeletePRINTER_SETUP(PRINTER_SETUP instance);
    partial void InsertPRINTERS(PRINTERS instance);
    partial void UpdatePRINTERS(PRINTERS instance);
    partial void DeletePRINTERS(PRINTERS instance);
    partial void InsertPROJECT(PROJECT instance);
    partial void UpdatePROJECT(PROJECT instance);
    partial void DeletePROJECT(PROJECT instance);
    partial void InsertPROJECT_BUDGET_TOLERANCES(PROJECT_BUDGET_TOLERANCES instance);
    partial void UpdatePROJECT_BUDGET_TOLERANCES(PROJECT_BUDGET_TOLERANCES instance);
    partial void DeletePROJECT_BUDGET_TOLERANCES(PROJECT_BUDGET_TOLERANCES instance);
    partial void InsertPROJECT_CHANGE_REQUEST(PROJECT_CHANGE_REQUEST instance);
    partial void UpdatePROJECT_CHANGE_REQUEST(PROJECT_CHANGE_REQUEST instance);
    partial void DeletePROJECT_CHANGE_REQUEST(PROJECT_CHANGE_REQUEST instance);
    partial void InsertPROJECT_CHANGE_REQUEST_EDITING_RULES(PROJECT_CHANGE_REQUEST_EDITING_RULES instance);
    partial void UpdatePROJECT_CHANGE_REQUEST_EDITING_RULES(PROJECT_CHANGE_REQUEST_EDITING_RULES instance);
    partial void DeletePROJECT_CHANGE_REQUEST_EDITING_RULES(PROJECT_CHANGE_REQUEST_EDITING_RULES instance);
    partial void InsertPROJECT_CHANGE_REQUEST_FIELDS(PROJECT_CHANGE_REQUEST_FIELDS instance);
    partial void UpdatePROJECT_CHANGE_REQUEST_FIELDS(PROJECT_CHANGE_REQUEST_FIELDS instance);
    partial void DeletePROJECT_CHANGE_REQUEST_FIELDS(PROJECT_CHANGE_REQUEST_FIELDS instance);
    partial void InsertPROJECT_EDITING_RULES(PROJECT_EDITING_RULES instance);
    partial void UpdatePROJECT_EDITING_RULES(PROJECT_EDITING_RULES instance);
    partial void DeletePROJECT_EDITING_RULES(PROJECT_EDITING_RULES instance);
    partial void InsertPROJECT_ENGINEER_TIMESHEET(PROJECT_ENGINEER_TIMESHEET instance);
    partial void UpdatePROJECT_ENGINEER_TIMESHEET(PROJECT_ENGINEER_TIMESHEET instance);
    partial void DeletePROJECT_ENGINEER_TIMESHEET(PROJECT_ENGINEER_TIMESHEET instance);
    partial void InsertPROJECT_ENGINEER_TIMESHEET_ENTRIES(PROJECT_ENGINEER_TIMESHEET_ENTRIES instance);
    partial void UpdatePROJECT_ENGINEER_TIMESHEET_ENTRIES(PROJECT_ENGINEER_TIMESHEET_ENTRIES instance);
    partial void DeletePROJECT_ENGINEER_TIMESHEET_ENTRIES(PROJECT_ENGINEER_TIMESHEET_ENTRIES instance);
    partial void InsertPROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES(PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES instance);
    partial void UpdatePROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES(PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES instance);
    partial void DeletePROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES(PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES instance);
    partial void InsertPROJECT_FIELDS(PROJECT_FIELDS instance);
    partial void UpdatePROJECT_FIELDS(PROJECT_FIELDS instance);
    partial void DeletePROJECT_FIELDS(PROJECT_FIELDS instance);
    partial void InsertPROJECT_STATUS(PROJECT_STATUS instance);
    partial void UpdatePROJECT_STATUS(PROJECT_STATUS instance);
    partial void DeletePROJECT_STATUS(PROJECT_STATUS instance);
    partial void InsertPROJECT_TASKS(PROJECT_TASKS instance);
    partial void UpdatePROJECT_TASKS(PROJECT_TASKS instance);
    partial void DeletePROJECT_TASKS(PROJECT_TASKS instance);
    partial void InsertPURCHASES_JNL(PURCHASES_JNL instance);
    partial void UpdatePURCHASES_JNL(PURCHASES_JNL instance);
    partial void DeletePURCHASES_JNL(PURCHASES_JNL instance);
    partial void InsertPURCHASES_JNL_DISSECTIONS(PURCHASES_JNL_DISSECTIONS instance);
    partial void UpdatePURCHASES_JNL_DISSECTIONS(PURCHASES_JNL_DISSECTIONS instance);
    partial void DeletePURCHASES_JNL_DISSECTIONS(PURCHASES_JNL_DISSECTIONS instance);
    partial void InsertREP_ADJUST(REP_ADJUST instance);
    partial void UpdateREP_ADJUST(REP_ADJUST instance);
    partial void DeleteREP_ADJUST(REP_ADJUST instance);
    partial void InsertREP_ADJUST_JNL(REP_ADJUST_JNL instance);
    partial void UpdateREP_ADJUST_JNL(REP_ADJUST_JNL instance);
    partial void DeleteREP_ADJUST_JNL(REP_ADJUST_JNL instance);
    partial void InsertREPORTS(REPORTS instance);
    partial void UpdateREPORTS(REPORTS instance);
    partial void DeleteREPORTS(REPORTS instance);
    partial void InsertREPS_DIARY(REPS_DIARY instance);
    partial void UpdateREPS_DIARY(REPS_DIARY instance);
    partial void DeleteREPS_DIARY(REPS_DIARY instance);
    partial void InsertREVCAT_TO_GL(REVCAT_TO_GL instance);
    partial void UpdateREVCAT_TO_GL(REVCAT_TO_GL instance);
    partial void DeleteREVCAT_TO_GL(REVCAT_TO_GL instance);
    partial void InsertREVENUE_CATEGORIES(REVENUE_CATEGORIES instance);
    partial void UpdateREVENUE_CATEGORIES(REVENUE_CATEGORIES instance);
    partial void DeleteREVENUE_CATEGORIES(REVENUE_CATEGORIES instance);
    partial void InsertREVENUE_CATEGORIES_GROUPS(REVENUE_CATEGORIES_GROUPS instance);
    partial void UpdateREVENUE_CATEGORIES_GROUPS(REVENUE_CATEGORIES_GROUPS instance);
    partial void DeleteREVENUE_CATEGORIES_GROUPS(REVENUE_CATEGORIES_GROUPS instance);
    partial void InsertSALEITEM(SALEITEM instance);
    partial void UpdateSALEITEM(SALEITEM instance);
    partial void DeleteSALEITEM(SALEITEM instance);
    partial void InsertSALEITEM_DRAFT(SALEITEM_DRAFT instance);
    partial void UpdateSALEITEM_DRAFT(SALEITEM_DRAFT instance);
    partial void DeleteSALEITEM_DRAFT(SALEITEM_DRAFT instance);
    partial void InsertSALES_ANALYSIS(SALES_ANALYSIS instance);
    partial void UpdateSALES_ANALYSIS(SALES_ANALYSIS instance);
    partial void DeleteSALES_ANALYSIS(SALES_ANALYSIS instance);
    partial void InsertSALES_COMMISSION_DUE_ITEM(SALES_COMMISSION_DUE_ITEM instance);
    partial void UpdateSALES_COMMISSION_DUE_ITEM(SALES_COMMISSION_DUE_ITEM instance);
    partial void DeleteSALES_COMMISSION_DUE_ITEM(SALES_COMMISSION_DUE_ITEM instance);
    partial void InsertSALES_COMMISSION_PRERUN(SALES_COMMISSION_PRERUN instance);
    partial void UpdateSALES_COMMISSION_PRERUN(SALES_COMMISSION_PRERUN instance);
    partial void DeleteSALES_COMMISSION_PRERUN(SALES_COMMISSION_PRERUN instance);
    partial void InsertSALES_COMMISSION_PRERUN_ITEM(SALES_COMMISSION_PRERUN_ITEM instance);
    partial void UpdateSALES_COMMISSION_PRERUN_ITEM(SALES_COMMISSION_PRERUN_ITEM instance);
    partial void DeleteSALES_COMMISSION_PRERUN_ITEM(SALES_COMMISSION_PRERUN_ITEM instance);
    partial void InsertSALES_COMMISSION_PRERUN_ITEM_CANCELLED(SALES_COMMISSION_PRERUN_ITEM_CANCELLED instance);
    partial void UpdateSALES_COMMISSION_PRERUN_ITEM_CANCELLED(SALES_COMMISSION_PRERUN_ITEM_CANCELLED instance);
    partial void DeleteSALES_COMMISSION_PRERUN_ITEM_CANCELLED(SALES_COMMISSION_PRERUN_ITEM_CANCELLED instance);
    partial void InsertSALES_COMMISSION_RUN(SALES_COMMISSION_RUN instance);
    partial void UpdateSALES_COMMISSION_RUN(SALES_COMMISSION_RUN instance);
    partial void DeleteSALES_COMMISSION_RUN(SALES_COMMISSION_RUN instance);
    partial void InsertSALES_COMMISSION_RUN_ITEM(SALES_COMMISSION_RUN_ITEM instance);
    partial void UpdateSALES_COMMISSION_RUN_ITEM(SALES_COMMISSION_RUN_ITEM instance);
    partial void DeleteSALES_COMMISSION_RUN_ITEM(SALES_COMMISSION_RUN_ITEM instance);
    partial void InsertSALES_DISC(SALES_DISC instance);
    partial void UpdateSALES_DISC(SALES_DISC instance);
    partial void DeleteSALES_DISC(SALES_DISC instance);
    partial void InsertSALES_TEAMS(SALES_TEAMS instance);
    partial void UpdateSALES_TEAMS(SALES_TEAMS instance);
    partial void DeleteSALES_TEAMS(SALES_TEAMS instance);
    partial void InsertSALES_TEAMS_GROWTH_TARGETS(SALES_TEAMS_GROWTH_TARGETS instance);
    partial void UpdateSALES_TEAMS_GROWTH_TARGETS(SALES_TEAMS_GROWTH_TARGETS instance);
    partial void DeleteSALES_TEAMS_GROWTH_TARGETS(SALES_TEAMS_GROWTH_TARGETS instance);
    partial void InsertSALESORD(SALESORD instance);
    partial void UpdateSALESORD(SALESORD instance);
    partial void DeleteSALESORD(SALESORD instance);
    partial void InsertSALESORD_DRAFT(SALESORD_DRAFT instance);
    partial void UpdateSALESORD_DRAFT(SALESORD_DRAFT instance);
    partial void DeleteSALESORD_DRAFT(SALESORD_DRAFT instance);
    partial void InsertSALESORD_ERROR_LOG(SALESORD_ERROR_LOG instance);
    partial void UpdateSALESORD_ERROR_LOG(SALESORD_ERROR_LOG instance);
    partial void DeleteSALESORD_ERROR_LOG(SALESORD_ERROR_LOG instance);
    partial void InsertSALESORD_EXTERNAL_LOG(SALESORD_EXTERNAL_LOG instance);
    partial void UpdateSALESORD_EXTERNAL_LOG(SALESORD_EXTERNAL_LOG instance);
    partial void DeleteSALESORD_EXTERNAL_LOG(SALESORD_EXTERNAL_LOG instance);
    partial void InsertSALESORD_INTERNAL_LOG(SALESORD_INTERNAL_LOG instance);
    partial void UpdateSALESORD_INTERNAL_LOG(SALESORD_INTERNAL_LOG instance);
    partial void DeleteSALESORD_INTERNAL_LOG(SALESORD_INTERNAL_LOG instance);
    partial void InsertSECURITY_APPROVALS(SECURITY_APPROVALS instance);
    partial void UpdateSECURITY_APPROVALS(SECURITY_APPROVALS instance);
    partial void DeleteSECURITY_APPROVALS(SECURITY_APPROVALS instance);
    partial void InsertSERIALNUMBERS(SERIALNUMBERS instance);
    partial void UpdateSERIALNUMBERS(SERIALNUMBERS instance);
    partial void DeleteSERIALNUMBERS(SERIALNUMBERS instance);
    partial void InsertSETUP(SETUP instance);
    partial void UpdateSETUP(SETUP instance);
    partial void DeleteSETUP(SETUP instance);
    partial void InsertSTKORD(STKORD instance);
    partial void UpdateSTKORD(STKORD instance);
    partial void DeleteSTKORD(STKORD instance);
    partial void InsertSTKORDITEM(STKORDITEM instance);
    partial void UpdateSTKORDITEM(STKORDITEM instance);
    partial void DeleteSTKORDITEM(STKORDITEM instance);
    partial void InsertSTOCK(STOCK instance);
    partial void UpdateSTOCK(STOCK instance);
    partial void DeleteSTOCK(STOCK instance);
    partial void InsertSTOCK_AUDIT(STOCK_AUDIT instance);
    partial void UpdateSTOCK_AUDIT(STOCK_AUDIT instance);
    partial void DeleteSTOCK_AUDIT(STOCK_AUDIT instance);
    partial void InsertSTOCK_BRANDS(STOCK_BRANDS instance);
    partial void UpdateSTOCK_BRANDS(STOCK_BRANDS instance);
    partial void DeleteSTOCK_BRANDS(STOCK_BRANDS instance);
    partial void InsertSTOCK_CONTROL(STOCK_CONTROL instance);
    partial void UpdateSTOCK_CONTROL(STOCK_CONTROL instance);
    partial void DeleteSTOCK_CONTROL(STOCK_CONTROL instance);
    partial void InsertSTOCK_CONTROL_ITEMS(STOCK_CONTROL_ITEMS instance);
    partial void UpdateSTOCK_CONTROL_ITEMS(STOCK_CONTROL_ITEMS instance);
    partial void DeleteSTOCK_CONTROL_ITEMS(STOCK_CONTROL_ITEMS instance);
    partial void InsertSTOCK_DELETE_(STOCK_DELETE_ instance);
    partial void UpdateSTOCK_DELETE_(STOCK_DELETE_ instance);
    partial void DeleteSTOCK_DELETE_(STOCK_DELETE_ instance);
    partial void InsertSTOCK_GROUPS(STOCK_GROUPS instance);
    partial void UpdateSTOCK_GROUPS(STOCK_GROUPS instance);
    partial void DeleteSTOCK_GROUPS(STOCK_GROUPS instance);
    partial void InsertSTOCK_PRICING_TEMP(STOCK_PRICING_TEMP instance);
    partial void UpdateSTOCK_PRICING_TEMP(STOCK_PRICING_TEMP instance);
    partial void DeleteSTOCK_PRICING_TEMP(STOCK_PRICING_TEMP instance);
    partial void InsertSTOCK_RECEIVED(STOCK_RECEIVED instance);
    partial void UpdateSTOCK_RECEIVED(STOCK_RECEIVED instance);
    partial void DeleteSTOCK_RECEIVED(STOCK_RECEIVED instance);
    partial void InsertSTOCK_RECEIVED_TMP(STOCK_RECEIVED_TMP instance);
    partial void UpdateSTOCK_RECEIVED_TMP(STOCK_RECEIVED_TMP instance);
    partial void DeleteSTOCK_RECEIVED_TMP(STOCK_RECEIVED_TMP instance);
    partial void InsertSTOCK_RECEIVED_TMP_BRK(STOCK_RECEIVED_TMP_BRK instance);
    partial void UpdateSTOCK_RECEIVED_TMP_BRK(STOCK_RECEIVED_TMP_BRK instance);
    partial void DeleteSTOCK_RECEIVED_TMP_BRK(STOCK_RECEIVED_TMP_BRK instance);
    partial void InsertSTOCK_SHELF_LABEL_REPORTS(STOCK_SHELF_LABEL_REPORTS instance);
    partial void UpdateSTOCK_SHELF_LABEL_REPORTS(STOCK_SHELF_LABEL_REPORTS instance);
    partial void DeleteSTOCK_SHELF_LABEL_REPORTS(STOCK_SHELF_LABEL_REPORTS instance);
    partial void InsertSTOCK_SHELF_LOCATIONS(STOCK_SHELF_LOCATIONS instance);
    partial void UpdateSTOCK_SHELF_LOCATIONS(STOCK_SHELF_LOCATIONS instance);
    partial void DeleteSTOCK_SHELF_LOCATIONS(STOCK_SHELF_LOCATIONS instance);
    partial void InsertSTOCK_SHELF_LOCATIONS_POVALUES(STOCK_SHELF_LOCATIONS_POVALUES instance);
    partial void UpdateSTOCK_SHELF_LOCATIONS_POVALUES(STOCK_SHELF_LOCATIONS_POVALUES instance);
    partial void DeleteSTOCK_SHELF_LOCATIONS_POVALUES(STOCK_SHELF_LOCATIONS_POVALUES instance);
    partial void InsertSTOCK_SNAPSHOT(STOCK_SNAPSHOT instance);
    partial void UpdateSTOCK_SNAPSHOT(STOCK_SNAPSHOT instance);
    partial void DeleteSTOCK_SNAPSHOT(STOCK_SNAPSHOT instance);
    partial void InsertSTOCK_TEMP(STOCK_TEMP instance);
    partial void UpdateSTOCK_TEMP(STOCK_TEMP instance);
    partial void DeleteSTOCK_TEMP(STOCK_TEMP instance);
    partial void InsertSTOCK_TRANSFER(STOCK_TRANSFER instance);
    partial void UpdateSTOCK_TRANSFER(STOCK_TRANSFER instance);
    partial void DeleteSTOCK_TRANSFER(STOCK_TRANSFER instance);
    partial void InsertSTOCK_TRENDS(STOCK_TRENDS instance);
    partial void UpdateSTOCK_TRENDS(STOCK_TRENDS instance);
    partial void DeleteSTOCK_TRENDS(STOCK_TRENDS instance);
    partial void InsertSTOCK_UPDATE_HISTORY(STOCK_UPDATE_HISTORY instance);
    partial void UpdateSTOCK_UPDATE_HISTORY(STOCK_UPDATE_HISTORY instance);
    partial void DeleteSTOCK_UPDATE_HISTORY(STOCK_UPDATE_HISTORY instance);
    partial void InsertSTOCK_USAGE(STOCK_USAGE instance);
    partial void UpdateSTOCK_USAGE(STOCK_USAGE instance);
    partial void DeleteSTOCK_USAGE(STOCK_USAGE instance);
    partial void InsertTblOPTIONSFOCUS(TblOPTIONSFOCUS instance);
    partial void UpdateTblOPTIONSFOCUS(TblOPTIONSFOCUS instance);
    partial void DeleteTblOPTIONSFOCUS(TblOPTIONSFOCUS instance);
    partial void InsertTblOPTIONSFOCUSITEMS(TblOPTIONSFOCUSITEMS instance);
    partial void UpdateTblOPTIONSFOCUSITEMS(TblOPTIONSFOCUSITEMS instance);
    partial void DeleteTblOPTIONSFOCUSITEMS(TblOPTIONSFOCUSITEMS instance);
    partial void InsertTEMP_PROJECT_INCOMPLETE(TEMP_PROJECT_INCOMPLETE instance);
    partial void UpdateTEMP_PROJECT_INCOMPLETE(TEMP_PROJECT_INCOMPLETE instance);
    partial void DeleteTEMP_PROJECT_INCOMPLETE(TEMP_PROJECT_INCOMPLETE instance);
    partial void InsertTMP_PENDING_DEVICES_PAID(TMP_PENDING_DEVICES_PAID instance);
    partial void UpdateTMP_PENDING_DEVICES_PAID(TMP_PENDING_DEVICES_PAID instance);
    partial void DeleteTMP_PENDING_DEVICES_PAID(TMP_PENDING_DEVICES_PAID instance);
    partial void InsertTmp_REVCAT_TO_GL(Tmp_REVCAT_TO_GL instance);
    partial void UpdateTmp_REVCAT_TO_GL(Tmp_REVCAT_TO_GL instance);
    partial void DeleteTmp_REVCAT_TO_GL(Tmp_REVCAT_TO_GL instance);
    partial void InsertTMP_SNAPSHOT_REC(TMP_SNAPSHOT_REC instance);
    partial void UpdateTMP_SNAPSHOT_REC(TMP_SNAPSHOT_REC instance);
    partial void DeleteTMP_SNAPSHOT_REC(TMP_SNAPSHOT_REC instance);
    partial void InsertTMP_STAT_REV_CREDITS(TMP_STAT_REV_CREDITS instance);
    partial void UpdateTMP_STAT_REV_CREDITS(TMP_STAT_REV_CREDITS instance);
    partial void DeleteTMP_STAT_REV_CREDITS(TMP_STAT_REV_CREDITS instance);
    partial void InsertTMP_STAT_REV_INVOICES(TMP_STAT_REV_INVOICES instance);
    partial void UpdateTMP_STAT_REV_INVOICES(TMP_STAT_REV_INVOICES instance);
    partial void DeleteTMP_STAT_REV_INVOICES(TMP_STAT_REV_INVOICES instance);
    partial void InsertTMP_STOCK_MERGE(TMP_STOCK_MERGE instance);
    partial void UpdateTMP_STOCK_MERGE(TMP_STOCK_MERGE instance);
    partial void DeleteTMP_STOCK_MERGE(TMP_STOCK_MERGE instance);
    partial void InsertTmpSTOCK_RevCat_Orig_DD(TmpSTOCK_RevCat_Orig_DD instance);
    partial void UpdateTmpSTOCK_RevCat_Orig_DD(TmpSTOCK_RevCat_Orig_DD instance);
    partial void DeleteTmpSTOCK_RevCat_Orig_DD(TmpSTOCK_RevCat_Orig_DD instance);
    partial void InsertTmpSTOCK_RevCat_Updated_DD(TmpSTOCK_RevCat_Updated_DD instance);
    partial void UpdateTmpSTOCK_RevCat_Updated_DD(TmpSTOCK_RevCat_Updated_DD instance);
    partial void DeleteTmpSTOCK_RevCat_Updated_DD(TmpSTOCK_RevCat_Updated_DD instance);
    partial void InsertWHAT(WHAT instance);
    partial void UpdateWHAT(WHAT instance);
    partial void DeleteWHAT(WHAT instance);
    #endregion
		
		public SourceDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SourceDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SourceDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SourceDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACTIVITY_LOG> ACTIVITY_LOG
		{
			get
			{
				return this.GetTable<ACTIVITY_LOG>();
			}
		}
		
		public System.Data.Linq.Table<ASSET_CATEGORIES> ASSET_CATEGORIES
		{
			get
			{
				return this.GetTable<ASSET_CATEGORIES>();
			}
		}
		
		public System.Data.Linq.Table<ASSET_REGISTER> ASSET_REGISTER
		{
			get
			{
				return this.GetTable<ASSET_REGISTER>();
			}
		}
		
		public System.Data.Linq.Table<AUDIT_CREDITORS_MONTH> AUDIT_CREDITORS_MONTH
		{
			get
			{
				return this.GetTable<AUDIT_CREDITORS_MONTH>();
			}
		}
		
		public System.Data.Linq.Table<AUDIT_DEBTORS> AUDIT_DEBTORS
		{
			get
			{
				return this.GetTable<AUDIT_DEBTORS>();
			}
		}
		
		public System.Data.Linq.Table<AUDIT_DEBTORS_DAY> AUDIT_DEBTORS_DAY
		{
			get
			{
				return this.GetTable<AUDIT_DEBTORS_DAY>();
			}
		}
		
		public System.Data.Linq.Table<AUDIT_DEBTORS_MONTH> AUDIT_DEBTORS_MONTH
		{
			get
			{
				return this.GetTable<AUDIT_DEBTORS_MONTH>();
			}
		}
		
		public System.Data.Linq.Table<BANK_DEPOSITS> BANK_DEPOSITS
		{
			get
			{
				return this.GetTable<BANK_DEPOSITS>();
			}
		}
		
		public System.Data.Linq.Table<BOM_ANNUAL_VALUES> BOM_ANNUAL_VALUES
		{
			get
			{
				return this.GetTable<BOM_ANNUAL_VALUES>();
			}
		}
		
		public System.Data.Linq.Table<BOM_PRODUCT_REVENUE_REPORT_ORDER> BOM_PRODUCT_REVENUE_REPORT_ORDER
		{
			get
			{
				return this.GetTable<BOM_PRODUCT_REVENUE_REPORT_ORDER>();
			}
		}
		
		public System.Data.Linq.Table<BOM_STATE_DEFINITION> BOM_STATE_DEFINITION
		{
			get
			{
				return this.GetTable<BOM_STATE_DEFINITION>();
			}
		}
		
		public System.Data.Linq.Table<BRANCHES> BRANCHES
		{
			get
			{
				return this.GetTable<BRANCHES>();
			}
		}
		
		public System.Data.Linq.Table<CHEQ_BATCH_NUM> CHEQ_BATCH_NUM
		{
			get
			{
				return this.GetTable<CHEQ_BATCH_NUM>();
			}
		}
		
		public System.Data.Linq.Table<COMPANY_APPROVALS> COMPANY_APPROVALS
		{
			get
			{
				return this.GetTable<COMPANY_APPROVALS>();
			}
		}
		
		public System.Data.Linq.Table<COMPANY_APPROVALS_TMP> COMPANY_APPROVALS_TMP
		{
			get
			{
				return this.GetTable<COMPANY_APPROVALS_TMP>();
			}
		}
		
		public System.Data.Linq.Table<COMPANY_MERGE_TEMP> COMPANY_MERGE_TEMP
		{
			get
			{
				return this.GetTable<COMPANY_MERGE_TEMP>();
			}
		}
		
		public System.Data.Linq.Table<CONTACTS> CONTACTS
		{
			get
			{
				return this.GetTable<CONTACTS>();
			}
		}
		
		public System.Data.Linq.Table<CONTACTS_CREDITORS> CONTACTS_CREDITORS
		{
			get
			{
				return this.GetTable<CONTACTS_CREDITORS>();
			}
		}
		
		public System.Data.Linq.Table<CONTACTS_MERGEHISTORY> CONTACTS_MERGEHISTORY
		{
			get
			{
				return this.GetTable<CONTACTS_MERGEHISTORY>();
			}
		}
		
		public System.Data.Linq.Table<COUNTRIES> COUNTRIES
		{
			get
			{
				return this.GetTable<COUNTRIES>();
			}
		}
		
		public System.Data.Linq.Table<COURIERS> COURIERS
		{
			get
			{
				return this.GetTable<COURIERS>();
			}
		}
		
		public System.Data.Linq.Table<Creditor_CHEQUES> Creditor_CHEQUES
		{
			get
			{
				return this.GetTable<Creditor_CHEQUES>();
			}
		}
		
		public System.Data.Linq.Table<CREDITORS> CREDITORS
		{
			get
			{
				return this.GetTable<CREDITORS>();
			}
		}
		
		public System.Data.Linq.Table<CREDITORS_ACCPAC_VENDORS> CREDITORS_ACCPAC_VENDORS
		{
			get
			{
				return this.GetTable<CREDITORS_ACCPAC_VENDORS>();
			}
		}
		
		public System.Data.Linq.Table<CREDITORS_BAL> CREDITORS_BAL
		{
			get
			{
				return this.GetTable<CREDITORS_BAL>();
			}
		}
		
		public System.Data.Linq.Table<CREDITORS_CURRENT_PERIOD> CREDITORS_CURRENT_PERIOD
		{
			get
			{
				return this.GetTable<CREDITORS_CURRENT_PERIOD>();
			}
		}
		
		public System.Data.Linq.Table<CREDITORS_JNL> CREDITORS_JNL
		{
			get
			{
				return this.GetTable<CREDITORS_JNL>();
			}
		}
		
		public System.Data.Linq.Table<CREDITORS_TEMP> CREDITORS_TEMP
		{
			get
			{
				return this.GetTable<CREDITORS_TEMP>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CALLS> CRM_CALLS
		{
			get
			{
				return this.GetTable<CRM_CALLS>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_BSG_DELIVERY_STATUS> CTRAC_BSG_DELIVERY_STATUS
		{
			get
			{
				return this.GetTable<CTRAC_BSG_DELIVERY_STATUS>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_CHANGE_TYPES> CTRAC_CHANGE_TYPES
		{
			get
			{
				return this.GetTable<CTRAC_CHANGE_TYPES>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_DEAL_TYPES> CTRAC_DEAL_TYPES
		{
			get
			{
				return this.GetTable<CTRAC_DEAL_TYPES>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_HEADER> CTRAC_HEADER
		{
			get
			{
				return this.GetTable<CTRAC_HEADER>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this.GetTable<CTRAC_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<Ctrac_item_backup> Ctrac_item_backup
		{
			get
			{
				return this.GetTable<Ctrac_item_backup>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_ITEM_CARBON_TAX_RAW> CTRAC_ITEM_CARBON_TAX_RAW
		{
			get
			{
				return this.GetTable<CTRAC_ITEM_CARBON_TAX_RAW>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_ITEM_CARBON_TAX_RAW_ERRORS> CTRAC_ITEM_CARBON_TAX_RAW_ERRORS
		{
			get
			{
				return this.GetTable<CTRAC_ITEM_CARBON_TAX_RAW_ERRORS>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_ITEM_IMPORT> CTRAC_ITEM_IMPORT
		{
			get
			{
				return this.GetTable<CTRAC_ITEM_IMPORT>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_ITEM_IMPORT_FIELDS> CTRAC_ITEM_IMPORT_FIELDS
		{
			get
			{
				return this.GetTable<CTRAC_ITEM_IMPORT_FIELDS>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_ITEM_IMPORT_ITEM_EXCEPTION> CTRAC_ITEM_IMPORT_ITEM_EXCEPTION
		{
			get
			{
				return this.GetTable<CTRAC_ITEM_IMPORT_ITEM_EXCEPTION>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_MERGEHISTORY> CTRAC_MERGEHISTORY
		{
			get
			{
				return this.GetTable<CTRAC_MERGEHISTORY>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_PM_DATES> CTRAC_PM_DATES
		{
			get
			{
				return this.GetTable<CTRAC_PM_DATES>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_RESET> CTRAC_RESET
		{
			get
			{
				return this.GetTable<CTRAC_RESET>();
			}
		}
		
		public System.Data.Linq.Table<CTRAC_TYPE> CTRAC_TYPE
		{
			get
			{
				return this.GetTable<CTRAC_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<CTRACITEM_RESET> CTRACITEM_RESET
		{
			get
			{
				return this.GetTable<CTRACITEM_RESET>();
			}
		}
		
		public System.Data.Linq.Table<CURRENT_PERIOD> CURRENT_PERIOD
		{
			get
			{
				return this.GetTable<CURRENT_PERIOD>();
			}
		}
		
		public System.Data.Linq.Table<_CustomerEnginer__> _CustomerEnginer__
		{
			get
			{
				return this.GetTable<_CustomerEnginer__>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS> DEBTORS
		{
			get
			{
				return this.GetTable<DEBTORS>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_3P_AGREEMENTS> DEBTORS_3P_AGREEMENTS
		{
			get
			{
				return this.GetTable<DEBTORS_3P_AGREEMENTS>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_3P_INVOICES> DEBTORS_3P_INVOICES
		{
			get
			{
				return this.GetTable<DEBTORS_3P_INVOICES>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_3P_INVOICES_ITEMS> DEBTORS_3P_INVOICES_ITEMS
		{
			get
			{
				return this.GetTable<DEBTORS_3P_INVOICES_ITEMS>();
			}
		}
		
		public System.Data.Linq.Table<Debtors_backup> Debtors_backup
		{
			get
			{
				return this.GetTable<Debtors_backup>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_BAL> DEBTORS_BAL
		{
			get
			{
				return this.GetTable<DEBTORS_BAL>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_JNL_DETAILS> DEBTORS_JNL_DETAILS
		{
			get
			{
				return this.GetTable<DEBTORS_JNL_DETAILS>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_JOURNALS> DEBTORS_JOURNALS
		{
			get
			{
				return this.GetTable<DEBTORS_JOURNALS>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_LOCATION_IMPORT> DEBTORS_LOCATION_IMPORT
		{
			get
			{
				return this.GetTable<DEBTORS_LOCATION_IMPORT>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_LOCATION_IMPORT_FIELDS> DEBTORS_LOCATION_IMPORT_FIELDS
		{
			get
			{
				return this.GetTable<DEBTORS_LOCATION_IMPORT_FIELDS>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION> DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION
		{
			get
			{
				return this.GetTable<DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_MERGEHISTORY> DEBTORS_MERGEHISTORY
		{
			get
			{
				return this.GetTable<DEBTORS_MERGEHISTORY>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_MERGERESULT> DEBTORS_MERGERESULT
		{
			get
			{
				return this.GetTable<DEBTORS_MERGERESULT>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_PM_VISITS> DEBTORS_PM_VISITS
		{
			get
			{
				return this.GetTable<DEBTORS_PM_VISITS>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_PM_VISITS_NOTES> DEBTORS_PM_VISITS_NOTES
		{
			get
			{
				return this.GetTable<DEBTORS_PM_VISITS_NOTES>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_RECEIPT_DETAILS> DEBTORS_RECEIPT_DETAILS
		{
			get
			{
				return this.GetTable<DEBTORS_RECEIPT_DETAILS>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_RECEIPTS> DEBTORS_RECEIPTS
		{
			get
			{
				return this.GetTable<DEBTORS_RECEIPTS>();
			}
		}
		
		public System.Data.Linq.Table<DEBTORS_UPDATE_HISTORY> DEBTORS_UPDATE_HISTORY
		{
			get
			{
				return this.GetTable<DEBTORS_UPDATE_HISTORY>();
			}
		}
		
		public System.Data.Linq.Table<DEPARTMENTS> DEPARTMENTS
		{
			get
			{
				return this.GetTable<DEPARTMENTS>();
			}
		}
		
		public System.Data.Linq.Table<EMAIL_TYPES> EMAIL_TYPES
		{
			get
			{
				return this.GetTable<EMAIL_TYPES>();
			}
		}
		
		public System.Data.Linq.Table<EMP_CO> EMP_CO
		{
			get
			{
				return this.GetTable<EMP_CO>();
			}
		}
		
		public System.Data.Linq.Table<EMP_SPID_CO> EMP_SPID_CO
		{
			get
			{
				return this.GetTable<EMP_SPID_CO>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE_COMPANY> EMPLOYEE_COMPANY
		{
			get
			{
				return this.GetTable<EMPLOYEE_COMPANY>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEES> EMPLOYEES
		{
			get
			{
				return this.GetTable<EMPLOYEES>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEES_APPROVALS> EMPLOYEES_APPROVALS
		{
			get
			{
				return this.GetTable<EMPLOYEES_APPROVALS>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEES_APPROVALS_TMP> EMPLOYEES_APPROVALS_TMP
		{
			get
			{
				return this.GetTable<EMPLOYEES_APPROVALS_TMP>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEES_STATE> EMPLOYEES_STATE
		{
			get
			{
				return this.GetTable<EMPLOYEES_STATE>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEES_TMP> EMPLOYEES_TMP
		{
			get
			{
				return this.GetTable<EMPLOYEES_TMP>();
			}
		}
		
		public System.Data.Linq.Table<ERRMSG> ERRMSG
		{
			get
			{
				return this.GetTable<ERRMSG>();
			}
		}
		
		public System.Data.Linq.Table<ERROR_LOG> ERROR_LOG
		{
			get
			{
				return this.GetTable<ERROR_LOG>();
			}
		}
		
		public System.Data.Linq.Table<FIX_NVS> FIX_NVS
		{
			get
			{
				return this.GetTable<FIX_NVS>();
			}
		}
		
		public System.Data.Linq.Table<GL_ACCOUNT_STATUS> GL_ACCOUNT_STATUS
		{
			get
			{
				return this.GetTable<GL_ACCOUNT_STATUS>();
			}
		}
		
		public System.Data.Linq.Table<GL_ACCOUNT_STATUS_TMP> GL_ACCOUNT_STATUS_TMP
		{
			get
			{
				return this.GetTable<GL_ACCOUNT_STATUS_TMP>();
			}
		}
		
		public System.Data.Linq.Table<GL_ACCOUNTS> GL_ACCOUNTS
		{
			get
			{
				return this.GetTable<GL_ACCOUNTS>();
			}
		}
		
		public System.Data.Linq.Table<GL_ACCOUNTS_TMP> GL_ACCOUNTS_TMP
		{
			get
			{
				return this.GetTable<GL_ACCOUNTS_TMP>();
			}
		}
		
		public System.Data.Linq.Table<GL_BANKS> GL_BANKS
		{
			get
			{
				return this.GetTable<GL_BANKS>();
			}
		}
		
		public System.Data.Linq.Table<GL_BAS_SUBS> GL_BAS_SUBS
		{
			get
			{
				return this.GetTable<GL_BAS_SUBS>();
			}
		}
		
		public System.Data.Linq.Table<GL_BUSINESS_UNITS> GL_BUSINESS_UNITS
		{
			get
			{
				return this.GetTable<GL_BUSINESS_UNITS>();
			}
		}
		
		public System.Data.Linq.Table<GL_BUSINESS_UNITS_ALLOWED> GL_BUSINESS_UNITS_ALLOWED
		{
			get
			{
				return this.GetTable<GL_BUSINESS_UNITS_ALLOWED>();
			}
		}
		
		public System.Data.Linq.Table<GL_CODES_OLDNEW> GL_CODES_OLDNEW
		{
			get
			{
				return this.GetTable<GL_CODES_OLDNEW>();
			}
		}
		
		public System.Data.Linq.Table<GL_CODES_TYPES> GL_CODES_TYPES
		{
			get
			{
				return this.GetTable<GL_CODES_TYPES>();
			}
		}
		
		public System.Data.Linq.Table<GL_CONTROLS> GL_CONTROLS
		{
			get
			{
				return this.GetTable<GL_CONTROLS>();
			}
		}
		
		public System.Data.Linq.Table<GL_CONTROLS_ALLOWED> GL_CONTROLS_ALLOWED
		{
			get
			{
				return this.GetTable<GL_CONTROLS_ALLOWED>();
			}
		}
		
		public System.Data.Linq.Table<GL_CURRENCY_EXCHANGE> GL_CURRENCY_EXCHANGE
		{
			get
			{
				return this.GetTable<GL_CURRENCY_EXCHANGE>();
			}
		}
		
		public System.Data.Linq.Table<GL_DETAILS> GL_DETAILS
		{
			get
			{
				return this.GetTable<GL_DETAILS>();
			}
		}
		
		public System.Data.Linq.Table<GL_DIST_BAL_TY> GL_DIST_BAL_TY
		{
			get
			{
				return this.GetTable<GL_DIST_BAL_TY>();
			}
		}
		
		public System.Data.Linq.Table<GL_EXPORT_CSV> GL_EXPORT_CSV
		{
			get
			{
				return this.GetTable<GL_EXPORT_CSV>();
			}
		}
		
		public System.Data.Linq.Table<GL_GROUPS> GL_GROUPS
		{
			get
			{
				return this.GetTable<GL_GROUPS>();
			}
		}
		
		public System.Data.Linq.Table<GL_JOURNALS> GL_JOURNALS
		{
			get
			{
				return this.GetTable<GL_JOURNALS>();
			}
		}
		
		public System.Data.Linq.Table<GL_OBJECTS> GL_OBJECTS
		{
			get
			{
				return this.GetTable<GL_OBJECTS>();
			}
		}
		
		public System.Data.Linq.Table<GL_OBJECTS_ALLOWED> GL_OBJECTS_ALLOWED
		{
			get
			{
				return this.GetTable<GL_OBJECTS_ALLOWED>();
			}
		}
		
		public System.Data.Linq.Table<GL_OBJECTS_GROUPS> GL_OBJECTS_GROUPS
		{
			get
			{
				return this.GetTable<GL_OBJECTS_GROUPS>();
			}
		}
		
		public System.Data.Linq.Table<GL_SERVICES> GL_SERVICES
		{
			get
			{
				return this.GetTable<GL_SERVICES>();
			}
		}
		
		public System.Data.Linq.Table<GL_STATES> GL_STATES
		{
			get
			{
				return this.GetTable<GL_STATES>();
			}
		}
		
		public System.Data.Linq.Table<GL_SUBS> GL_SUBS
		{
			get
			{
				return this.GetTable<GL_SUBS>();
			}
		}
		
		public System.Data.Linq.Table<GL_TO_ASSETCAT> GL_TO_ASSETCAT
		{
			get
			{
				return this.GetTable<GL_TO_ASSETCAT>();
			}
		}
		
		public System.Data.Linq.Table<IMPORT_IMV_PARTS> IMPORT_IMV_PARTS
		{
			get
			{
				return this.GetTable<IMPORT_IMV_PARTS>();
			}
		}
		
		public System.Data.Linq.Table<IMPORT_STOCK> IMPORT_STOCK
		{
			get
			{
				return this.GetTable<IMPORT_STOCK>();
			}
		}
		
		public System.Data.Linq.Table<IMPORTS_COSTING> IMPORTS_COSTING
		{
			get
			{
				return this.GetTable<IMPORTS_COSTING>();
			}
		}
		
		public System.Data.Linq.Table<INT_ACTUAL_INVOICES> INT_ACTUAL_INVOICES
		{
			get
			{
				return this.GetTable<INT_ACTUAL_INVOICES>();
			}
		}
		
		public System.Data.Linq.Table<INT_BACKUP_3P_DEVICES_BEFORE_UPDATE> INT_BACKUP_3P_DEVICES_BEFORE_UPDATE
		{
			get
			{
				return this.GetTable<INT_BACKUP_3P_DEVICES_BEFORE_UPDATE>();
			}
		}
		
		public System.Data.Linq.Table<INT_BUSINESS_UNIT_TARGETS> INT_BUSINESS_UNIT_TARGETS
		{
			get
			{
				return this.GetTable<INT_BUSINESS_UNIT_TARGETS>();
			}
		}
		
		public System.Data.Linq.Table<INT_BUSINESS_UNITS> INT_BUSINESS_UNITS
		{
			get
			{
				return this.GetTable<INT_BUSINESS_UNITS>();
			}
		}
		
		public System.Data.Linq.Table<INT_COMPANY_GROUP> INT_COMPANY_GROUP
		{
			get
			{
				return this.GetTable<INT_COMPANY_GROUP>();
			}
		}
		
		public System.Data.Linq.Table<INT_COMPANY_TARGETS> INT_COMPANY_TARGETS
		{
			get
			{
				return this.GetTable<INT_COMPANY_TARGETS>();
			}
		}
		
		public System.Data.Linq.Table<INT_CTRAC_HEADER_HISTORY> INT_CTRAC_HEADER_HISTORY
		{
			get
			{
				return this.GetTable<INT_CTRAC_HEADER_HISTORY>();
			}
		}
		
		public System.Data.Linq.Table<INT_CTRAC_HISTORY> INT_CTRAC_HISTORY
		{
			get
			{
				return this.GetTable<INT_CTRAC_HISTORY>();
			}
		}
		
		public System.Data.Linq.Table<INT_CTRAC_TEXT> INT_CTRAC_TEXT
		{
			get
			{
				return this.GetTable<INT_CTRAC_TEXT>();
			}
		}
		
		public System.Data.Linq.Table<INT_DAILYAUDIT_YTD_CREDITS> INT_DAILYAUDIT_YTD_CREDITS
		{
			get
			{
				return this.GetTable<INT_DAILYAUDIT_YTD_CREDITS>();
			}
		}
		
		public System.Data.Linq.Table<INT_DAILYAUDIT_YTD_INVFROMOTHERPERIODS> INT_DAILYAUDIT_YTD_INVFROMOTHERPERIODS
		{
			get
			{
				return this.GetTable<INT_DAILYAUDIT_YTD_INVFROMOTHERPERIODS>();
			}
		}
		
		public System.Data.Linq.Table<INT_DAILYAUDIT_YTD_INVOICES> INT_DAILYAUDIT_YTD_INVOICES
		{
			get
			{
				return this.GetTable<INT_DAILYAUDIT_YTD_INVOICES>();
			}
		}
		
		public System.Data.Linq.Table<INT_ENGINEERS_COMMISSION_REPORT> INT_ENGINEERS_COMMISSION_REPORT
		{
			get
			{
				return this.GetTable<INT_ENGINEERS_COMMISSION_REPORT>();
			}
		}
		
		public System.Data.Linq.Table<INT_EXPECTED_INVOICES> INT_EXPECTED_INVOICES
		{
			get
			{
				return this.GetTable<INT_EXPECTED_INVOICES>();
			}
		}
		
		public System.Data.Linq.Table<INT_INV_BATCH_CONTROL> INT_INV_BATCH_CONTROL
		{
			get
			{
				return this.GetTable<INT_INV_BATCH_CONTROL>();
			}
		}
		
		public System.Data.Linq.Table<INT_INV_BATCH_CONTROL_DRAFT> INT_INV_BATCH_CONTROL_DRAFT
		{
			get
			{
				return this.GetTable<INT_INV_BATCH_CONTROL_DRAFT>();
			}
		}
		
		public System.Data.Linq.Table<INT_INV_BATCH_HEADER> INT_INV_BATCH_HEADER
		{
			get
			{
				return this.GetTable<INT_INV_BATCH_HEADER>();
			}
		}
		
		public System.Data.Linq.Table<INT_INV_BATCH_HEADER_DRAFT> INT_INV_BATCH_HEADER_DRAFT
		{
			get
			{
				return this.GetTable<INT_INV_BATCH_HEADER_DRAFT>();
			}
		}
		
		public System.Data.Linq.Table<INT_INV_CHECK_TMP> INT_INV_CHECK_TMP
		{
			get
			{
				return this.GetTable<INT_INV_CHECK_TMP>();
			}
		}
		
		public System.Data.Linq.Table<INT_INV_LINE_TEXT> INT_INV_LINE_TEXT
		{
			get
			{
				return this.GetTable<INT_INV_LINE_TEXT>();
			}
		}
		
		public System.Data.Linq.Table<INT_INV_LINE_TEXT_DRAFT> INT_INV_LINE_TEXT_DRAFT
		{
			get
			{
				return this.GetTable<INT_INV_LINE_TEXT_DRAFT>();
			}
		}
		
		public System.Data.Linq.Table<INT_INVOICE_STYLE> INT_INVOICE_STYLE
		{
			get
			{
				return this.GetTable<INT_INVOICE_STYLE>();
			}
		}
		
		public System.Data.Linq.Table<INT_PLATFORM> INT_PLATFORM
		{
			get
			{
				return this.GetTable<INT_PLATFORM>();
			}
		}
		
		public System.Data.Linq.Table<INT_PM_HISTORY> INT_PM_HISTORY
		{
			get
			{
				return this.GetTable<INT_PM_HISTORY>();
			}
		}
		
		public System.Data.Linq.Table<INT_PO_HISTORY> INT_PO_HISTORY
		{
			get
			{
				return this.GetTable<INT_PO_HISTORY>();
			}
		}
		
		public System.Data.Linq.Table<INT_PURCH_RPT> INT_PURCH_RPT
		{
			get
			{
				return this.GetTable<INT_PURCH_RPT>();
			}
		}
		
		public System.Data.Linq.Table<INT_REPORTING_GROUPS> INT_REPORTING_GROUPS
		{
			get
			{
				return this.GetTable<INT_REPORTING_GROUPS>();
			}
		}
		
		public System.Data.Linq.Table<INT_RESPONSE_TIME> INT_RESPONSE_TIME
		{
			get
			{
				return this.GetTable<INT_RESPONSE_TIME>();
			}
		}
		
		public System.Data.Linq.Table<INT_SERVICE_ID> INT_SERVICE_ID
		{
			get
			{
				return this.GetTable<INT_SERVICE_ID>();
			}
		}
		
		public System.Data.Linq.Table<INT_SERVICE_LEVEL> INT_SERVICE_LEVEL
		{
			get
			{
				return this.GetTable<INT_SERVICE_LEVEL>();
			}
		}
		
		public System.Data.Linq.Table<INT_ServiceIDChangeLog> INT_ServiceIDChangeLog
		{
			get
			{
				return this.GetTable<INT_ServiceIDChangeLog>();
			}
		}
		
		public System.Data.Linq.Table<INT_ServiceIDChangeLog_1> INT_ServiceIDChangeLog_1
		{
			get
			{
				return this.GetTable<INT_ServiceIDChangeLog_1>();
			}
		}
		
		public System.Data.Linq.Table<INT_ServiceIDTranslationTable> INT_ServiceIDTranslationTable
		{
			get
			{
				return this.GetTable<INT_ServiceIDTranslationTable>();
			}
		}
		
		public System.Data.Linq.Table<INT_SNAPSHOT_FORECAST_DELAYED_ITEM> INT_SNAPSHOT_FORECAST_DELAYED_ITEM
		{
			get
			{
				return this.GetTable<INT_SNAPSHOT_FORECAST_DELAYED_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<INT_SNAPSHOT_FORECAST_ITEM> INT_SNAPSHOT_FORECAST_ITEM
		{
			get
			{
				return this.GetTable<INT_SNAPSHOT_FORECAST_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<INT_SNAPSHOT_FORECAST_UNDELAYED_ITEM> INT_SNAPSHOT_FORECAST_UNDELAYED_ITEM
		{
			get
			{
				return this.GetTable<INT_SNAPSHOT_FORECAST_UNDELAYED_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<INT_SNAPSHOT_HEADER> INT_SNAPSHOT_HEADER
		{
			get
			{
				return this.GetTable<INT_SNAPSHOT_HEADER>();
			}
		}
		
		public System.Data.Linq.Table<INT_SNAPSHOT_ITEM> INT_SNAPSHOT_ITEM
		{
			get
			{
				return this.GetTable<INT_SNAPSHOT_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<INT_SNAPSHOT_ITEM_DELETED_DEVICES> INT_SNAPSHOT_ITEM_DELETED_DEVICES
		{
			get
			{
				return this.GetTable<INT_SNAPSHOT_ITEM_DELETED_DEVICES>();
			}
		}
		
		public System.Data.Linq.Table<INT_SNAPSHOT_ITEM_IMPORT> INT_SNAPSHOT_ITEM_IMPORT
		{
			get
			{
				return this.GetTable<INT_SNAPSHOT_ITEM_IMPORT>();
			}
		}
		
		public System.Data.Linq.Table<INT_SNAPSHOT_ITEM_TEMP> INT_SNAPSHOT_ITEM_TEMP
		{
			get
			{
				return this.GetTable<INT_SNAPSHOT_ITEM_TEMP>();
			}
		}
		
		public System.Data.Linq.Table<INT_SNAPSHOT_REPORT> INT_SNAPSHOT_REPORT
		{
			get
			{
				return this.GetTable<INT_SNAPSHOT_REPORT>();
			}
		}
		
		public System.Data.Linq.Table<INT_STKORD_INVOICE_FREQUENCIES> INT_STKORD_INVOICE_FREQUENCIES
		{
			get
			{
				return this.GetTable<INT_STKORD_INVOICE_FREQUENCIES>();
			}
		}
		
		public System.Data.Linq.Table<INT_STKORD_REASON> INT_STKORD_REASON
		{
			get
			{
				return this.GetTable<INT_STKORD_REASON>();
			}
		}
		
		public System.Data.Linq.Table<INT_STKORD_REASON_TYPES> INT_STKORD_REASON_TYPES
		{
			get
			{
				return this.GetTable<INT_STKORD_REASON_TYPES>();
			}
		}
		
		public System.Data.Linq.Table<INT_STOCK_ALIAS> INT_STOCK_ALIAS
		{
			get
			{
				return this.GetTable<INT_STOCK_ALIAS>();
			}
		}
		
		public System.Data.Linq.Table<INT_STOCK_BM> INT_STOCK_BM
		{
			get
			{
				return this.GetTable<INT_STOCK_BM>();
			}
		}
		
		public System.Data.Linq.Table<INT_STOCK_COMPATIBILITY> INT_STOCK_COMPATIBILITY
		{
			get
			{
				return this.GetTable<INT_STOCK_COMPATIBILITY>();
			}
		}
		
		public System.Data.Linq.Table<INT_STOCK_LOC_SPECIFIC> INT_STOCK_LOC_SPECIFIC
		{
			get
			{
				return this.GetTable<INT_STOCK_LOC_SPECIFIC>();
			}
		}
		
		public System.Data.Linq.Table<INT_STOCK_OUTAGE> INT_STOCK_OUTAGE
		{
			get
			{
				return this.GetTable<INT_STOCK_OUTAGE>();
			}
		}
		
		public System.Data.Linq.Table<INT_STOCK_TRANSFER_BATCH> INT_STOCK_TRANSFER_BATCH
		{
			get
			{
				return this.GetTable<INT_STOCK_TRANSFER_BATCH>();
			}
		}
		
		public System.Data.Linq.Table<INT_STOCK_TRANSFER_STATUS> INT_STOCK_TRANSFER_STATUS
		{
			get
			{
				return this.GetTable<INT_STOCK_TRANSFER_STATUS>();
			}
		}
		
		public System.Data.Linq.Table<INT_STOCK_USAGE> INT_STOCK_USAGE
		{
			get
			{
				return this.GetTable<INT_STOCK_USAGE>();
			}
		}
		
		public System.Data.Linq.Table<INT_STOCKTRANSIT> INT_STOCKTRANSIT
		{
			get
			{
				return this.GetTable<INT_STOCKTRANSIT>();
			}
		}
		
		public System.Data.Linq.Table<INT_TM_INVOICE_COMMISSION_RUNS> INT_TM_INVOICE_COMMISSION_RUNS
		{
			get
			{
				return this.GetTable<INT_TM_INVOICE_COMMISSION_RUNS>();
			}
		}
		
		public System.Data.Linq.Table<INT_TM_INVOICE_COMMISSIONS> INT_TM_INVOICE_COMMISSIONS
		{
			get
			{
				return this.GetTable<INT_TM_INVOICE_COMMISSIONS>();
			}
		}
		
		public System.Data.Linq.Table<INT_TM_INVOICE_EXPENSEITEMS> INT_TM_INVOICE_EXPENSEITEMS
		{
			get
			{
				return this.GetTable<INT_TM_INVOICE_EXPENSEITEMS>();
			}
		}
		
		public System.Data.Linq.Table<INT_TM_INVOICEITEMS> INT_TM_INVOICEITEMS
		{
			get
			{
				return this.GetTable<INT_TM_INVOICEITEMS>();
			}
		}
		
		public System.Data.Linq.Table<Internal_DRContractUpdate> Internal_DRContractUpdate
		{
			get
			{
				return this.GetTable<Internal_DRContractUpdate>();
			}
		}
		
		public System.Data.Linq.Table<INTERNAL_MonthName_Mapping> INTERNAL_MonthName_Mapping
		{
			get
			{
				return this.GetTable<INTERNAL_MonthName_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<Internal_NewCodesRevCat> Internal_NewCodesRevCat
		{
			get
			{
				return this.GetTable<Internal_NewCodesRevCat>();
			}
		}
		
		public System.Data.Linq.Table<Internal_NewDRDevices> Internal_NewDRDevices
		{
			get
			{
				return this.GetTable<Internal_NewDRDevices>();
			}
		}
		
		public System.Data.Linq.Table<INTERNAL_UserNameTranslation> INTERNAL_UserNameTranslation
		{
			get
			{
				return this.GetTable<INTERNAL_UserNameTranslation>();
			}
		}
		
		public System.Data.Linq.Table<INVOICE_DATES> INVOICE_DATES
		{
			get
			{
				return this.GetTable<INVOICE_DATES>();
			}
		}
		
		public System.Data.Linq.Table<IP_CE> IP_CE
		{
			get
			{
				return this.GetTable<IP_CE>();
			}
		}
		
		public System.Data.Linq.Table<IP_OLD_INVS> IP_OLD_INVS
		{
			get
			{
				return this.GetTable<IP_OLD_INVS>();
			}
		}
		
		public System.Data.Linq.Table<IPNSW_OLD_INVS> IPNSW_OLD_INVS
		{
			get
			{
				return this.GetTable<IPNSW_OLD_INVS>();
			}
		}
		
		public System.Data.Linq.Table<LABELHEADINGS> LABELHEADINGS
		{
			get
			{
				return this.GetTable<LABELHEADINGS>();
			}
		}
		
		public System.Data.Linq.Table<LOCATIONS> LOCATIONS
		{
			get
			{
				return this.GetTable<LOCATIONS>();
			}
		}
		
		public System.Data.Linq.Table<LOCATIONS_GROUP> LOCATIONS_GROUP
		{
			get
			{
				return this.GetTable<LOCATIONS_GROUP>();
			}
		}
		
		public System.Data.Linq.Table<LOCATIONS_SHELF> LOCATIONS_SHELF
		{
			get
			{
				return this.GetTable<LOCATIONS_SHELF>();
			}
		}
		
		public System.Data.Linq.Table<LOCATIONS_TYPE> LOCATIONS_TYPE
		{
			get
			{
				return this.GetTable<LOCATIONS_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<LOCKOUT> LOCKOUT
		{
			get
			{
				return this.GetTable<LOCKOUT>();
			}
		}
		
		public System.Data.Linq.Table<Mastip> Mastip
		{
			get
			{
				return this.GetTable<Mastip>();
			}
		}
		
		public System.Data.Linq.Table<Mnbrcust> Mnbrcust
		{
			get
			{
				return this.GetTable<Mnbrcust>();
			}
		}
		
		public System.Data.Linq.Table<MNBRINVL> MNBRINVL
		{
			get
			{
				return this.GetTable<MNBRINVL>();
			}
		}
		
		public System.Data.Linq.Table<NewIMP> NewIMP
		{
			get
			{
				return this.GetTable<NewIMP>();
			}
		}
		
		public System.Data.Linq.Table<ORDER_TYPES> ORDER_TYPES
		{
			get
			{
				return this.GetTable<ORDER_TYPES>();
			}
		}
		
		public System.Data.Linq.Table<ORPHANED_AUDITS> ORPHANED_AUDITS
		{
			get
			{
				return this.GetTable<ORPHANED_AUDITS>();
			}
		}
		
		public System.Data.Linq.Table<PARTS_MERGE> PARTS_MERGE
		{
			get
			{
				return this.GetTable<PARTS_MERGE>();
			}
		}
		
		public System.Data.Linq.Table<PARTS_MERGE_ITEMS> PARTS_MERGE_ITEMS
		{
			get
			{
				return this.GetTable<PARTS_MERGE_ITEMS>();
			}
		}
		
		public System.Data.Linq.Table<PARTS_MERGE_LOG> PARTS_MERGE_LOG
		{
			get
			{
				return this.GetTable<PARTS_MERGE_LOG>();
			}
		}
		
		public System.Data.Linq.Table<PRICELISTS> PRICELISTS
		{
			get
			{
				return this.GetTable<PRICELISTS>();
			}
		}
		
		public System.Data.Linq.Table<PRINTER_SETUP> PRINTER_SETUP
		{
			get
			{
				return this.GetTable<PRINTER_SETUP>();
			}
		}
		
		public System.Data.Linq.Table<PRINTERS> PRINTERS
		{
			get
			{
				return this.GetTable<PRINTERS>();
			}
		}
		
		public System.Data.Linq.Table<PROBLEM_TABLE> PROBLEM_TABLE
		{
			get
			{
				return this.GetTable<PROBLEM_TABLE>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT> PROJECT
		{
			get
			{
				return this.GetTable<PROJECT>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_BUDGET_TOLERANCES> PROJECT_BUDGET_TOLERANCES
		{
			get
			{
				return this.GetTable<PROJECT_BUDGET_TOLERANCES>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_CHANGE_REQUEST> PROJECT_CHANGE_REQUEST
		{
			get
			{
				return this.GetTable<PROJECT_CHANGE_REQUEST>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_CHANGE_REQUEST_EDITING_RULES> PROJECT_CHANGE_REQUEST_EDITING_RULES
		{
			get
			{
				return this.GetTable<PROJECT_CHANGE_REQUEST_EDITING_RULES>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_CHANGE_REQUEST_FIELDS> PROJECT_CHANGE_REQUEST_FIELDS
		{
			get
			{
				return this.GetTable<PROJECT_CHANGE_REQUEST_FIELDS>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_EDITING_RULES> PROJECT_EDITING_RULES
		{
			get
			{
				return this.GetTable<PROJECT_EDITING_RULES>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_ENGINEER_TIMESHEET> PROJECT_ENGINEER_TIMESHEET
		{
			get
			{
				return this.GetTable<PROJECT_ENGINEER_TIMESHEET>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_ENGINEER_TIMESHEET_ENTRIES> PROJECT_ENGINEER_TIMESHEET_ENTRIES
		{
			get
			{
				return this.GetTable<PROJECT_ENGINEER_TIMESHEET_ENTRIES>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES> PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES
		{
			get
			{
				return this.GetTable<PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_FIELDS> PROJECT_FIELDS
		{
			get
			{
				return this.GetTable<PROJECT_FIELDS>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_STATUS> PROJECT_STATUS
		{
			get
			{
				return this.GetTable<PROJECT_STATUS>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_TASKS> PROJECT_TASKS
		{
			get
			{
				return this.GetTable<PROJECT_TASKS>();
			}
		}
		
		public System.Data.Linq.Table<PURCHASES_JNL> PURCHASES_JNL
		{
			get
			{
				return this.GetTable<PURCHASES_JNL>();
			}
		}
		
		public System.Data.Linq.Table<PURCHASES_JNL_DISSECTIONS> PURCHASES_JNL_DISSECTIONS
		{
			get
			{
				return this.GetTable<PURCHASES_JNL_DISSECTIONS>();
			}
		}
		
		public System.Data.Linq.Table<PURCHASES_JNL_DISSECTIONS_BKP> PURCHASES_JNL_DISSECTIONS_BKP
		{
			get
			{
				return this.GetTable<PURCHASES_JNL_DISSECTIONS_BKP>();
			}
		}
		
		public System.Data.Linq.Table<RENUM> RENUM
		{
			get
			{
				return this.GetTable<RENUM>();
			}
		}
		
		public System.Data.Linq.Table<REP_ADJUST> REP_ADJUST
		{
			get
			{
				return this.GetTable<REP_ADJUST>();
			}
		}
		
		public System.Data.Linq.Table<REP_ADJUST_JNL> REP_ADJUST_JNL
		{
			get
			{
				return this.GetTable<REP_ADJUST_JNL>();
			}
		}
		
		public System.Data.Linq.Table<REPORTS> REPORTS
		{
			get
			{
				return this.GetTable<REPORTS>();
			}
		}
		
		public System.Data.Linq.Table<REPS_DIARY> REPS_DIARY
		{
			get
			{
				return this.GetTable<REPS_DIARY>();
			}
		}
		
		public System.Data.Linq.Table<REVCAT_TO_GL> REVCAT_TO_GL
		{
			get
			{
				return this.GetTable<REVCAT_TO_GL>();
			}
		}
		
		public System.Data.Linq.Table<REVENUE_CATEGORIES> REVENUE_CATEGORIES
		{
			get
			{
				return this.GetTable<REVENUE_CATEGORIES>();
			}
		}
		
		public System.Data.Linq.Table<REVENUE_CATEGORIES_GROUPS> REVENUE_CATEGORIES_GROUPS
		{
			get
			{
				return this.GetTable<REVENUE_CATEGORIES_GROUPS>();
			}
		}
		
		public System.Data.Linq.Table<SALEITEM> SALEITEM
		{
			get
			{
				return this.GetTable<SALEITEM>();
			}
		}
		
		public System.Data.Linq.Table<SALEITEM_DRAFT> SALEITEM_DRAFT
		{
			get
			{
				return this.GetTable<SALEITEM_DRAFT>();
			}
		}
		
		public System.Data.Linq.Table<SALES_ANALYSIS> SALES_ANALYSIS
		{
			get
			{
				return this.GetTable<SALES_ANALYSIS>();
			}
		}
		
		public System.Data.Linq.Table<SALES_COMMISSION_DUE_ITEM> SALES_COMMISSION_DUE_ITEM
		{
			get
			{
				return this.GetTable<SALES_COMMISSION_DUE_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<SALES_COMMISSION_PRERUN> SALES_COMMISSION_PRERUN
		{
			get
			{
				return this.GetTable<SALES_COMMISSION_PRERUN>();
			}
		}
		
		public System.Data.Linq.Table<SALES_COMMISSION_PRERUN_ITEM> SALES_COMMISSION_PRERUN_ITEM
		{
			get
			{
				return this.GetTable<SALES_COMMISSION_PRERUN_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<SALES_COMMISSION_PRERUN_ITEM_CANCELLED> SALES_COMMISSION_PRERUN_ITEM_CANCELLED
		{
			get
			{
				return this.GetTable<SALES_COMMISSION_PRERUN_ITEM_CANCELLED>();
			}
		}
		
		public System.Data.Linq.Table<SALES_COMMISSION_RUN> SALES_COMMISSION_RUN
		{
			get
			{
				return this.GetTable<SALES_COMMISSION_RUN>();
			}
		}
		
		public System.Data.Linq.Table<SALES_COMMISSION_RUN_ITEM> SALES_COMMISSION_RUN_ITEM
		{
			get
			{
				return this.GetTable<SALES_COMMISSION_RUN_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<SALES_DISC> SALES_DISC
		{
			get
			{
				return this.GetTable<SALES_DISC>();
			}
		}
		
		public System.Data.Linq.Table<SALES_TEAMS> SALES_TEAMS
		{
			get
			{
				return this.GetTable<SALES_TEAMS>();
			}
		}
		
		public System.Data.Linq.Table<SALES_TEAMS_GROWTH_TARGETS> SALES_TEAMS_GROWTH_TARGETS
		{
			get
			{
				return this.GetTable<SALES_TEAMS_GROWTH_TARGETS>();
			}
		}
		
		public System.Data.Linq.Table<SALESORD> SALESORD
		{
			get
			{
				return this.GetTable<SALESORD>();
			}
		}
		
		public System.Data.Linq.Table<SALESORD_DRAFT> SALESORD_DRAFT
		{
			get
			{
				return this.GetTable<SALESORD_DRAFT>();
			}
		}
		
		public System.Data.Linq.Table<SALESORD_ERROR_LOG> SALESORD_ERROR_LOG
		{
			get
			{
				return this.GetTable<SALESORD_ERROR_LOG>();
			}
		}
		
		public System.Data.Linq.Table<SALESORD_EXTERNAL_LOG> SALESORD_EXTERNAL_LOG
		{
			get
			{
				return this.GetTable<SALESORD_EXTERNAL_LOG>();
			}
		}
		
		public System.Data.Linq.Table<SALESORD_INTERNAL_LOG> SALESORD_INTERNAL_LOG
		{
			get
			{
				return this.GetTable<SALESORD_INTERNAL_LOG>();
			}
		}
		
		public System.Data.Linq.Table<SECURITY_APPROVALS> SECURITY_APPROVALS
		{
			get
			{
				return this.GetTable<SECURITY_APPROVALS>();
			}
		}
		
		public System.Data.Linq.Table<SECURITY_USERS> SECURITY_USERS
		{
			get
			{
				return this.GetTable<SECURITY_USERS>();
			}
		}
		
		public System.Data.Linq.Table<SERIALNUMBERS> SERIALNUMBERS
		{
			get
			{
				return this.GetTable<SERIALNUMBERS>();
			}
		}
		
		public System.Data.Linq.Table<SETUP> SETUP
		{
			get
			{
				return this.GetTable<SETUP>();
			}
		}
		
		public System.Data.Linq.Table<SID_Co> SID_Co
		{
			get
			{
				return this.GetTable<SID_Co>();
			}
		}
		
		public System.Data.Linq.Table<SID_G> SID_G
		{
			get
			{
				return this.GetTable<SID_G>();
			}
		}
		
		public System.Data.Linq.Table<SRVCTYPE> SRVCTYPE
		{
			get
			{
				return this.GetTable<SRVCTYPE>();
			}
		}
		
		public System.Data.Linq.Table<STKORD> STKORD
		{
			get
			{
				return this.GetTable<STKORD>();
			}
		}
		
		public System.Data.Linq.Table<STKORDITEM> STKORDITEM
		{
			get
			{
				return this.GetTable<STKORDITEM>();
			}
		}
		
		public System.Data.Linq.Table<STOCK> STOCK
		{
			get
			{
				return this.GetTable<STOCK>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_AUDIT> STOCK_AUDIT
		{
			get
			{
				return this.GetTable<STOCK_AUDIT>();
			}
		}
		
		public System.Data.Linq.Table<Stock_backup> Stock_backup
		{
			get
			{
				return this.GetTable<Stock_backup>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_BRANDS> STOCK_BRANDS
		{
			get
			{
				return this.GetTable<STOCK_BRANDS>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_CONTROL> STOCK_CONTROL
		{
			get
			{
				return this.GetTable<STOCK_CONTROL>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_CONTROL_ITEMS> STOCK_CONTROL_ITEMS
		{
			get
			{
				return this.GetTable<STOCK_CONTROL_ITEMS>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_DELETE_> STOCK_DELETE_
		{
			get
			{
				return this.GetTable<STOCK_DELETE_>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_GROUPS> STOCK_GROUPS
		{
			get
			{
				return this.GetTable<STOCK_GROUPS>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_INSERT_> STOCK_INSERT_
		{
			get
			{
				return this.GetTable<STOCK_INSERT_>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_MASTERGROUPS> STOCK_MASTERGROUPS
		{
			get
			{
				return this.GetTable<STOCK_MASTERGROUPS>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_MERGE_> STOCK_MERGE_
		{
			get
			{
				return this.GetTable<STOCK_MERGE_>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_PRICING_TEMP> STOCK_PRICING_TEMP
		{
			get
			{
				return this.GetTable<STOCK_PRICING_TEMP>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_RECEIVED> STOCK_RECEIVED
		{
			get
			{
				return this.GetTable<STOCK_RECEIVED>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_RECEIVED_TMP> STOCK_RECEIVED_TMP
		{
			get
			{
				return this.GetTable<STOCK_RECEIVED_TMP>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_RECEIVED_TMP_BRK> STOCK_RECEIVED_TMP_BRK
		{
			get
			{
				return this.GetTable<STOCK_RECEIVED_TMP_BRK>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_SHELF_LABEL_REPORTS> STOCK_SHELF_LABEL_REPORTS
		{
			get
			{
				return this.GetTable<STOCK_SHELF_LABEL_REPORTS>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_SHELF_LOCATIONS> STOCK_SHELF_LOCATIONS
		{
			get
			{
				return this.GetTable<STOCK_SHELF_LOCATIONS>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_SHELF_LOCATIONS_POVALUES> STOCK_SHELF_LOCATIONS_POVALUES
		{
			get
			{
				return this.GetTable<STOCK_SHELF_LOCATIONS_POVALUES>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_SNAPSHOT> STOCK_SNAPSHOT
		{
			get
			{
				return this.GetTable<STOCK_SNAPSHOT>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_TEMP> STOCK_TEMP
		{
			get
			{
				return this.GetTable<STOCK_TEMP>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_TRANSFER> STOCK_TRANSFER
		{
			get
			{
				return this.GetTable<STOCK_TRANSFER>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_TRENDS> STOCK_TRENDS
		{
			get
			{
				return this.GetTable<STOCK_TRENDS>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_UPDATE_> STOCK_UPDATE_
		{
			get
			{
				return this.GetTable<STOCK_UPDATE_>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_UPDATE_HISTORY> STOCK_UPDATE_HISTORY
		{
			get
			{
				return this.GetTable<STOCK_UPDATE_HISTORY>();
			}
		}
		
		public System.Data.Linq.Table<STOCK_USAGE> STOCK_USAGE
		{
			get
			{
				return this.GetTable<STOCK_USAGE>();
			}
		}
		
		public System.Data.Linq.Table<StockConv> StockConv
		{
			get
			{
				return this.GetTable<StockConv>();
			}
		}
		
		public System.Data.Linq.Table<TblOPTIONSFOCUS> TblOPTIONSFOCUS
		{
			get
			{
				return this.GetTable<TblOPTIONSFOCUS>();
			}
		}
		
		public System.Data.Linq.Table<TblOPTIONSFOCUSITEMS> TblOPTIONSFOCUSITEMS
		{
			get
			{
				return this.GetTable<TblOPTIONSFOCUSITEMS>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_ACCOUNTS> TEMP_ACCOUNTS
		{
			get
			{
				return this.GetTable<TEMP_ACCOUNTS>();
			}
		}
		
		public System.Data.Linq.Table<Temp_bsg_added> Temp_bsg_added
		{
			get
			{
				return this.GetTable<Temp_bsg_added>();
			}
		}
		
		public System.Data.Linq.Table<Temp_bsg_del> Temp_bsg_del
		{
			get
			{
				return this.GetTable<Temp_bsg_del>();
			}
		}
		
		public System.Data.Linq.Table<Temp_Changes> Temp_Changes
		{
			get
			{
				return this.GetTable<Temp_Changes>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_CURRENT_ACTIVE_CLIENTS> TEMP_CURRENT_ACTIVE_CLIENTS
		{
			get
			{
				return this.GetTable<TEMP_CURRENT_ACTIVE_CLIENTS>();
			}
		}
		
		public System.Data.Linq.Table<Temp_DRUpdate> Temp_DRUpdate
		{
			get
			{
				return this.GetTable<Temp_DRUpdate>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_INT> TEMP_INT
		{
			get
			{
				return this.GetTable<TEMP_INT>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_PROJECT_INCOMPLETE> TEMP_PROJECT_INCOMPLETE
		{
			get
			{
				return this.GetTable<TEMP_PROJECT_INCOMPLETE>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_SNAPSHOT> TEMP_SNAPSHOT
		{
			get
			{
				return this.GetTable<TEMP_SNAPSHOT>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_THIRD_PARTY_PROFITS> TEMP_THIRD_PARTY_PROFITS
		{
			get
			{
				return this.GetTable<TEMP_THIRD_PARTY_PROFITS>();
			}
		}
		
		public System.Data.Linq.Table<TEMPBAL> TEMPBAL
		{
			get
			{
				return this.GetTable<TEMPBAL>();
			}
		}
		
		public System.Data.Linq.Table<TempCallCount> TempCallCount
		{
			get
			{
				return this.GetTable<TempCallCount>();
			}
		}
		
		public System.Data.Linq.Table<TempCallCount4> TempCallCount4
		{
			get
			{
				return this.GetTable<TempCallCount4>();
			}
		}
		
		public System.Data.Linq.Table<TMP_101941> TMP_101941
		{
			get
			{
				return this.GetTable<TMP_101941>();
			}
		}
		
		public System.Data.Linq.Table<TMP_94867> TMP_94867
		{
			get
			{
				return this.GetTable<TMP_94867>();
			}
		}
		
		public System.Data.Linq.Table<TMP_94868> TMP_94868
		{
			get
			{
				return this.GetTable<TMP_94868>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_Accounts> Tmp_Accounts
		{
			get
			{
				return this.GetTable<Tmp_Accounts>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_ACTIP> Tmp_ACTIP
		{
			get
			{
				return this.GetTable<Tmp_ACTIP>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_BrisIM> Tmp_BrisIM
		{
			get
			{
				return this.GetTable<Tmp_BrisIM>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_BrisIP> Tmp_BrisIP
		{
			get
			{
				return this.GetTable<Tmp_BrisIP>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_BRSSnapShot> Tmp_BRSSnapShot
		{
			get
			{
				return this.GetTable<Tmp_BRSSnapShot>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_BSGCustomers> Tmp_BSGCustomers
		{
			get
			{
				return this.GetTable<Tmp_BSGCustomers>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_ContinuousCustomers> Tmp_ContinuousCustomers
		{
			get
			{
				return this.GetTable<Tmp_ContinuousCustomers>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_ContractItemLatestChangeType> Tmp_ContractItemLatestChangeType
		{
			get
			{
				return this.GetTable<Tmp_ContractItemLatestChangeType>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_contractlength> Tmp_contractlength
		{
			get
			{
				return this.GetTable<Tmp_contractlength>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_current_contracts> Tmp_current_contracts
		{
			get
			{
				return this.GetTable<Tmp_current_contracts>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_CustomerEngineer> Tmp_CustomerEngineer
		{
			get
			{
				return this.GetTable<Tmp_CustomerEngineer>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_dailyauditrevcat> Tmp_dailyauditrevcat
		{
			get
			{
				return this.GetTable<Tmp_dailyauditrevcat>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_DeviceEngineer> Tmp_DeviceEngineer
		{
			get
			{
				return this.GetTable<Tmp_DeviceEngineer>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_DRMissingDeviceCodes> Tmp_DRMissingDeviceCodes
		{
			get
			{
				return this.GetTable<Tmp_DRMissingDeviceCodes>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_duplicates> Tmp_duplicates
		{
			get
			{
				return this.GetTable<Tmp_duplicates>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_FinancialCodes> Tmp_FinancialCodes
		{
			get
			{
				return this.GetTable<Tmp_FinancialCodes>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_FutureDevices> Tmp_FutureDevices
		{
			get
			{
				return this.GetTable<Tmp_FutureDevices>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_GetPOData> Tmp_GetPOData
		{
			get
			{
				return this.GetTable<Tmp_GetPOData>();
			}
		}
		
		public System.Data.Linq.Table<TMP_HEAT90060> TMP_HEAT90060
		{
			get
			{
				return this.GetTable<TMP_HEAT90060>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_HEAT92662> Tmp_HEAT92662
		{
			get
			{
				return this.GetTable<Tmp_HEAT92662>();
			}
		}
		
		public System.Data.Linq.Table<TMP_Intercompany> TMP_Intercompany
		{
			get
			{
				return this.GetTable<TMP_Intercompany>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_invno> Tmp_invno
		{
			get
			{
				return this.GetTable<Tmp_invno>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_LiveAccountsNotBilledinDec_> Tmp_LiveAccountsNotBilledinDec_
		{
			get
			{
				return this.GetTable<Tmp_LiveAccountsNotBilledinDec_>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_LocationEngineer> Tmp_LocationEngineer
		{
			get
			{
				return this.GetTable<Tmp_LocationEngineer>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_Location_Engineer> Tmp_Location_Engineer
		{
			get
			{
				return this.GetTable<Tmp_Location_Engineer>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_new_tel_nos> Tmp_new_tel_nos
		{
			get
			{
				return this.GetTable<Tmp_new_tel_nos>();
			}
		}
		
		public System.Data.Linq.Table<TMP_NewCustomerList> TMP_NewCustomerList
		{
			get
			{
				return this.GetTable<TMP_NewCustomerList>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_NewDRDeviceCodes> Tmp_NewDRDeviceCodes
		{
			get
			{
				return this.GetTable<Tmp_NewDRDeviceCodes>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_NewStock> Tmp_NewStock
		{
			get
			{
				return this.GetTable<Tmp_NewStock>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_NSW> Tmp_NSW
		{
			get
			{
				return this.GetTable<Tmp_NSW>();
			}
		}
		
		public System.Data.Linq.Table<TMP_PENDING_DEVICES_PAID> TMP_PENDING_DEVICES_PAID
		{
			get
			{
				return this.GetTable<TMP_PENDING_DEVICES_PAID>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_prod_revcat> Tmp_prod_revcat
		{
			get
			{
				return this.GetTable<Tmp_prod_revcat>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_projectbudget> Tmp_projectbudget
		{
			get
			{
				return this.GetTable<Tmp_projectbudget>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_RequiredCreditors_> Tmp_RequiredCreditors_
		{
			get
			{
				return this.GetTable<Tmp_RequiredCreditors_>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_REVCAT_TO_GL> Tmp_REVCAT_TO_GL
		{
			get
			{
				return this.GetTable<Tmp_REVCAT_TO_GL>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_SAIM> Tmp_SAIM
		{
			get
			{
				return this.GetTable<Tmp_SAIM>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_SAIP> Tmp_SAIP
		{
			get
			{
				return this.GetTable<Tmp_SAIP>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_samecontracts> Tmp_samecontracts
		{
			get
			{
				return this.GetTable<Tmp_samecontracts>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_serialnoupdate> Tmp_serialnoupdate
		{
			get
			{
				return this.GetTable<Tmp_serialnoupdate>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_ServerDesc> Tmp_ServerDesc
		{
			get
			{
				return this.GetTable<Tmp_ServerDesc>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_SiteEngineer> Tmp_SiteEngineer
		{
			get
			{
				return this.GetTable<Tmp_SiteEngineer>();
			}
		}
		
		public System.Data.Linq.Table<TMP_SNAPSHOT_REC> TMP_SNAPSHOT_REC
		{
			get
			{
				return this.GetTable<TMP_SNAPSHOT_REC>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_SnapshotItemLatestChangeType> Tmp_SnapshotItemLatestChangeType
		{
			get
			{
				return this.GetTable<Tmp_SnapshotItemLatestChangeType>();
			}
		}
		
		public System.Data.Linq.Table<TMP_STAT_REV_CREDITS> TMP_STAT_REV_CREDITS
		{
			get
			{
				return this.GetTable<TMP_STAT_REV_CREDITS>();
			}
		}
		
		public System.Data.Linq.Table<TMP_STAT_REV_INVOICES> TMP_STAT_REV_INVOICES
		{
			get
			{
				return this.GetTable<TMP_STAT_REV_INVOICES>();
			}
		}
		
		public System.Data.Linq.Table<TMP_STOCK_MERGE> TMP_STOCK_MERGE
		{
			get
			{
				return this.GetTable<TMP_STOCK_MERGE>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_StockApprovals> Tmp_StockApprovals
		{
			get
			{
				return this.GetTable<Tmp_StockApprovals>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_StockCardUpdate> Tmp_StockCardUpdate
		{
			get
			{
				return this.GetTable<Tmp_StockCardUpdate>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_StockCardUpdate_2> Tmp_StockCardUpdate_2
		{
			get
			{
				return this.GetTable<Tmp_StockCardUpdate_2>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_SydIM> Tmp_SydIM
		{
			get
			{
				return this.GetTable<Tmp_SydIM>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_table> Tmp_table
		{
			get
			{
				return this.GetTable<Tmp_table>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_UpdateEMCRevCat> Tmp_UpdateEMCRevCat
		{
			get
			{
				return this.GetTable<Tmp_UpdateEMCRevCat>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_UpdateEngineers> Tmp_UpdateEngineers
		{
			get
			{
				return this.GetTable<Tmp_UpdateEngineers>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_VIC> Tmp_VIC
		{
			get
			{
				return this.GetTable<Tmp_VIC>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_VicIM> Tmp_VicIM
		{
			get
			{
				return this.GetTable<Tmp_VicIM>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_VicIP> Tmp_VicIP
		{
			get
			{
				return this.GetTable<Tmp_VicIP>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_WAIM> Tmp_WAIM
		{
			get
			{
				return this.GetTable<Tmp_WAIM>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_WAIP> Tmp_WAIP
		{
			get
			{
				return this.GetTable<Tmp_WAIP>();
			}
		}
		
		public System.Data.Linq.Table<Tmp2002Customers> Tmp2002Customers
		{
			get
			{
				return this.GetTable<Tmp2002Customers>();
			}
		}
		
		public System.Data.Linq.Table<Tmp2003Customers> Tmp2003Customers
		{
			get
			{
				return this.GetTable<Tmp2003Customers>();
			}
		}
		
		public System.Data.Linq.Table<TmpLastFourWeeks> TmpLastFourWeeks
		{
			get
			{
				return this.GetTable<TmpLastFourWeeks>();
			}
		}
		
		public System.Data.Linq.Table<TmpSTOCK_RevCat_Orig_DD> TmpSTOCK_RevCat_Orig_DD
		{
			get
			{
				return this.GetTable<TmpSTOCK_RevCat_Orig_DD>();
			}
		}
		
		public System.Data.Linq.Table<TmpSTOCK_RevCat_Updated_DD> TmpSTOCK_RevCat_Updated_DD
		{
			get
			{
				return this.GetTable<TmpSTOCK_RevCat_Updated_DD>();
			}
		}
		
		public System.Data.Linq.Table<Trans> Trans
		{
			get
			{
				return this.GetTable<Trans>();
			}
		}
		
		public System.Data.Linq.Table<WHAT> WHAT
		{
			get
			{
				return this.GetTable<WHAT>();
			}
		}
		
		[Function(Name="dbo.aaPurchJNL")]
		[return: Parameter(DbType="Int")]
		public int AaPurchJNL()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AddDebtorsAudit")]
		[return: Parameter(DbType="Int")]
		public int AddDebtorsAudit([Parameter(Name="TransType", DbType="TinyInt")] System.Nullable<byte> transType, [Parameter(Name="TransID", DbType="Int")] System.Nullable<int> transID, [Parameter(Name="Amount", DbType="Money")] System.Nullable<decimal> amount, [Parameter(Name="Discount", DbType="Money")] System.Nullable<decimal> discount, [Parameter(Name="Period", DbType="TinyInt")] System.Nullable<byte> period, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), transType, transID, amount, discount, period, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AddNewBankdep")]
		[return: Parameter(DbType="Int")]
		public int AddNewBankdep([Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="AccountNum", DbType="VarChar(15)")] string accountNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, accountNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AddNewJournal")]
		[return: Parameter(DbType="Int")]
		public int AddNewJournal([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AddNewPurchOrd")]
		[return: Parameter(DbType="Int")]
		public int AddNewPurchOrd()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AddStockItem")]
		[return: Parameter(DbType="Int")]
		public int AddStockItem([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AdjustDebtorBalances")]
		[return: Parameter(DbType="Int")]
		public int AdjustDebtorBalances([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="InvTotal", DbType="Money")] System.Nullable<decimal> invTotal, [Parameter(Name="Period", DbType="TinyInt")] System.Nullable<byte> period)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, ordNum, invTotal, period);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AP_PayFlag")]
		[return: Parameter(DbType="Int")]
		public int AP_PayFlag([Parameter(Name="AccountID", DbType="VarChar(12)")] string accountID, [Parameter(Name="ChequeNum", DbType="Int")] System.Nullable<int> chequeNum, [Parameter(Name="Audit", DbType="Int")] System.Nullable<int> audit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, chequeNum, audit);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AppendJournalDetails")]
		[return: Parameter(DbType="Int")]
		public int AppendJournalDetails([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="JournalCode", DbType="VarChar(16)")] string journalCode, [Parameter(Name="NewDate", DbType="DateTime")] System.Nullable<System.DateTime> newDate, [Parameter(Name="Month", DbType="Int")] System.Nullable<int> month, [Parameter(Name="Year", DbType="Int")] System.Nullable<int> year, [Parameter(Name="CopyFrom", DbType="VarChar(30)")] string copyFrom)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, journalCode, newDate, month, year, copyFrom);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ApplyDebtorPayment")]
		[return: Parameter(DbType="Int")]
		public int ApplyDebtorPayment([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Amount", DbType="Money")] System.Nullable<decimal> amount, [Parameter(Name="Period", DbType="TinyInt")] System.Nullable<byte> period)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, amount, period);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AuditDebtorBal")]
		[ResultType(typeof(AuditDebtorBalResult1))]
		[ResultType(typeof(AuditDebtorBalResult2))]
		[ResultType(typeof(AuditDebtorBalResult3))]
		public IMultipleResults AuditDebtorBal([Parameter(Name="FromAudit", DbType="Int")] System.Nullable<int> fromAudit, [Parameter(Name="ToAudit", DbType="Int")] System.Nullable<int> toAudit, [Parameter(Name="Company", DbType="TinyInt")] System.Nullable<byte> company)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromAudit, toAudit, company);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AuditDebtorBF")]
		public ISingleResult<AuditDebtorBFResult> AuditDebtorBF([Parameter(Name="Company", DbType="TinyInt")] System.Nullable<byte> company, [Parameter(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), company, date);
			return ((ISingleResult<AuditDebtorBFResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AuditDebtorInvoice")]
		[return: Parameter(DbType="Int")]
		public int AuditDebtorInvoice([Parameter(Name="InvNum", DbType="Int")] System.Nullable<int> invNum, [Parameter(Name="InvTotal", DbType="Money")] System.Nullable<decimal> invTotal, [Parameter(Name="Period", DbType="TinyInt")] System.Nullable<byte> period, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), invNum, invTotal, period, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AuditDebtorJnl")]
		[return: Parameter(DbType="Int")]
		public int AuditDebtorJnl([Parameter(Name="JnlNum", DbType="Int")] System.Nullable<int> jnlNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jnlNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AuditDebtorReceipt")]
		[return: Parameter(DbType="Int")]
		public int AuditDebtorReceipt([Parameter(Name="RecNum", DbType="Int")] System.Nullable<int> recNum, [Parameter(Name="Amount", DbType="Money")] System.Nullable<decimal> amount, [Parameter(Name="Discount", DbType="Money")] System.Nullable<decimal> discount, [Parameter(Name="Period", DbType="TinyInt")] System.Nullable<byte> period, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), recNum, amount, discount, period, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AuditFirstFiscal")]
		public ISingleResult<AuditFirstFiscalResult> AuditFirstFiscal([Parameter(Name="Month", DbType="Int")] System.Nullable<int> month, [Parameter(Name="Year", DbType="Int")] System.Nullable<int> year, [Parameter(Name="Company", DbType="TinyInt")] System.Nullable<byte> company)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, year, company);
			return ((ISingleResult<AuditFirstFiscalResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AuditFirstFiscal JUL TO JUN")]
		public ISingleResult<AuditFirstFiscalJULTOJUNResult> AuditFirstFiscalJULTOJUN([Parameter(Name="Month", DbType="Int")] System.Nullable<int> month, [Parameter(Name="Year", DbType="Int")] System.Nullable<int> year, [Parameter(Name="Company", DbType="TinyInt")] System.Nullable<byte> company)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, year, company);
			return ((ISingleResult<AuditFirstFiscalJULTOJUNResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AuditFirstRec")]
		public ISingleResult<AuditFirstRecResult> AuditFirstRec([Parameter(Name="Hdg", DbType="VarChar(16)")] string hdg, [Parameter(Name="Company", DbType="TinyInt")] System.Nullable<byte> company)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), hdg, company);
			return ((ISingleResult<AuditFirstRecResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AuditInvTotals")]
		[ResultType(typeof(AuditInvTotalsResult1))]
		[ResultType(typeof(AuditInvTotalsResult2))]
		public IMultipleResults AuditInvTotals([Parameter(Name="FromAudit", DbType="Int")] System.Nullable<int> fromAudit, [Parameter(Name="ToAudit", DbType="Int")] System.Nullable<int> toAudit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromAudit, toAudit);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AuditInvTotalsExport")]
		[ResultType(typeof(AuditInvTotalsExportResult1))]
		[ResultType(typeof(AuditInvTotalsExportResult2))]
		public IMultipleResults AuditInvTotalsExport([Parameter(Name="FromAudit", DbType="Int")] System.Nullable<int> fromAudit, [Parameter(Name="ToAudit", DbType="Int")] System.Nullable<int> toAudit, [Parameter(Name="CurrType", DbType="VarChar(5)")] string currType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromAudit, toAudit, currType);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AuditLastDebtor")]
		public ISingleResult<AuditLastDebtorResult> AuditLastDebtor()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<AuditLastDebtorResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AuditLastRec")]
		public ISingleResult<AuditLastRecResult> AuditLastRec([Parameter(Name="Hdg", DbType="VarChar(16)")] string hdg, [Parameter(Name="Company", DbType="TinyInt")] System.Nullable<byte> company)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), hdg, company);
			return ((ISingleResult<AuditLastRecResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Bank_Count_Cheques")]
		public ISingleResult<Bank_Count_ChequesResult> Bank_Count_Cheques([Parameter(Name="DepositNum", DbType="Int")] System.Nullable<int> depositNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), depositNum);
			return ((ISingleResult<Bank_Count_ChequesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Bank_Count_Cheques2")]
		public ISingleResult<Bank_Count_Cheques2Result> Bank_Count_Cheques2([Parameter(Name="DepositNum", DbType="Int")] System.Nullable<int> depositNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), depositNum);
			return ((ISingleResult<Bank_Count_Cheques2Result>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.BANK_CreditorsTempDelete")]
		[return: Parameter(DbType="Int")]
		public int BANK_CreditorsTempDelete([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.BANK_CreditorsTempFill")]
		[return: Parameter(DbType="Int")]
		public int BANK_CreditorsTempFill([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="BankGL", DbType="VarChar(16)")] string bankGL)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, bankGL);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.BANK_DebtorDepositCards")]
		public ISingleResult<BANK_DebtorDepositCardsResult> BANK_DebtorDepositCards([Parameter(Name="Deposit", DbType="Int")] System.Nullable<int> deposit, [Parameter(Name="COmpanyNum", DbType="Int")] System.Nullable<int> cOmpanyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), deposit, cOmpanyNum);
			return ((ISingleResult<BANK_DebtorDepositCardsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.BANK_DebtorDepositCash")]
		public ISingleResult<BANK_DebtorDepositCashResult> BANK_DebtorDepositCash([Parameter(Name="Deposit", DbType="Int")] System.Nullable<int> deposit, [Parameter(Name="COmpanyNum", DbType="Int")] System.Nullable<int> cOmpanyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), deposit, cOmpanyNum);
			return ((ISingleResult<BANK_DebtorDepositCashResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.BANK_DebtorDepositCheques")]
		public ISingleResult<BANK_DebtorDepositChequesResult> BANK_DebtorDepositCheques([Parameter(Name="Deposit", DbType="Int")] System.Nullable<int> deposit, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), deposit, companyNum);
			return ((ISingleResult<BANK_DebtorDepositChequesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.BANK_GLsetDebitCredit")]
		[return: Parameter(DbType="Int")]
		public int BANK_GLsetDebitCredit([Parameter(Name="Audit", DbType="Int")] System.Nullable<int> audit, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="BankRec", DbType="Int")] System.Nullable<int> bankRec)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), audit, companyNum, bankRec);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.BANK_RecSetBankDeposit")]
		[return: Parameter(DbType="Int")]
		public int BANK_RecSetBankDeposit([Parameter(Name="DepositNum", DbType="Int")] System.Nullable<int> depositNum, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="BankRec", DbType="Int")] System.Nullable<int> bankRec)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), depositNum, companyNum, bankRec);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.BANK_RecSetDebtorsReceipts")]
		[return: Parameter(DbType="Int")]
		public int BANK_RecSetDebtorsReceipts([Parameter(Name="Audit", DbType="Int")] System.Nullable<int> audit, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="BankRec", DbType="Int")] System.Nullable<int> bankRec)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), audit, companyNum, bankRec);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.BANK_RecSetPurchasesJnl")]
		[return: Parameter(DbType="Int")]
		public int BANK_RecSetPurchasesJnl([Parameter(Name="Audit", DbType="Int")] System.Nullable<int> audit, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="BankRec", DbType="Int")] System.Nullable<int> bankRec)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), audit, companyNum, bankRec);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Calc_Gl_AccountTotal")]
		public ISingleResult<Calc_Gl_AccountTotalResult> Calc_Gl_AccountTotal([Parameter(Name="TempAccount", DbType="VarChar(12)")] string tempAccount, [Parameter(Name="TempMonth", DbType="Int")] System.Nullable<int> tempMonth, [Parameter(Name="JournalCode", DbType="VarChar(16)")] string journalCode, [Parameter(Name="CompNum", DbType="Int")] System.Nullable<int> compNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tempAccount, tempMonth, journalCode, compNum);
			return ((ISingleResult<Calc_Gl_AccountTotalResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ChequeAmtWriter")]
		public ISingleResult<ChequeAmtWriterResult> ChequeAmtWriter([Parameter(Name="Val", DbType="Decimal(12,2)")] System.Nullable<decimal> val)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), val);
			return ((ISingleResult<ChequeAmtWriterResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ClearAllPrintFlags")]
		[return: Parameter(DbType="Int")]
		public int ClearAllPrintFlags()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ClearHoldStatus")]
		[return: Parameter(DbType="Int")]
		public int ClearHoldStatus([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_CreateContract")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_CreateContract([Parameter(Name="OldAccountID", DbType="Int")] System.Nullable<int> oldAccountID, [Parameter(Name="NewAccountID", DbType="Int")] System.Nullable<int> newAccountID, [Parameter(Name="NewCompanyNum", DbType="TinyInt")] System.Nullable<byte> newCompanyNum, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldAccountID, newAccountID, newCompanyNum, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_CreateDebtor")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_CreateDebtor([Parameter(Name="OldParentAccountID", DbType="Int")] System.Nullable<int> oldParentAccountID, [Parameter(Name="NewCompanyNum", DbType="TinyInt")] System.Nullable<byte> newCompanyNum, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldParentAccountID, newCompanyNum, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_CreateMergeContractHeaders")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_CreateMergeContractHeaders([Parameter(Name="OldChildAccountID", DbType="Int")] System.Nullable<int> oldChildAccountID, [Parameter(Name="NewParentAccountID", DbType="Int")] System.Nullable<int> newParentAccountID, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldChildAccountID, newParentAccountID, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_DebtorIsMerged")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_DebtorIsMerged([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_GetNewAccountID")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_GetNewAccountID([Parameter(Name="OldAccountID", DbType="Int")] System.Nullable<int> oldAccountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldAccountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_GetOldAccountID")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_GetOldAccountID([Parameter(Name="NewAccountID", DbType="Int")] System.Nullable<int> newAccountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newAccountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_GetOldContractID")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_GetOldContractID([Parameter(Name="NewContractID", DbType="Int")] System.Nullable<int> newContractID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newContractID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_GetOldContractStartDate")]
		public ISingleResult<CompanyMerge_GetOldContractStartDateResult> CompanyMerge_GetOldContractStartDate([Parameter(Name="NewContractID", DbType="Int")] System.Nullable<int> newContractID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newContractID);
			return ((ISingleResult<CompanyMerge_GetOldContractStartDateResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_MergeContracts")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_MergeContracts([Parameter(Name="OldChildAccountID", DbType="Int")] System.Nullable<int> oldChildAccountID, [Parameter(Name="NewChildAccountID", DbType="Int")] System.Nullable<int> newChildAccountID, [Parameter(Name="NewParentAccountID", DbType="Int")] System.Nullable<int> newParentAccountID, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldChildAccountID, newChildAccountID, newParentAccountID, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_MergeDebtors")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_MergeDebtors([Parameter(Name="OldAccountID", DbType="Int")] System.Nullable<int> oldAccountID, [Parameter(Name="NewAccountID", DbType="Int")] System.Nullable<int> newAccountID, [Parameter(Name="NewCompanyNum", DbType="SmallInt")] System.Nullable<short> newCompanyNum, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldAccountID, newAccountID, newCompanyNum, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_MergeExecute")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_MergeExecute([Parameter(Name="OldAccountID", DbType="Int")] System.Nullable<int> oldAccountID, [Parameter(Name="NewAccountID", DbType="Int")] System.Nullable<int> newAccountID, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldAccountID, newAccountID, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_MoveExecute")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_MoveExecute([Parameter(Name="OldAccountID", DbType="Int")] System.Nullable<int> oldAccountID, [Parameter(Name="NewCompanyNum", DbType="TinyInt")] System.Nullable<byte> newCompanyNum, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldAccountID, newCompanyNum, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_TempMerge")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_TempMerge([Parameter(Name="AccountIDFrom", DbType="Int")] System.Nullable<int> accountIDFrom, [Parameter(Name="AccountIDTo", DbType="Int")] System.Nullable<int> accountIDTo, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountIDFrom, accountIDTo, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_TempMergeRemove")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_TempMergeRemove([Parameter(Name="AccountIDFrom", DbType="Int")] System.Nullable<int> accountIDFrom, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountIDFrom, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_TempMergeRemoveAll")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_TempMergeRemoveAll([Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyMerge_TempMergeReset")]
		[return: Parameter(DbType="Int")]
		public int CompanyMerge_TempMergeReset([Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CompanyRepPrep")]
		public ISingleResult<CompanyRepPrepResult> CompanyRepPrep([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum);
			return ((ISingleResult<CompanyRepPrepResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CourierNextConNote")]
		[return: Parameter(DbType="Int")]
		public int CourierNextConNote([Parameter(Name="CourierID", DbType="Int")] System.Nullable<int> courierID, [Parameter(Name="ConNote", DbType="VarChar(30)")] ref string conNote)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), courierID, conNote);
			conNote = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CREDITOR_ABN_EXISTS")]
		[return: Parameter(DbType="Int")]
		public int CREDITOR_ABN_EXISTS([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="ABN", DbType="VarChar(15)")] string aBN, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, aBN, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditor_AuditLast")]
		public ISingleResult<Creditor_AuditLastResult> Creditor_AuditLast()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Creditor_AuditLastResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorContactFromID")]
		public ISingleResult<CreditorContactFromIDResult> CreditorContactFromID([Parameter(Name="ContactID", DbType="Int")] System.Nullable<int> contactID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contactID);
			return ((ISingleResult<CreditorContactFromIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorContacts")]
		public ISingleResult<CreditorContactsResult> CreditorContacts([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((ISingleResult<CreditorContactsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorExists")]
		[return: Parameter(DbType="Int")]
		public int CreditorExists([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorInfo")]
		public ISingleResult<CreditorInfoResult> CreditorInfo([Parameter(Name="SupplierCode", DbType="VarChar(12)")] string supplierCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), supplierCode);
			return ((ISingleResult<CreditorInfoResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorJnl")]
		[return: Parameter(DbType="Int")]
		public int CreditorJnl([Parameter(Name="AccID", DbType="VarChar(12)")] string accID, [Parameter(Name="JnlCurrent", DbType="Money")] System.Nullable<decimal> jnlCurrent, [Parameter(Name="Jnl30Days", DbType="Money")] System.Nullable<decimal> jnl30Days, [Parameter(Name="Jnl60Days", DbType="Money")] System.Nullable<decimal> jnl60Days, [Parameter(Name="Jnl90Days", DbType="Money")] System.Nullable<decimal> jnl90Days, [Parameter(Name="Temp", DbType="Money")] System.Nullable<decimal> temp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accID, jnlCurrent, jnl30Days, jnl60Days, jnl90Days, temp);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorJnl_Sundries")]
		[return: Parameter(DbType="Int")]
		public int CreditorJnl_Sundries([Parameter(Name="AccID", DbType="VarChar(12)")] string accID, [Parameter(Name="JnlCurrent", DbType="Money")] System.Nullable<decimal> jnlCurrent, [Parameter(Name="Jnl30Days", DbType="Money")] System.Nullable<decimal> jnl30Days, [Parameter(Name="Jnl60Days", DbType="Money")] System.Nullable<decimal> jnl60Days, [Parameter(Name="Jnl90Days", DbType="Money")] System.Nullable<decimal> jnl90Days)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accID, jnlCurrent, jnl30Days, jnl60Days, jnl90Days);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorJournal")]
		public ISingleResult<CreditorJournalResult> CreditorJournal([Parameter(Name="Creditor", DbType="Int")] System.Nullable<int> creditor, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [Parameter(Name="Year", DbType="SmallInt")] System.Nullable<short> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), creditor, month, year);
			return ((ISingleResult<CreditorJournalResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorJournal_DUMMY")]
		public ISingleResult<CreditorJournal_DUMMYResult> CreditorJournal_DUMMY()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CreditorJournal_DUMMYResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorName")]
		[return: Parameter(DbType="Int")]
		public int CreditorName([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="NameOUT", DbType="VarChar(512)")] ref string nameOUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, nameOUT);
			nameOUT = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorOfCompany")]
		[return: Parameter(DbType="Int")]
		public int CreditorOfCompany([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="CompanyNumOUT", DbType="TinyInt")] ref System.Nullable<byte> companyNumOUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, companyNumOUT);
			companyNumOUT = ((System.Nullable<byte>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorPOCount")]
		[return: Parameter(DbType="Int")]
		public int CreditorPOCount([Parameter(Name="Supplier", DbType="Int")] System.Nullable<int> supplier, [Parameter(Name="SpecialOrders", DbType="Bit")] System.Nullable<bool> specialOrders)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), supplier, specialOrders);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorPurchases")]
		public ISingleResult<CreditorPurchasesResult> CreditorPurchases([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Month", DbType="Int")] System.Nullable<int> month, [Parameter(Name="Year", DbType="Int")] System.Nullable<int> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, month, year);
			return ((ISingleResult<CreditorPurchasesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CREDITORS_BackupJnlDissection")]
		[return: Parameter(DbType="Int")]
		public int CREDITORS_BackupJnlDissection([Parameter(Name="Audit", DbType="Int")] System.Nullable<int> audit, [Parameter(Name="BKP_KEY", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> bKP_KEY)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), audit, bKP_KEY);
			bKP_KEY = ((System.Nullable<System.Guid>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_Balances")]
		public ISingleResult<Creditors_BalancesResult> Creditors_Balances([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [Parameter(Name="Year", DbType="SmallInt")] System.Nullable<short> year, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, month, year, companyNum);
			return ((ISingleResult<Creditors_BalancesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_CheckABN")]
		[return: Parameter(DbType="Int")]
		public int Creditors_CheckABN([Parameter(Name="ABN", DbType="VarChar(15)")] string aBN)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), aBN);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_CheckInvDupe")]
		[return: Parameter(DbType="Int")]
		public int Creditors_CheckInvDupe([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="InvNum", DbType="VarChar(16)")] string invNum, [Parameter(Name="Audit", DbType="Int")] System.Nullable<int> audit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, invNum, audit);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_CheqNumberUnique")]
		[return: Parameter(DbType="Int")]
		public int Creditors_CheqNumberUnique([Parameter(Name="ChequeNum", DbType="Int")] System.Nullable<int> chequeNum, [Parameter(Name="BankAccGL", DbType="VarChar(16)")] string bankAccGL, [Parameter(Name="Co", DbType="Int")] System.Nullable<int> co)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chequeNum, bankAccGL, co);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_ContactFromID")]
		public ISingleResult<Creditors_ContactFromIDResult> Creditors_ContactFromID([Parameter(Name="ContactID", DbType="Int")] System.Nullable<int> contactID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contactID);
			return ((ISingleResult<Creditors_ContactFromIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_CurrentPeriod")]
		public ISingleResult<Creditors_CurrentPeriodResult> Creditors_CurrentPeriod([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum);
			return ((ISingleResult<Creditors_CurrentPeriodResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CREDITORS_DiscardJnlDissectionBKP")]
		[return: Parameter(DbType="Int")]
		public int CREDITORS_DiscardJnlDissectionBKP([Parameter(Name="BKP_KEY", DbType="UniqueIdentifier")] System.Nullable<System.Guid> bKP_KEY)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bKP_KEY);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_EOMRec")]
		[return: Parameter(DbType="Int")]
		public int Creditors_EOMRec([Parameter(Name="Year", DbType="Int")] System.Nullable<int> year, [Parameter(Name="Month", DbType="Int")] System.Nullable<int> month, [Parameter(Name="Co", DbType="TinyInt")] System.Nullable<byte> co)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year, month, co);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_EOMRollover")]
		[return: Parameter(DbType="Int")]
		public int Creditors_EOMRollover([Parameter(Name="Year", DbType="Int")] System.Nullable<int> year, [Parameter(Name="Month", DbType="Int")] System.Nullable<int> month, [Parameter(Name="Co", DbType="Int")] System.Nullable<int> co)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year, month, co);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_GetBankDetails")]
		public ISingleResult<Creditors_GetBankDetailsResult> Creditors_GetBankDetails([Parameter(Name="Creditor", DbType="Int")] System.Nullable<int> creditor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), creditor);
			return ((ISingleResult<Creditors_GetBankDetailsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_GetLastAudit")]
		public ISingleResult<Creditors_GetLastAuditResult> Creditors_GetLastAudit([Parameter(Name="JnlKey", DbType="Int")] System.Nullable<int> jnlKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jnlKey);
			return ((ISingleResult<Creditors_GetLastAuditResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_GetLastCreditor")]
		public ISingleResult<Creditors_GetLastCreditorResult> Creditors_GetLastCreditor()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Creditors_GetLastCreditorResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_GetStats")]
		public ISingleResult<Creditors_GetStatsResult> Creditors_GetStats([Parameter(Name="DueDate", DbType="DateTime")] System.Nullable<System.DateTime> dueDate, [Parameter(Name="Type", DbType="TinyInt")] System.Nullable<byte> type, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dueDate, type, companyNum);
			return ((ISingleResult<Creditors_GetStatsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_HoldPayment")]
		[return: Parameter(DbType="Int")]
		public int Creditors_HoldPayment([Parameter(Name="Audit", DbType="Int")] System.Nullable<int> audit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), audit);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_IsAccpacVendor")]
		[return: Parameter(DbType="Int")]
		public int Creditors_IsAccpacVendor([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="IsAccpacVendor", DbType="Bit")] ref System.Nullable<bool> isAccpacVendor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, isAccpacVendor);
			isAccpacVendor = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_IsInActive")]
		[return: Parameter(DbType="Int")]
		public int Creditors_IsInActive([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="IsInActive", DbType="Bit")] ref System.Nullable<bool> isInActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, isInActive);
			isInActive = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_IsThirdParty")]
		[return: Parameter(DbType="Int")]
		public int Creditors_IsThirdParty([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="IsThirdParty", DbType="Bit")] ref System.Nullable<bool> isThirdParty)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, isThirdParty);
			isThirdParty = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_MakeNewAccount")]
		[return: Parameter(DbType="Int")]
		public int Creditors_MakeNewAccount()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_PayFlag")]
		[return: Parameter(DbType="Int")]
		public int Creditors_PayFlag([Parameter(Name="AccountID", DbType="VarChar(12)")] string accountID, [Parameter(Name="ChequeNum", DbType="Int")] System.Nullable<int> chequeNum, [Parameter(Name="Audit", DbType="Int")] System.Nullable<int> audit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, chequeNum, audit);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_PostCreditNotes")]
		[return: Parameter(DbType="Int")]
		public int Creditors_PostCreditNotes([Parameter(Name="JnlKey", DbType="Int")] System.Nullable<int> jnlKey, [Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="CreditNum", DbType="VarChar(16)")] string creditNum, [Parameter(Name="Credit", DbType="Decimal(11,2)")] System.Nullable<decimal> credit, [Parameter(Name="Invoices", DbType="VarChar(16)")] string invoices, [Parameter(Name="Allocate", DbType="Decimal(11,2)")] System.Nullable<decimal> allocate, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jnlKey, accountID, creditNum, credit, invoices, allocate, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_PostEftPaymentsDetail")]
		public ISingleResult<Creditors_PostEftPaymentsDetailResult> Creditors_PostEftPaymentsDetail([Parameter(Name="BatchNum", DbType="Int")] System.Nullable<int> batchNum, [Parameter(Name="BankGlNum", DbType="VarChar(16)")] string bankGlNum, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), batchNum, bankGlNum, companyNum);
			return ((ISingleResult<Creditors_PostEftPaymentsDetailResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_PostEftPaymentsDetailFooter")]
		public ISingleResult<Creditors_PostEftPaymentsDetailFooterResult> Creditors_PostEftPaymentsDetailFooter([Parameter(Name="BatchNum", DbType="Int")] System.Nullable<int> batchNum, [Parameter(Name="BankGlNum", DbType="VarChar(16)")] string bankGlNum, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), batchNum, bankGlNum, companyNum);
			return ((ISingleResult<Creditors_PostEftPaymentsDetailFooterResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_PostEftPaymentsFooter")]
		public ISingleResult<Creditors_PostEftPaymentsFooterResult> Creditors_PostEftPaymentsFooter([Parameter(Name="BatchNum", DbType="Int")] System.Nullable<int> batchNum, [Parameter(Name="BankGlNum", DbType="VarChar(15)")] string bankGlNum, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), batchNum, bankGlNum, companyNum);
			return ((ISingleResult<Creditors_PostEftPaymentsFooterResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_PostEftPaymentsHeader")]
		public ISingleResult<Creditors_PostEftPaymentsHeaderResult> Creditors_PostEftPaymentsHeader([Parameter(Name="BatchNum", DbType="Int")] System.Nullable<int> batchNum, [Parameter(Name="BankGlNum", DbType="VarChar(16)")] string bankGlNum, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), batchNum, bankGlNum, companyNum);
			return ((ISingleResult<Creditors_PostEftPaymentsHeaderResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_PostInvoice")]
		[return: Parameter(DbType="Int")]
		public int Creditors_PostInvoice([Parameter(Name="JnlKey", DbType="Int")] System.Nullable<int> jnlKey, [Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="InvNum", DbType="VarChar(16)")] string invNum, [Parameter(Name="Amount", DbType="Decimal(11,2)")] System.Nullable<decimal> amount, [Parameter(Name="Desc", DbType="VarChar(32)")] string desc, [Parameter(Name="InvDate", DbType="DateTime")] System.Nullable<System.DateTime> invDate, [Parameter(Name="JnlDate", DbType="DateTime")] System.Nullable<System.DateTime> jnlDate, [Parameter(Name="Year", DbType="Int")] System.Nullable<int> year, [Parameter(Name="Month", DbType="Int")] System.Nullable<int> month, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="Audit_OUT", DbType="Int")] ref System.Nullable<int> audit_OUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jnlKey, accountID, invNum, amount, desc, invDate, jnlDate, year, month, companyNum, audit_OUT);
			audit_OUT = ((System.Nullable<int>)(result.GetParameterValue(10)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_PostPayment_Manual")]
		[return: Parameter(DbType="Int")]
		public int Creditors_PostPayment_Manual([Parameter(Name="CredID", DbType="VarChar(12)")] string credID, [Parameter(Name="ChequeNum", DbType="Int")] System.Nullable<int> chequeNum, [Parameter(Name="BankAccGL", DbType="VarChar(16)")] string bankAccGL, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), credID, chequeNum, bankAccGL, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_PostPayments")]
		[return: Parameter(DbType="Int")]
		public int Creditors_PostPayments([Parameter(Name="ChequeNum", DbType="Int")] System.Nullable<int> chequeNum, [Parameter(Name="Type", DbType="TinyInt")] System.Nullable<byte> type, [Parameter(Name="BankAccGL", DbType="VarChar(16)")] string bankAccGL, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="BatchNum", DbType="Int")] System.Nullable<int> batchNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chequeNum, type, bankAccGL, companyNum, batchNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CREDITORS_RestoreJnlDissection")]
		[return: Parameter(DbType="Int")]
		public int CREDITORS_RestoreJnlDissection([Parameter(Name="Audit", DbType="Int")] System.Nullable<int> audit, [Parameter(Name="BKP_KEY", DbType="UniqueIdentifier")] System.Nullable<System.Guid> bKP_KEY)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), audit, bKP_KEY);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_SetPayments")]
		[return: Parameter(DbType="Int")]
		public int Creditors_SetPayments([Parameter(Name="DueDate", DbType="DateTime")] System.Nullable<System.DateTime> dueDate, [Parameter(Name="Type", DbType="TinyInt")] System.Nullable<byte> type, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dueDate, type, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Creditors_Upd_Balances")]
		[return: Parameter(DbType="Int")]
		public int Creditors_Upd_Balances([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Amount", DbType="Decimal(11,2)")] System.Nullable<decimal> amount, [Parameter(Name="Period", DbType="TinyInt")] System.Nullable<byte> period, [Parameter(DbType="TinyInt")] System.Nullable<byte> isPayment)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, amount, period, isPayment);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreditorsTransBal")]
		public ISingleResult<CreditorsTransBalResult> CreditorsTransBal([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((ISingleResult<CreditorsTransBalResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CTRAC_CheckBSGDeliveryStatus")]
		public ISingleResult<CTRAC_CheckBSGDeliveryStatusResult> CTRAC_CheckBSGDeliveryStatus([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((ISingleResult<CTRAC_CheckBSGDeliveryStatusResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CTRAC_GetSalesRep")]
		[return: Parameter(DbType="Int")]
		public int CTRAC_GetSalesRep([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="ContractID", DbType="Int")] System.Nullable<int> contractID, [Parameter(Name="SalesRep", DbType="VarChar(25)")] ref string salesRep)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, contractID, salesRep);
			salesRep = ((string)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CTRAC_ITEM_IMPORT_CreateImport")]
		[return: Parameter(DbType="Int")]
		public int CTRAC_ITEM_IMPORT_CreateImport([Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID, [Parameter(Name="Import", DbType="Int")] ref System.Nullable<int> import)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID, import);
			import = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CTRAC_ITEM_IMPORT_HasErrors")]
		[return: Parameter(DbType="Int")]
		public int CTRAC_ITEM_IMPORT_HasErrors([Parameter(Name="Import", DbType="Int")] System.Nullable<int> import, [Parameter(Name="HasErrors", DbType="Bit")] ref System.Nullable<bool> hasErrors)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), import, hasErrors);
			hasErrors = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CTRAC_ITEM_IMPORT_HasWarnings")]
		[return: Parameter(DbType="Int")]
		public int CTRAC_ITEM_IMPORT_HasWarnings([Parameter(Name="Import", DbType="Int")] System.Nullable<int> import, [Parameter(Name="HasWarnings", DbType="Bit")] ref System.Nullable<bool> hasWarnings)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), import, hasWarnings);
			hasWarnings = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CTRAC_ITEM_IMPORT_Insert")]
		[return: Parameter(DbType="Int")]
		public int CTRAC_ITEM_IMPORT_Insert(
					[Parameter(Name="Import", DbType="Int")] System.Nullable<int> import, 
					[Parameter(Name="LineNumber", DbType="Int")] System.Nullable<int> lineNumber, 
					[Parameter(Name="LastChangeType", DbType="VarChar(80)")] string lastChangeType, 
					[Parameter(Name="ContractID", DbType="Int")] System.Nullable<int> contractID, 
					[Parameter(Name="BSGAligned", DbType="VarChar(5)")] string bSGAligned, 
					[Parameter(Name="DisplayCode", DbType="VarChar(35)")] string displayCode, 
					[Parameter(Name="SerialNo", DbType="VarChar(64)")] string serialNo, 
					[Parameter(Name="DeviceName", DbType="VarChar(40)")] string deviceName, 
					[Parameter(Name="Quantity", DbType="SmallInt")] System.Nullable<short> quantity, 
					[Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, 
					[Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate, 
					[Parameter(Name="ClaimableCommission", DbType="VarChar(5)")] string claimableCommission, 
					[Parameter(Name="ServiceID", DbType="VarChar(32)")] string serviceID, 
					[Parameter(Name="Price", DbType="Money")] System.Nullable<decimal> price, 
					[Parameter(Name="OtherPrice", DbType="Money")] System.Nullable<decimal> otherPrice, 
					[Parameter(Name="Engineer", DbType="VarChar(25)")] string engineer, 
					[Parameter(Name="ServiceLevel", DbType="VarChar(12)")] string serviceLevel, 
					[Parameter(Name="ResponseTime", DbType="VarChar(32)")] string responseTime, 
					[Parameter(Name="3PSpecialConsiderations", DbType="VarChar(300)")] string _3PSpecialConsiderations, 
					[Parameter(Name="CoverageLimits", DbType="VarChar(32)")] string coverageLimits, 
					[Parameter(Name="LeadSalesRep", DbType="VarChar(25)")] string leadSalesRep, 
					[Parameter(Name="SalesRep", DbType="VarChar(25)")] string salesRep, 
					[Parameter(Name="TPPercent", DbType="Decimal(6,2)")] System.Nullable<decimal> tPPercent, 
					[Parameter(Name="ExpiryDate", DbType="DateTime")] System.Nullable<System.DateTime> expiryDate, 
					[Parameter(Name="CustCode", DbType="VarChar(50)")] string custCode, 
					[Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, 
					[Parameter(Name="ConsignmentStock", DbType="VarChar(5)")] string consignmentStock, 
					[Parameter(Name="SpaID", DbType="Int")] System.Nullable<int> spaID, 
					[Parameter(Name="LastBSGDeliveryStatus", DbType="VarChar(50)")] string lastBSGDeliveryStatus, 
					[Parameter(Name="SarID", DbType="VarChar(20)")] string sarID, 
					[Parameter(Name="PartsShareLocation", DbType="VarChar(50)")] string partsShareLocation)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), import, lineNumber, lastChangeType, contractID, bSGAligned, displayCode, serialNo, deviceName, quantity, startDate, endDate, claimableCommission, serviceID, price, otherPrice, engineer, serviceLevel, responseTime, _3PSpecialConsiderations, coverageLimits, leadSalesRep, salesRep, tPPercent, expiryDate, custCode, accountID, consignmentStock, spaID, lastBSGDeliveryStatus, sarID, partsShareLocation);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CTRAC_ResetLastChangetype")]
		[return: Parameter(DbType="Int")]
		public int CTRAC_ResetLastChangetype([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DateNumbers")]
		public ISingleResult<DateNumbersResult> DateNumbers([Parameter(Name="Period", DbType="VarChar(20)")] string period)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), period);
			return ((ISingleResult<DateNumbersResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DB_AgeDebtorReceipts")]
		[return: Parameter(DbType="Int")]
		public int DB_AgeDebtorReceipts([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Amount", DbType="Decimal(11,2)")] System.Nullable<decimal> amount, [Parameter(Name="Discount", DbType="Decimal(9,2)")] System.Nullable<decimal> discount, [Parameter(Name="OverpayContribution", DbType="Decimal(9,2)")] System.Nullable<decimal> overpayContribution)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, amount, discount, overpayContribution);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DB_AuditFirstRec")]
		public ISingleResult<DB_AuditFirstRecResult> DB_AuditFirstRec([Parameter(Name="Hdg", DbType="VarChar(16)")] string hdg, [Parameter(Name="Company", DbType="TinyInt")] System.Nullable<byte> company)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), hdg, company);
			return ((ISingleResult<DB_AuditFirstRecResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DB_AuditLastRec")]
		public ISingleResult<DB_AuditLastRecResult> DB_AuditLastRec([Parameter(Name="Hdg", DbType="VarChar(16)")] string hdg, [Parameter(Name="Company", DbType="TinyInt")] System.Nullable<byte> company, [Parameter(Name="Currency", DbType="VarChar(5)")] string currency)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), hdg, company, currency);
			return ((ISingleResult<DB_AuditLastRecResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DB_EOM_GetTrialBalanceTotals")]
		public ISingleResult<DB_EOM_GetTrialBalanceTotalsResult> DB_EOM_GetTrialBalanceTotals([Parameter(Name="Month", DbType="Int")] System.Nullable<int> month, [Parameter(Name="Year", DbType="Int")] System.Nullable<int> year, [Parameter(Name="International", DbType="Bit")] System.Nullable<bool> international)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), month, year, international);
			return ((ISingleResult<DB_EOM_GetTrialBalanceTotalsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DB_FlagInvoicePrinted")]
		[return: Parameter(DbType="Int")]
		public int DB_FlagInvoicePrinted([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DB_FlagUncosted")]
		[return: Parameter(DbType="Int")]
		public int DB_FlagUncosted()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DB_GetNextInvoice")]
		public ISingleResult<DB_GetNextInvoiceResult> DB_GetNextInvoice()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<DB_GetNextInvoiceResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DB_SetConsignment")]
		[return: Parameter(DbType="Int")]
		public int DB_SetConsignment([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Courier", DbType="VarChar(25)")] string courier, [Parameter(Name="ConNum", DbType="VarChar(20)")] string conNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, courier, conNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Debtor_Contacts")]
		public ISingleResult<Debtor_ContactsResult> Debtor_Contacts([Parameter(Name="AccountID", DbType="VarChar(9)")] string accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((ISingleResult<Debtor_ContactsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTOR_Info")]
		public ISingleResult<DEBTOR_InfoResult> DEBTOR_Info([Parameter(Name="ACCOUNTID", DbType="Int")] System.Nullable<int> aCCOUNTID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), aCCOUNTID);
			return ((ISingleResult<DEBTOR_InfoResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorAgreementCount")]
		[return: Parameter(DbType="Int")]
		public int DebtorAgreementCount([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorBalances")]
		public ISingleResult<DebtorBalancesResult> DebtorBalances([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [Parameter(Name="Year", DbType="SmallInt")] System.Nullable<short> year, [Parameter(Name="TransFilter", DbType="TinyInt")] System.Nullable<byte> transFilter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, month, year, transFilter);
			return ((ISingleResult<DebtorBalancesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorExists")]
		[return: Parameter(DbType="Int")]
		public int DebtorExists([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorFromSalesOrd")]
		[return: Parameter(DbType="Int")]
		public int DebtorFromSalesOrd([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Account_OUT", DbType="Int")] ref System.Nullable<int> account_OUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, account_OUT);
			account_OUT = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorName")]
		[return: Parameter(DbType="Int")]
		public int DebtorName([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="CompanyNameOut", DbType="VarChar(50)")] ref string companyNameOut)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, companyNameOut);
			companyNameOut = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorOfCompany")]
		[return: Parameter(DbType="Int")]
		public int DebtorOfCompany([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="CompanyNumOUT", DbType="TinyInt")] ref System.Nullable<byte> companyNumOUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, companyNumOUT);
			companyNumOUT = ((System.Nullable<byte>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorParent")]
		[return: Parameter(DbType="Int")]
		public int DebtorParent([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="AccountOut", DbType="Int")] ref System.Nullable<int> accountOut)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, accountOut);
			accountOut = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_3P_AGREEMENTS_CheckForDuplicateSarIDs")]
		[ResultType(typeof(DEBTORS_3P_AGREEMENTS_CheckForDuplicateSarIDsResult1))]
		[ResultType(typeof(DEBTORS_3P_AGREEMENTS_CheckForDuplicateSarIDsResult2))]
		public IMultipleResults DEBTORS_3P_AGREEMENTS_CheckForDuplicateSarIDs([Parameter(Name="AgreementID", DbType="Int")] System.Nullable<int> agreementID, [Parameter(Name="SarID", DbType="VarChar(35)")] string sarID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), agreementID, sarID);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_3P_AGREEMENTS_GetAgreementGLCodeTotal")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_3P_AGREEMENTS_GetAgreementGLCodeTotal([Parameter(Name="AgreementID", DbType="Int")] System.Nullable<int> agreementID, [Parameter(Name="ContractItemID", DbType="Int")] System.Nullable<int> contractItemID, [Parameter(Name="AgreementGLCodeTotal", DbType="Money")] ref System.Nullable<decimal> agreementGLCodeTotal)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), agreementID, contractItemID, agreementGLCodeTotal);
			agreementGLCodeTotal = ((System.Nullable<decimal>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_3P_AGREEMENTS_GetAgreementTotal")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_3P_AGREEMENTS_GetAgreementTotal([Parameter(Name="AgreementID", DbType="Int")] System.Nullable<int> agreementID, [Parameter(Name="AgreementTotal", DbType="Money")] ref System.Nullable<decimal> agreementTotal)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), agreementID, agreementTotal);
			agreementTotal = ((System.Nullable<decimal>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_3P_AGREEMENTS_GetBillingFrequency")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_3P_AGREEMENTS_GetBillingFrequency([Parameter(Name="AgreementID", DbType="Int")] System.Nullable<int> agreementID, [Parameter(Name="BillingFrequency", DbType="Int")] ref System.Nullable<int> billingFrequency)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), agreementID, billingFrequency);
			billingFrequency = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_3P_AGREEMENTS_GetDeviceGLCode")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_3P_AGREEMENTS_GetDeviceGLCode([Parameter(Name="ContractItemID", DbType="Int")] System.Nullable<int> contractItemID, [Parameter(Name="3PDeviceGLCode", DbType="VarChar(16)")] ref string _3PDeviceGLCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contractItemID, _3PDeviceGLCode);
			_3PDeviceGLCode = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_3P_AGREEMENTS_GetInvoiceEndDate")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_3P_AGREEMENTS_GetInvoiceEndDate([Parameter(Name="AgreementID", DbType="Int")] System.Nullable<int> agreementID, [Parameter(Name="InvoiceEndDate", DbType="DateTime")] ref System.Nullable<System.DateTime> invoiceEndDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), agreementID, invoiceEndDate);
			invoiceEndDate = ((System.Nullable<System.DateTime>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_3P_AGREEMENTS_GetInvoiceStartDate")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_3P_AGREEMENTS_GetInvoiceStartDate([Parameter(Name="AgreementID", DbType="Int")] System.Nullable<int> agreementID, [Parameter(Name="InvoiceStartDate", DbType="DateTime")] ref System.Nullable<System.DateTime> invoiceStartDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), agreementID, invoiceStartDate);
			invoiceStartDate = ((System.Nullable<System.DateTime>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_3P_AGREEMENTS_UpdateDevice3PInvoiceEndDate")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_3P_AGREEMENTS_UpdateDevice3PInvoiceEndDate([Parameter(Name="AgreementID", DbType="Int")] System.Nullable<int> agreementID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), agreementID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_3P_AGREEMENTS_UpdateDevice3PInvoiceStartDate")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_3P_AGREEMENTS_UpdateDevice3PInvoiceStartDate([Parameter(Name="AgreementID", DbType="Int")] System.Nullable<int> agreementID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), agreementID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Debtors_BalanceAtAudit")]
		[return: Parameter(DbType="Int")]
		public int Debtors_BalanceAtAudit([Parameter(Name="AuditTo", DbType="Int")] System.Nullable<int> auditTo, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="Balance_OUT", DbType="Decimal(18,2)")] ref System.Nullable<decimal> balance_OUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), auditTo, companyNum, balance_OUT);
			balance_OUT = ((System.Nullable<decimal>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_CancelAccountInsertion")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_CancelAccountInsertion([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Debtors_CurrentPeriod")]
		public ISingleResult<Debtors_CurrentPeriodResult> Debtors_CurrentPeriod([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum);
			return ((ISingleResult<Debtors_CurrentPeriodResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Debtors_EOMRec")]
		[return: Parameter(DbType="Int")]
		public int Debtors_EOMRec([Parameter(Name="FromAudit", DbType="Int")] System.Nullable<int> fromAudit, [Parameter(Name="ToAudit", DbType="Int")] System.Nullable<int> toAudit, [Parameter(Name="CoNum", DbType="TinyInt")] System.Nullable<byte> coNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromAudit, toAudit, coNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Debtors_GetNew")]
		public ISingleResult<Debtors_GetNewResult> Debtors_GetNew([Parameter(Name="UserID", DbType="VarChar(25)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<Debtors_GetNewResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_LOCATION_IMPORT_CreateImport")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_LOCATION_IMPORT_CreateImport([Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID, [Parameter(Name="Import", DbType="Int")] ref System.Nullable<int> import)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID, import);
			import = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_LOCATION_IMPORT_HasErrors")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_LOCATION_IMPORT_HasErrors([Parameter(Name="Import", DbType="Int")] System.Nullable<int> import, [Parameter(Name="HasErrors", DbType="Bit")] ref System.Nullable<bool> hasErrors)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), import, hasErrors);
			hasErrors = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_LOCATION_IMPORT_HasWarnings")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_LOCATION_IMPORT_HasWarnings([Parameter(Name="Import", DbType="Int")] System.Nullable<int> import, [Parameter(Name="HasWarnings", DbType="Bit")] ref System.Nullable<bool> hasWarnings)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), import, hasWarnings);
			hasWarnings = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_LOCATION_IMPORT_Insert")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_LOCATION_IMPORT_Insert([Parameter(Name="Import", DbType="Int")] System.Nullable<int> import, [Parameter(Name="LineNumber", DbType="Int")] System.Nullable<int> lineNumber, [Parameter(Name="BillingAccountID", DbType="Int")] System.Nullable<int> billingAccountID, [Parameter(Name="LocationName", DbType="VarChar(80)")] string locationName, [Parameter(Name="SiteEngineer", DbType="VarChar(25)")] string siteEngineer, [Parameter(Name="ContactName", DbType="VarChar(20)")] string contactName, [Parameter(Name="Phone", DbType="VarChar(15)")] string phone, [Parameter(Name="Fax", DbType="VarChar(15)")] string fax, [Parameter(Name="Address1", DbType="VarChar(50)")] string address1, [Parameter(Name="Address2", DbType="VarChar(50)")] string address2, [Parameter(Name="City", DbType="VarChar(25)")] string city, [Parameter(Name="State", DbType="VarChar(5)")] string state, [Parameter(Name="Postcode", DbType="VarChar(6)")] string postcode, [Parameter(Name="PMFrequency", DbType="TinyInt")] System.Nullable<byte> pMFrequency, [Parameter(Name="PMPeriod", DbType="VarChar(10)")] string pMPeriod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), import, lineNumber, billingAccountID, locationName, siteEngineer, contactName, phone, fax, address1, address2, city, state, postcode, pMFrequency, pMPeriod);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_LOCATION_IMPORT_ParseLine")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_LOCATION_IMPORT_ParseLine([Parameter(Name="Import", DbType="Int")] System.Nullable<int> import, [Parameter(Name="LineNumber", DbType="Int")] System.Nullable<int> lineNumber, [Parameter(Name="LocationName", DbType="VarChar(80)")] string locationName, [Parameter(Name="SiteEngineer", DbType="VarChar(25)")] string siteEngineer, [Parameter(Name="ContactName", DbType="VarChar(20)")] string contactName, [Parameter(Name="Phone", DbType="VarChar(15)")] string phone, [Parameter(Name="Fax", DbType="VarChar(15)")] string fax, [Parameter(Name="Address1", DbType="VarChar(50)")] string address1, [Parameter(Name="Address2", DbType="VarChar(50)")] string address2, [Parameter(Name="City", DbType="VarChar(25)")] string city, [Parameter(Name="State", DbType="VarChar(5)")] string state, [Parameter(Name="Postcode", DbType="VarChar(6)")] string postcode, [Parameter(Name="PMFrequency", DbType="TinyInt")] System.Nullable<byte> pMFrequency, [Parameter(Name="PMPeriod", DbType="VarChar(10)")] string pMPeriod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), import, lineNumber, locationName, siteEngineer, contactName, phone, fax, address1, address2, city, state, postcode, pMFrequency, pMPeriod);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Debtors_New")]
		[return: Parameter(DbType="Int")]
		public int Debtors_New([Parameter(Name="UserID", DbType="VarChar(25)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Debtors_NewTrans")]
		[return: Parameter(DbType="Int")]
		public int Debtors_NewTrans([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="TransCount", DbType="Int")] ref System.Nullable<int> transCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, transCount);
			transCount = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueCredits")]
		public ISingleResult<DEBTORS_StatRevenueCreditsResult> DEBTORS_StatRevenueCredits([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueCreditsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueCredits_InvoiceLevel")]
		public ISingleResult<DEBTORS_StatRevenueCredits_InvoiceLevelResult> DEBTORS_StatRevenueCredits_InvoiceLevel([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueCredits_InvoiceLevelResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueCreditsManual")]
		public ISingleResult<DEBTORS_StatRevenueCreditsManualResult> DEBTORS_StatRevenueCreditsManual([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueCreditsManualResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueInvoices")]
		public ISingleResult<DEBTORS_StatRevenueInvoicesResult> DEBTORS_StatRevenueInvoices([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueInvoicesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueInvoices_InvoiceLevel")]
		public ISingleResult<DEBTORS_StatRevenueInvoices_InvoiceLevelResult> DEBTORS_StatRevenueInvoices_InvoiceLevel([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueInvoices_InvoiceLevelResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueInvoicesManual")]
		public ISingleResult<DEBTORS_StatRevenueInvoicesManualResult> DEBTORS_StatRevenueInvoicesManual([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueInvoicesManualResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueInvoicesManual_InvoiceLevel")]
		public ISingleResult<DEBTORS_StatRevenueInvoicesManual_InvoiceLevelResult> DEBTORS_StatRevenueInvoicesManual_InvoiceLevel([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueInvoicesManual_InvoiceLevelResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueSummaryAdvance")]
		public ISingleResult<DEBTORS_StatRevenueSummaryAdvanceResult> DEBTORS_StatRevenueSummaryAdvance([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueSummaryAdvanceResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueSummaryAdvanceCredits")]
		public ISingleResult<DEBTORS_StatRevenueSummaryAdvanceCreditsResult> DEBTORS_StatRevenueSummaryAdvanceCredits([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueSummaryAdvanceCreditsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueSummaryCreditsManual")]
		public ISingleResult<DEBTORS_StatRevenueSummaryCreditsManualResult> DEBTORS_StatRevenueSummaryCreditsManual([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueSummaryCreditsManualResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueSummaryCurrent")]
		public ISingleResult<DEBTORS_StatRevenueSummaryCurrentResult> DEBTORS_StatRevenueSummaryCurrent([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueSummaryCurrentResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueSummaryCurrentCredits")]
		public ISingleResult<DEBTORS_StatRevenueSummaryCurrentCreditsResult> DEBTORS_StatRevenueSummaryCurrentCredits([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueSummaryCurrentCreditsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_StatRevenueSummaryInvoicesManual")]
		public ISingleResult<DEBTORS_StatRevenueSummaryInvoicesManualResult> DEBTORS_StatRevenueSummaryInvoicesManual([Parameter(Name="PeriodMonth", DbType="Int")] System.Nullable<int> periodMonth, [Parameter(Name="PeriodYear", DbType="Int")] System.Nullable<int> periodYear, [Parameter(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [Parameter(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), periodMonth, periodYear, startMonth, startYear, endMonth, endYear);
			return ((ISingleResult<DEBTORS_StatRevenueSummaryInvoicesManualResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Debtors_Upd_Balances")]
		[return: Parameter(DbType="Int")]
		public int Debtors_Upd_Balances([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Amount", DbType="Money")] System.Nullable<decimal> amount, [Parameter(Name="Period", DbType="TinyInt")] System.Nullable<byte> period, [Parameter(DbType="TinyInt")] System.Nullable<byte> isPayment)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, amount, period, isPayment);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DEBTORS_Upd_InvItemQty")]
		[return: Parameter(DbType="Int")]
		public int DEBTORS_Upd_InvItemQty([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Qty", DbType="Int")] System.Nullable<int> qty, [Parameter(Name="Op", DbType="Int")] System.Nullable<int> op)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, qty, op);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Debtors_Upd_Phone_Nos")]
		[return: Parameter(DbType="Int")]
		public int Debtors_Upd_Phone_Nos([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Debtors_UpdateCRM")]
		[return: Parameter(DbType="Int")]
		public int Debtors_UpdateCRM([Parameter(Name="AccountID", DbType="VarChar(12)")] string accountID, [Parameter(Name="NextCall", DbType="DateTime")] System.Nullable<System.DateTime> nextCall, [Parameter(Name="Caller", DbType="VarChar(25)")] string caller)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, nextCall, caller);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorsEOM_Rollover")]
		[return: Parameter(DbType="Int")]
		public int DebtorsEOM_Rollover([Parameter(Name="Year", DbType="Int")] System.Nullable<int> year, [Parameter(Name="Month", DbType="Int")] System.Nullable<int> month, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year, month, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorsEOM_SaveBal")]
		[return: Parameter(DbType="Int")]
		public int DebtorsEOM_SaveBal([Parameter(Name="Year", DbType="Int")] System.Nullable<int> year, [Parameter(Name="Month", DbType="Int")] System.Nullable<int> month, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year, month, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorsSnapshotPeriods")]
		public ISingleResult<DebtorsSnapshotPeriodsResult> DebtorsSnapshotPeriods()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<DebtorsSnapshotPeriodsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorsStartAtAudit")]
		[return: Parameter(DbType="Int")]
		public int DebtorsStartAtAudit([Parameter(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="Audit_OUT", DbType="Int")] ref System.Nullable<int> audit_OUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date, companyNum, audit_OUT);
			audit_OUT = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorStatement")]
		[ResultType(typeof(DebtorStatementResult1))]
		[ResultType(typeof(DebtorStatementResult2))]
		public IMultipleResults DebtorStatement([Parameter(Name="FromAudit", DbType="Int")] System.Nullable<int> fromAudit, [Parameter(Name="ToAudit", DbType="Int")] System.Nullable<int> toAudit, [Parameter(Name="AccID", DbType="Int")] System.Nullable<int> accID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromAudit, toAudit, accID);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorStats")]
		public ISingleResult<DebtorStatsResult> DebtorStats([Parameter(Name="FromAccountID", DbType="Int")] System.Nullable<int> fromAccountID, [Parameter(Name="ToAccountID", DbType="Int")] System.Nullable<int> toAccountID, [Parameter(Name="Year", DbType="SmallInt")] System.Nullable<short> year, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [Parameter(Name="CloseBalMin", DbType="Money")] System.Nullable<decimal> closeBalMin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromAccountID, toAccountID, year, month, closeBalMin);
			return ((ISingleResult<DebtorStatsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorTaxCode")]
		public ISingleResult<DebtorTaxCodeResult> DebtorTaxCode([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((ISingleResult<DebtorTaxCodeResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorTransactions")]
		[ResultType(typeof(DebtorTransactionsResult))]
		public IMultipleResults DebtorTransactions([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [Parameter(Name="Year", DbType="SmallInt")] System.Nullable<short> year, [Parameter(Name="TransFilter", DbType="TinyInt")] System.Nullable<byte> transFilter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, month, year, transFilter);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorTransactions_TEMP")]
		[ResultType(typeof(DebtorTransactions_TEMPResult))]
		public IMultipleResults DebtorTransactions_TEMP([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [Parameter(Name="Year", DbType="SmallInt")] System.Nullable<short> year, [Parameter(Name="TransFilter", DbType="TinyInt")] System.Nullable<byte> transFilter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, month, year, transFilter);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorTransactionsDummy")]
		public ISingleResult<DebtorTransactionsDummyResult> DebtorTransactionsDummy()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<DebtorTransactionsDummyResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorTrialBalanceTotals")]
		public ISingleResult<DebtorTrialBalanceTotalsResult> DebtorTrialBalanceTotals([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="International", DbType="Bit")] System.Nullable<bool> international)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, international);
			return ((ISingleResult<DebtorTrialBalanceTotalsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DebtorTrialBalanceTotals_DATE")]
		public ISingleResult<DebtorTrialBalanceTotals_DATEResult> DebtorTrialBalanceTotals_DATE([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="International", DbType="Bit")] System.Nullable<bool> international)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, international);
			return ((ISingleResult<DebtorTrialBalanceTotals_DATEResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DelDebtorJnl")]
		[return: Parameter(DbType="Int")]
		public int DelDebtorJnl([Parameter(Name="NKey", DbType="Int")] System.Nullable<int> nKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nKey);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DeleteContact")]
		[return: Parameter(DbType="Int")]
		public int DeleteContact([Parameter(Name="ContactID", DbType="Int")] System.Nullable<int> contactID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contactID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DeleteCreditorContact")]
		[return: Parameter(DbType="Int")]
		public int DeleteCreditorContact([Parameter(Name="ContactID", DbType="Int")] System.Nullable<int> contactID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contactID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Employee_ResetPassword")]
		[return: Parameter(DbType="Int")]
		public int Employee_ResetPassword([Parameter(Name="Employee", DbType="VarChar(25)")] string employee, [Parameter(Name="NewPWord", DbType="VarChar(50)")] string newPWord, [Parameter(Name="GUID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employee, newPWord, gUID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Employee_ResetPassword_CurUser")]
		[return: Parameter(DbType="Int")]
		public int Employee_ResetPassword_CurUser([Parameter(Name="Employee", DbType="VarChar(25)")] string employee, [Parameter(Name="OldPWord", DbType="VarChar(50)")] string oldPWord, [Parameter(Name="NewPWord", DbType="VarChar(50)")] string newPWord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employee, oldPWord, newPWord);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.EmployeeExists")]
		[return: Parameter(DbType="Int")]
		public int EmployeeExists([Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.EmployeeName")]
		[return: Parameter(DbType="Int")]
		public int EmployeeName([Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID, [Parameter(Name="FullName", DbType="VarChar(30)")] ref string fullName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID, fullName);
			fullName = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.EMPLOYEES_AcceptBKP")]
		[return: Parameter(DbType="Int")]
		public int EMPLOYEES_AcceptBKP([Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID, [Parameter(Name="GUID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID, gUID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Employees_CopyPermissions")]
		[return: Parameter(DbType="Int")]
		public int Employees_CopyPermissions([Parameter(Name="Employee", DbType="VarChar(25)")] string employee, [Parameter(Name="ID", DbType="VarChar(25)")] string iD, [Parameter(Name="GUID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employee, iD, gUID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.EMPLOYEES_DiscardBKP")]
		[return: Parameter(DbType="Int")]
		public int EMPLOYEES_DiscardBKP([Parameter(Name="GUID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gUID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.EMPLOYEES_MAintainBKP_EDIT")]
		[return: Parameter(DbType="Int")]
		public int EMPLOYEES_MAintainBKP_EDIT()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.EMPLOYEES_MakeBKP")]
		[return: Parameter(DbType="Int")]
		public int EMPLOYEES_MakeBKP([Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID, [Parameter(Name="GUID", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID, gUID);
			gUID = ((System.Nullable<System.Guid>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GenerateGUID")]
		[return: Parameter(DbType="Int")]
		public int GenerateGUID([Parameter(Name="GUID", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gUID);
			gUID = ((System.Nullable<System.Guid>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetAuditPeriods")]
		public ISingleResult<GetAuditPeriodsResult> GetAuditPeriods()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAuditPeriodsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetContactFromID")]
		public ISingleResult<GetContactFromIDResult> GetContactFromID([Parameter(Name="ContactID", DbType="Int")] System.Nullable<int> contactID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contactID);
			return ((ISingleResult<GetContactFromIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetServerDate")]
		[return: Parameter(DbType="Int")]
		public int GetServerDate([Parameter(Name="ServerDate", DbType="DateTime")] ref System.Nullable<System.DateTime> serverDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serverDate);
			serverDate = ((System.Nullable<System.DateTime>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_Accounts_OpenBal")]
		[return: Parameter(DbType="Int")]
		public int GL_Accounts_OpenBal([Parameter(Name="Account", DbType="VarChar(16)")] string account, [Parameter(Name="Year", DbType="SmallInt")] System.Nullable<short> year, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [Parameter(Name="OpenBal", DbType="Money")] ref System.Nullable<decimal> openBal, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), account, year, month, openBal, companyNum);
			openBal = ((System.Nullable<decimal>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_ACCOUNTS_TMP_BKP")]
		[return: Parameter(DbType="Int")]
		public int GL_ACCOUNTS_TMP_BKP([Parameter(Name="GUID", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gUID);
			gUID = ((System.Nullable<System.Guid>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_ACCOUNTS_TMP_BKP_APPLY")]
		[return: Parameter(DbType="Int")]
		public int GL_ACCOUNTS_TMP_BKP_APPLY([Parameter(Name="GUID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gUID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_ACCOUNTS_TMP_BKP_DISCARD")]
		[return: Parameter(DbType="Int")]
		public int GL_ACCOUNTS_TMP_BKP_DISCARD([Parameter(Name="GUID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gUID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Gl_AccountTotal")]
		public ISingleResult<Gl_AccountTotalResult> Gl_AccountTotal([Parameter(Name="TempAccount", DbType="VarChar(16)")] string tempAccount, [Parameter(Name="TempMonth", DbType="Int")] System.Nullable<int> tempMonth, [Parameter(Name="JournalCode", DbType="VarChar(20)")] string journalCode, [Parameter(Name="CompNum", DbType="Int")] System.Nullable<int> compNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tempAccount, tempMonth, journalCode, compNum);
			return ((ISingleResult<Gl_AccountTotalResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_AddNewJournal")]
		[return: Parameter(DbType="Int")]
		public int GL_AddNewJournal([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_AppendJournalDetails")]
		[return: Parameter(DbType="Int")]
		public int GL_AppendJournalDetails([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="JournalCode", DbType="VarChar(20)")] string journalCode, [Parameter(Name="NewDate", DbType="DateTime")] System.Nullable<System.DateTime> newDate, [Parameter(Name="Month", DbType="Int")] System.Nullable<int> month, [Parameter(Name="Year", DbType="Int")] System.Nullable<int> year, [Parameter(Name="CopyFrom", DbType="VarChar(20)")] string copyFrom)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, journalCode, newDate, month, year, copyFrom);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_ConstructPartsGLCode")]
		[return: Parameter(DbType="Int")]
		public int GL_ConstructPartsGLCode([Parameter(Name="ItemNum", DbType="Int")] System.Nullable<int> itemNum, [Parameter(Name="PartsGLCode", DbType="VarChar(15)")] ref string partsGLCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemNum, partsGLCode);
			partsGLCode = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_DeleteAccountOK")]
		[return: Parameter(DbType="Int")]
		public int GL_DeleteAccountOK([Parameter(Name="Account", DbType="VarChar(16)")] string account, [Parameter(Name="OK", DbType="Bit")] ref System.Nullable<bool> oK)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), account, oK);
			oK = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_FirstBankSlip")]
		[return: Parameter(DbType="Int")]
		public int GL_FirstBankSlip([Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="Bank", DbType="VarChar(50)")] string bank, [Parameter(Name="Branch", DbType="VarChar(50)")] string branch, [Parameter(Name="AccountName", DbType="VarChar(50)")] string accountName, [Parameter(Name="BSB", DbType="VarChar(15)")] string bSB, [Parameter(Name="AccountNum", DbType="VarChar(15)")] string accountNum, [Parameter(Name="BankGL", DbType="VarChar(16)")] string bankGL)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, bank, branch, accountName, bSB, accountNum, bankGL);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_FirstBankSlip_Old")]
		[return: Parameter(DbType="Int")]
		public int GL_FirstBankSlip_Old([Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="Bank", DbType="VarChar(50)")] string bank, [Parameter(Name="Branch", DbType="VarChar(50)")] string branch, [Parameter(Name="AccountName", DbType="VarChar(50)")] string accountName, [Parameter(Name="BSB", DbType="VarChar(15)")] string bSB, [Parameter(Name="AccountNum", DbType="VarChar(15)")] string accountNum, [Parameter(Name="BankGL", DbType="VarChar(16)")] string bankGL)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, bank, branch, accountName, bSB, accountNum, bankGL);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_GetAccountDetails")]
		public ISingleResult<GL_GetAccountDetailsResult> GL_GetAccountDetails([Parameter(Name="AccountNum", DbType="VarChar(16)")] string accountNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNum);
			return ((ISingleResult<GL_GetAccountDetailsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_GetExchangeRate")]
		public ISingleResult<GL_GetExchangeRateResult> GL_GetExchangeRate([Parameter(Name="CurrencyType", DbType="VarChar(5)")] string currencyType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currencyType);
			return ((ISingleResult<GL_GetExchangeRateResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_GLAccountExists")]
		[return: Parameter(DbType="Int")]
		public int GL_GLAccountExists([Parameter(Name="GLAccNum", DbType="VarChar(16)")] string gLAccNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gLAccNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_MaxJnlAudit")]
		[return: Parameter(DbType="Int")]
		public int GL_MaxJnlAudit([Parameter(Name="Audit_OUT", DbType="Int")] ref System.Nullable<int> audit_OUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), audit_OUT);
			audit_OUT = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_MiscTools")]
		public ISingleResult<GL_MiscToolsResult> GL_MiscTools()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GL_MiscToolsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_OpenBal")]
		[return: Parameter(DbType="Int")]
		public int GL_OpenBal([Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="OpenBal_OUT", DbType="Decimal(9,2)")] ref System.Nullable<decimal> openBal_OUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, openBal_OUT);
			openBal_OUT = ((System.Nullable<decimal>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_ProfitLoss")]
		[return: Parameter(DbType="Int")]
		public int GL_ProfitLoss([Parameter(Name="Mnth", DbType="Int")] System.Nullable<int> mnth, [Parameter(Name="Yr", DbType="Int")] System.Nullable<int> yr, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mnth, yr, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_Reset_Debtors")]
		[return: Parameter(DbType="Int")]
		public int GL_Reset_Debtors([Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_Revcat_State_HasGL")]
		[return: Parameter(DbType="Int")]
		public int GL_Revcat_State_HasGL([Parameter(Name="RevenueCategory", DbType="Int")] System.Nullable<int> revenueCategory, [Parameter(Name="ContractLocation", DbType="VarChar(5)")] string contractLocation)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), revenueCategory, contractLocation);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_SetActiveCompany")]
		[return: Parameter(DbType="Int")]
		public int GL_SetActiveCompany([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_Setup_CSV")]
		[return: Parameter(DbType="Int")]
		public int GL_Setup_CSV([Parameter(Name="Yr", DbType="Int")] System.Nullable<int> yr, [Parameter(Name="Mnth", DbType="Int")] System.Nullable<int> mnth)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), yr, mnth);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_TrialBalance")]
		[return: Parameter(DbType="Int")]
		public int GL_TrialBalance([Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_TrialBalance old int")]
		[return: Parameter(DbType="Int")]
		public int GL_TrialBalanceOldInt([Parameter(Name="Mnth", DbType="Int")] System.Nullable<int> mnth, [Parameter(Name="Yr", DbType="Int")] System.Nullable<int> yr, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mnth, yr, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_TrialBalance_GetData")]
		[return: Parameter(DbType="Int")]
		public int GL_TrialBalance_GetData([Parameter(Name="Mnth", DbType="Int")] System.Nullable<int> mnth, [Parameter(Name="Yr", DbType="Int")] System.Nullable<int> yr, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mnth, yr, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_TrialBalance1")]
		[return: Parameter(DbType="Int")]
		public int GL_TrialBalance1([Parameter(Name="Mnth", DbType="Int")] System.Nullable<int> mnth, [Parameter(Name="Yr", DbType="Int")] System.Nullable<int> yr)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mnth, yr);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_UpdateCharts")]
		[return: Parameter(DbType="Int")]
		public int GL_UpdateCharts()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_UpdateNewJournal")]
		[return: Parameter(DbType="Int")]
		public int GL_UpdateNewJournal([Parameter(Name="JCode", DbType="VarChar(20)")] string jCode, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jCode, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL_ValidateJournalCode")]
		[return: Parameter(DbType="Int")]
		public int GL_ValidateJournalCode([Parameter(Name="JCode", DbType="VarChar(16)")] string jCode, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jCode, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL1")]
		[ResultType(typeof(GL1Result1))]
		[ResultType(typeof(GL1Result2))]
		[ResultType(typeof(GL1Result3))]
		[ResultType(typeof(GL1Result4))]
		public IMultipleResults GL1([Parameter(Name="PNum", DbType="Int")] System.Nullable<int> pNum, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="JournalCode", DbType="VarChar(16)")] string journalCode, [Parameter(Name="NewDate", DbType="DateTime")] System.Nullable<System.DateTime> newDate, [Parameter(Name="Month", DbType="Int")] System.Nullable<int> month, [Parameter(Name="Year", DbType="Int")] System.Nullable<int> year, [Parameter(Name="CopyFrom", DbType="VarChar(30)")] string copyFrom, [Parameter(Name="Param", DbType="VarChar(20)")] string param)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pNum, companyNum, journalCode, newDate, month, year, copyFrom, param);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL2_DEBTORS")]
		[return: Parameter(DbType="Int")]
		public int GL2_DEBTORS([Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [Parameter(Name="Year", DbType="Int")] System.Nullable<int> year, [Parameter(Name="BalCheck", DbType="Int")] System.Nullable<int> balCheck)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, month, year, balCheck);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL2_DEBTORS old int")]
		[return: Parameter(DbType="Int")]
		public int GL2_DEBTORSOldInt([Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [Parameter(Name="Year", DbType="Int")] System.Nullable<int> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, month, year);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL3_CREDITORS")]
		[return: Parameter(DbType="Int")]
		public int GL3_CREDITORS([Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [Parameter(Name="Year", DbType="Int")] System.Nullable<int> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, month, year);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL3_UPD_ExchangeRate")]
		[return: Parameter(DbType="Int")]
		public int GL3_UPD_ExchangeRate([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="Month", DbType="Decimal(9,2)")] System.Nullable<decimal> month, [Parameter(Name="Year", DbType="Decimal(9,2)")] System.Nullable<decimal> year, [Parameter(Name="ToMonth", DbType="Decimal(9,2)")] System.Nullable<decimal> toMonth, [Parameter(Name="ToYear", DbType="Decimal(9,2)")] System.Nullable<decimal> toYear, [Parameter(Name="FromFiscal", DbType="Int")] System.Nullable<int> fromFiscal, [Parameter(Name="FromAudit", DbType="Int")] System.Nullable<int> fromAudit, [Parameter(Name="ToAudit", DbType="Int")] System.Nullable<int> toAudit, [Parameter(Name="USD", DbType="Decimal(3,2)")] System.Nullable<decimal> uSD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, month, year, toMonth, toYear, fromFiscal, fromAudit, toAudit, uSD);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GL4_PURCHASES")]
		[return: Parameter(DbType="Int")]
		public int GL4_PURCHASES([Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [Parameter(Name="Year", DbType="Int")] System.Nullable<int> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, month, year);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_AddCompatibleProd")]
		[return: Parameter(DbType="Int")]
		public int INT_AddCompatibleProd([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="CompatProdCode", DbType="VarChar(35)")] string compatProdCode, [Parameter(Name="Note", DbType="VarChar(256)")] string note)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, compatProdCode, note);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_AddStockAlias")]
		[return: Parameter(DbType="Int")]
		public int INT_AddStockAlias([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="Alias", DbType="VarChar(35)")] string alias, [Parameter(Name="Note", DbType="VarChar(256)")] string note)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, alias, note);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ArchiveActualInvoices")]
		[return: Parameter(DbType="Int")]
		public int INT_ArchiveActualInvoices([Parameter(Name="BatchID", DbType="Int")] System.Nullable<int> batchID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), batchID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ArchiveExpectedInvoices")]
		[return: Parameter(DbType="Int")]
		public int INT_ArchiveExpectedInvoices([Parameter(DbType="DateTime")] System.Nullable<System.DateTime> dtInvBatchDate, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="ContractLocation", DbType="VarChar(5)")] string contractLocation)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dtInvBatchDate, companyNum, contractLocation);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_BUSINESSUNIT_SnapshotComparisonReport")]
		public ISingleResult<INT_BUSINESSUNIT_SnapshotComparisonReportResult> INT_BUSINESSUNIT_SnapshotComparisonReport([Parameter(Name="SnapShotId", DbType="Int")] System.Nullable<int> snapShotId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), snapShotId);
			return ((ISingleResult<INT_BUSINESSUNIT_SnapshotComparisonReportResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_BUSINESSUNIT_SnapshotComparisonReport_BACKUP")]
		public ISingleResult<INT_BUSINESSUNIT_SnapshotComparisonReport_BACKUPResult> INT_BUSINESSUNIT_SnapshotComparisonReport_BACKUP([Parameter(Name="SnapShotId", DbType="Int")] System.Nullable<int> snapShotId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), snapShotId);
			return ((ISingleResult<INT_BUSINESSUNIT_SnapshotComparisonReport_BACKUPResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_BUSINESSUNIT_SnapshotComparisonReport_BACKUP_OLD")]
		public ISingleResult<INT_BUSINESSUNIT_SnapshotComparisonReport_BACKUP_OLDResult> INT_BUSINESSUNIT_SnapshotComparisonReport_BACKUP_OLD([Parameter(Name="SnapShotId", DbType="Int")] System.Nullable<int> snapShotId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), snapShotId);
			return ((ISingleResult<INT_BUSINESSUNIT_SnapshotComparisonReport_BACKUP_OLDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_BUSINESSUNIT_SnapshotComparisonReport_ByDeviceLocation")]
		public ISingleResult<INT_BUSINESSUNIT_SnapshotComparisonReport_ByDeviceLocationResult> INT_BUSINESSUNIT_SnapshotComparisonReport_ByDeviceLocation([Parameter(Name="SnapShotId", DbType="Int")] System.Nullable<int> snapShotId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), snapShotId);
			return ((ISingleResult<INT_BUSINESSUNIT_SnapshotComparisonReport_ByDeviceLocationResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_BUSINESSUNIT_SnapshotComparisonReport_ByRptGrp")]
		public ISingleResult<INT_BUSINESSUNIT_SnapshotComparisonReport_ByRptGrpResult> INT_BUSINESSUNIT_SnapshotComparisonReport_ByRptGrp([Parameter(Name="SnapShotId", DbType="Int")] System.Nullable<int> snapShotId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), snapShotId);
			return ((ISingleResult<INT_BUSINESSUNIT_SnapshotComparisonReport_ByRptGrpResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_BusinessUnit_Targets_Create")]
		[return: Parameter(DbType="Int")]
		public int INT_BusinessUnit_Targets_Create([Parameter(Name="Year", DbType="Int")] System.Nullable<int> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_CE_COMMISSION_REVCAT")]
		public ISingleResult<INT_CE_COMMISSION_REVCATResult> INT_CE_COMMISSION_REVCAT([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum, [Parameter(Name="InvYear", DbType="Int")] System.Nullable<int> invYear, [Parameter(Name="InvMonth", DbType="Int")] System.Nullable<int> invMonth)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, invYear, invMonth);
			return ((ISingleResult<INT_CE_COMMISSION_REVCATResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_CeSetPaid")]
		[return: Parameter(DbType="Int")]
		public int INT_CeSetPaid([Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_CheckCtracForDuplicates")]
		[ResultType(typeof(INT_CheckCtracForDuplicatesResult1))]
		[ResultType(typeof(INT_CheckCtracForDuplicatesResult2))]
		public IMultipleResults INT_CheckCtracForDuplicates([Parameter(Name="ContractItemID", DbType="Int")] System.Nullable<int> contractItemID, [Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="SerialNo", DbType="VarChar(64)")] string serialNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contractItemID, prodCode, serialNo);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_CheckCtracForDuplicates_BACKUP")]
		[ResultType(typeof(INT_CheckCtracForDuplicates_BACKUPResult1))]
		[ResultType(typeof(INT_CheckCtracForDuplicates_BACKUPResult2))]
		public IMultipleResults INT_CheckCtracForDuplicates_BACKUP([Parameter(Name="AccountId", DbType="Int")] System.Nullable<int> accountId, [Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="SerialNo", DbType="VarChar(64)")] string serialNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountId, prodCode, serialNo);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_CreateIntTransferSTKORD")]
		[return: Parameter(DbType="Int")]
		public int INT_CreateIntTransferSTKORD([Parameter(Name="CompanyFrom", DbType="TinyInt")] System.Nullable<byte> companyFrom, [Parameter(Name="CompanyTo", DbType="TinyInt")] System.Nullable<byte> companyTo, [Parameter(Name="OrdNum", DbType="Int")] ref System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyFrom, companyTo, ordNum);
			ordNum = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_CreateIntTransferSTKORD_OLD")]
		[return: Parameter(DbType="Int")]
		public int INT_CreateIntTransferSTKORD_OLD([Parameter(Name="CompanyFrom", DbType="TinyInt")] System.Nullable<byte> companyFrom, [Parameter(Name="CompanyTo", DbType="TinyInt")] System.Nullable<byte> companyTo, [Parameter(Name="OrdNum", DbType="Int")] ref System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyFrom, companyTo, ordNum);
			ordNum = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_CreateIntTransferSTKORD_OLDOLD")]
		[return: Parameter(DbType="Int")]
		public int INT_CreateIntTransferSTKORD_OLDOLD([Parameter(Name="CompanyFrom", DbType="TinyInt")] System.Nullable<byte> companyFrom, [Parameter(Name="CompanyTo", DbType="TinyInt")] System.Nullable<byte> companyTo, [Parameter(Name="OrdNum", DbType="Int")] ref System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyFrom, companyTo, ordNum);
			ordNum = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_CreateTransferBatch")]
		[return: Parameter(DbType="Int")]
		public int INT_CreateTransferBatch([Parameter(Name="LocFrom", DbType="Int")] System.Nullable<int> locFrom, [Parameter(Name="LocTo", DbType="Int")] System.Nullable<int> locTo, [Parameter(Name="User", DbType="VarChar(25)")] string user, [Parameter(Name="Comment", DbType="VarChar(1028)")] string comment, [Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), locFrom, locTo, user, comment, ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_CreditNoteNumber")]
		[return: Parameter(DbType="Int")]
		public int INT_CreditNoteNumber([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DailyAudit_YearToDateRevenue_Credits")]
		[return: Parameter(DbType="Int")]
		public int INT_DailyAudit_YearToDateRevenue_Credits([Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), endMonth, endYear, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DailyAudit_YearToDateRevenue_InvFromOtherPeriods")]
		[return: Parameter(DbType="Int")]
		public int INT_DailyAudit_YearToDateRevenue_InvFromOtherPeriods([Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), endMonth, endYear, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DailyAudit_YearToDateRevenue_Invoices")]
		[return: Parameter(DbType="Int")]
		public int INT_DailyAudit_YearToDateRevenue_Invoices([Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), endMonth, endYear, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DailyAudit_YearToDateRevenue_Report")]
		[return: Parameter(DbType="Int")]
		public int INT_DailyAudit_YearToDateRevenue_Report([Parameter(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [Parameter(Name="EndYear", DbType="Int")] System.Nullable<int> endYear, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), endMonth, endYear, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DebtorDefaultInvStyle")]
		[return: Parameter(DbType="Int")]
		public int INT_DebtorDefaultInvStyle([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DebtorDelete")]
		[return: Parameter(DbType="Int")]
		public int INT_DebtorDelete([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DebtorLocationPDFInvoice")]
		[return: Parameter(DbType="Int")]
		public int INT_DebtorLocationPDFInvoice([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DebtorMixedInternational")]
		[return: Parameter(DbType="Int")]
		public int INT_DebtorMixedInternational([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DebtorPDFInvoice")]
		[return: Parameter(DbType="Int")]
		public int INT_DebtorPDFInvoice([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DebtorSoftInvoice")]
		[return: Parameter(DbType="Int")]
		public int INT_DebtorSoftInvoice([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DebtorsParentBillingMethod")]
		[return: Parameter(DbType="Int")]
		public int INT_DebtorsParentBillingMethod([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DebtorsParentDefaultInvStyle")]
		[return: Parameter(DbType="Int")]
		public int INT_DebtorsParentDefaultInvStyle([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DebtorTransactions_DUMMY")]
		public ISingleResult<INT_DebtorTransactions_DUMMYResult> INT_DebtorTransactions_DUMMY()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<INT_DebtorTransactions_DUMMYResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DeleteAliasProd")]
		[return: Parameter(DbType="Int")]
		public int INT_DeleteAliasProd([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="Alias", DbType="VarChar(35)")] string alias)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, alias);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DeleteCancelledUsage")]
		[return: Parameter(DbType="Int")]
		public int INT_DeleteCancelledUsage([Parameter(Name="UsageID", DbType="Int")] System.Nullable<int> usageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usageID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DeleteCompatibleProd")]
		[return: Parameter(DbType="Int")]
		public int INT_DeleteCompatibleProd([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="CompatProdCode", DbType="VarChar(35)")] string compatProdCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, compatProdCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_DeleteTMInvoice")]
		[return: Parameter(DbType="Int")]
		public int INT_DeleteTMInvoice([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_EditCompatibleProd")]
		[return: Parameter(DbType="Int")]
		public int INT_EditCompatibleProd([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="CompatProdCode", DbType="VarChar(35)")] string compatProdCode, [Parameter(Name="Note", DbType="VarChar(256)")] string note)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, compatProdCode, note);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_EditStockAlias")]
		[return: Parameter(DbType="Int")]
		public int INT_EditStockAlias([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="OriginalAlias", DbType="VarChar(35)")] string originalAlias, [Parameter(Name="Alias", DbType="VarChar(35)")] string alias, [Parameter(Name="Note", DbType="VarChar(256)")] string note)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, originalAlias, alias, note);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ExpandCtracItem")]
		[return: Parameter(DbType="Int")]
		public int INT_ExpandCtracItem([Parameter(Name="ItemId", DbType="Int")] System.Nullable<int> itemId, [Parameter(Name="ContractID", DbType="Int")] System.Nullable<int> contractID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemId, contractID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_Expected_Invoices_Cancel")]
		[return: Parameter(DbType="Int")]
		public int INT_Expected_Invoices_Cancel([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="Success", DbType="Int")] ref System.Nullable<int> success)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, success);
			success = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_FillBusinessUnitSnapShotReport")]
		[return: Parameter(DbType="Int")]
		public int INT_FillBusinessUnitSnapShotReport([Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID, [Parameter(Name="FirstSnapShotId", DbType="Int")] System.Nullable<int> firstSnapShotId, [Parameter(Name="ComparisonSnapShotId", DbType="Int")] System.Nullable<int> comparisonSnapShotId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID, firstSnapShotId, comparisonSnapShotId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_FillEngineersCommissionReport")]
		[return: Parameter(DbType="Int")]
		public int INT_FillEngineersCommissionReport([Parameter(Name="SnapShotId", DbType="Int")] System.Nullable<int> snapShotId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), snapShotId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_FillSnapShotReport")]
		[return: Parameter(DbType="Int")]
		public int INT_FillSnapShotReport([Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID, [Parameter(Name="FirstSnapShotId", DbType="Int")] System.Nullable<int> firstSnapShotId, [Parameter(Name="ComparisonSnapShotId", DbType="Int")] System.Nullable<int> comparisonSnapShotId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID, firstSnapShotId, comparisonSnapShotId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_FillStockTransferItems")]
		[return: Parameter(DbType="Int")]
		public int INT_FillStockTransferItems([Parameter(Name="BatchID", DbType="Int")] System.Nullable<int> batchID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), batchID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_FindCtracItemPrice")]
		[return: Parameter(DbType="Int")]
		public int INT_FindCtracItemPrice([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="Account", DbType="Int")] System.Nullable<int> account, [Parameter(Name="ServiceID", DbType="TinyInt")] System.Nullable<byte> serviceID, [Parameter(Name="PriceOUT", DbType="Decimal(9,2)")] ref System.Nullable<decimal> priceOUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, prodCode, account, serviceID, priceOUT);
			priceOUT = ((System.Nullable<decimal>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_GetCentralIntCompany")]
		[return: Parameter(DbType="Int")]
		public int INT_GetCentralIntCompany([Parameter(Name="CompanyNum", DbType="Int")] ref System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum);
			companyNum = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_GetLocationNames")]
		public ISingleResult<INT_GetLocationNamesResult> INT_GetLocationNames([Parameter(Name="FromLoc", DbType="Int")] System.Nullable<int> fromLoc, [Parameter(Name="ToLoc", DbType="Int")] System.Nullable<int> toLoc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromLoc, toLoc);
			return ((ISingleResult<INT_GetLocationNamesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_GetLocCompanyNum")]
		[return: Parameter(DbType="Int")]
		public int INT_GetLocCompanyNum([Parameter(Name="LocationID", DbType="Int")] System.Nullable<int> locationID, [Parameter(Name="CompanyNum", DbType="Int")] ref System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), locationID, companyNum);
			companyNum = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_GetLocDespatch")]
		[return: Parameter(DbType="Int")]
		public int INT_GetLocDespatch([Parameter(Name="LocationID", DbType="Int")] System.Nullable<int> locationID, [Parameter(Name="ShelfLocationID", DbType="Int")] ref System.Nullable<int> shelfLocationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), locationID, shelfLocationID);
			shelfLocationID = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_GetLocInwardsTarget")]
		[return: Parameter(DbType="Int")]
		public int INT_GetLocInwardsTarget([Parameter(Name="LocationID", DbType="Int")] System.Nullable<int> locationID, [Parameter(Name="ShelfLocationID", DbType="Int")] ref System.Nullable<int> shelfLocationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), locationID, shelfLocationID);
			shelfLocationID = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_GetLocRetBadTarget")]
		[return: Parameter(DbType="Int")]
		public int INT_GetLocRetBadTarget([Parameter(Name="LocationID", DbType="Int")] System.Nullable<int> locationID, [Parameter(Name="ShelfLocationID", DbType="Int")] ref System.Nullable<int> shelfLocationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), locationID, shelfLocationID);
			shelfLocationID = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_GetRevenueCategory")]
		[return: Parameter(DbType="Int")]
		public int INT_GetRevenueCategory([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="RevCat", DbType="Int")] ref System.Nullable<int> revCat)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, revCat);
			revCat = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_GetRevenueCategoryDescription")]
		[return: Parameter(DbType="Int")]
		public int INT_GetRevenueCategoryDescription([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="RevCatDescription", DbType="VarChar(32)")] ref string revCatDescription)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, revCatDescription);
			revCatDescription = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_GetShelfLocationNames")]
		public ISingleResult<INT_GetShelfLocationNamesResult> INT_GetShelfLocationNames([Parameter(Name="FromShelf", DbType="Int")] System.Nullable<int> fromShelf, [Parameter(Name="ToShelf", DbType="Int")] System.Nullable<int> toShelf)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromShelf, toShelf);
			return ((ISingleResult<INT_GetShelfLocationNamesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_GetStockRecCreditorDetails")]
		[return: Parameter(DbType="Int")]
		public int INT_GetStockRecCreditorDetails([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="AccountID", DbType="VarChar(12)")] ref string accountID, [Parameter(Name="Company", DbType="VarChar(50)")] ref string company, [Parameter(Name="LocationID", DbType="Int")] ref System.Nullable<int> locationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, accountID, company, locationID);
			accountID = ((string)(result.GetParameterValue(1)));
			company = ((string)(result.GetParameterValue(2)));
			locationID = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_GetStockTransferRecDetails")]
		[return: Parameter(DbType="Int")]
		public int INT_GetStockTransferRecDetails([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="CompanyFrom", DbType="VarChar(5)")] ref string companyFrom, [Parameter(Name="LocationFrom", DbType="VarChar(50)")] ref string locationFrom, [Parameter(Name="LocationTo", DbType="Int")] ref System.Nullable<int> locationTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, companyFrom, locationFrom, locationTo);
			companyFrom = ((string)(result.GetParameterValue(1)));
			locationFrom = ((string)(result.GetParameterValue(2)));
			locationTo = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_InvHasNonProRata")]
		[return: Parameter(DbType="Int")]
		public int INT_InvHasNonProRata([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_InvHasNonProRataDraft")]
		[return: Parameter(DbType="Int")]
		public int INT_InvHasNonProRataDraft([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_InvHasProRata")]
		[return: Parameter(DbType="Int")]
		public int INT_InvHasProRata([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_Invoice_Exceptions_CheckInvoiceNumber")]
		[return: Parameter(DbType="Int")]
		public int INT_Invoice_Exceptions_CheckInvoiceNumber([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="ErrorCode", DbType="Int")] ref System.Nullable<int> errorCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, accountID, errorCode);
			errorCode = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_Invoice_Exceptions_MarkOff")]
		[return: Parameter(DbType="Int")]
		public int INT_Invoice_Exceptions_MarkOff([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="BatchID", DbType="Int")] System.Nullable<int> batchID, [Parameter(Name="Success", DbType="Int")] ref System.Nullable<int> success)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, batchID, success);
			success = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_InvoiceDefaultInvStyle")]
		[return: Parameter(DbType="Int")]
		public int INT_InvoiceDefaultInvStyle([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_IsStockDiscontinued")]
		[return: Parameter(DbType="Int")]
		public int INT_IsStockDiscontinued([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_LastStockItem")]
		[return: Parameter(DbType="Int")]
		public int INT_LastStockItem([Parameter(Name="Set", DbType="Bit")] System.Nullable<bool> set, [Parameter(Name="ProdCode", DbType="VarChar(35)")] ref string prodCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), set, prodCode);
			prodCode = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_MAINTAIN_DEFAULT_SHELVES")]
		[return: Parameter(DbType="Int")]
		public int INT_MAINTAIN_DEFAULT_SHELVES()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_MonthlyFigures")]
		public ISingleResult<INT_MonthlyFiguresResult> INT_MonthlyFigures([Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate, [Parameter(Name="CompanyIDList", DbType="VarChar(255)")] string companyIDList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate, companyIDList);
			return ((ISingleResult<INT_MonthlyFiguresResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_MonthlyFigures_CUST")]
		public ISingleResult<INT_MonthlyFigures_CUSTResult> INT_MonthlyFigures_CUST([Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate, [Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate, accountID);
			return ((ISingleResult<INT_MonthlyFigures_CUSTResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_NEW_TMINV")]
		[return: Parameter(DbType="Int")]
		public int INT_NEW_TMINV()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_NewDebtorCheck")]
		[return: Parameter(DbType="Int")]
		public int INT_NewDebtorCheck([Parameter(Name="NewID", DbType="Int")] System.Nullable<int> newID, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="NewName", DbType="VarChar(50)")] string newName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newID, companyNum, newName);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_NewDebtorContact")]
		[return: Parameter(DbType="Int")]
		public int INT_NewDebtorContact([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="FName", DbType="VarChar(50)")] string fName, [Parameter(Name="LName", DbType="VarChar(50)")] string lName, [Parameter(Name="Phone", DbType="VarChar(50)")] string phone)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, fName, lName, phone);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_PDFInvoices")]
		public ISingleResult<INT_PDFInvoicesResult> INT_PDFInvoices([Parameter(Name="Batch", DbType="Int")] System.Nullable<int> batch)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), batch);
			return ((ISingleResult<INT_PDFInvoicesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_PDFSingleInvoice")]
		[ResultType(typeof(INT_PDFSingleInvoiceResult1))]
		[ResultType(typeof(INT_PDFSingleInvoiceResult2))]
		public IMultipleResults INT_PDFSingleInvoice([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_PO_LastPrice")]
		[return: Parameter(DbType="Int")]
		public int INT_PO_LastPrice([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="CreditorID", DbType="Int")] System.Nullable<int> creditorID, [Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Price", DbType="Money")] ref System.Nullable<decimal> price)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, creditorID, ordNum, price);
			price = ((System.Nullable<decimal>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_PrintInvoice_TM")]
		[return: Parameter(DbType="Int")]
		public int INT_PrintInvoice_TM([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Co", DbType="Int")] System.Nullable<int> co)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, co);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ProcessInvoiceAccount")]
		[return: Parameter(DbType="Int")]
		public int INT_ProcessInvoiceAccount([Parameter(DbType="DateTime")] System.Nullable<System.DateTime> dtInvBatchDate, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="BatchType", DbType="VarChar(20)")] string batchType, [Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="ContractID", DbType="Int")] System.Nullable<int> contractID, [Parameter(Name="Batch", DbType="Int")] ref System.Nullable<int> batch)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dtInvBatchDate, companyNum, batchType, accountID, contractID, batch);
			batch = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ProcessInvoiceAccount_DRAFT")]
		[return: Parameter(DbType="Int")]
		public int INT_ProcessInvoiceAccount_DRAFT([Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="BatchType", DbType="VarChar(20)")] string batchType, [Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Batch", DbType="Int")] ref System.Nullable<int> batch)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyNum, batchType, accountID, batch);
			batch = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ProcessInvoiceBatch")]
		[return: Parameter(DbType="Int")]
		public int INT_ProcessInvoiceBatch([Parameter(DbType="DateTime")] System.Nullable<System.DateTime> dtInvBatchDate, [Parameter(Name="CompanyNum", DbType="TinyInt")] System.Nullable<byte> companyNum, [Parameter(Name="BatchType", DbType="VarChar(20)")] string batchType, [Parameter(Name="ContractLocation", DbType="VarChar(5)")] string contractLocation, [Parameter(Name="Batch", DbType="Int")] ref System.Nullable<int> batch)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dtInvBatchDate, companyNum, batchType, contractLocation, batch);
			batch = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_Purch_Rpt_Prep")]
		[return: Parameter(DbType="Int")]
		public int INT_Purch_Rpt_Prep([Parameter(Name="DateFrom", DbType="DateTime")] System.Nullable<System.DateTime> dateFrom, [Parameter(Name="DateTo", DbType="DateTime")] System.Nullable<System.DateTime> dateTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateFrom, dateTo);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ResetInvoice")]
		[return: Parameter(DbType="Int")]
		public int INT_ResetInvoice([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="UserID", DbType="VarChar(50)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, userID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ResetInvoice_BACKUP")]
		[return: Parameter(DbType="Int")]
		public int INT_ResetInvoice_BACKUP([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="UserID", DbType="VarChar(50)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, userID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ResetInvoice_BACKUP100204")]
		[return: Parameter(DbType="Int")]
		public int INT_ResetInvoice_BACKUP100204([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="UserID", DbType="VarChar(50)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, userID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ResetInvoice_BACKUP121213")]
		[return: Parameter(DbType="Int")]
		public int INT_ResetInvoice_BACKUP121213([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="UserID", DbType="VarChar(50)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, userID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ResetInvoice_OldBACKUP")]
		[return: Parameter(DbType="Int")]
		public int INT_ResetInvoice_OldBACKUP([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="UserID", DbType="VarChar(50)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, userID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SalesordGSTFree")]
		[return: Parameter(DbType="Int")]
		public int INT_SalesordGSTFree([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SearchIncLocSetting")]
		[return: Parameter(DbType="Int")]
		public int INT_SearchIncLocSetting([Parameter(Name="SET", DbType="Bit")] System.Nullable<bool> sET)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sET);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SearchIncMergedSetting")]
		[return: Parameter(DbType="Int")]
		public int INT_SearchIncMergedSetting([Parameter(Name="SET", DbType="Bit")] System.Nullable<bool> sET)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sET);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SearchIncNotInUseSetting")]
		[return: Parameter(DbType="Int")]
		public int INT_SearchIncNotInUseSetting([Parameter(Name="SET", DbType="Bit")] System.Nullable<bool> sET)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sET);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ServiceID_DevicesExist")]
		[return: Parameter(DbType="Int")]
		public int INT_ServiceID_DevicesExist([Parameter(Name="ServiceID", DbType="Int")] System.Nullable<int> serviceID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ServiceID_NotInUse")]
		[return: Parameter(DbType="Int")]
		public int INT_ServiceID_NotInUse([Parameter(Name="ServiceID", DbType="Int")] System.Nullable<int> serviceID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SetInvLineText")]
		[return: Parameter(DbType="Int")]
		public int INT_SetInvLineText([Parameter(Name="BatchID", DbType="Int")] System.Nullable<int> batchID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), batchID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SetInvLineText_DRAFT")]
		[return: Parameter(DbType="Int")]
		public int INT_SetInvLineText_DRAFT([Parameter(Name="BatchID", DbType="Int")] System.Nullable<int> batchID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), batchID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ShelfLabelReportGet")]
		[return: Parameter(DbType="Int")]
		public int INT_ShelfLabelReportGet([Parameter(Name="RET", DbType="VarChar(100)")] ref string rET)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rET);
			rET = ((string)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ShelfLabelReportSet")]
		[return: Parameter(DbType="Int")]
		public int INT_ShelfLabelReportSet([Parameter(Name="SET", DbType="VarChar(100)")] string sET)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sET);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_Snapshot_Create")]
		[return: Parameter(DbType="Int")]
		public int INT_Snapshot_Create([Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_Snapshot_Delete")]
		[return: Parameter(DbType="Int")]
		public int INT_Snapshot_Delete([Parameter(Name="SnapShotID", DbType="Int")] System.Nullable<int> snapShotID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), snapShotID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_Snapshot_HasOrigForecast")]
		[return: Parameter(DbType="Int")]
		public int INT_Snapshot_HasOrigForecast([Parameter(Name="SnapShotID", DbType="Int")] System.Nullable<int> snapShotID, [Parameter(Name="HasOrigForecast", DbType="Bit")] ref System.Nullable<bool> hasOrigForecast)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), snapShotID, hasOrigForecast);
			hasOrigForecast = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_Snapshot_Import")]
		[return: Parameter(DbType="Int")]
		public int INT_Snapshot_Import()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_Snapshot_RevenueGrowthReportUsingSnapshot")]
		public ISingleResult<INT_Snapshot_RevenueGrowthReportUsingSnapshotResult> INT_Snapshot_RevenueGrowthReportUsingSnapshot([Parameter(Name="Snapshot", DbType="Int")] System.Nullable<int> snapshot)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), snapshot);
			return ((ISingleResult<INT_Snapshot_RevenueGrowthReportUsingSnapshotResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SnapshotComparisonReport")]
		public ISingleResult<INT_SnapshotComparisonReportResult> INT_SnapshotComparisonReport([Parameter(Name="SnapShotId", DbType="Int")] System.Nullable<int> snapShotId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), snapShotId);
			return ((ISingleResult<INT_SnapshotComparisonReportResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SoftInvoiceDetail")]
		public ISingleResult<INT_SoftInvoiceDetailResult> INT_SoftInvoiceDetail([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((ISingleResult<INT_SoftInvoiceDetailResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SoftInvoiceFooter")]
		public ISingleResult<INT_SoftInvoiceFooterResult> INT_SoftInvoiceFooter([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((ISingleResult<INT_SoftInvoiceFooterResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SoftInvoiceHeader")]
		public ISingleResult<INT_SoftInvoiceHeaderResult> INT_SoftInvoiceHeader([Parameter(Name="Batch", DbType="Int")] System.Nullable<int> batch)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), batch);
			return ((ISingleResult<INT_SoftInvoiceHeaderResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SoftTMInvoiceDetail")]
		public ISingleResult<INT_SoftTMInvoiceDetailResult> INT_SoftTMInvoiceDetail([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((ISingleResult<INT_SoftTMInvoiceDetailResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SoftTMInvoiceFooter")]
		public ISingleResult<INT_SoftTMInvoiceFooterResult> INT_SoftTMInvoiceFooter([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((ISingleResult<INT_SoftTMInvoiceFooterResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_SoftTMInvoiceHeader")]
		public ISingleResult<INT_SoftTMInvoiceHeaderResult> INT_SoftTMInvoiceHeader([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((ISingleResult<INT_SoftTMInvoiceHeaderResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_STOCK_DUMP")]
		public ISingleResult<INT_STOCK_DUMPResult> INT_STOCK_DUMP([Parameter(Name="LocID", DbType="Int")] System.Nullable<int> locID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), locID);
			return ((ISingleResult<INT_STOCK_DUMPResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_StockMoveExternal")]
		[return: Parameter(DbType="Int")]
		public int INT_StockMoveExternal([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="FromLoc", DbType="Int")] System.Nullable<int> fromLoc, [Parameter(Name="ToLoc", DbType="Int")] System.Nullable<int> toLoc, [Parameter(Name="QTY", DbType="Decimal(9,2)")] System.Nullable<decimal> qTY, [Parameter(Name="Comment", DbType="VarChar(256)")] string comment, [Parameter(Name="User", DbType="VarChar(25)")] string user, [Parameter(Name="BatchID", DbType="Int")] System.Nullable<int> batchID, [Parameter(Name="UseTrans", DbType="Bit")] System.Nullable<bool> useTrans, [Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Despatch", DbType="Int")] System.Nullable<int> despatch, [Parameter(Name="NoReturn", DbType="Bit")] System.Nullable<bool> noReturn)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, fromLoc, toLoc, qTY, comment, user, batchID, useTrans, ordNum, despatch, noReturn);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_StockMoveInternal")]
		[return: Parameter(DbType="Int")]
		public int INT_StockMoveInternal([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="FromShelfLoc", DbType="Int")] System.Nullable<int> fromShelfLoc, [Parameter(Name="ToShelfLoc", DbType="Int")] System.Nullable<int> toShelfLoc, [Parameter(Name="ToLoc", DbType="Int")] System.Nullable<int> toLoc, [Parameter(Name="QTY", DbType="Decimal(9,2)")] System.Nullable<decimal> qTY, [Parameter(Name="Comment", DbType="VarChar(256)")] string comment, [Parameter(Name="User", DbType="VarChar(25)")] string user, [Parameter(Name="BatchID", DbType="Int")] System.Nullable<int> batchID, [Parameter(Name="UseTrans", DbType="Bit")] System.Nullable<bool> useTrans)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, fromShelfLoc, toShelfLoc, toLoc, qTY, comment, user, batchID, useTrans);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_StockTotals")]
		[return: Parameter(DbType="Int")]
		public int INT_StockTotals([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="Total", DbType="Int")] ref System.Nullable<int> total, [Parameter(Name="Alloc", DbType="Int")] ref System.Nullable<int> alloc, [Parameter(Name="QOH", DbType="Int")] ref System.Nullable<int> qOH, [Parameter(Name="QOO", DbType="Int")] ref System.Nullable<int> qOO, [Parameter(Name="QBO", DbType="Int")] ref System.Nullable<int> qBO, [Parameter(Name="Contracted", DbType="Int")] ref System.Nullable<int> contracted, [Parameter(Name="CompatQOH", DbType="Int")] ref System.Nullable<int> compatQOH, [Parameter(Name="Testing", DbType="Int")] ref System.Nullable<int> testing, [Parameter(Name="Repair", DbType="Int")] ref System.Nullable<int> repair, [Parameter(Name="RetBad", DbType="Int")] ref System.Nullable<int> retBad, [Parameter(Name="MaintMin", DbType="Decimal(9,2)")] ref System.Nullable<decimal> maintMin, [Parameter(Name="MaintMax", DbType="Decimal(9,2)")] ref System.Nullable<decimal> maintMax, [Parameter(Name="MaintAVG", DbType="Decimal(9,2)")] ref System.Nullable<decimal> maintAVG)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, total, alloc, qOH, qOO, qBO, contracted, compatQOH, testing, repair, retBad, maintMin, maintMax, maintAVG);
			total = ((System.Nullable<int>)(result.GetParameterValue(1)));
			alloc = ((System.Nullable<int>)(result.GetParameterValue(2)));
			qOH = ((System.Nullable<int>)(result.GetParameterValue(3)));
			qOO = ((System.Nullable<int>)(result.GetParameterValue(4)));
			qBO = ((System.Nullable<int>)(result.GetParameterValue(5)));
			contracted = ((System.Nullable<int>)(result.GetParameterValue(6)));
			compatQOH = ((System.Nullable<int>)(result.GetParameterValue(7)));
			testing = ((System.Nullable<int>)(result.GetParameterValue(8)));
			repair = ((System.Nullable<int>)(result.GetParameterValue(9)));
			retBad = ((System.Nullable<int>)(result.GetParameterValue(10)));
			maintMin = ((System.Nullable<decimal>)(result.GetParameterValue(11)));
			maintMax = ((System.Nullable<decimal>)(result.GetParameterValue(12)));
			maintAVG = ((System.Nullable<decimal>)(result.GetParameterValue(13)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_StockTotalsLoc")]
		[return: Parameter(DbType="Int")]
		public int INT_StockTotalsLoc([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="Loc", DbType="Int")] System.Nullable<int> loc, [Parameter(Name="Total", DbType="Int")] ref System.Nullable<int> total, [Parameter(Name="Alloc", DbType="Int")] ref System.Nullable<int> alloc, [Parameter(Name="QOH", DbType="Int")] ref System.Nullable<int> qOH, [Parameter(Name="QOO", DbType="Int")] ref System.Nullable<int> qOO, [Parameter(Name="QBO", DbType="Int")] ref System.Nullable<int> qBO, [Parameter(Name="Contracted", DbType="Int")] ref System.Nullable<int> contracted, [Parameter(Name="CompatQOH", DbType="Int")] ref System.Nullable<int> compatQOH, [Parameter(Name="Testing", DbType="Int")] ref System.Nullable<int> testing, [Parameter(Name="Repair", DbType="Int")] ref System.Nullable<int> repair, [Parameter(Name="RetBad", DbType="Int")] ref System.Nullable<int> retBad)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, loc, total, alloc, qOH, qOO, qBO, contracted, compatQOH, testing, repair, retBad);
			total = ((System.Nullable<int>)(result.GetParameterValue(2)));
			alloc = ((System.Nullable<int>)(result.GetParameterValue(3)));
			qOH = ((System.Nullable<int>)(result.GetParameterValue(4)));
			qOO = ((System.Nullable<int>)(result.GetParameterValue(5)));
			qBO = ((System.Nullable<int>)(result.GetParameterValue(6)));
			contracted = ((System.Nullable<int>)(result.GetParameterValue(7)));
			compatQOH = ((System.Nullable<int>)(result.GetParameterValue(8)));
			testing = ((System.Nullable<int>)(result.GetParameterValue(9)));
			repair = ((System.Nullable<int>)(result.GetParameterValue(10)));
			retBad = ((System.Nullable<int>)(result.GetParameterValue(11)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_STOCKTREE_LOCATIONS")]
		public ISingleResult<INT_STOCKTREE_LOCATIONSResult> INT_STOCKTREE_LOCATIONS([Parameter(Name="PRODCODE", DbType="VarChar(35)")] string pRODCODE)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pRODCODE);
			return ((ISingleResult<INT_STOCKTREE_LOCATIONSResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_Targets_Create")]
		[return: Parameter(DbType="Int")]
		public int INT_Targets_Create([Parameter(Name="Year", DbType="Int")] System.Nullable<int> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_TM_INV_CALC_TOTALS")]
		[return: Parameter(DbType="Int")]
		public int INT_TM_INV_CALC_TOTALS([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="InvTotal", DbType="Decimal(9,2)")] ref System.Nullable<decimal> invTotal, [Parameter(Name="ExpenseTotal", DbType="Decimal(9,2)")] ref System.Nullable<decimal> expenseTotal, [Parameter(Name="CommissionTotal", DbType="Decimal(9,2)")] ref System.Nullable<decimal> commissionTotal, [Parameter(Name="GST_Total", DbType="Decimal(9,2)")] ref System.Nullable<decimal> gST_Total)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, invTotal, expenseTotal, commissionTotal, gST_Total);
			invTotal = ((System.Nullable<decimal>)(result.GetParameterValue(1)));
			expenseTotal = ((System.Nullable<decimal>)(result.GetParameterValue(2)));
			commissionTotal = ((System.Nullable<decimal>)(result.GetParameterValue(3)));
			gST_Total = ((System.Nullable<decimal>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_UPDATE_STOCK_LOCK_SPECIFIC")]
		[return: Parameter(DbType="Int")]
		public int INT_UPDATE_STOCK_LOCK_SPECIFIC()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_UpdateCeCommissionStatus")]
		[return: Parameter(DbType="Int")]
		public int INT_UpdateCeCommissionStatus()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ValidateCtracItemPrice")]
		[return: Parameter(DbType="Int")]
		public int INT_ValidateCtracItemPrice([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="Account", DbType="Int")] System.Nullable<int> account, [Parameter(Name="Price", DbType="Decimal(9,2)")] System.Nullable<decimal> price, [Parameter(Name="ServiceID", DbType="Int")] System.Nullable<int> serviceID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, prodCode, account, price, serviceID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.INT_ValidateCtracItemSerial")]
		[return: Parameter(DbType="Int")]
		public int INT_ValidateCtracItemSerial([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="SerialNo", DbType="VarChar(64)")] string serialNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, prodCode, serialNo);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.InvoicePrintOptions")]
		public ISingleResult<InvoicePrintOptionsResult> InvoicePrintOptions([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID);
			return ((ISingleResult<InvoicePrintOptionsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.InvoiceSaleItems")]
		[ResultType(typeof(InvoiceSaleItemsResult))]
		public IMultipleResults InvoiceSaleItems([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="ProRata", DbType="Bit")] System.Nullable<bool> proRata)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, proRata);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.InvoiceTotal")]
		[return: Parameter(DbType="Int")]
		public int InvoiceTotal([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="InvTotal_OUT", DbType="Decimal(9,2)")] ref System.Nullable<decimal> invTotal_OUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, invTotal_OUT);
			invTotal_OUT = ((System.Nullable<decimal>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Lockout_Check")]
		[return: Parameter(DbType="Int")]
		public int Lockout_Check()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.OnCreditHold")]
		[return: Parameter(DbType="Int")]
		public int OnCreditHold([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PartsMerge_Insert")]
		[return: Parameter(DbType="Int")]
		public int PartsMerge_Insert([Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PartsMerge_MergeAlias")]
		[return: Parameter(DbType="Int")]
		public int PartsMerge_MergeAlias([Parameter(Name="PartsMergeID", DbType="Int")] System.Nullable<int> partsMergeID, [Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), partsMergeID, prodCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PartsMerge_MergeCompatibility")]
		[return: Parameter(DbType="Int")]
		public int PartsMerge_MergeCompatibility([Parameter(Name="PartsMergeID", DbType="Int")] System.Nullable<int> partsMergeID, [Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), partsMergeID, prodCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PartsMerge_Rollback")]
		[return: Parameter(DbType="Int")]
		public int PartsMerge_Rollback([Parameter(Name="PartsMergeID", DbType="Int")] System.Nullable<int> partsMergeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), partsMergeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PartsMerge_ValidateAlias")]
		[return: Parameter(DbType="Int")]
		public int PartsMerge_ValidateAlias([Parameter(Name="PartsMergeID", DbType="Int")] System.Nullable<int> partsMergeID, [Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), partsMergeID, prodCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_ClearExportFlags")]
		[return: Parameter(DbType="Int")]
		public int PO_ClearExportFlags([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_DifferentReasonType")]
		[return: Parameter(DbType="Int")]
		public int PO_DifferentReasonType([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="ReasonType", DbType="Int")] System.Nullable<int> reasonType, [Parameter(Name="Different", DbType="Bit")] ref System.Nullable<bool> different)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, reasonType, different);
			different = ((System.Nullable<bool>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_ExportToAccpac_OrderItems")]
		public ISingleResult<PO_ExportToAccpac_OrderItemsResult> PO_ExportToAccpac_OrderItems([Parameter(Name="ItemNum", DbType="Int")] System.Nullable<int> itemNum, [Parameter(Name="POCounter", DbType="Int")] System.Nullable<int> pOCounter, [Parameter(Name="ItemCounter", DbType="Int")] System.Nullable<int> itemCounter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemNum, pOCounter, itemCounter);
			return ((ISingleResult<PO_ExportToAccpac_OrderItemsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_GetBusinessUnitFilterPOCutoff")]
		[return: Parameter(DbType="Int")]
		public int PO_GetBusinessUnitFilterPOCutoff([Parameter(Name="CutoffOrdNum", DbType="Int")] ref System.Nullable<int> cutoffOrdNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cutoffOrdNum);
			cutoffOrdNum = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_GetCountryAbbrev")]
		[return: Parameter(DbType="Int")]
		public int PO_GetCountryAbbrev([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="POAbbrev", DbType="VarChar(20)")] ref string pOAbbrev)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, pOAbbrev);
			pOAbbrev = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_GetExpenditureType")]
		[return: Parameter(DbType="Int")]
		public int PO_GetExpenditureType([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="ExpenditureType", DbType="Int")] ref System.Nullable<int> expenditureType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, expenditureType);
			expenditureType = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_GetGSTRate")]
		[return: Parameter(DbType="Int")]
		public int PO_GetGSTRate([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="GSTRate", DbType="Decimal(9,4)")] ref System.Nullable<decimal> gSTRate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, gSTRate);
			gSTRate = ((System.Nullable<decimal>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_GetOrderTypeBusinessUnit")]
		[return: Parameter(DbType="Int")]
		public int PO_GetOrderTypeBusinessUnit([Parameter(Name="OrderExpenditureType", DbType="Int")] System.Nullable<int> orderExpenditureType, [Parameter(Name="BusinessUnit", DbType="Int")] ref System.Nullable<int> businessUnit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderExpenditureType, businessUnit);
			businessUnit = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_HasGLCodes")]
		[return: Parameter(DbType="Int")]
		public int PO_HasGLCodes([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Complete", DbType="Bit")] ref System.Nullable<bool> complete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, complete);
			complete = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_IsComplete")]
		[return: Parameter(DbType="Int")]
		public int PO_IsComplete([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Complete", DbType="Bit")] ref System.Nullable<bool> complete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, complete);
			complete = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_IsPartiallyReceived")]
		[return: Parameter(DbType="Int")]
		public int PO_IsPartiallyReceived([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Received", DbType="Bit")] ref System.Nullable<bool> received)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, received);
			received = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_MissingCostCategories")]
		[return: Parameter(DbType="Int")]
		public int PO_MissingCostCategories([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Missing", DbType="Bit")] ref System.Nullable<bool> missing)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, missing);
			missing = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_OrderTypeHasOneBusinessUnit")]
		[return: Parameter(DbType="Int")]
		public int PO_OrderTypeHasOneBusinessUnit([Parameter(Name="OrderExpenditureType", DbType="Int")] System.Nullable<int> orderExpenditureType, [Parameter(Name="OneBusinessUnit", DbType="Bit")] ref System.Nullable<bool> oneBusinessUnit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderExpenditureType, oneBusinessUnit);
			oneBusinessUnit = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_RemoveGLCodes")]
		[return: Parameter(DbType="Int")]
		public int PO_RemoveGLCodes([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_SetItemCustomer")]
		[return: Parameter(DbType="Int")]
		public int PO_SetItemCustomer([Parameter(Name="Customer", DbType="Int")] System.Nullable<int> customer, [Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customer, ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PO_UpdateStockShelfValues")]
		[return: Parameter(DbType="Int")]
		public int PO_UpdateStockShelfValues([Parameter(Name="ItemNum", DbType="Int")] System.Nullable<int> itemNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.POReceived")]
		[return: Parameter(DbType="Int")]
		public int POReceived([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="ItemNum", DbType="Int")] System.Nullable<int> itemNum, [Parameter(Name="QTY_OUT", DbType="Decimal(9,2)")] ref System.Nullable<decimal> qTY_OUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, itemNum, qTY_OUT);
			qTY_OUT = ((System.Nullable<decimal>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.POTax")]
		[return: Parameter(DbType="Int")]
		public int POTax([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Tax", DbType="Decimal(10,2)")] ref System.Nullable<decimal> tax)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, tax);
			tax = ((System.Nullable<decimal>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.POTotal")]
		[return: Parameter(DbType="Int")]
		public int POTotal([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Total", DbType="Decimal(10,2)")] ref System.Nullable<decimal> total)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, total);
			total = ((System.Nullable<decimal>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PrintInvoice")]
		[return: Parameter(DbType="Int")]
		public int PrintInvoice([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Co", DbType="Int")] System.Nullable<int> co)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, co);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PrintInvoice_DRAFT")]
		[return: Parameter(DbType="Int")]
		public int PrintInvoice_DRAFT([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="Co", DbType="Int")] System.Nullable<int> co)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, co);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ProdCodeExists")]
		[return: Parameter(DbType="Int")]
		public int ProdCodeExists([Parameter(Name="DisplayCode", DbType="VarChar(35)")] string displayCode, [Parameter(Name="ProdCode", DbType="VarChar(35)")] ref string prodCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), displayCode, prodCode);
			prodCode = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_AddTimesheet")]
		[return: Parameter(DbType="Int")]
		public int Project_AddTimesheet([Parameter(Name="EngineerID", DbType="VarChar(25)")] string engineerID, [Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [Parameter(Name="EditMode", DbType="Bit")] System.Nullable<bool> editMode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), engineerID, startDate, editMode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_CopyTasks")]
		[return: Parameter(DbType="Int")]
		public int Project_CopyTasks([Parameter(Name="EngineerID", DbType="VarChar(25)")] string engineerID, [Parameter(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [Parameter(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate, [Parameter(Name="Tasks", DbType="Int")] ref System.Nullable<int> tasks, [Parameter(Name="Message", DbType="VarChar(100)")] ref string message)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), engineerID, fromDate, toDate, tasks, message);
			tasks = ((System.Nullable<int>)(result.GetParameterValue(3)));
			message = ((string)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_FieldHasMultipleAccessDetails")]
		[return: Parameter(DbType="Int")]
		public int Project_FieldHasMultipleAccessDetails([Parameter(Name="FieldName", DbType="VarChar(50)")] string fieldName, [Parameter(Name="ProjectType", DbType="VarChar(20)")] string projectType, [Parameter(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fieldName, projectType, status);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_GetFieldAccessDetails")]
		public ISingleResult<Project_GetFieldAccessDetailsResult> Project_GetFieldAccessDetails([Parameter(Name="ProjectType", DbType="VarChar(20)")] string projectType, [Parameter(Name="FieldName", DbType="VarChar(50)")] string fieldName, [Parameter(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectType, fieldName, status);
			return ((ISingleResult<Project_GetFieldAccessDetailsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_GetGUIFieldName")]
		[return: Parameter(DbType="Int")]
		public int Project_GetGUIFieldName([Parameter(Name="FieldName", DbType="VarChar(50)")] string fieldName, [Parameter(Name="GUIFieldName", DbType="VarChar(50)")] ref string gUIFieldName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fieldName, gUIFieldName);
			gUIFieldName = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_GetMandatoryFields")]
		[ResultType(typeof(Project_GetMandatoryFieldsResult))]
		public IMultipleResults Project_GetMandatoryFields([Parameter(Name="ProjectType", DbType="VarChar(20)")] string projectType, [Parameter(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectType, status);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_GetNextPCRNumber")]
		[return: Parameter(DbType="Int")]
		public int Project_GetNextPCRNumber([Parameter(Name="ProjectID", DbType="Int")] System.Nullable<int> projectID, [Parameter(Name="NumberOfNewPCRsInGrids", DbType="Int")] System.Nullable<int> numberOfNewPCRsInGrids)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectID, numberOfNewPCRsInGrids);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_GetProjectName")]
		[return: Parameter(DbType="Int")]
		public int Project_GetProjectName([Parameter(Name="ProjectID", DbType="Int")] System.Nullable<int> projectID, [Parameter(Name="ProjectNameOut", DbType="VarChar(100)")] ref string projectNameOut)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectID, projectNameOut);
			projectNameOut = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_GetProjectType")]
		public ISingleResult<Project_GetProjectTypeResult> Project_GetProjectType([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="ProjectType", DbType="VarChar(20)")] ref string projectType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, projectType);
			projectType = ((string)(result.GetParameterValue(1)));
			return ((ISingleResult<Project_GetProjectTypeResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_GetSavedProjectStatus")]
		[return: Parameter(DbType="Int")]
		public int Project_GetSavedProjectStatus([Parameter(Name="ProjectID", DbType="Int")] System.Nullable<int> projectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_GetStatusID")]
		[return: Parameter(DbType="Int")]
		public int Project_GetStatusID([Parameter(Name="StatusDescription", DbType="VarChar(50)")] string statusDescription)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusDescription);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_GetTimesheetStartDate")]
		[return: Parameter(DbType="Int")]
		public int Project_GetTimesheetStartDate([Parameter(Name="TimesheetID", DbType="Int")] System.Nullable<int> timesheetID, [Parameter(Name="StartDate", DbType="VarChar(25)")] ref string startDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), timesheetID, startDate);
			startDate = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_PasteTasks")]
		[return: Parameter(DbType="Int")]
		public int Project_PasteTasks([Parameter(Name="EngineerID", DbType="VarChar(25)")] string engineerID, [Parameter(Name="FromTimesheetID", DbType="Int")] System.Nullable<int> fromTimesheetID, [Parameter(Name="ToTimesheetID", DbType="Int")] System.Nullable<int> toTimesheetID, [Parameter(Name="Tasks", DbType="Int")] ref System.Nullable<int> tasks, [Parameter(Name="Message", DbType="VarChar(100)")] ref string message)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), engineerID, fromTimesheetID, toTimesheetID, tasks, message);
			tasks = ((System.Nullable<int>)(result.GetParameterValue(3)));
			message = ((string)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_PCR_FieldHasMultipleAccessDetails")]
		[return: Parameter(DbType="Int")]
		public int Project_PCR_FieldHasMultipleAccessDetails([Parameter(Name="FieldName", DbType="VarChar(50)")] string fieldName, [Parameter(Name="ProjectType", DbType="VarChar(20)")] string projectType, [Parameter(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fieldName, projectType, status);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_PCR_GetFieldAccessDetails")]
		public ISingleResult<Project_PCR_GetFieldAccessDetailsResult> Project_PCR_GetFieldAccessDetails([Parameter(Name="ProjectType", DbType="VarChar(20)")] string projectType, [Parameter(Name="FieldName", DbType="VarChar(50)")] string fieldName, [Parameter(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectType, fieldName, status);
			return ((ISingleResult<Project_PCR_GetFieldAccessDetailsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_PCR_GetGUIFieldName")]
		[return: Parameter(DbType="Int")]
		public int Project_PCR_GetGUIFieldName([Parameter(Name="FieldName", DbType="VarChar(50)")] string fieldName, [Parameter(Name="GUIFieldName", DbType="VarChar(50)")] ref string gUIFieldName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fieldName, gUIFieldName);
			gUIFieldName = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_PCR_GetMandatoryFields")]
		[ResultType(typeof(Project_PCR_GetMandatoryFieldsResult))]
		public IMultipleResults Project_PCR_GetMandatoryFields([Parameter(Name="ProjectType", DbType="VarChar(20)")] string projectType, [Parameter(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectType, status);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_SecurityLevel")]
		[return: Parameter(DbType="Int")]
		public int Project_SecurityLevel([Parameter(Name="User", DbType="VarChar(25)")] string user)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_SecurityValidateLogin")]
		[return: Parameter(DbType="Int")]
		public int Project_SecurityValidateLogin([Parameter(Name="ID", DbType="VarChar(25)")] string iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_UpdateTimesheet")]
		[return: Parameter(DbType="Int")]
		public int Project_UpdateTimesheet([Parameter(Name="TimesheetID", DbType="Int")] System.Nullable<int> timesheetID, [Parameter(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), timesheetID, status);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Project_UserHasSecurityApproval")]
		[return: Parameter(DbType="Int")]
		public int Project_UserHasSecurityApproval([Parameter(Name="User", DbType="VarChar(25)")] string user, [Parameter(Name="Approval", DbType="VarChar(50)")] string approval)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user, approval);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PurchOrdExists")]
		[return: Parameter(DbType="Int")]
		public int PurchOrdExists([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="IgnoreTransfers", DbType="Bit")] System.Nullable<bool> ignoreTransfers)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, ignoreTransfers);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PurchOrdIsStockTransfer")]
		[return: Parameter(DbType="Int")]
		public int PurchOrdIsStockTransfer([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.RemoveContractItem")]
		[return: Parameter(DbType="Int")]
		public int RemoveContractItem([Parameter(Name="ContractItemID", DbType="Int")] System.Nullable<int> contractItemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contractItemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.RemoveLocation")]
		[return: Parameter(DbType="Int")]
		public int RemoveLocation([Parameter(Name="LocationID", DbType="Int")] System.Nullable<int> locationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), locationID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.RemoveStockItem")]
		[return: Parameter(DbType="Int")]
		public int RemoveStockItem([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ReplicateStockItem")]
		[return: Parameter(DbType="Int")]
		public int ReplicateStockItem([Parameter(Name="StockItem", DbType="VarChar(35)")] string stockItem, [Parameter(Name="StartItem", DbType="VarChar(35)")] string startItem, [Parameter(Name="Amount", DbType="Int")] System.Nullable<int> amount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stockItem, startItem, amount);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.RollOpeningBalances")]
		[return: Parameter(DbType="Int")]
		public int RollOpeningBalances([Parameter(Name="Year", DbType="SmallInt")] System.Nullable<short> year, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year, month);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SALES_TEAMS_GROWTH_TARGETS_Create")]
		[return: Parameter(DbType="Int")]
		public int SALES_TEAMS_GROWTH_TARGETS_Create([Parameter(Name="Year", DbType="Int")] System.Nullable<int> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SALESORD_DRAFT_RemoveOldRecords")]
		[return: Parameter(DbType="Int")]
		public int SALESORD_DRAFT_RemoveOldRecords()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SALESORD_EXTERNAL_LOG_AddLog")]
		[return: Parameter(DbType="Int")]
		public int SALESORD_EXTERNAL_LOG_AddLog([Parameter(Name="LogDate", DbType="DateTime")] System.Nullable<System.DateTime> logDate, [Parameter(Name="BatchID", DbType="Int")] System.Nullable<int> batchID, [Parameter(Name="StoredProcedureName", DbType="VarChar(250)")] string storedProcedureName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), logDate, batchID, storedProcedureName);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SALESORD_GetGSTRate")]
		[return: Parameter(DbType="Int")]
		public int SALESORD_GetGSTRate([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="GSTRate", DbType="Decimal(9,4)")] ref System.Nullable<decimal> gSTRate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, gSTRate);
			gSTRate = ((System.Nullable<decimal>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SALESORD_PDFCreated")]
		[return: Parameter(DbType="Int")]
		public int SALESORD_PDFCreated([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SALESORD_PDFSent")]
		[return: Parameter(DbType="Int")]
		public int SALESORD_PDFSent([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SalesOrdCalcTotal")]
		[return: Parameter(DbType="Int")]
		public int SalesOrdCalcTotal([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="OrdTot_OUT", DbType="Decimal(9,2)")] ref System.Nullable<decimal> ordTot_OUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, ordTot_OUT);
			ordTot_OUT = ((System.Nullable<decimal>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SalesOrdFirstOrdNum")]
		[return: Parameter(DbType="Int")]
		public int SalesOrdFirstOrdNum([Parameter(Name="OrdNum_OUT", DbType="Int")] ref System.Nullable<int> ordNum_OUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum_OUT);
			ordNum_OUT = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SECURITY_GetCurrentUser")]
		[return: Parameter(DbType="Int")]
		public int SECURITY_GetCurrentUser([Parameter(Name="User", DbType="VarChar(25)")] ref string user)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user);
			user = ((string)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SecurityApproval")]
		[return: Parameter(DbType="Int")]
		public int SecurityApproval([Parameter(Name="User", DbType="VarChar(25)")] string user, [Parameter(Name="App", DbType="VarChar(50)")] string app, [Parameter(Name="CompanyNum", DbType="Int")] System.Nullable<int> companyNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user, app, companyNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SecurityValidateLogin")]
		[return: Parameter(DbType="Int")]
		public int SecurityValidateLogin([Parameter(Name="ID", DbType="VarChar(25)")] string iD, [Parameter(Name="Password", DbType="VarChar(15)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, password);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SetCurrentPeriodToday")]
		[return: Parameter(DbType="Int")]
		public int SetCurrentPeriodToday()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SetDebtorPayment")]
		[return: Parameter(DbType="Int")]
		public int SetDebtorPayment([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Bank", DbType="VarChar(10)")] string bank, [Parameter(Name="BSB", DbType="VarChar(10)")] string bSB, [Parameter(Name="GLAccNum", DbType="VarChar(16)")] string gLAccNum, [Parameter(Name="ChequeNum", DbType="VarChar(16)")] string chequeNum, [Parameter(Name="Amount", DbType="Money")] System.Nullable<decimal> amount, [Parameter(Name="Discount", DbType="Money")] System.Nullable<decimal> discount, [Parameter(Name="DepositDate", DbType="DateTime")] System.Nullable<System.DateTime> depositDate, [Parameter(Name="CompanyNum", DbType="VarChar(12)")] string companyNum, [Parameter(Name="BankAccGL", DbType="VarChar(16)")] string bankAccGL, [Parameter(Name="Company", DbType="VarChar(50)")] string company, [Parameter(Name="CurrencyType", DbType="VarChar(5)")] string currencyType, [Parameter(Name="ExchRate", DbType="Decimal(5,3)")] System.Nullable<decimal> exchRate, [Parameter(Name="GLAccAdjust", DbType="VarChar(16)")] string gLAccAdjust, [Parameter(Name="RecNum", DbType="Int")] ref System.Nullable<int> recNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, bank, bSB, gLAccNum, chequeNum, amount, discount, depositDate, companyNum, bankAccGL, company, currencyType, exchRate, gLAccAdjust, recNum);
			recNum = ((System.Nullable<int>)(result.GetParameterValue(14)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SetFastPay")]
		[return: Parameter(DbType="Int")]
		public int SetFastPay([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SetGlJournalActive")]
		[return: Parameter(DbType="Int")]
		public int SetGlJournalActive([Parameter(Name="JournalCode", DbType="VarChar(16)")] string journalCode, [Parameter(Name="Active", DbType="Bit")] System.Nullable<bool> active, [Parameter(Name="Month", DbType="Int")] System.Nullable<int> month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), journalCode, active, month);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SetGlJournalInactive")]
		[return: Parameter(DbType="Int")]
		public int SetGlJournalInactive([Parameter(Name="JournalCode", DbType="VarChar(16)")] string journalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), journalCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SetGlJournalViewable")]
		[return: Parameter(DbType="Int")]
		public int SetGlJournalViewable([Parameter(Name="JournalCode", DbType="VarChar(16)")] string journalCode, [Parameter(Name="Viewable", DbType="Bit")] System.Nullable<bool> viewable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), journalCode, viewable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SetHoldStatus")]
		[return: Parameter(DbType="Int")]
		public int SetHoldStatus([Parameter(Name="CustomerCode", DbType="VarChar(12)")] string customerCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SetInvoiceTotals")]
		[return: Parameter(DbType="Int")]
		public int SetInvoiceTotals([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SetTaxRates")]
		[return: Parameter(DbType="Int")]
		public int SetTaxRates([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Setup_NewCompany")]
		[return: Parameter(DbType="Int")]
		public int Setup_NewCompany([Parameter(Name="Co", DbType="Int")] System.Nullable<int> co)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), co);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SimulateDebtorPayment")]
		public ISingleResult<SimulateDebtorPaymentResult> SimulateDebtorPayment([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Amount", DbType="Money")] System.Nullable<decimal> amount, [Parameter(Name="Period", DbType="TinyInt")] System.Nullable<byte> period)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, amount, period);
			return ((ISingleResult<SimulateDebtorPaymentResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_TestStoredProcedure")]
		public ISingleResult<Sp_TestStoredProcedureResult> Sp_TestStoredProcedure()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Sp_TestStoredProcedureResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_upgraddiagrams")]
		[return: Parameter(DbType="Int")]
		public int Sp_upgraddiagrams()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spThirdPartyFinanceGUI_GetAgreementDetails")]
		public ISingleResult<SpThirdPartyFinanceGUI_GetAgreementDetailsResult> SpThirdPartyFinanceGUI_GetAgreementDetails([Parameter(Name="SarID", DbType="VarChar(20)")] string sarID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sarID);
			return ((ISingleResult<SpThirdPartyFinanceGUI_GetAgreementDetailsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spThirdPartyFinanceGUI_GetAgreementGLCodeTotals")]
		public ISingleResult<SpThirdPartyFinanceGUI_GetAgreementGLCodeTotalsResult> SpThirdPartyFinanceGUI_GetAgreementGLCodeTotals([Parameter(Name="SarID", DbType="VarChar(20)")] string sarID, [Parameter(Name="InvoiceFromDate", DbType="DateTime")] System.Nullable<System.DateTime> invoiceFromDate, [Parameter(Name="InvoiceToDate", DbType="DateTime")] System.Nullable<System.DateTime> invoiceToDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sarID, invoiceFromDate, invoiceToDate);
			return ((ISingleResult<SpThirdPartyFinanceGUI_GetAgreementGLCodeTotalsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spThirdPartyFinanceGUI_GetAgreementTotal")]
		public ISingleResult<SpThirdPartyFinanceGUI_GetAgreementTotalResult> SpThirdPartyFinanceGUI_GetAgreementTotal([Parameter(Name="SarID", DbType="VarChar(20)")] string sarID, [Parameter(Name="InvoiceFromDate", DbType="DateTime")] System.Nullable<System.DateTime> invoiceFromDate, [Parameter(Name="InvoiceToDate", DbType="DateTime")] System.Nullable<System.DateTime> invoiceToDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sarID, invoiceFromDate, invoiceToDate);
			return ((ISingleResult<SpThirdPartyFinanceGUI_GetAgreementTotalResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spThirdPartyFinanceGUI_GetDeviceDetails")]
		public ISingleResult<SpThirdPartyFinanceGUI_GetDeviceDetailsResult> SpThirdPartyFinanceGUI_GetDeviceDetails([Parameter(Name="SarID", DbType="VarChar(20)")] string sarID, [Parameter(Name="InvoiceFromDate", DbType="DateTime")] System.Nullable<System.DateTime> invoiceFromDate, [Parameter(Name="InvoiceToDate", DbType="DateTime")] System.Nullable<System.DateTime> invoiceToDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sarID, invoiceFromDate, invoiceToDate);
			return ((ISingleResult<SpThirdPartyFinanceGUI_GetDeviceDetailsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spThirdPartyFinanceGUI_GetInvoiceDeviceDetails")]
		public ISingleResult<SpThirdPartyFinanceGUI_GetInvoiceDeviceDetailsResult> SpThirdPartyFinanceGUI_GetInvoiceDeviceDetails([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((ISingleResult<SpThirdPartyFinanceGUI_GetInvoiceDeviceDetailsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spThirdPartyFinanceGUI_GetInvoiceForDates")]
		public ISingleResult<SpThirdPartyFinanceGUI_GetInvoiceForDatesResult> SpThirdPartyFinanceGUI_GetInvoiceForDates([Parameter(Name="SarID", DbType="VarChar(20)")] string sarID, [Parameter(Name="InvoiceFromDate", DbType="DateTime")] System.Nullable<System.DateTime> invoiceFromDate, [Parameter(Name="InvoiceToDate", DbType="DateTime")] System.Nullable<System.DateTime> invoiceToDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sarID, invoiceFromDate, invoiceToDate);
			return ((ISingleResult<SpThirdPartyFinanceGUI_GetInvoiceForDatesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spThirdPartyFinanceGUI_GetInvoiceGLCodeTotals")]
		public ISingleResult<SpThirdPartyFinanceGUI_GetInvoiceGLCodeTotalsResult> SpThirdPartyFinanceGUI_GetInvoiceGLCodeTotals([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((ISingleResult<SpThirdPartyFinanceGUI_GetInvoiceGLCodeTotalsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spThirdPartyFinanceGUI_GetInvoiceTotal")]
		public ISingleResult<SpThirdPartyFinanceGUI_GetInvoiceTotalResult> SpThirdPartyFinanceGUI_GetInvoiceTotal([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum);
			return ((ISingleResult<SpThirdPartyFinanceGUI_GetInvoiceTotalResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spThirdPartyFinanceGUI_Insert3PInvoice")]
		[return: Parameter(DbType="Int")]
		public int SpThirdPartyFinanceGUI_Insert3PInvoice([Parameter(Name="SarID", DbType="VarChar(20)")] string sarID, [Parameter(Name="InvoiceNum", DbType="VarChar(20)")] string invoiceNum, [Parameter(Name="InvoiceFromDate", DbType="DateTime")] System.Nullable<System.DateTime> invoiceFromDate, [Parameter(Name="InvoiceToDate", DbType="DateTime")] System.Nullable<System.DateTime> invoiceToDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sarID, invoiceNum, invoiceFromDate, invoiceToDate);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spWindowsGeocoderService_SetAccountIdLatLong")]
		[return: Parameter(DbType="Int")]
		public int SpWindowsGeocoderService_SetAccountIdLatLong([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="Latitude", DbType="Decimal(10,7)")] System.Nullable<decimal> latitude, [Parameter(Name="Longitude", DbType="Decimal(10,7)")] System.Nullable<decimal> longitude)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, latitude, longitude);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.STOCK_AddRecRetBadLocs")]
		[return: Parameter(DbType="Int")]
		public int STOCK_AddRecRetBadLocs([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="LocationID", DbType="Int")] System.Nullable<int> locationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, locationID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.STOCK_GetLastChangedBy")]
		public ISingleResult<STOCK_GetLastChangedByResult> STOCK_GetLastChangedBy([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode);
			return ((ISingleResult<STOCK_GetLastChangedByResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Stock_GetLocQOH")]
		public ISingleResult<Stock_GetLocQOHResult> Stock_GetLocQOH([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="LocID", DbType="Int")] System.Nullable<int> locID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, locID);
			return ((ISingleResult<Stock_GetLocQOHResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.STOCK_GetPartsType")]
		[return: Parameter(DbType="Int")]
		public int STOCK_GetPartsType([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="PartsType", DbType="Int")] ref System.Nullable<int> partsType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, partsType);
			partsType = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.STOCK_HasCrossAlias")]
		[return: Parameter(DbType="Int")]
		public int STOCK_HasCrossAlias([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="Alias", DbType="VarChar(35)")] string alias, [Parameter(Name="HasCrossAlias", DbType="Bit")] ref System.Nullable<bool> hasCrossAlias)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, alias, hasCrossAlias);
			hasCrossAlias = ((System.Nullable<bool>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.STOCK_HasGLRevCatCode")]
		[return: Parameter(DbType="Int")]
		public int STOCK_HasGLRevCatCode([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="HasGLRevCatCode", DbType="Bit")] ref System.Nullable<bool> hasGLRevCatCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, hasGLRevCatCode);
			hasGLRevCatCode = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.STOCK_LocationCompany")]
		[return: Parameter(DbType="Int")]
		public int STOCK_LocationCompany([Parameter(Name="LocationID", DbType="Int")] System.Nullable<int> locationID, [Parameter(Name="COmpanyNum_OUT", DbType="Int")] ref System.Nullable<int> cOmpanyNum_OUT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), locationID, cOmpanyNum_OUT);
			cOmpanyNum_OUT = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.STOCK_RECEIVED_TMP_APPLY")]
		[return: Parameter(DbType="Int")]
		public int STOCK_RECEIVED_TMP_APPLY([Parameter(Name="GUID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gUID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.STOCK_RECEIVED_TMP_DISCARD")]
		[return: Parameter(DbType="Int")]
		public int STOCK_RECEIVED_TMP_DISCARD([Parameter(Name="GUID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gUID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.STOCK_REPORT")]
		public ISingleResult<STOCK_REPORTResult> STOCK_REPORT([Parameter(Name="StartItem", DbType="Char(5)")] string startItem, [Parameter(Name="EndItem", DbType="Char(5)")] string endItem)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startItem, endItem);
			return ((ISingleResult<STOCK_REPORTResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.STOCK_SHELF_HISTORY")]
		public ISingleResult<STOCK_SHELF_HISTORYResult> STOCK_SHELF_HISTORY([Parameter(Name="PRODCODE", DbType="VarChar(35)")] string pRODCODE)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pRODCODE);
			return ((ISingleResult<STOCK_SHELF_HISTORYResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.StockGroupName")]
		public ISingleResult<StockGroupNameResult> StockGroupName([Parameter(Name="Group", DbType="VarChar(10)")] string group)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group);
			return ((ISingleResult<StockGroupNameResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.StockInsertReplication")]
		[return: Parameter(DbType="Int")]
		public int StockInsertReplication([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="NewCode", DbType="VarChar(35)")] string newCode, [Parameter(Name="XRefCode", DbType="VarChar(30)")] string xRefCode, [Parameter(Name="NewDescrip", DbType="VarChar(50)")] string newDescrip)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, newCode, xRefCode, newDescrip);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.StockItemInfo")]
		[ResultType(typeof(StockItemInfoResult))]
		public IMultipleResults StockItemInfo([Parameter(Name="SearchCode", DbType="VarChar(35)")] string searchCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), searchCode);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UnAuditedTransactions")]
		public ISingleResult<UnAuditedTransactionsResult> UnAuditedTransactions()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<UnAuditedTransactionsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Update_Debtors_CRM")]
		[return: Parameter(DbType="Int")]
		public int Update_Debtors_CRM([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="NextCall", DbType="DateTime")] System.Nullable<System.DateTime> nextCall, [Parameter(Name="ID", DbType="VarChar(25)")] string iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, nextCall, iD);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateAuditAmounts")]
		[return: Parameter(DbType="Int")]
		public int UpdateAuditAmounts()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateChequeNumber")]
		[return: Parameter(DbType="Int")]
		public int UpdateChequeNumber([Parameter(Name="ChqNum", DbType="VarChar(12)")] string chqNum, [Parameter(Name="Audit", DbType="Int")] System.Nullable<int> audit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chqNum, audit);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateCurrentReceived")]
		[return: Parameter(DbType="Int")]
		public int UpdateCurrentReceived([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="InvNum", DbType="VarChar(16)")] string invNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, invNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateCustOrd")]
		[return: Parameter(DbType="Int")]
		public int UpdateCustOrd([Parameter(Name="OrdNum", DbType="Int")] System.Nullable<int> ordNum, [Parameter(Name="CustOrdNum", DbType="VarChar(16)")] string custOrdNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ordNum, custOrdNum);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateSnapShotBalances")]
		[return: Parameter(DbType="Int")]
		public int UpdateSnapShotBalances([Parameter(Name="Year", DbType="SmallInt")] System.Nullable<short> year, [Parameter(Name="Month", DbType="TinyInt")] System.Nullable<byte> month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year, month);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdDebtor_Balances")]
		[return: Parameter(DbType="Int")]
		public int UpdDebtor_Balances([Parameter(Name="AccID", DbType="VarChar(12)")] string accID, [Parameter(Name="Amount", DbType="Money")] System.Nullable<decimal> amount, [Parameter(Name="Period", DbType="Int")] System.Nullable<int> period, [Parameter(DbType="TinyInt")] System.Nullable<byte> isPayment)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accID, amount, period, isPayment);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdDebtorJnl")]
		[return: Parameter(DbType="Int")]
		public int UpdDebtorJnl([Parameter(Name="AccID", DbType="VarChar(12)")] string accID, [Parameter(Name="JnlCurrent", DbType="Money")] System.Nullable<decimal> jnlCurrent, [Parameter(Name="Jnl30Days", DbType="Money")] System.Nullable<decimal> jnl30Days, [Parameter(Name="Jnl60Days", DbType="Money")] System.Nullable<decimal> jnl60Days, [Parameter(Name="Jnl90Days", DbType="Money")] System.Nullable<decimal> jnl90Days)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accID, jnlCurrent, jnl30Days, jnl60Days, jnl90Days);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdDebtorsLastPick")]
		[return: Parameter(DbType="Int")]
		public int UpdDebtorsLastPick([Parameter(Name="CustomerCode", DbType="VarChar(12)")] string customerCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdInvParent")]
		[return: Parameter(DbType="Int")]
		public int UpdInvParent()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdReceiptsParent")]
		[return: Parameter(DbType="Int")]
		public int UpdReceiptsParent()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.usp_ContractExpiry_Select")]
		public ISingleResult<Usp_ContractExpiry_SelectResult> Usp_ContractExpiry_Select()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Usp_ContractExpiry_SelectResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ValidateDeviceCode")]
		[return: Parameter(DbType="Int")]
		public int ValidateDeviceCode([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="DeviceCode", DbType="VarChar(35)")] string deviceCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, deviceCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ValidateNewDeviceCode")]
		[return: Parameter(DbType="Int")]
		public int ValidateNewDeviceCode([Parameter(Name="ProdCode", DbType="VarChar(35)")] string prodCode, [Parameter(Name="DeviceCode", DbType="VarChar(35)")] string deviceCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, deviceCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ValidateProdCode")]
		[return: Parameter(DbType="Int")]
		public int ValidateProdCode([Parameter(Name="ProdCode", DbType="VarChar(35)")] ref string prodCode, [Parameter(Name="OrdNum", DbType="Int")] ref System.Nullable<int> ordNum, [Parameter(Name="Qty", DbType="Decimal(9,2)")] ref System.Nullable<decimal> qty)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prodCode, ordNum, qty);
			prodCode = ((string)(result.GetParameterValue(0)));
			ordNum = ((System.Nullable<int>)(result.GetParameterValue(1)));
			qty = ((System.Nullable<decimal>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.YearRollover")]
		[return: Parameter(DbType="Int")]
		public int YearRollover([Parameter(Name="AreYouSure", DbType="Char(1)")] string areYouSure)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), areYouSure);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="source.CompanyMerge_CreateContract_EXTRA")]
		[return: Parameter(DbType="Int")]
		public int Source_CompanyMerge_CreateContract_EXTRA([Parameter(Name="OldAccountID", DbType="Int")] System.Nullable<int> oldAccountID, [Parameter(Name="NewAccountID", DbType="Int")] System.Nullable<int> newAccountID, [Parameter(Name="NewCompanyNum", DbType="TinyInt")] System.Nullable<byte> newCompanyNum, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldAccountID, newAccountID, newCompanyNum, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="source.CompanyMerge_CreateContract_EXTRA_FORNULLS")]
		[return: Parameter(DbType="Int")]
		public int Source_CompanyMerge_CreateContract_EXTRA_FORNULLS([Parameter(Name="OldAccountID", DbType="Int")] System.Nullable<int> oldAccountID, [Parameter(Name="NewAccountID", DbType="Int")] System.Nullable<int> newAccountID, [Parameter(Name="NewCompanyNum", DbType="TinyInt")] System.Nullable<byte> newCompanyNum, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldAccountID, newAccountID, newCompanyNum, employeeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="source.CompanyMerge_CreateDebtor_EXTRA")]
		[return: Parameter(DbType="Int")]
		public int Source_CompanyMerge_CreateDebtor_EXTRA([Parameter(Name="OldParentAccountID", DbType="Int")] System.Nullable<int> oldParentAccountID, [Parameter(Name="NewCompanyNum", DbType="TinyInt")] System.Nullable<byte> newCompanyNum, [Parameter(Name="EmployeeID", DbType="VarChar(25)")] string employeeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldParentAccountID, newCompanyNum, employeeID);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.ACTIVITY_LOG")]
	public partial class ACTIVITY_LOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActionID;
		
		private System.DateTime _Date;
		
		private string _EmployeeID;
		
		private string _NTUser;
		
		private string _Action;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionIDChanging(int value);
    partial void OnActionIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnNTUserChanging(string value);
    partial void OnNTUserChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    #endregion
		
		public ACTIVITY_LOG()
		{
			OnCreated();
		}
		
		[Column(Storage="_ActionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_NTUser", DbType="VarChar(50)")]
		public string NTUser
		{
			get
			{
				return this._NTUser;
			}
			set
			{
				if ((this._NTUser != value))
				{
					this.OnNTUserChanging(value);
					this.SendPropertyChanging();
					this._NTUser = value;
					this.SendPropertyChanged("NTUser");
					this.OnNTUserChanged();
				}
			}
		}
		
		[Column(Storage="_Action", DbType="VarChar(50)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ASSET_CATEGORIES")]
	public partial class ASSET_CATEGORIES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssetCategoryId;
		
		private string _AssetCategory;
		
		private EntitySet<GL_TO_ASSETCAT> _GL_TO_ASSETCAT;
		
		private EntitySet<STKORDITEM> _STKORDITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssetCategoryIdChanging(int value);
    partial void OnAssetCategoryIdChanged();
    partial void OnAssetCategoryChanging(string value);
    partial void OnAssetCategoryChanged();
    #endregion
		
		public ASSET_CATEGORIES()
		{
			this._GL_TO_ASSETCAT = new EntitySet<GL_TO_ASSETCAT>(new Action<GL_TO_ASSETCAT>(this.attach_GL_TO_ASSETCAT), new Action<GL_TO_ASSETCAT>(this.detach_GL_TO_ASSETCAT));
			this._STKORDITEM = new EntitySet<STKORDITEM>(new Action<STKORDITEM>(this.attach_STKORDITEM), new Action<STKORDITEM>(this.detach_STKORDITEM));
			OnCreated();
		}
		
		[Column(Storage="_AssetCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AssetCategoryId
		{
			get
			{
				return this._AssetCategoryId;
			}
			set
			{
				if ((this._AssetCategoryId != value))
				{
					this.OnAssetCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._AssetCategoryId = value;
					this.SendPropertyChanged("AssetCategoryId");
					this.OnAssetCategoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_AssetCategory", DbType="VarChar(50)")]
		public string AssetCategory
		{
			get
			{
				return this._AssetCategory;
			}
			set
			{
				if ((this._AssetCategory != value))
				{
					this.OnAssetCategoryChanging(value);
					this.SendPropertyChanging();
					this._AssetCategory = value;
					this.SendPropertyChanged("AssetCategory");
					this.OnAssetCategoryChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_TO_ASSETCAT_ASSET_CATEGORIES", Storage="_GL_TO_ASSETCAT", ThisKey="AssetCategoryId", OtherKey="AssetCategory", DeleteRule="NO ACTION")]
		public EntitySet<GL_TO_ASSETCAT> GL_TO_ASSETCAT
		{
			get
			{
				return this._GL_TO_ASSETCAT;
			}
			set
			{
				this._GL_TO_ASSETCAT.Assign(value);
			}
		}
		
		[Association(Name="FK_STKORDITEM_ASSET_CATEGORIES", Storage="_STKORDITEM", ThisKey="AssetCategoryId", OtherKey="AssetCategory", DeleteRule="NO ACTION")]
		public EntitySet<STKORDITEM> STKORDITEM
		{
			get
			{
				return this._STKORDITEM;
			}
			set
			{
				this._STKORDITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GL_TO_ASSETCAT(GL_TO_ASSETCAT entity)
		{
			this.SendPropertyChanging();
			entity.ASSET_CATEGORIES = this;
		}
		
		private void detach_GL_TO_ASSETCAT(GL_TO_ASSETCAT entity)
		{
			this.SendPropertyChanging();
			entity.ASSET_CATEGORIES = null;
		}
		
		private void attach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.ASSET_CATEGORIES = this;
		}
		
		private void detach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.ASSET_CATEGORIES = null;
		}
	}
	
	[Table(Name="dbo.ASSET_REGISTER")]
	public partial class ASSET_REGISTER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssetNum;
		
		private string _Description;
		
		private string _AssetGroup;
		
		private string _Location;
		
		private System.Nullable<System.DateTime> _DateAcquired;
		
		private System.Nullable<System.DateTime> _DateDisposal;
		
		private decimal _InitialCost;
		
		private decimal _SaleValue;
		
		private decimal _InitialRate;
		
		private System.Nullable<System.DateTime> _DateExpires;
		
		private decimal _NextRate;
		
		private string _GLAcctBSheet;
		
		private string _GLAcctPL;
		
		private decimal _TotalDep;
		
		private short _CompanyNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssetNumChanging(int value);
    partial void OnAssetNumChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAssetGroupChanging(string value);
    partial void OnAssetGroupChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnDateAcquiredChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAcquiredChanged();
    partial void OnDateDisposalChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDisposalChanged();
    partial void OnInitialCostChanging(decimal value);
    partial void OnInitialCostChanged();
    partial void OnSaleValueChanging(decimal value);
    partial void OnSaleValueChanged();
    partial void OnInitialRateChanging(decimal value);
    partial void OnInitialRateChanged();
    partial void OnDateExpiresChanging(System.Nullable<System.DateTime> value);
    partial void OnDateExpiresChanged();
    partial void OnNextRateChanging(decimal value);
    partial void OnNextRateChanged();
    partial void OnGLAcctBSheetChanging(string value);
    partial void OnGLAcctBSheetChanged();
    partial void OnGLAcctPLChanging(string value);
    partial void OnGLAcctPLChanged();
    partial void OnTotalDepChanging(decimal value);
    partial void OnTotalDepChanged();
    partial void OnCompanyNumChanging(short value);
    partial void OnCompanyNumChanged();
    #endregion
		
		public ASSET_REGISTER()
		{
			OnCreated();
		}
		
		[Column(Storage="_AssetNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AssetNum
		{
			get
			{
				return this._AssetNum;
			}
			set
			{
				if ((this._AssetNum != value))
				{
					this.OnAssetNumChanging(value);
					this.SendPropertyChanging();
					this._AssetNum = value;
					this.SendPropertyChanged("AssetNum");
					this.OnAssetNumChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(128)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_AssetGroup", DbType="VarChar(25)")]
		public string AssetGroup
		{
			get
			{
				return this._AssetGroup;
			}
			set
			{
				if ((this._AssetGroup != value))
				{
					this.OnAssetGroupChanging(value);
					this.SendPropertyChanging();
					this._AssetGroup = value;
					this.SendPropertyChanged("AssetGroup");
					this.OnAssetGroupChanged();
				}
			}
		}
		
		[Column(Storage="_Location", DbType="VarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Storage="_DateAcquired", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAcquired
		{
			get
			{
				return this._DateAcquired;
			}
			set
			{
				if ((this._DateAcquired != value))
				{
					this.OnDateAcquiredChanging(value);
					this.SendPropertyChanging();
					this._DateAcquired = value;
					this.SendPropertyChanged("DateAcquired");
					this.OnDateAcquiredChanged();
				}
			}
		}
		
		[Column(Storage="_DateDisposal", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDisposal
		{
			get
			{
				return this._DateDisposal;
			}
			set
			{
				if ((this._DateDisposal != value))
				{
					this.OnDateDisposalChanging(value);
					this.SendPropertyChanging();
					this._DateDisposal = value;
					this.SendPropertyChanged("DateDisposal");
					this.OnDateDisposalChanged();
				}
			}
		}
		
		[Column(Storage="_InitialCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal InitialCost
		{
			get
			{
				return this._InitialCost;
			}
			set
			{
				if ((this._InitialCost != value))
				{
					this.OnInitialCostChanging(value);
					this.SendPropertyChanging();
					this._InitialCost = value;
					this.SendPropertyChanged("InitialCost");
					this.OnInitialCostChanged();
				}
			}
		}
		
		[Column(Storage="_SaleValue", DbType="Decimal(18,2) NOT NULL")]
		public decimal SaleValue
		{
			get
			{
				return this._SaleValue;
			}
			set
			{
				if ((this._SaleValue != value))
				{
					this.OnSaleValueChanging(value);
					this.SendPropertyChanging();
					this._SaleValue = value;
					this.SendPropertyChanged("SaleValue");
					this.OnSaleValueChanged();
				}
			}
		}
		
		[Column(Storage="_InitialRate", DbType="Decimal(18,2) NOT NULL")]
		public decimal InitialRate
		{
			get
			{
				return this._InitialRate;
			}
			set
			{
				if ((this._InitialRate != value))
				{
					this.OnInitialRateChanging(value);
					this.SendPropertyChanging();
					this._InitialRate = value;
					this.SendPropertyChanged("InitialRate");
					this.OnInitialRateChanged();
				}
			}
		}
		
		[Column(Storage="_DateExpires", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateExpires
		{
			get
			{
				return this._DateExpires;
			}
			set
			{
				if ((this._DateExpires != value))
				{
					this.OnDateExpiresChanging(value);
					this.SendPropertyChanging();
					this._DateExpires = value;
					this.SendPropertyChanged("DateExpires");
					this.OnDateExpiresChanged();
				}
			}
		}
		
		[Column(Storage="_NextRate", DbType="Decimal(18,2) NOT NULL")]
		public decimal NextRate
		{
			get
			{
				return this._NextRate;
			}
			set
			{
				if ((this._NextRate != value))
				{
					this.OnNextRateChanging(value);
					this.SendPropertyChanging();
					this._NextRate = value;
					this.SendPropertyChanged("NextRate");
					this.OnNextRateChanged();
				}
			}
		}
		
		[Column(Storage="_GLAcctBSheet", DbType="VarChar(12)")]
		public string GLAcctBSheet
		{
			get
			{
				return this._GLAcctBSheet;
			}
			set
			{
				if ((this._GLAcctBSheet != value))
				{
					this.OnGLAcctBSheetChanging(value);
					this.SendPropertyChanging();
					this._GLAcctBSheet = value;
					this.SendPropertyChanged("GLAcctBSheet");
					this.OnGLAcctBSheetChanged();
				}
			}
		}
		
		[Column(Storage="_GLAcctPL", DbType="VarChar(12)")]
		public string GLAcctPL
		{
			get
			{
				return this._GLAcctPL;
			}
			set
			{
				if ((this._GLAcctPL != value))
				{
					this.OnGLAcctPLChanging(value);
					this.SendPropertyChanging();
					this._GLAcctPL = value;
					this.SendPropertyChanged("GLAcctPL");
					this.OnGLAcctPLChanged();
				}
			}
		}
		
		[Column(Storage="_TotalDep", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalDep
		{
			get
			{
				return this._TotalDep;
			}
			set
			{
				if ((this._TotalDep != value))
				{
					this.OnTotalDepChanging(value);
					this.SendPropertyChanging();
					this._TotalDep = value;
					this.SendPropertyChanged("TotalDep");
					this.OnTotalDepChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="SmallInt NOT NULL")]
		public short CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AUDIT_CREDITORS_MONTH")]
	public partial class AUDIT_CREDITORS_MONTH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Year;
		
		private byte _Month;
		
		private string _Heading;
		
		private byte _Stage;
		
		private bool _RolledStage1;
		
		private bool _RolledStage2;
		
		private byte _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnHeadingChanging(string value);
    partial void OnHeadingChanged();
    partial void OnStageChanging(byte value);
    partial void OnStageChanged();
    partial void OnRolledStage1Changing(bool value);
    partial void OnRolledStage1Changed();
    partial void OnRolledStage2Changing(bool value);
    partial void OnRolledStage2Changed();
    partial void OnCompanyChanging(byte value);
    partial void OnCompanyChanged();
    #endregion
		
		public AUDIT_CREDITORS_MONTH()
		{
			OnCreated();
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Heading", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[Column(Storage="_Stage", DbType="TinyInt NOT NULL")]
		public byte Stage
		{
			get
			{
				return this._Stage;
			}
			set
			{
				if ((this._Stage != value))
				{
					this.OnStageChanging(value);
					this.SendPropertyChanging();
					this._Stage = value;
					this.SendPropertyChanged("Stage");
					this.OnStageChanged();
				}
			}
		}
		
		[Column(Storage="_RolledStage1", DbType="Bit NOT NULL")]
		public bool RolledStage1
		{
			get
			{
				return this._RolledStage1;
			}
			set
			{
				if ((this._RolledStage1 != value))
				{
					this.OnRolledStage1Changing(value);
					this.SendPropertyChanging();
					this._RolledStage1 = value;
					this.SendPropertyChanged("RolledStage1");
					this.OnRolledStage1Changed();
				}
			}
		}
		
		[Column(Storage="_RolledStage2", DbType="Bit NOT NULL")]
		public bool RolledStage2
		{
			get
			{
				return this._RolledStage2;
			}
			set
			{
				if ((this._RolledStage2 != value))
				{
					this.OnRolledStage2Changing(value);
					this.SendPropertyChanging();
					this._RolledStage2 = value;
					this.SendPropertyChanged("RolledStage2");
					this.OnRolledStage2Changed();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AUDIT_DEBTORS")]
	public partial class AUDIT_DEBTORS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Audit;
		
		private byte _TransType;
		
		private int _TransID;
		
		private string _AccountID;
		
		private short _Year;
		
		private byte _Month;
		
		private byte _Day;
		
		private System.Nullable<System.DateTime> _DateEntered;
		
		private byte _Period;
		
		private decimal _Amount;
		
		private decimal _Discount;
		
		private string _TempID;
		
		private System.Nullable<int> _CompanyNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuditChanging(int value);
    partial void OnAuditChanged();
    partial void OnTransTypeChanging(byte value);
    partial void OnTransTypeChanged();
    partial void OnTransIDChanging(int value);
    partial void OnTransIDChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnDayChanging(byte value);
    partial void OnDayChanged();
    partial void OnDateEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEnteredChanged();
    partial void OnPeriodChanging(byte value);
    partial void OnPeriodChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnTempIDChanging(string value);
    partial void OnTempIDChanged();
    partial void OnCompanyNumChanging(System.Nullable<int> value);
    partial void OnCompanyNumChanged();
    #endregion
		
		public AUDIT_DEBTORS()
		{
			OnCreated();
		}
		
		[Column(Storage="_Audit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[Column(Storage="_TransType", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte TransType
		{
			get
			{
				return this._TransType;
			}
			set
			{
				if ((this._TransType != value))
				{
					this.OnTransTypeChanging(value);
					this.SendPropertyChanging();
					this._TransType = value;
					this.SendPropertyChanged("TransType");
					this.OnTransTypeChanged();
				}
			}
		}
		
		[Column(Storage="_TransID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransID
		{
			get
			{
				return this._TransID;
			}
			set
			{
				if ((this._TransID != value))
				{
					this.OnTransIDChanging(value);
					this.SendPropertyChanging();
					this._TransID = value;
					this.SendPropertyChanged("TransID");
					this.OnTransIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="VarChar(12)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Day", DbType="TinyInt NOT NULL")]
		public byte Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[Column(Storage="_DateEntered", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEntered
		{
			get
			{
				return this._DateEntered;
			}
			set
			{
				if ((this._DateEntered != value))
				{
					this.OnDateEnteredChanging(value);
					this.SendPropertyChanging();
					this._DateEntered = value;
					this.SendPropertyChanged("DateEntered");
					this.OnDateEnteredChanged();
				}
			}
		}
		
		[Column(Storage="_Period", DbType="TinyInt NOT NULL")]
		public byte Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_Discount", DbType="Money NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[Column(Storage="_TempID", DbType="VarChar(5)")]
		public string TempID
		{
			get
			{
				return this._TempID;
			}
			set
			{
				if ((this._TempID != value))
				{
					this.OnTempIDChanging(value);
					this.SendPropertyChanging();
					this._TempID = value;
					this.SendPropertyChanged("TempID");
					this.OnTempIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="Int")]
		public System.Nullable<int> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AUDIT_DEBTORS_DAY")]
	public partial class AUDIT_DEBTORS_DAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NKey;
		
		private System.DateTime _Date;
		
		private string _Heading;
		
		private System.Nullable<decimal> _OpenBal;
		
		private System.Nullable<int> _FromAudit;
		
		private System.Nullable<int> _ToAudit;
		
		private System.Nullable<decimal> _ClosingBal;
		
		private byte _CompanyNum;
		
		private string _Currency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNKeyChanging(int value);
    partial void OnNKeyChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnHeadingChanging(string value);
    partial void OnHeadingChanged();
    partial void OnOpenBalChanging(System.Nullable<decimal> value);
    partial void OnOpenBalChanged();
    partial void OnFromAuditChanging(System.Nullable<int> value);
    partial void OnFromAuditChanged();
    partial void OnToAuditChanging(System.Nullable<int> value);
    partial void OnToAuditChanged();
    partial void OnClosingBalChanging(System.Nullable<decimal> value);
    partial void OnClosingBalChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    #endregion
		
		public AUDIT_DEBTORS_DAY()
		{
			OnCreated();
		}
		
		[Column(Storage="_NKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NKey
		{
			get
			{
				return this._NKey;
			}
			set
			{
				if ((this._NKey != value))
				{
					this.OnNKeyChanging(value);
					this.SendPropertyChanging();
					this._NKey = value;
					this.SendPropertyChanged("NKey");
					this.OnNKeyChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Heading", DbType="VarChar(16)")]
		public string Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[Column(Storage="_OpenBal", DbType="Money")]
		public System.Nullable<decimal> OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this.OnOpenBalChanging(value);
					this.SendPropertyChanging();
					this._OpenBal = value;
					this.SendPropertyChanged("OpenBal");
					this.OnOpenBalChanged();
				}
			}
		}
		
		[Column(Storage="_FromAudit", DbType="Int")]
		public System.Nullable<int> FromAudit
		{
			get
			{
				return this._FromAudit;
			}
			set
			{
				if ((this._FromAudit != value))
				{
					this.OnFromAuditChanging(value);
					this.SendPropertyChanging();
					this._FromAudit = value;
					this.SendPropertyChanged("FromAudit");
					this.OnFromAuditChanged();
				}
			}
		}
		
		[Column(Storage="_ToAudit", DbType="Int")]
		public System.Nullable<int> ToAudit
		{
			get
			{
				return this._ToAudit;
			}
			set
			{
				if ((this._ToAudit != value))
				{
					this.OnToAuditChanging(value);
					this.SendPropertyChanging();
					this._ToAudit = value;
					this.SendPropertyChanged("ToAudit");
					this.OnToAuditChanged();
				}
			}
		}
		
		[Column(Storage="_ClosingBal", DbType="Money")]
		public System.Nullable<decimal> ClosingBal
		{
			get
			{
				return this._ClosingBal;
			}
			set
			{
				if ((this._ClosingBal != value))
				{
					this.OnClosingBalChanging(value);
					this.SendPropertyChanging();
					this._ClosingBal = value;
					this.SendPropertyChanged("ClosingBal");
					this.OnClosingBalChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AUDIT_DEBTORS_MONTH")]
	public partial class AUDIT_DEBTORS_MONTH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Year;
		
		private byte _Month;
		
		private int _CompanyNum;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private string _Heading;
		
		private bool _RolledStage1;
		
		private bool _RolledStage2;
		
		private byte _Stage;
		
		private string _Note1;
		
		private string _Note2;
		
		private System.Nullable<decimal> _ForexUSD;
		
		private bool _GL_Period_Closed;
		
		private System.Nullable<int> _Last_Debtors_Audit;
		
		private System.Nullable<int> _Last_Creditors_Audit;
		
		private System.Nullable<int> _Last_Purchases_Audit;
		
		private System.Nullable<int> _Last_FixedA_Audit;
		
		private System.Nullable<int> _Last_Payroll_Audit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnCompanyNumChanging(int value);
    partial void OnCompanyNumChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToDateChanged();
    partial void OnHeadingChanging(string value);
    partial void OnHeadingChanged();
    partial void OnRolledStage1Changing(bool value);
    partial void OnRolledStage1Changed();
    partial void OnRolledStage2Changing(bool value);
    partial void OnRolledStage2Changed();
    partial void OnStageChanging(byte value);
    partial void OnStageChanged();
    partial void OnNote1Changing(string value);
    partial void OnNote1Changed();
    partial void OnNote2Changing(string value);
    partial void OnNote2Changed();
    partial void OnForexUSDChanging(System.Nullable<decimal> value);
    partial void OnForexUSDChanged();
    partial void OnGL_Period_ClosedChanging(bool value);
    partial void OnGL_Period_ClosedChanged();
    partial void OnLast_Debtors_AuditChanging(System.Nullable<int> value);
    partial void OnLast_Debtors_AuditChanged();
    partial void OnLast_Creditors_AuditChanging(System.Nullable<int> value);
    partial void OnLast_Creditors_AuditChanged();
    partial void OnLast_Purchases_AuditChanging(System.Nullable<int> value);
    partial void OnLast_Purchases_AuditChanged();
    partial void OnLast_FixedA_AuditChanging(System.Nullable<int> value);
    partial void OnLast_FixedA_AuditChanged();
    partial void OnLast_Payroll_AuditChanging(System.Nullable<int> value);
    partial void OnLast_Payroll_AuditChanged();
    #endregion
		
		public AUDIT_DEBTORS_MONTH()
		{
			OnCreated();
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_FromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[Column(Storage="_ToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[Column(Storage="_Heading", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[Column(Storage="_RolledStage1", DbType="Bit NOT NULL")]
		public bool RolledStage1
		{
			get
			{
				return this._RolledStage1;
			}
			set
			{
				if ((this._RolledStage1 != value))
				{
					this.OnRolledStage1Changing(value);
					this.SendPropertyChanging();
					this._RolledStage1 = value;
					this.SendPropertyChanged("RolledStage1");
					this.OnRolledStage1Changed();
				}
			}
		}
		
		[Column(Storage="_RolledStage2", DbType="Bit NOT NULL")]
		public bool RolledStage2
		{
			get
			{
				return this._RolledStage2;
			}
			set
			{
				if ((this._RolledStage2 != value))
				{
					this.OnRolledStage2Changing(value);
					this.SendPropertyChanging();
					this._RolledStage2 = value;
					this.SendPropertyChanged("RolledStage2");
					this.OnRolledStage2Changed();
				}
			}
		}
		
		[Column(Storage="_Stage", DbType="TinyInt NOT NULL")]
		public byte Stage
		{
			get
			{
				return this._Stage;
			}
			set
			{
				if ((this._Stage != value))
				{
					this.OnStageChanging(value);
					this.SendPropertyChanging();
					this._Stage = value;
					this.SendPropertyChanged("Stage");
					this.OnStageChanged();
				}
			}
		}
		
		[Column(Storage="_Note1", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Note1
		{
			get
			{
				return this._Note1;
			}
			set
			{
				if ((this._Note1 != value))
				{
					this.OnNote1Changing(value);
					this.SendPropertyChanging();
					this._Note1 = value;
					this.SendPropertyChanged("Note1");
					this.OnNote1Changed();
				}
			}
		}
		
		[Column(Storage="_Note2", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Note2
		{
			get
			{
				return this._Note2;
			}
			set
			{
				if ((this._Note2 != value))
				{
					this.OnNote2Changing(value);
					this.SendPropertyChanging();
					this._Note2 = value;
					this.SendPropertyChanged("Note2");
					this.OnNote2Changed();
				}
			}
		}
		
		[Column(Storage="_ForexUSD", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> ForexUSD
		{
			get
			{
				return this._ForexUSD;
			}
			set
			{
				if ((this._ForexUSD != value))
				{
					this.OnForexUSDChanging(value);
					this.SendPropertyChanging();
					this._ForexUSD = value;
					this.SendPropertyChanged("ForexUSD");
					this.OnForexUSDChanged();
				}
			}
		}
		
		[Column(Storage="_GL_Period_Closed", DbType="Bit NOT NULL")]
		public bool GL_Period_Closed
		{
			get
			{
				return this._GL_Period_Closed;
			}
			set
			{
				if ((this._GL_Period_Closed != value))
				{
					this.OnGL_Period_ClosedChanging(value);
					this.SendPropertyChanging();
					this._GL_Period_Closed = value;
					this.SendPropertyChanged("GL_Period_Closed");
					this.OnGL_Period_ClosedChanged();
				}
			}
		}
		
		[Column(Storage="_Last_Debtors_Audit", DbType="Int")]
		public System.Nullable<int> Last_Debtors_Audit
		{
			get
			{
				return this._Last_Debtors_Audit;
			}
			set
			{
				if ((this._Last_Debtors_Audit != value))
				{
					this.OnLast_Debtors_AuditChanging(value);
					this.SendPropertyChanging();
					this._Last_Debtors_Audit = value;
					this.SendPropertyChanged("Last_Debtors_Audit");
					this.OnLast_Debtors_AuditChanged();
				}
			}
		}
		
		[Column(Storage="_Last_Creditors_Audit", DbType="Int")]
		public System.Nullable<int> Last_Creditors_Audit
		{
			get
			{
				return this._Last_Creditors_Audit;
			}
			set
			{
				if ((this._Last_Creditors_Audit != value))
				{
					this.OnLast_Creditors_AuditChanging(value);
					this.SendPropertyChanging();
					this._Last_Creditors_Audit = value;
					this.SendPropertyChanged("Last_Creditors_Audit");
					this.OnLast_Creditors_AuditChanged();
				}
			}
		}
		
		[Column(Storage="_Last_Purchases_Audit", DbType="Int")]
		public System.Nullable<int> Last_Purchases_Audit
		{
			get
			{
				return this._Last_Purchases_Audit;
			}
			set
			{
				if ((this._Last_Purchases_Audit != value))
				{
					this.OnLast_Purchases_AuditChanging(value);
					this.SendPropertyChanging();
					this._Last_Purchases_Audit = value;
					this.SendPropertyChanged("Last_Purchases_Audit");
					this.OnLast_Purchases_AuditChanged();
				}
			}
		}
		
		[Column(Storage="_Last_FixedA_Audit", DbType="Int")]
		public System.Nullable<int> Last_FixedA_Audit
		{
			get
			{
				return this._Last_FixedA_Audit;
			}
			set
			{
				if ((this._Last_FixedA_Audit != value))
				{
					this.OnLast_FixedA_AuditChanging(value);
					this.SendPropertyChanging();
					this._Last_FixedA_Audit = value;
					this.SendPropertyChanged("Last_FixedA_Audit");
					this.OnLast_FixedA_AuditChanged();
				}
			}
		}
		
		[Column(Storage="_Last_Payroll_Audit", DbType="Int")]
		public System.Nullable<int> Last_Payroll_Audit
		{
			get
			{
				return this._Last_Payroll_Audit;
			}
			set
			{
				if ((this._Last_Payroll_Audit != value))
				{
					this.OnLast_Payroll_AuditChanging(value);
					this.SendPropertyChanging();
					this._Last_Payroll_Audit = value;
					this.SendPropertyChanged("Last_Payroll_Audit");
					this.OnLast_Payroll_AuditChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.BANK_DEPOSITS")]
	public partial class BANK_DEPOSITS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepositNum;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _BankName;
		
		private string _BranchName;
		
		private string _AccountName;
		
		private byte _CompanyNum;
		
		private string _BranchNum;
		
		private string _AccountNum;
		
		private System.Nullable<short> _Notes100s;
		
		private System.Nullable<short> _Notes50s;
		
		private System.Nullable<short> _Notes20s;
		
		private System.Nullable<short> _Notes10s;
		
		private System.Nullable<int> _Notes5s;
		
		private System.Nullable<short> _TotalNotes;
		
		private System.Nullable<decimal> _Coins;
		
		private System.Nullable<decimal> _TotalCash;
		
		private System.Nullable<decimal> _TotalCheques;
		
		private System.Nullable<decimal> _TotalCards;
		
		private System.Nullable<decimal> _LessCharges;
		
		private System.Nullable<decimal> _TotalBanked;
		
		private bool _BankCopyPrinted;
		
		private bool _BankRec;
		
		private string _BankAccGL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepositNumChanging(int value);
    partial void OnDepositNumChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnBranchNumChanging(string value);
    partial void OnBranchNumChanged();
    partial void OnAccountNumChanging(string value);
    partial void OnAccountNumChanged();
    partial void OnNotes100sChanging(System.Nullable<short> value);
    partial void OnNotes100sChanged();
    partial void OnNotes50sChanging(System.Nullable<short> value);
    partial void OnNotes50sChanged();
    partial void OnNotes20sChanging(System.Nullable<short> value);
    partial void OnNotes20sChanged();
    partial void OnNotes10sChanging(System.Nullable<short> value);
    partial void OnNotes10sChanged();
    partial void OnNotes5sChanging(System.Nullable<int> value);
    partial void OnNotes5sChanged();
    partial void OnTotalNotesChanging(System.Nullable<short> value);
    partial void OnTotalNotesChanged();
    partial void OnCoinsChanging(System.Nullable<decimal> value);
    partial void OnCoinsChanged();
    partial void OnTotalCashChanging(System.Nullable<decimal> value);
    partial void OnTotalCashChanged();
    partial void OnTotalChequesChanging(System.Nullable<decimal> value);
    partial void OnTotalChequesChanged();
    partial void OnTotalCardsChanging(System.Nullable<decimal> value);
    partial void OnTotalCardsChanged();
    partial void OnLessChargesChanging(System.Nullable<decimal> value);
    partial void OnLessChargesChanged();
    partial void OnTotalBankedChanging(System.Nullable<decimal> value);
    partial void OnTotalBankedChanged();
    partial void OnBankCopyPrintedChanging(bool value);
    partial void OnBankCopyPrintedChanged();
    partial void OnBankRecChanging(bool value);
    partial void OnBankRecChanged();
    partial void OnBankAccGLChanging(string value);
    partial void OnBankAccGLChanged();
    #endregion
		
		public BANK_DEPOSITS()
		{
			OnCreated();
		}
		
		[Column(Storage="_DepositNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DepositNum
		{
			get
			{
				return this._DepositNum;
			}
			set
			{
				if ((this._DepositNum != value))
				{
					this.OnDepositNumChanging(value);
					this.SendPropertyChanging();
					this._DepositNum = value;
					this.SendPropertyChanged("DepositNum");
					this.OnDepositNumChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[Column(Storage="_BranchName", DbType="VarChar(50)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[Column(Storage="_AccountName", DbType="VarChar(60)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_BranchNum", DbType="VarChar(15)")]
		public string BranchNum
		{
			get
			{
				return this._BranchNum;
			}
			set
			{
				if ((this._BranchNum != value))
				{
					this.OnBranchNumChanging(value);
					this.SendPropertyChanging();
					this._BranchNum = value;
					this.SendPropertyChanged("BranchNum");
					this.OnBranchNumChanged();
				}
			}
		}
		
		[Column(Storage="_AccountNum", DbType="VarChar(15)")]
		public string AccountNum
		{
			get
			{
				return this._AccountNum;
			}
			set
			{
				if ((this._AccountNum != value))
				{
					this.OnAccountNumChanging(value);
					this.SendPropertyChanging();
					this._AccountNum = value;
					this.SendPropertyChanged("AccountNum");
					this.OnAccountNumChanged();
				}
			}
		}
		
		[Column(Storage="_Notes100s", DbType="SmallInt")]
		public System.Nullable<short> Notes100s
		{
			get
			{
				return this._Notes100s;
			}
			set
			{
				if ((this._Notes100s != value))
				{
					this.OnNotes100sChanging(value);
					this.SendPropertyChanging();
					this._Notes100s = value;
					this.SendPropertyChanged("Notes100s");
					this.OnNotes100sChanged();
				}
			}
		}
		
		[Column(Storage="_Notes50s", DbType="SmallInt")]
		public System.Nullable<short> Notes50s
		{
			get
			{
				return this._Notes50s;
			}
			set
			{
				if ((this._Notes50s != value))
				{
					this.OnNotes50sChanging(value);
					this.SendPropertyChanging();
					this._Notes50s = value;
					this.SendPropertyChanged("Notes50s");
					this.OnNotes50sChanged();
				}
			}
		}
		
		[Column(Storage="_Notes20s", DbType="SmallInt")]
		public System.Nullable<short> Notes20s
		{
			get
			{
				return this._Notes20s;
			}
			set
			{
				if ((this._Notes20s != value))
				{
					this.OnNotes20sChanging(value);
					this.SendPropertyChanging();
					this._Notes20s = value;
					this.SendPropertyChanged("Notes20s");
					this.OnNotes20sChanged();
				}
			}
		}
		
		[Column(Storage="_Notes10s", DbType="SmallInt")]
		public System.Nullable<short> Notes10s
		{
			get
			{
				return this._Notes10s;
			}
			set
			{
				if ((this._Notes10s != value))
				{
					this.OnNotes10sChanging(value);
					this.SendPropertyChanging();
					this._Notes10s = value;
					this.SendPropertyChanged("Notes10s");
					this.OnNotes10sChanged();
				}
			}
		}
		
		[Column(Storage="_Notes5s", DbType="Int")]
		public System.Nullable<int> Notes5s
		{
			get
			{
				return this._Notes5s;
			}
			set
			{
				if ((this._Notes5s != value))
				{
					this.OnNotes5sChanging(value);
					this.SendPropertyChanging();
					this._Notes5s = value;
					this.SendPropertyChanged("Notes5s");
					this.OnNotes5sChanged();
				}
			}
		}
		
		[Column(Storage="_TotalNotes", DbType="SmallInt")]
		public System.Nullable<short> TotalNotes
		{
			get
			{
				return this._TotalNotes;
			}
			set
			{
				if ((this._TotalNotes != value))
				{
					this.OnTotalNotesChanging(value);
					this.SendPropertyChanging();
					this._TotalNotes = value;
					this.SendPropertyChanged("TotalNotes");
					this.OnTotalNotesChanged();
				}
			}
		}
		
		[Column(Storage="_Coins", DbType="Money")]
		public System.Nullable<decimal> Coins
		{
			get
			{
				return this._Coins;
			}
			set
			{
				if ((this._Coins != value))
				{
					this.OnCoinsChanging(value);
					this.SendPropertyChanging();
					this._Coins = value;
					this.SendPropertyChanged("Coins");
					this.OnCoinsChanged();
				}
			}
		}
		
		[Column(Storage="_TotalCash", DbType="Money")]
		public System.Nullable<decimal> TotalCash
		{
			get
			{
				return this._TotalCash;
			}
			set
			{
				if ((this._TotalCash != value))
				{
					this.OnTotalCashChanging(value);
					this.SendPropertyChanging();
					this._TotalCash = value;
					this.SendPropertyChanged("TotalCash");
					this.OnTotalCashChanged();
				}
			}
		}
		
		[Column(Storage="_TotalCheques", DbType="Money")]
		public System.Nullable<decimal> TotalCheques
		{
			get
			{
				return this._TotalCheques;
			}
			set
			{
				if ((this._TotalCheques != value))
				{
					this.OnTotalChequesChanging(value);
					this.SendPropertyChanging();
					this._TotalCheques = value;
					this.SendPropertyChanged("TotalCheques");
					this.OnTotalChequesChanged();
				}
			}
		}
		
		[Column(Storage="_TotalCards", DbType="Money")]
		public System.Nullable<decimal> TotalCards
		{
			get
			{
				return this._TotalCards;
			}
			set
			{
				if ((this._TotalCards != value))
				{
					this.OnTotalCardsChanging(value);
					this.SendPropertyChanging();
					this._TotalCards = value;
					this.SendPropertyChanged("TotalCards");
					this.OnTotalCardsChanged();
				}
			}
		}
		
		[Column(Storage="_LessCharges", DbType="Money")]
		public System.Nullable<decimal> LessCharges
		{
			get
			{
				return this._LessCharges;
			}
			set
			{
				if ((this._LessCharges != value))
				{
					this.OnLessChargesChanging(value);
					this.SendPropertyChanging();
					this._LessCharges = value;
					this.SendPropertyChanged("LessCharges");
					this.OnLessChargesChanged();
				}
			}
		}
		
		[Column(Storage="_TotalBanked", DbType="Money")]
		public System.Nullable<decimal> TotalBanked
		{
			get
			{
				return this._TotalBanked;
			}
			set
			{
				if ((this._TotalBanked != value))
				{
					this.OnTotalBankedChanging(value);
					this.SendPropertyChanging();
					this._TotalBanked = value;
					this.SendPropertyChanged("TotalBanked");
					this.OnTotalBankedChanged();
				}
			}
		}
		
		[Column(Storage="_BankCopyPrinted", DbType="Bit NOT NULL")]
		public bool BankCopyPrinted
		{
			get
			{
				return this._BankCopyPrinted;
			}
			set
			{
				if ((this._BankCopyPrinted != value))
				{
					this.OnBankCopyPrintedChanging(value);
					this.SendPropertyChanging();
					this._BankCopyPrinted = value;
					this.SendPropertyChanged("BankCopyPrinted");
					this.OnBankCopyPrintedChanged();
				}
			}
		}
		
		[Column(Storage="_BankRec", DbType="Bit NOT NULL")]
		public bool BankRec
		{
			get
			{
				return this._BankRec;
			}
			set
			{
				if ((this._BankRec != value))
				{
					this.OnBankRecChanging(value);
					this.SendPropertyChanging();
					this._BankRec = value;
					this.SendPropertyChanged("BankRec");
					this.OnBankRecChanged();
				}
			}
		}
		
		[Column(Storage="_BankAccGL", DbType="VarChar(16)")]
		public string BankAccGL
		{
			get
			{
				return this._BankAccGL;
			}
			set
			{
				if ((this._BankAccGL != value))
				{
					this.OnBankAccGLChanging(value);
					this.SendPropertyChanging();
					this._BankAccGL = value;
					this.SendPropertyChanged("BankAccGL");
					this.OnBankAccGLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.BOM_ANNUAL_VALUES")]
	public partial class BOM_ANNUAL_VALUES
	{
		
		private decimal _StartValue;
		
		private decimal _TargetValue;
		
		private decimal _Difference;
		
		public BOM_ANNUAL_VALUES()
		{
		}
		
		[Column(Storage="_StartValue", DbType="Decimal(18,2) NOT NULL")]
		public decimal StartValue
		{
			get
			{
				return this._StartValue;
			}
			set
			{
				if ((this._StartValue != value))
				{
					this._StartValue = value;
				}
			}
		}
		
		[Column(Storage="_TargetValue", DbType="Decimal(18,2) NOT NULL")]
		public decimal TargetValue
		{
			get
			{
				return this._TargetValue;
			}
			set
			{
				if ((this._TargetValue != value))
				{
					this._TargetValue = value;
				}
			}
		}
		
		[Column(Storage="_Difference", DbType="Decimal(18,2) NOT NULL")]
		public decimal Difference
		{
			get
			{
				return this._Difference;
			}
			set
			{
				if ((this._Difference != value))
				{
					this._Difference = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.BOM_PRODUCT_REVENUE_REPORT_ORDER")]
	public partial class BOM_PRODUCT_REVENUE_REPORT_ORDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RevCatGroup;
		
		private System.Nullable<int> _ReportOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRevCatGroupChanging(string value);
    partial void OnRevCatGroupChanged();
    partial void OnReportOrderChanging(System.Nullable<int> value);
    partial void OnReportOrderChanged();
    #endregion
		
		public BOM_PRODUCT_REVENUE_REPORT_ORDER()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_RevCatGroup", DbType="VarChar(32)")]
		public string RevCatGroup
		{
			get
			{
				return this._RevCatGroup;
			}
			set
			{
				if ((this._RevCatGroup != value))
				{
					this.OnRevCatGroupChanging(value);
					this.SendPropertyChanging();
					this._RevCatGroup = value;
					this.SendPropertyChanged("RevCatGroup");
					this.OnRevCatGroupChanged();
				}
			}
		}
		
		[Column(Storage="_ReportOrder", DbType="Int")]
		public System.Nullable<int> ReportOrder
		{
			get
			{
				return this._ReportOrder;
			}
			set
			{
				if ((this._ReportOrder != value))
				{
					this.OnReportOrderChanging(value);
					this.SendPropertyChanging();
					this._ReportOrder = value;
					this.SendPropertyChanged("ReportOrder");
					this.OnReportOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.BOM_STATE_DEFINITION")]
	public partial class BOM_STATE_DEFINITION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _State;
		
		private string _ControlState;
		
		private System.Nullable<int> _StateOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnControlStateChanging(string value);
    partial void OnControlStateChanged();
    partial void OnStateOrderChanging(System.Nullable<int> value);
    partial void OnStateOrderChanged();
    #endregion
		
		public BOM_STATE_DEFINITION()
		{
			OnCreated();
		}
		
		[Column(Storage="_State", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_ControlState", DbType="VarChar(20)")]
		public string ControlState
		{
			get
			{
				return this._ControlState;
			}
			set
			{
				if ((this._ControlState != value))
				{
					this.OnControlStateChanging(value);
					this.SendPropertyChanging();
					this._ControlState = value;
					this.SendPropertyChanged("ControlState");
					this.OnControlStateChanged();
				}
			}
		}
		
		[Column(Storage="_StateOrder", DbType="Int")]
		public System.Nullable<int> StateOrder
		{
			get
			{
				return this._StateOrder;
			}
			set
			{
				if ((this._StateOrder != value))
				{
					this.OnStateOrderChanging(value);
					this.SendPropertyChanging();
					this._StateOrder = value;
					this.SendPropertyChanged("StateOrder");
					this.OnStateOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.BRANCHES")]
	public partial class BRANCHES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _CompanyNum;
		
		private byte _BranchNum;
		
		private string _BranchName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Address4;
		
		private string _Phone;
		
		private string _Fax;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnBranchNumChanging(byte value);
    partial void OnBranchNumChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnAddress4Changing(string value);
    partial void OnAddress4Changed();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    #endregion
		
		public BRANCHES()
		{
			OnCreated();
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_BranchNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte BranchNum
		{
			get
			{
				return this._BranchNum;
			}
			set
			{
				if ((this._BranchNum != value))
				{
					this.OnBranchNumChanging(value);
					this.SendPropertyChanging();
					this._BranchNum = value;
					this.SendPropertyChanged("BranchNum");
					this.OnBranchNumChanged();
				}
			}
		}
		
		[Column(Storage="_BranchName", DbType="VarChar(50)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[Column(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[Column(Storage="_Address4", DbType="VarChar(50)")]
		public string Address4
		{
			get
			{
				return this._Address4;
			}
			set
			{
				if ((this._Address4 != value))
				{
					this.OnAddress4Changing(value);
					this.SendPropertyChanging();
					this._Address4 = value;
					this.SendPropertyChanged("Address4");
					this.OnAddress4Changed();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CHEQ_BATCH_NUM")]
	public partial class CHEQ_BATCH_NUM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Batch;
		
		private string _ChequeNum;
		
		private string _BankAccount;
		
		private System.Nullable<int> _CompanyNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBatchChanging(int value);
    partial void OnBatchChanged();
    partial void OnChequeNumChanging(string value);
    partial void OnChequeNumChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnCompanyNumChanging(System.Nullable<int> value);
    partial void OnCompanyNumChanged();
    #endregion
		
		public CHEQ_BATCH_NUM()
		{
			OnCreated();
		}
		
		[Column(Storage="_Batch", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this.OnBatchChanging(value);
					this.SendPropertyChanging();
					this._Batch = value;
					this.SendPropertyChanged("Batch");
					this.OnBatchChanged();
				}
			}
		}
		
		[Column(Storage="_ChequeNum", DbType="VarChar(50)")]
		public string ChequeNum
		{
			get
			{
				return this._ChequeNum;
			}
			set
			{
				if ((this._ChequeNum != value))
				{
					this.OnChequeNumChanging(value);
					this.SendPropertyChanging();
					this._ChequeNum = value;
					this.SendPropertyChanged("ChequeNum");
					this.OnChequeNumChanged();
				}
			}
		}
		
		[Column(Storage="_BankAccount", DbType="VarChar(50)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="Int")]
		public System.Nullable<int> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.COMPANY_APPROVALS")]
	public partial class COMPANY_APPROVALS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private byte _CompanyNum;
		
		private string _Approval;
		
		private System.Nullable<bool> _Allowed;
		
		private EntityRef<SECURITY_APPROVALS> _SECURITY_APPROVALS;
		
		private EntityRef<SETUP> _SETUP;
		
		private EntityRef<EMPLOYEES> _EMPLOYEES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnApprovalChanging(string value);
    partial void OnApprovalChanged();
    partial void OnAllowedChanging(System.Nullable<bool> value);
    partial void OnAllowedChanged();
    #endregion
		
		public COMPANY_APPROVALS()
		{
			this._SECURITY_APPROVALS = default(EntityRef<SECURITY_APPROVALS>);
			this._SETUP = default(EntityRef<SETUP>);
			this._EMPLOYEES = default(EntityRef<EMPLOYEES>);
			OnCreated();
		}
		
		[Column(Storage="_UserID", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._EMPLOYEES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					if (this._SETUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Approval", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Approval
		{
			get
			{
				return this._Approval;
			}
			set
			{
				if ((this._Approval != value))
				{
					if (this._SECURITY_APPROVALS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovalChanging(value);
					this.SendPropertyChanging();
					this._Approval = value;
					this.SendPropertyChanged("Approval");
					this.OnApprovalChanged();
				}
			}
		}
		
		[Column(Storage="_Allowed", DbType="Bit")]
		public System.Nullable<bool> Allowed
		{
			get
			{
				return this._Allowed;
			}
			set
			{
				if ((this._Allowed != value))
				{
					this.OnAllowedChanging(value);
					this.SendPropertyChanging();
					this._Allowed = value;
					this.SendPropertyChanged("Allowed");
					this.OnAllowedChanged();
				}
			}
		}
		
		[Association(Name="FK_COMPANY_APPROVALS_APPROVAL", Storage="_SECURITY_APPROVALS", ThisKey="Approval", OtherKey="Approval", IsForeignKey=true)]
		public SECURITY_APPROVALS SECURITY_APPROVALS
		{
			get
			{
				return this._SECURITY_APPROVALS.Entity;
			}
			set
			{
				SECURITY_APPROVALS previousValue = this._SECURITY_APPROVALS.Entity;
				if (((previousValue != value) 
							|| (this._SECURITY_APPROVALS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SECURITY_APPROVALS.Entity = null;
						previousValue.COMPANY_APPROVALS.Remove(this);
					}
					this._SECURITY_APPROVALS.Entity = value;
					if ((value != null))
					{
						value.COMPANY_APPROVALS.Add(this);
						this._Approval = value.Approval;
					}
					else
					{
						this._Approval = default(string);
					}
					this.SendPropertyChanged("SECURITY_APPROVALS");
				}
			}
		}
		
		[Association(Name="FK_COMPANY_APPROVALS_COMPANY", Storage="_SETUP", ThisKey="CompanyNum", OtherKey="CompanyNum", IsForeignKey=true)]
		public SETUP SETUP
		{
			get
			{
				return this._SETUP.Entity;
			}
			set
			{
				SETUP previousValue = this._SETUP.Entity;
				if (((previousValue != value) 
							|| (this._SETUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SETUP.Entity = null;
						previousValue.COMPANY_APPROVALS.Remove(this);
					}
					this._SETUP.Entity = value;
					if ((value != null))
					{
						value.COMPANY_APPROVALS.Add(this);
						this._CompanyNum = value.CompanyNum;
					}
					else
					{
						this._CompanyNum = default(byte);
					}
					this.SendPropertyChanged("SETUP");
				}
			}
		}
		
		[Association(Name="FK_COMPANY_APPROVALS_USER", Storage="_EMPLOYEES", ThisKey="UserID", OtherKey="EmployeeID", IsForeignKey=true)]
		public EMPLOYEES EMPLOYEES
		{
			get
			{
				return this._EMPLOYEES.Entity;
			}
			set
			{
				EMPLOYEES previousValue = this._EMPLOYEES.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEES.Entity = null;
						previousValue.COMPANY_APPROVALS.Remove(this);
					}
					this._EMPLOYEES.Entity = value;
					if ((value != null))
					{
						value.COMPANY_APPROVALS.Add(this);
						this._UserID = value.EmployeeID;
					}
					else
					{
						this._UserID = default(string);
					}
					this.SendPropertyChanged("EMPLOYEES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.COMPANY_APPROVALS_TMP")]
	public partial class COMPANY_APPROVALS_TMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GUID;
		
		private string _UserID;
		
		private byte _CompanyNum;
		
		private string _Approval;
		
		private System.Nullable<bool> _Allowed;
		
		private EntityRef<EMPLOYEES_APPROVALS_TMP> _EMPLOYEES_APPROVALS_TMP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnApprovalChanging(string value);
    partial void OnApprovalChanged();
    partial void OnAllowedChanging(System.Nullable<bool> value);
    partial void OnAllowedChanged();
    #endregion
		
		public COMPANY_APPROVALS_TMP()
		{
			this._EMPLOYEES_APPROVALS_TMP = default(EntityRef<EMPLOYEES_APPROVALS_TMP>);
			OnCreated();
		}
		
		[Column(Storage="_GUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					if (this._EMPLOYEES_APPROVALS_TMP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._EMPLOYEES_APPROVALS_TMP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Approval", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Approval
		{
			get
			{
				return this._Approval;
			}
			set
			{
				if ((this._Approval != value))
				{
					if (this._EMPLOYEES_APPROVALS_TMP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovalChanging(value);
					this.SendPropertyChanging();
					this._Approval = value;
					this.SendPropertyChanged("Approval");
					this.OnApprovalChanged();
				}
			}
		}
		
		[Column(Storage="_Allowed", DbType="Bit")]
		public System.Nullable<bool> Allowed
		{
			get
			{
				return this._Allowed;
			}
			set
			{
				if ((this._Allowed != value))
				{
					this.OnAllowedChanging(value);
					this.SendPropertyChanging();
					this._Allowed = value;
					this.SendPropertyChanged("Allowed");
					this.OnAllowedChanged();
				}
			}
		}
		
		[Association(Name="FK_COMPANY_APPROVALS_APPROVAL_TMP", Storage="_EMPLOYEES_APPROVALS_TMP", ThisKey="GUID,UserID,Approval", OtherKey="GUID,Employee,Approval", IsForeignKey=true, DeleteOnNull=true)]
		public EMPLOYEES_APPROVALS_TMP EMPLOYEES_APPROVALS_TMP
		{
			get
			{
				return this._EMPLOYEES_APPROVALS_TMP.Entity;
			}
			set
			{
				EMPLOYEES_APPROVALS_TMP previousValue = this._EMPLOYEES_APPROVALS_TMP.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEES_APPROVALS_TMP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEES_APPROVALS_TMP.Entity = null;
						previousValue.COMPANY_APPROVALS_TMP.Remove(this);
					}
					this._EMPLOYEES_APPROVALS_TMP.Entity = value;
					if ((value != null))
					{
						value.COMPANY_APPROVALS_TMP.Add(this);
						this._GUID = value.GUID;
						this._UserID = value.Employee;
						this._Approval = value.Approval;
					}
					else
					{
						this._GUID = default(System.Guid);
						this._UserID = default(string);
						this._Approval = default(string);
					}
					this.SendPropertyChanged("EMPLOYEES_APPROVALS_TMP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.COMPANY_MERGE_TEMP")]
	public partial class COMPANY_MERGE_TEMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyMergeTempID;
		
		private string _EmployeeID;
		
		private System.Nullable<int> _AccountIDFrom;
		
		private System.Nullable<int> _AccountIDTo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyMergeTempIDChanging(int value);
    partial void OnCompanyMergeTempIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnAccountIDFromChanging(System.Nullable<int> value);
    partial void OnAccountIDFromChanged();
    partial void OnAccountIDToChanging(System.Nullable<int> value);
    partial void OnAccountIDToChanged();
    #endregion
		
		public COMPANY_MERGE_TEMP()
		{
			OnCreated();
		}
		
		[Column(Storage="_CompanyMergeTempID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyMergeTempID
		{
			get
			{
				return this._CompanyMergeTempID;
			}
			set
			{
				if ((this._CompanyMergeTempID != value))
				{
					this.OnCompanyMergeTempIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyMergeTempID = value;
					this.SendPropertyChanged("CompanyMergeTempID");
					this.OnCompanyMergeTempIDChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountIDFrom", DbType="Int")]
		public System.Nullable<int> AccountIDFrom
		{
			get
			{
				return this._AccountIDFrom;
			}
			set
			{
				if ((this._AccountIDFrom != value))
				{
					this.OnAccountIDFromChanging(value);
					this.SendPropertyChanging();
					this._AccountIDFrom = value;
					this.SendPropertyChanged("AccountIDFrom");
					this.OnAccountIDFromChanged();
				}
			}
		}
		
		[Column(Storage="_AccountIDTo", DbType="Int")]
		public System.Nullable<int> AccountIDTo
		{
			get
			{
				return this._AccountIDTo;
			}
			set
			{
				if ((this._AccountIDTo != value))
				{
					this.OnAccountIDToChanging(value);
					this.SendPropertyChanging();
					this._AccountIDTo = value;
					this.SendPropertyChanged("AccountIDTo");
					this.OnAccountIDToChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CONTACTS")]
	public partial class CONTACTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactID;
		
		private System.Nullable<int> _AccountID;
		
		private string _JobTitle;
		
		private string _FirstName;
		
		private string _MiddleInitial;
		
		private string _LastName;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _AfterHours;
		
		private string _Mobile;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private bool _PrimaryContact;
		
		private string _Department;
		
		private System.Nullable<int> _InvoiceEmailType;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
		private EntitySet<CTRAC_HEADER> _CTRAC_HEADER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleInitialChanging(string value);
    partial void OnMiddleInitialChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnAfterHoursChanging(string value);
    partial void OnAfterHoursChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnPrimaryContactChanging(bool value);
    partial void OnPrimaryContactChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnInvoiceEmailTypeChanging(System.Nullable<int> value);
    partial void OnInvoiceEmailTypeChanged();
    #endregion
		
		public CONTACTS()
		{
			this._DEBTORS = default(EntityRef<DEBTORS>);
			this._CTRAC_HEADER = new EntitySet<CTRAC_HEADER>(new Action<CTRAC_HEADER>(this.attach_CTRAC_HEADER), new Action<CTRAC_HEADER>(this.detach_CTRAC_HEADER));
			OnCreated();
		}
		
		[Column(Storage="_ContactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_JobTitle", DbType="VarChar(30)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="VarChar(20)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_MiddleInitial", DbType="VarChar(5)")]
		public string MiddleInitial
		{
			get
			{
				return this._MiddleInitial;
			}
			set
			{
				if ((this._MiddleInitial != value))
				{
					this.OnMiddleInitialChanging(value);
					this.SendPropertyChanging();
					this._MiddleInitial = value;
					this.SendPropertyChanged("MiddleInitial");
					this.OnMiddleInitialChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="VarChar(20)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_AfterHours", DbType="VarChar(15)")]
		public string AfterHours
		{
			get
			{
				return this._AfterHours;
			}
			set
			{
				if ((this._AfterHours != value))
				{
					this.OnAfterHoursChanging(value);
					this.SendPropertyChanging();
					this._AfterHours = value;
					this.SendPropertyChanged("AfterHours");
					this.OnAfterHoursChanged();
				}
			}
		}
		
		[Column(Storage="_Mobile", DbType="VarChar(15)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[Column(Storage="_PrimaryContact", DbType="Bit NOT NULL")]
		public bool PrimaryContact
		{
			get
			{
				return this._PrimaryContact;
			}
			set
			{
				if ((this._PrimaryContact != value))
				{
					this.OnPrimaryContactChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContact = value;
					this.SendPropertyChanged("PrimaryContact");
					this.OnPrimaryContactChanged();
				}
			}
		}
		
		[Column(Storage="_Department", DbType="VarChar(30)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceEmailType", DbType="Int")]
		public System.Nullable<int> InvoiceEmailType
		{
			get
			{
				return this._InvoiceEmailType;
			}
			set
			{
				if ((this._InvoiceEmailType != value))
				{
					this.OnInvoiceEmailTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceEmailType = value;
					this.SendPropertyChanged("InvoiceEmailType");
					this.OnInvoiceEmailTypeChanged();
				}
			}
		}
		
		[Association(Name="FK_CONTACTS_DEBTORS", Storage="_DEBTORS", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.CONTACTS.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.CONTACTS.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_HEADER_CONTACTS", Storage="_CTRAC_HEADER", ThisKey="ContactID", OtherKey="PrimaryContact", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_HEADER> CTRAC_HEADER
		{
			get
			{
				return this._CTRAC_HEADER;
			}
			set
			{
				this._CTRAC_HEADER.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_HEADER(CTRAC_HEADER entity)
		{
			this.SendPropertyChanging();
			entity.CONTACTS = this;
		}
		
		private void detach_CTRAC_HEADER(CTRAC_HEADER entity)
		{
			this.SendPropertyChanging();
			entity.CONTACTS = null;
		}
	}
	
	[Table(Name="dbo.CONTACTS_CREDITORS")]
	public partial class CONTACTS_CREDITORS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactID;
		
		private System.Nullable<int> _AccountID;
		
		private string _Fax;
		
		private string _Code;
		
		private string _FirstName;
		
		private string _MiddleInitial;
		
		private string _LastName;
		
		private string _Phone;
		
		private string _Mobile;
		
		private string _AfterHours;
		
		private string _Email;
		
		private string _JobTitle;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private bool _PrimaryContact;
		
		private EntityRef<CREDITORS> _CREDITORS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleInitialChanging(string value);
    partial void OnMiddleInitialChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnAfterHoursChanging(string value);
    partial void OnAfterHoursChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnPrimaryContactChanging(bool value);
    partial void OnPrimaryContactChanged();
    #endregion
		
		public CONTACTS_CREDITORS()
		{
			this._CREDITORS = default(EntityRef<CREDITORS>);
			OnCreated();
		}
		
		[Column(Storage="_ContactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._CREDITORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(12)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="VarChar(20)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_MiddleInitial", DbType="VarChar(5)")]
		public string MiddleInitial
		{
			get
			{
				return this._MiddleInitial;
			}
			set
			{
				if ((this._MiddleInitial != value))
				{
					this.OnMiddleInitialChanging(value);
					this.SendPropertyChanging();
					this._MiddleInitial = value;
					this.SendPropertyChanged("MiddleInitial");
					this.OnMiddleInitialChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="VarChar(20)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Mobile", DbType="VarChar(15)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[Column(Storage="_AfterHours", DbType="VarChar(15)")]
		public string AfterHours
		{
			get
			{
				return this._AfterHours;
			}
			set
			{
				if ((this._AfterHours != value))
				{
					this.OnAfterHoursChanging(value);
					this.SendPropertyChanging();
					this._AfterHours = value;
					this.SendPropertyChanged("AfterHours");
					this.OnAfterHoursChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_JobTitle", DbType="VarChar(30)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(8)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[Column(Storage="_PrimaryContact", DbType="Bit NOT NULL")]
		public bool PrimaryContact
		{
			get
			{
				return this._PrimaryContact;
			}
			set
			{
				if ((this._PrimaryContact != value))
				{
					this.OnPrimaryContactChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContact = value;
					this.SendPropertyChanged("PrimaryContact");
					this.OnPrimaryContactChanged();
				}
			}
		}
		
		[Association(Name="FK_CONTACTS_CREDITORS_CREDITOR", Storage="_CREDITORS", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public CREDITORS CREDITORS
		{
			get
			{
				return this._CREDITORS.Entity;
			}
			set
			{
				CREDITORS previousValue = this._CREDITORS.Entity;
				if (((previousValue != value) 
							|| (this._CREDITORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CREDITORS.Entity = null;
						previousValue.CONTACTS_CREDITORS.Remove(this);
					}
					this._CREDITORS.Entity = value;
					if ((value != null))
					{
						value.CONTACTS_CREDITORS.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CREDITORS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CONTACTS_MERGEHISTORY")]
	public partial class CONTACTS_MERGEHISTORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactMergeID;
		
		private System.Nullable<int> _OldContactID;
		
		private System.Nullable<int> _NewContactID;
		
		private System.DateTime _DateMerged;
		
		private string _EmployeeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactMergeIDChanging(int value);
    partial void OnContactMergeIDChanged();
    partial void OnOldContactIDChanging(System.Nullable<int> value);
    partial void OnOldContactIDChanged();
    partial void OnNewContactIDChanging(System.Nullable<int> value);
    partial void OnNewContactIDChanged();
    partial void OnDateMergedChanging(System.DateTime value);
    partial void OnDateMergedChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    #endregion
		
		public CONTACTS_MERGEHISTORY()
		{
			OnCreated();
		}
		
		[Column(Storage="_ContactMergeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactMergeID
		{
			get
			{
				return this._ContactMergeID;
			}
			set
			{
				if ((this._ContactMergeID != value))
				{
					this.OnContactMergeIDChanging(value);
					this.SendPropertyChanging();
					this._ContactMergeID = value;
					this.SendPropertyChanged("ContactMergeID");
					this.OnContactMergeIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldContactID", DbType="Int")]
		public System.Nullable<int> OldContactID
		{
			get
			{
				return this._OldContactID;
			}
			set
			{
				if ((this._OldContactID != value))
				{
					this.OnOldContactIDChanging(value);
					this.SendPropertyChanging();
					this._OldContactID = value;
					this.SendPropertyChanged("OldContactID");
					this.OnOldContactIDChanged();
				}
			}
		}
		
		[Column(Storage="_NewContactID", DbType="Int")]
		public System.Nullable<int> NewContactID
		{
			get
			{
				return this._NewContactID;
			}
			set
			{
				if ((this._NewContactID != value))
				{
					this.OnNewContactIDChanging(value);
					this.SendPropertyChanging();
					this._NewContactID = value;
					this.SendPropertyChanged("NewContactID");
					this.OnNewContactIDChanged();
				}
			}
		}
		
		[Column(Storage="_DateMerged", DbType="DateTime NOT NULL")]
		public System.DateTime DateMerged
		{
			get
			{
				return this._DateMerged;
			}
			set
			{
				if ((this._DateMerged != value))
				{
					this.OnDateMergedChanging(value);
					this.SendPropertyChanging();
					this._DateMerged = value;
					this.SendPropertyChanged("DateMerged");
					this.OnDateMergedChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.COUNTRIES")]
	public partial class COUNTRIES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryID;
		
		private string _Country;
		
		private string _POAbbrev;
		
		private System.Nullable<decimal> _GSTRate;
		
		private string _InvoiceFooterText;
		
		private EntitySet<SETUP> _SETUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPOAbbrevChanging(string value);
    partial void OnPOAbbrevChanged();
    partial void OnGSTRateChanging(System.Nullable<decimal> value);
    partial void OnGSTRateChanged();
    partial void OnInvoiceFooterTextChanging(string value);
    partial void OnInvoiceFooterTextChanged();
    #endregion
		
		public COUNTRIES()
		{
			this._SETUP = new EntitySet<SETUP>(new Action<SETUP>(this.attach_SETUP), new Action<SETUP>(this.detach_SETUP));
			OnCreated();
		}
		
		[Column(Storage="_CountryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[Column(Storage="_POAbbrev", DbType="VarChar(20)")]
		public string POAbbrev
		{
			get
			{
				return this._POAbbrev;
			}
			set
			{
				if ((this._POAbbrev != value))
				{
					this.OnPOAbbrevChanging(value);
					this.SendPropertyChanging();
					this._POAbbrev = value;
					this.SendPropertyChanged("POAbbrev");
					this.OnPOAbbrevChanged();
				}
			}
		}
		
		[Column(Storage="_GSTRate", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> GSTRate
		{
			get
			{
				return this._GSTRate;
			}
			set
			{
				if ((this._GSTRate != value))
				{
					this.OnGSTRateChanging(value);
					this.SendPropertyChanging();
					this._GSTRate = value;
					this.SendPropertyChanged("GSTRate");
					this.OnGSTRateChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceFooterText", DbType="VarChar(100)")]
		public string InvoiceFooterText
		{
			get
			{
				return this._InvoiceFooterText;
			}
			set
			{
				if ((this._InvoiceFooterText != value))
				{
					this.OnInvoiceFooterTextChanging(value);
					this.SendPropertyChanging();
					this._InvoiceFooterText = value;
					this.SendPropertyChanged("InvoiceFooterText");
					this.OnInvoiceFooterTextChanged();
				}
			}
		}
		
		[Association(Name="FK_SETUP_COUNTRIES", Storage="_SETUP", ThisKey="CountryID", OtherKey="TaxCountry", DeleteRule="NO ACTION")]
		public EntitySet<SETUP> SETUP
		{
			get
			{
				return this._SETUP;
			}
			set
			{
				this._SETUP.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SETUP(SETUP entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRIES = this;
		}
		
		private void detach_SETUP(SETUP entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRIES = null;
		}
	}
	
	[Table(Name="dbo.COURIERS")]
	public partial class COURIERS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CourierID;
		
		private string _Courier;
		
		private int _ContactID;
		
		private string _ContactName;
		
		private string _Phone;
		
		private string _ConsignPrefix;
		
		private string _ConsignSuffix;
		
		private int _NextConsign;
		
		private int _MaxConsign;
		
		private string _LabelReport;
		
		private string _ClientID;
		
		private string _LocationID;
		
		private string _SequenceNum;
		
		private string _BarcodePrefix;
		
		private byte _ModCheck;
		
		private string _ManifestEMail;
		
		private string _ID;
		
		private byte _ManifestLoc;
		
		private string _ManifestDir;
		
		private bool _DontShowSendTo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourierIDChanging(int value);
    partial void OnCourierIDChanged();
    partial void OnCourierChanging(string value);
    partial void OnCourierChanged();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnConsignPrefixChanging(string value);
    partial void OnConsignPrefixChanged();
    partial void OnConsignSuffixChanging(string value);
    partial void OnConsignSuffixChanged();
    partial void OnNextConsignChanging(int value);
    partial void OnNextConsignChanged();
    partial void OnMaxConsignChanging(int value);
    partial void OnMaxConsignChanged();
    partial void OnLabelReportChanging(string value);
    partial void OnLabelReportChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnLocationIDChanging(string value);
    partial void OnLocationIDChanged();
    partial void OnSequenceNumChanging(string value);
    partial void OnSequenceNumChanged();
    partial void OnBarcodePrefixChanging(string value);
    partial void OnBarcodePrefixChanged();
    partial void OnModCheckChanging(byte value);
    partial void OnModCheckChanged();
    partial void OnManifestEMailChanging(string value);
    partial void OnManifestEMailChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnManifestLocChanging(byte value);
    partial void OnManifestLocChanged();
    partial void OnManifestDirChanging(string value);
    partial void OnManifestDirChanged();
    partial void OnDontShowSendToChanging(bool value);
    partial void OnDontShowSendToChanged();
    #endregion
		
		public COURIERS()
		{
			OnCreated();
		}
		
		[Column(Storage="_CourierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CourierID
		{
			get
			{
				return this._CourierID;
			}
			set
			{
				if ((this._CourierID != value))
				{
					this.OnCourierIDChanging(value);
					this.SendPropertyChanging();
					this._CourierID = value;
					this.SendPropertyChanged("CourierID");
					this.OnCourierIDChanged();
				}
			}
		}
		
		[Column(Storage="_Courier", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Courier
		{
			get
			{
				return this._Courier;
			}
			set
			{
				if ((this._Courier != value))
				{
					this.OnCourierChanging(value);
					this.SendPropertyChanging();
					this._Courier = value;
					this.SendPropertyChanged("Courier");
					this.OnCourierChanged();
				}
			}
		}
		
		[Column(Storage="_ContactID", DbType="Int NOT NULL")]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContactName", DbType="VarChar(50)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_ConsignPrefix", DbType="VarChar(5)")]
		public string ConsignPrefix
		{
			get
			{
				return this._ConsignPrefix;
			}
			set
			{
				if ((this._ConsignPrefix != value))
				{
					this.OnConsignPrefixChanging(value);
					this.SendPropertyChanging();
					this._ConsignPrefix = value;
					this.SendPropertyChanged("ConsignPrefix");
					this.OnConsignPrefixChanged();
				}
			}
		}
		
		[Column(Storage="_ConsignSuffix", DbType="VarChar(5)")]
		public string ConsignSuffix
		{
			get
			{
				return this._ConsignSuffix;
			}
			set
			{
				if ((this._ConsignSuffix != value))
				{
					this.OnConsignSuffixChanging(value);
					this.SendPropertyChanging();
					this._ConsignSuffix = value;
					this.SendPropertyChanged("ConsignSuffix");
					this.OnConsignSuffixChanged();
				}
			}
		}
		
		[Column(Storage="_NextConsign", DbType="Int NOT NULL")]
		public int NextConsign
		{
			get
			{
				return this._NextConsign;
			}
			set
			{
				if ((this._NextConsign != value))
				{
					this.OnNextConsignChanging(value);
					this.SendPropertyChanging();
					this._NextConsign = value;
					this.SendPropertyChanged("NextConsign");
					this.OnNextConsignChanged();
				}
			}
		}
		
		[Column(Storage="_MaxConsign", DbType="Int NOT NULL")]
		public int MaxConsign
		{
			get
			{
				return this._MaxConsign;
			}
			set
			{
				if ((this._MaxConsign != value))
				{
					this.OnMaxConsignChanging(value);
					this.SendPropertyChanging();
					this._MaxConsign = value;
					this.SendPropertyChanged("MaxConsign");
					this.OnMaxConsignChanged();
				}
			}
		}
		
		[Column(Storage="_LabelReport", DbType="VarChar(20)")]
		public string LabelReport
		{
			get
			{
				return this._LabelReport;
			}
			set
			{
				if ((this._LabelReport != value))
				{
					this.OnLabelReportChanging(value);
					this.SendPropertyChanging();
					this._LabelReport = value;
					this.SendPropertyChanged("LabelReport");
					this.OnLabelReportChanged();
				}
			}
		}
		
		[Column(Storage="_ClientID", DbType="VarChar(30)")]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="VarChar(5)")]
		public string LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_SequenceNum", DbType="VarChar(6)")]
		public string SequenceNum
		{
			get
			{
				return this._SequenceNum;
			}
			set
			{
				if ((this._SequenceNum != value))
				{
					this.OnSequenceNumChanging(value);
					this.SendPropertyChanging();
					this._SequenceNum = value;
					this.SendPropertyChanged("SequenceNum");
					this.OnSequenceNumChanged();
				}
			}
		}
		
		[Column(Storage="_BarcodePrefix", DbType="VarChar(10)")]
		public string BarcodePrefix
		{
			get
			{
				return this._BarcodePrefix;
			}
			set
			{
				if ((this._BarcodePrefix != value))
				{
					this.OnBarcodePrefixChanging(value);
					this.SendPropertyChanging();
					this._BarcodePrefix = value;
					this.SendPropertyChanged("BarcodePrefix");
					this.OnBarcodePrefixChanged();
				}
			}
		}
		
		[Column(Storage="_ModCheck", DbType="TinyInt NOT NULL")]
		public byte ModCheck
		{
			get
			{
				return this._ModCheck;
			}
			set
			{
				if ((this._ModCheck != value))
				{
					this.OnModCheckChanging(value);
					this.SendPropertyChanging();
					this._ModCheck = value;
					this.SendPropertyChanged("ModCheck");
					this.OnModCheckChanged();
				}
			}
		}
		
		[Column(Storage="_ManifestEMail", DbType="VarChar(50)")]
		public string ManifestEMail
		{
			get
			{
				return this._ManifestEMail;
			}
			set
			{
				if ((this._ManifestEMail != value))
				{
					this.OnManifestEMailChanging(value);
					this.SendPropertyChanging();
					this._ManifestEMail = value;
					this.SendPropertyChanged("ManifestEMail");
					this.OnManifestEMailChanged();
				}
			}
		}
		
		[Column(Storage="_ID", DbType="VarChar(2)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ManifestLoc", DbType="TinyInt NOT NULL")]
		public byte ManifestLoc
		{
			get
			{
				return this._ManifestLoc;
			}
			set
			{
				if ((this._ManifestLoc != value))
				{
					this.OnManifestLocChanging(value);
					this.SendPropertyChanging();
					this._ManifestLoc = value;
					this.SendPropertyChanged("ManifestLoc");
					this.OnManifestLocChanged();
				}
			}
		}
		
		[Column(Storage="_ManifestDir", DbType="VarChar(50)")]
		public string ManifestDir
		{
			get
			{
				return this._ManifestDir;
			}
			set
			{
				if ((this._ManifestDir != value))
				{
					this.OnManifestDirChanging(value);
					this.SendPropertyChanging();
					this._ManifestDir = value;
					this.SendPropertyChanged("ManifestDir");
					this.OnManifestDirChanged();
				}
			}
		}
		
		[Column(Storage="_DontShowSendTo", DbType="Bit NOT NULL")]
		public bool DontShowSendTo
		{
			get
			{
				return this._DontShowSendTo;
			}
			set
			{
				if ((this._DontShowSendTo != value))
				{
					this.OnDontShowSendToChanging(value);
					this.SendPropertyChanging();
					this._DontShowSendTo = value;
					this.SendPropertyChanged("DontShowSendTo");
					this.OnDontShowSendToChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Creditor_CHEQUES")]
	public partial class Creditor_CHEQUES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _CompanyNum;
		
		private string _BankAccGL;
		
		private string _ChequeNum;
		
		private System.DateTime _Date;
		
		private string _Creditor;
		
		private decimal _Amount;
		
		private bool _Printed;
		
		private int _BatchNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnBankAccGLChanging(string value);
    partial void OnBankAccGLChanged();
    partial void OnChequeNumChanging(string value);
    partial void OnChequeNumChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCreditorChanging(string value);
    partial void OnCreditorChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPrintedChanging(bool value);
    partial void OnPrintedChanged();
    partial void OnBatchNumChanging(int value);
    partial void OnBatchNumChanged();
    #endregion
		
		public Creditor_CHEQUES()
		{
			OnCreated();
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_BankAccGL", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BankAccGL
		{
			get
			{
				return this._BankAccGL;
			}
			set
			{
				if ((this._BankAccGL != value))
				{
					this.OnBankAccGLChanging(value);
					this.SendPropertyChanging();
					this._BankAccGL = value;
					this.SendPropertyChanged("BankAccGL");
					this.OnBankAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_ChequeNum", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ChequeNum
		{
			get
			{
				return this._ChequeNum;
			}
			set
			{
				if ((this._ChequeNum != value))
				{
					this.OnChequeNumChanging(value);
					this.SendPropertyChanging();
					this._ChequeNum = value;
					this.SendPropertyChanged("ChequeNum");
					this.OnChequeNumChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Creditor", DbType="VarChar(12)")]
		public string Creditor
		{
			get
			{
				return this._Creditor;
			}
			set
			{
				if ((this._Creditor != value))
				{
					this.OnCreditorChanging(value);
					this.SendPropertyChanging();
					this._Creditor = value;
					this.SendPropertyChanged("Creditor");
					this.OnCreditorChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Decimal(11,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_Printed", DbType="Bit NOT NULL")]
		public bool Printed
		{
			get
			{
				return this._Printed;
			}
			set
			{
				if ((this._Printed != value))
				{
					this.OnPrintedChanging(value);
					this.SendPropertyChanging();
					this._Printed = value;
					this.SendPropertyChanged("Printed");
					this.OnPrintedChanged();
				}
			}
		}
		
		[Column(Storage="_BatchNum", DbType="Int NOT NULL")]
		public int BatchNum
		{
			get
			{
				return this._BatchNum;
			}
			set
			{
				if ((this._BatchNum != value))
				{
					this.OnBatchNumChanging(value);
					this.SendPropertyChanging();
					this._BatchNum = value;
					this.SendPropertyChanged("BatchNum");
					this.OnBatchNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CREDITORS")]
	public partial class CREDITORS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private string _OldAccount;
		
		private string _Company;
		
		private System.Nullable<int> _PrimaryContact;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Type;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _City;
		
		private string _State;
		
		private string _PostCode;
		
		private string _Country;
		
		private string _Phone;
		
		private string _PhoneAfterHrs;
		
		private string _Fax;
		
		private string _WebSite;
		
		private string _Email;
		
		private string _BankAcctName;
		
		private string _BankName;
		
		private string _BankSuburb;
		
		private string _BankBSB;
		
		private string _BankAcctNum;
		
		private System.Nullable<byte> _SpecialPrice;
		
		private System.Nullable<byte> _SpecialDelivery;
		
		private System.Nullable<byte> _Urgent;
		
		private System.Nullable<byte> _Local;
		
		private string _Remarks;
		
		private string _Discount1;
		
		private string _Discount2;
		
		private string _Rebate;
		
		private string _AccountClass;
		
		private decimal _OpenBal;
		
		private decimal _Current;
		
		private decimal @__30Days;
		
		private decimal @__60Days;
		
		private decimal @__90Days;
		
		private System.Nullable<decimal> _PCurrent;
		
		private System.Nullable<decimal> _P30;
		
		private System.Nullable<decimal> _P60;
		
		private System.Nullable<decimal> _P90;
		
		private decimal _MTD;
		
		private decimal _YTD;
		
		private decimal _LY;
		
		private decimal _MTDPaid;
		
		private decimal _YTDPaid;
		
		private decimal _LYPaid;
		
		private string _TermsMethod;
		
		private byte _NumDaysCredit;
		
		private System.Nullable<decimal> _CreditLimit;
		
		private System.Nullable<int> _LastPurchNum;
		
		private System.Nullable<System.DateTime> _LastPurchDate;
		
		private System.Nullable<decimal> _LastPurchAmt;
		
		private System.Nullable<System.DateTime> _LastPayDate;
		
		private System.Nullable<decimal> _LastPayAmt;
		
		private string _Notes;
		
		private string _WebLogin;
		
		private string _WebPassword;
		
		private System.Nullable<decimal> _LOCT;
		
		private System.Nullable<decimal> _LNOV;
		
		private System.Nullable<decimal> _LDEC;
		
		private System.Nullable<decimal> _JAN;
		
		private System.Nullable<decimal> _FEB;
		
		private System.Nullable<decimal> _MAR;
		
		private System.Nullable<decimal> _APR;
		
		private System.Nullable<decimal> _MAY;
		
		private System.Nullable<decimal> _JUN;
		
		private System.Nullable<decimal> _JUL;
		
		private System.Nullable<decimal> _AUG;
		
		private System.Nullable<decimal> _SEP;
		
		private System.Nullable<decimal> _OCT;
		
		private System.Nullable<decimal> _NOV;
		
		private System.Nullable<decimal> _DEC;
		
		private string _AbbrevName;
		
		private string _Branch;
		
		private System.Nullable<byte> _AreaCode;
		
		private byte _CompanyNum;
		
		private string _ContactName;
		
		private System.Nullable<decimal> _BalFwd;
		
		private System.Nullable<decimal> _NextMonth;
		
		private System.Nullable<decimal> _CurrentInv;
		
		private System.Nullable<decimal> _CurrentPay;
		
		private System.Nullable<decimal> _CurrentDisc;
		
		private System.Nullable<decimal> _CurrentJnl;
		
		private string _ABN;
		
		private string _PurchCtrlAccGL;
		
		private System.Nullable<bool> _Production;
		
		private string _AccountStatus;
		
		private string _BankDetails;
		
		private string _Currency;
		
		private System.Nullable<decimal> _LJAN;
		
		private System.Nullable<decimal> _LFEB;
		
		private System.Nullable<decimal> _LMAR;
		
		private System.Nullable<decimal> _LAPR;
		
		private System.Nullable<decimal> _LMAY;
		
		private System.Nullable<decimal> _LJUN;
		
		private System.Nullable<decimal> _LJUL;
		
		private System.Nullable<decimal> _LAUG;
		
		private System.Nullable<decimal> _LSEP;
		
		private System.Nullable<byte> _PaymentMethod;
		
		private string _GST_Type;
		
		private string _OurAccountNum;
		
		private string _AccpacVendorCode;
		
		private string _DeliveryAddress1;
		
		private string _DeliveryAddress2;
		
		private string _DeliveryAddress3;
		
		private string _DeliveryCity;
		
		private string _DeliveryState;
		
		private string _DeliveryPostCode;
		
		private bool _InActive;
		
		private System.Nullable<int> _PrimaryFinanceContact;
		
		private bool _ThirdParty;
		
		private EntitySet<CONTACTS_CREDITORS> _CONTACTS_CREDITORS;
		
		private EntitySet<CREDITORS_ACCPAC_VENDORS> _CREDITORS_ACCPAC_VENDORS;
		
		private EntitySet<DEBTORS_3P_AGREEMENTS> _DEBTORS_3P_AGREEMENTS;
		
		private EntitySet<INT_SERVICE_ID> _INT_SERVICE_ID;
		
		private EntitySet<STKORD> _STKORD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnOldAccountChanging(string value);
    partial void OnOldAccountChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPrimaryContactChanging(System.Nullable<int> value);
    partial void OnPrimaryContactChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhoneAfterHrsChanging(string value);
    partial void OnPhoneAfterHrsChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBankAcctNameChanging(string value);
    partial void OnBankAcctNameChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankSuburbChanging(string value);
    partial void OnBankSuburbChanged();
    partial void OnBankBSBChanging(string value);
    partial void OnBankBSBChanged();
    partial void OnBankAcctNumChanging(string value);
    partial void OnBankAcctNumChanged();
    partial void OnSpecialPriceChanging(System.Nullable<byte> value);
    partial void OnSpecialPriceChanged();
    partial void OnSpecialDeliveryChanging(System.Nullable<byte> value);
    partial void OnSpecialDeliveryChanged();
    partial void OnUrgentChanging(System.Nullable<byte> value);
    partial void OnUrgentChanged();
    partial void OnLocalChanging(System.Nullable<byte> value);
    partial void OnLocalChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnDiscount1Changing(string value);
    partial void OnDiscount1Changed();
    partial void OnDiscount2Changing(string value);
    partial void OnDiscount2Changed();
    partial void OnRebateChanging(string value);
    partial void OnRebateChanged();
    partial void OnAccountClassChanging(string value);
    partial void OnAccountClassChanged();
    partial void OnOpenBalChanging(decimal value);
    partial void OnOpenBalChanged();
    partial void OnCurrentChanging(decimal value);
    partial void OnCurrentChanged();
    partial void On_30DaysChanging(decimal value);
    partial void On_30DaysChanged();
    partial void On_60DaysChanging(decimal value);
    partial void On_60DaysChanged();
    partial void On_90DaysChanging(decimal value);
    partial void On_90DaysChanged();
    partial void OnPCurrentChanging(System.Nullable<decimal> value);
    partial void OnPCurrentChanged();
    partial void OnP30Changing(System.Nullable<decimal> value);
    partial void OnP30Changed();
    partial void OnP60Changing(System.Nullable<decimal> value);
    partial void OnP60Changed();
    partial void OnP90Changing(System.Nullable<decimal> value);
    partial void OnP90Changed();
    partial void OnMTDChanging(decimal value);
    partial void OnMTDChanged();
    partial void OnYTDChanging(decimal value);
    partial void OnYTDChanged();
    partial void OnLYChanging(decimal value);
    partial void OnLYChanged();
    partial void OnMTDPaidChanging(decimal value);
    partial void OnMTDPaidChanged();
    partial void OnYTDPaidChanging(decimal value);
    partial void OnYTDPaidChanged();
    partial void OnLYPaidChanging(decimal value);
    partial void OnLYPaidChanged();
    partial void OnTermsMethodChanging(string value);
    partial void OnTermsMethodChanged();
    partial void OnNumDaysCreditChanging(byte value);
    partial void OnNumDaysCreditChanged();
    partial void OnCreditLimitChanging(System.Nullable<decimal> value);
    partial void OnCreditLimitChanged();
    partial void OnLastPurchNumChanging(System.Nullable<int> value);
    partial void OnLastPurchNumChanged();
    partial void OnLastPurchDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPurchDateChanged();
    partial void OnLastPurchAmtChanging(System.Nullable<decimal> value);
    partial void OnLastPurchAmtChanged();
    partial void OnLastPayDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPayDateChanged();
    partial void OnLastPayAmtChanging(System.Nullable<decimal> value);
    partial void OnLastPayAmtChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnWebLoginChanging(string value);
    partial void OnWebLoginChanged();
    partial void OnWebPasswordChanging(string value);
    partial void OnWebPasswordChanged();
    partial void OnLOCTChanging(System.Nullable<decimal> value);
    partial void OnLOCTChanged();
    partial void OnLNOVChanging(System.Nullable<decimal> value);
    partial void OnLNOVChanged();
    partial void OnLDECChanging(System.Nullable<decimal> value);
    partial void OnLDECChanged();
    partial void OnJANChanging(System.Nullable<decimal> value);
    partial void OnJANChanged();
    partial void OnFEBChanging(System.Nullable<decimal> value);
    partial void OnFEBChanged();
    partial void OnMARChanging(System.Nullable<decimal> value);
    partial void OnMARChanged();
    partial void OnAPRChanging(System.Nullable<decimal> value);
    partial void OnAPRChanged();
    partial void OnMAYChanging(System.Nullable<decimal> value);
    partial void OnMAYChanged();
    partial void OnJUNChanging(System.Nullable<decimal> value);
    partial void OnJUNChanged();
    partial void OnJULChanging(System.Nullable<decimal> value);
    partial void OnJULChanged();
    partial void OnAUGChanging(System.Nullable<decimal> value);
    partial void OnAUGChanged();
    partial void OnSEPChanging(System.Nullable<decimal> value);
    partial void OnSEPChanged();
    partial void OnOCTChanging(System.Nullable<decimal> value);
    partial void OnOCTChanged();
    partial void OnNOVChanging(System.Nullable<decimal> value);
    partial void OnNOVChanged();
    partial void OnDECChanging(System.Nullable<decimal> value);
    partial void OnDECChanged();
    partial void OnAbbrevNameChanging(string value);
    partial void OnAbbrevNameChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnAreaCodeChanging(System.Nullable<byte> value);
    partial void OnAreaCodeChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnBalFwdChanging(System.Nullable<decimal> value);
    partial void OnBalFwdChanged();
    partial void OnNextMonthChanging(System.Nullable<decimal> value);
    partial void OnNextMonthChanged();
    partial void OnCurrentInvChanging(System.Nullable<decimal> value);
    partial void OnCurrentInvChanged();
    partial void OnCurrentPayChanging(System.Nullable<decimal> value);
    partial void OnCurrentPayChanged();
    partial void OnCurrentDiscChanging(System.Nullable<decimal> value);
    partial void OnCurrentDiscChanged();
    partial void OnCurrentJnlChanging(System.Nullable<decimal> value);
    partial void OnCurrentJnlChanged();
    partial void OnABNChanging(string value);
    partial void OnABNChanged();
    partial void OnPurchCtrlAccGLChanging(string value);
    partial void OnPurchCtrlAccGLChanged();
    partial void OnProductionChanging(System.Nullable<bool> value);
    partial void OnProductionChanged();
    partial void OnAccountStatusChanging(string value);
    partial void OnAccountStatusChanged();
    partial void OnBankDetailsChanging(string value);
    partial void OnBankDetailsChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnLJANChanging(System.Nullable<decimal> value);
    partial void OnLJANChanged();
    partial void OnLFEBChanging(System.Nullable<decimal> value);
    partial void OnLFEBChanged();
    partial void OnLMARChanging(System.Nullable<decimal> value);
    partial void OnLMARChanged();
    partial void OnLAPRChanging(System.Nullable<decimal> value);
    partial void OnLAPRChanged();
    partial void OnLMAYChanging(System.Nullable<decimal> value);
    partial void OnLMAYChanged();
    partial void OnLJUNChanging(System.Nullable<decimal> value);
    partial void OnLJUNChanged();
    partial void OnLJULChanging(System.Nullable<decimal> value);
    partial void OnLJULChanged();
    partial void OnLAUGChanging(System.Nullable<decimal> value);
    partial void OnLAUGChanged();
    partial void OnLSEPChanging(System.Nullable<decimal> value);
    partial void OnLSEPChanged();
    partial void OnPaymentMethodChanging(System.Nullable<byte> value);
    partial void OnPaymentMethodChanged();
    partial void OnGST_TypeChanging(string value);
    partial void OnGST_TypeChanged();
    partial void OnOurAccountNumChanging(string value);
    partial void OnOurAccountNumChanged();
    partial void OnAccpacVendorCodeChanging(string value);
    partial void OnAccpacVendorCodeChanged();
    partial void OnDeliveryAddress1Changing(string value);
    partial void OnDeliveryAddress1Changed();
    partial void OnDeliveryAddress2Changing(string value);
    partial void OnDeliveryAddress2Changed();
    partial void OnDeliveryAddress3Changing(string value);
    partial void OnDeliveryAddress3Changed();
    partial void OnDeliveryCityChanging(string value);
    partial void OnDeliveryCityChanged();
    partial void OnDeliveryStateChanging(string value);
    partial void OnDeliveryStateChanged();
    partial void OnDeliveryPostCodeChanging(string value);
    partial void OnDeliveryPostCodeChanged();
    partial void OnInActiveChanging(bool value);
    partial void OnInActiveChanged();
    partial void OnPrimaryFinanceContactChanging(System.Nullable<int> value);
    partial void OnPrimaryFinanceContactChanged();
    partial void OnThirdPartyChanging(bool value);
    partial void OnThirdPartyChanged();
    #endregion
		
		public CREDITORS()
		{
			this._CONTACTS_CREDITORS = new EntitySet<CONTACTS_CREDITORS>(new Action<CONTACTS_CREDITORS>(this.attach_CONTACTS_CREDITORS), new Action<CONTACTS_CREDITORS>(this.detach_CONTACTS_CREDITORS));
			this._CREDITORS_ACCPAC_VENDORS = new EntitySet<CREDITORS_ACCPAC_VENDORS>(new Action<CREDITORS_ACCPAC_VENDORS>(this.attach_CREDITORS_ACCPAC_VENDORS), new Action<CREDITORS_ACCPAC_VENDORS>(this.detach_CREDITORS_ACCPAC_VENDORS));
			this._DEBTORS_3P_AGREEMENTS = new EntitySet<DEBTORS_3P_AGREEMENTS>(new Action<DEBTORS_3P_AGREEMENTS>(this.attach_DEBTORS_3P_AGREEMENTS), new Action<DEBTORS_3P_AGREEMENTS>(this.detach_DEBTORS_3P_AGREEMENTS));
			this._INT_SERVICE_ID = new EntitySet<INT_SERVICE_ID>(new Action<INT_SERVICE_ID>(this.attach_INT_SERVICE_ID), new Action<INT_SERVICE_ID>(this.detach_INT_SERVICE_ID));
			this._STKORD = new EntitySet<STKORD>(new Action<STKORD>(this.attach_STKORD), new Action<STKORD>(this.detach_STKORD));
			OnCreated();
		}
		
		[Column(Storage="_AccountID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldAccount", DbType="VarChar(12)")]
		public string OldAccount
		{
			get
			{
				return this._OldAccount;
			}
			set
			{
				if ((this._OldAccount != value))
				{
					this.OnOldAccountChanging(value);
					this.SendPropertyChanging();
					this._OldAccount = value;
					this.SendPropertyChanged("OldAccount");
					this.OnOldAccountChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(55)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PrimaryContact", DbType="Int")]
		public System.Nullable<int> PrimaryContact
		{
			get
			{
				return this._PrimaryContact;
			}
			set
			{
				if ((this._PrimaryContact != value))
				{
					this.OnPrimaryContactChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContact = value;
					this.SendPropertyChanged("PrimaryContact");
					this.OnPrimaryContactChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(5)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[Column(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(25)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(3)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_PostCode", DbType="VarChar(15)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(22)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(30)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_PhoneAfterHrs", DbType="VarChar(16)")]
		public string PhoneAfterHrs
		{
			get
			{
				return this._PhoneAfterHrs;
			}
			set
			{
				if ((this._PhoneAfterHrs != value))
				{
					this.OnPhoneAfterHrsChanging(value);
					this.SendPropertyChanging();
					this._PhoneAfterHrs = value;
					this.SendPropertyChanged("PhoneAfterHrs");
					this.OnPhoneAfterHrsChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(25)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_WebSite", DbType="VarChar(40)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(40)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_BankAcctName", DbType="VarChar(60)")]
		public string BankAcctName
		{
			get
			{
				return this._BankAcctName;
			}
			set
			{
				if ((this._BankAcctName != value))
				{
					this.OnBankAcctNameChanging(value);
					this.SendPropertyChanging();
					this._BankAcctName = value;
					this.SendPropertyChanged("BankAcctName");
					this.OnBankAcctNameChanged();
				}
			}
		}
		
		[Column(Storage="_BankName", DbType="VarChar(40)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[Column(Storage="_BankSuburb", DbType="VarChar(40)")]
		public string BankSuburb
		{
			get
			{
				return this._BankSuburb;
			}
			set
			{
				if ((this._BankSuburb != value))
				{
					this.OnBankSuburbChanging(value);
					this.SendPropertyChanging();
					this._BankSuburb = value;
					this.SendPropertyChanged("BankSuburb");
					this.OnBankSuburbChanged();
				}
			}
		}
		
		[Column(Storage="_BankBSB", DbType="VarChar(10)")]
		public string BankBSB
		{
			get
			{
				return this._BankBSB;
			}
			set
			{
				if ((this._BankBSB != value))
				{
					this.OnBankBSBChanging(value);
					this.SendPropertyChanging();
					this._BankBSB = value;
					this.SendPropertyChanged("BankBSB");
					this.OnBankBSBChanged();
				}
			}
		}
		
		[Column(Storage="_BankAcctNum", DbType="VarChar(9)")]
		public string BankAcctNum
		{
			get
			{
				return this._BankAcctNum;
			}
			set
			{
				if ((this._BankAcctNum != value))
				{
					this.OnBankAcctNumChanging(value);
					this.SendPropertyChanging();
					this._BankAcctNum = value;
					this.SendPropertyChanged("BankAcctNum");
					this.OnBankAcctNumChanged();
				}
			}
		}
		
		[Column(Storage="_SpecialPrice", DbType="TinyInt")]
		public System.Nullable<byte> SpecialPrice
		{
			get
			{
				return this._SpecialPrice;
			}
			set
			{
				if ((this._SpecialPrice != value))
				{
					this.OnSpecialPriceChanging(value);
					this.SendPropertyChanging();
					this._SpecialPrice = value;
					this.SendPropertyChanged("SpecialPrice");
					this.OnSpecialPriceChanged();
				}
			}
		}
		
		[Column(Storage="_SpecialDelivery", DbType="TinyInt")]
		public System.Nullable<byte> SpecialDelivery
		{
			get
			{
				return this._SpecialDelivery;
			}
			set
			{
				if ((this._SpecialDelivery != value))
				{
					this.OnSpecialDeliveryChanging(value);
					this.SendPropertyChanging();
					this._SpecialDelivery = value;
					this.SendPropertyChanged("SpecialDelivery");
					this.OnSpecialDeliveryChanged();
				}
			}
		}
		
		[Column(Storage="_Urgent", DbType="TinyInt")]
		public System.Nullable<byte> Urgent
		{
			get
			{
				return this._Urgent;
			}
			set
			{
				if ((this._Urgent != value))
				{
					this.OnUrgentChanging(value);
					this.SendPropertyChanging();
					this._Urgent = value;
					this.SendPropertyChanged("Urgent");
					this.OnUrgentChanged();
				}
			}
		}
		
		[Column(Storage="_Local", DbType="TinyInt")]
		public System.Nullable<byte> Local
		{
			get
			{
				return this._Local;
			}
			set
			{
				if ((this._Local != value))
				{
					this.OnLocalChanging(value);
					this.SendPropertyChanging();
					this._Local = value;
					this.SendPropertyChanged("Local");
					this.OnLocalChanged();
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="VarChar(1024)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[Column(Storage="_Discount1", DbType="VarChar(50)")]
		public string Discount1
		{
			get
			{
				return this._Discount1;
			}
			set
			{
				if ((this._Discount1 != value))
				{
					this.OnDiscount1Changing(value);
					this.SendPropertyChanging();
					this._Discount1 = value;
					this.SendPropertyChanged("Discount1");
					this.OnDiscount1Changed();
				}
			}
		}
		
		[Column(Storage="_Discount2", DbType="VarChar(50)")]
		public string Discount2
		{
			get
			{
				return this._Discount2;
			}
			set
			{
				if ((this._Discount2 != value))
				{
					this.OnDiscount2Changing(value);
					this.SendPropertyChanging();
					this._Discount2 = value;
					this.SendPropertyChanged("Discount2");
					this.OnDiscount2Changed();
				}
			}
		}
		
		[Column(Storage="_Rebate", DbType="VarChar(10)")]
		public string Rebate
		{
			get
			{
				return this._Rebate;
			}
			set
			{
				if ((this._Rebate != value))
				{
					this.OnRebateChanging(value);
					this.SendPropertyChanging();
					this._Rebate = value;
					this.SendPropertyChanged("Rebate");
					this.OnRebateChanged();
				}
			}
		}
		
		[Column(Storage="_AccountClass", DbType="VarChar(50)")]
		public string AccountClass
		{
			get
			{
				return this._AccountClass;
			}
			set
			{
				if ((this._AccountClass != value))
				{
					this.OnAccountClassChanging(value);
					this.SendPropertyChanging();
					this._AccountClass = value;
					this.SendPropertyChanged("AccountClass");
					this.OnAccountClassChanged();
				}
			}
		}
		
		[Column(Storage="_OpenBal", DbType="Money NOT NULL")]
		public decimal OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this.OnOpenBalChanging(value);
					this.SendPropertyChanging();
					this._OpenBal = value;
					this.SendPropertyChanged("OpenBal");
					this.OnOpenBalChanged();
				}
			}
		}
		
		[Column(Storage="_Current", DbType="Decimal(19,4) NOT NULL")]
		public decimal Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this.OnCurrentChanging(value);
					this.SendPropertyChanging();
					this._Current = value;
					this.SendPropertyChanged("Current");
					this.OnCurrentChanged();
				}
			}
		}
		
		[Column(Name="30Days", Storage="__30Days", DbType="Decimal(19,4) NOT NULL")]
		public decimal _30Days
		{
			get
			{
				return this.@__30Days;
			}
			set
			{
				if ((this.@__30Days != value))
				{
					this.On_30DaysChanging(value);
					this.SendPropertyChanging();
					this.@__30Days = value;
					this.SendPropertyChanged("_30Days");
					this.On_30DaysChanged();
				}
			}
		}
		
		[Column(Name="60Days", Storage="__60Days", DbType="Decimal(19,4) NOT NULL")]
		public decimal _60Days
		{
			get
			{
				return this.@__60Days;
			}
			set
			{
				if ((this.@__60Days != value))
				{
					this.On_60DaysChanging(value);
					this.SendPropertyChanging();
					this.@__60Days = value;
					this.SendPropertyChanged("_60Days");
					this.On_60DaysChanged();
				}
			}
		}
		
		[Column(Name="90Days", Storage="__90Days", DbType="Decimal(19,4) NOT NULL")]
		public decimal _90Days
		{
			get
			{
				return this.@__90Days;
			}
			set
			{
				if ((this.@__90Days != value))
				{
					this.On_90DaysChanging(value);
					this.SendPropertyChanging();
					this.@__90Days = value;
					this.SendPropertyChanged("_90Days");
					this.On_90DaysChanged();
				}
			}
		}
		
		[Column(Storage="_PCurrent", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> PCurrent
		{
			get
			{
				return this._PCurrent;
			}
			set
			{
				if ((this._PCurrent != value))
				{
					this.OnPCurrentChanging(value);
					this.SendPropertyChanging();
					this._PCurrent = value;
					this.SendPropertyChanged("PCurrent");
					this.OnPCurrentChanged();
				}
			}
		}
		
		[Column(Storage="_P30", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> P30
		{
			get
			{
				return this._P30;
			}
			set
			{
				if ((this._P30 != value))
				{
					this.OnP30Changing(value);
					this.SendPropertyChanging();
					this._P30 = value;
					this.SendPropertyChanged("P30");
					this.OnP30Changed();
				}
			}
		}
		
		[Column(Storage="_P60", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> P60
		{
			get
			{
				return this._P60;
			}
			set
			{
				if ((this._P60 != value))
				{
					this.OnP60Changing(value);
					this.SendPropertyChanging();
					this._P60 = value;
					this.SendPropertyChanged("P60");
					this.OnP60Changed();
				}
			}
		}
		
		[Column(Storage="_P90", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> P90
		{
			get
			{
				return this._P90;
			}
			set
			{
				if ((this._P90 != value))
				{
					this.OnP90Changing(value);
					this.SendPropertyChanging();
					this._P90 = value;
					this.SendPropertyChanged("P90");
					this.OnP90Changed();
				}
			}
		}
		
		[Column(Storage="_MTD", DbType="Decimal(19,4) NOT NULL")]
		public decimal MTD
		{
			get
			{
				return this._MTD;
			}
			set
			{
				if ((this._MTD != value))
				{
					this.OnMTDChanging(value);
					this.SendPropertyChanging();
					this._MTD = value;
					this.SendPropertyChanged("MTD");
					this.OnMTDChanged();
				}
			}
		}
		
		[Column(Storage="_YTD", DbType="Decimal(19,4) NOT NULL")]
		public decimal YTD
		{
			get
			{
				return this._YTD;
			}
			set
			{
				if ((this._YTD != value))
				{
					this.OnYTDChanging(value);
					this.SendPropertyChanging();
					this._YTD = value;
					this.SendPropertyChanged("YTD");
					this.OnYTDChanged();
				}
			}
		}
		
		[Column(Storage="_LY", DbType="Decimal(19,4) NOT NULL")]
		public decimal LY
		{
			get
			{
				return this._LY;
			}
			set
			{
				if ((this._LY != value))
				{
					this.OnLYChanging(value);
					this.SendPropertyChanging();
					this._LY = value;
					this.SendPropertyChanged("LY");
					this.OnLYChanged();
				}
			}
		}
		
		[Column(Storage="_MTDPaid", DbType="Decimal(19,4) NOT NULL")]
		public decimal MTDPaid
		{
			get
			{
				return this._MTDPaid;
			}
			set
			{
				if ((this._MTDPaid != value))
				{
					this.OnMTDPaidChanging(value);
					this.SendPropertyChanging();
					this._MTDPaid = value;
					this.SendPropertyChanged("MTDPaid");
					this.OnMTDPaidChanged();
				}
			}
		}
		
		[Column(Storage="_YTDPaid", DbType="Decimal(19,4) NOT NULL")]
		public decimal YTDPaid
		{
			get
			{
				return this._YTDPaid;
			}
			set
			{
				if ((this._YTDPaid != value))
				{
					this.OnYTDPaidChanging(value);
					this.SendPropertyChanging();
					this._YTDPaid = value;
					this.SendPropertyChanged("YTDPaid");
					this.OnYTDPaidChanged();
				}
			}
		}
		
		[Column(Storage="_LYPaid", DbType="Decimal(19,4) NOT NULL")]
		public decimal LYPaid
		{
			get
			{
				return this._LYPaid;
			}
			set
			{
				if ((this._LYPaid != value))
				{
					this.OnLYPaidChanging(value);
					this.SendPropertyChanging();
					this._LYPaid = value;
					this.SendPropertyChanged("LYPaid");
					this.OnLYPaidChanged();
				}
			}
		}
		
		[Column(Storage="_TermsMethod", DbType="Char(1)")]
		public string TermsMethod
		{
			get
			{
				return this._TermsMethod;
			}
			set
			{
				if ((this._TermsMethod != value))
				{
					this.OnTermsMethodChanging(value);
					this.SendPropertyChanging();
					this._TermsMethod = value;
					this.SendPropertyChanged("TermsMethod");
					this.OnTermsMethodChanged();
				}
			}
		}
		
		[Column(Storage="_NumDaysCredit", DbType="TinyInt NOT NULL")]
		public byte NumDaysCredit
		{
			get
			{
				return this._NumDaysCredit;
			}
			set
			{
				if ((this._NumDaysCredit != value))
				{
					this.OnNumDaysCreditChanging(value);
					this.SendPropertyChanging();
					this._NumDaysCredit = value;
					this.SendPropertyChanged("NumDaysCredit");
					this.OnNumDaysCreditChanged();
				}
			}
		}
		
		[Column(Storage="_CreditLimit", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[Column(Storage="_LastPurchNum", DbType="Int")]
		public System.Nullable<int> LastPurchNum
		{
			get
			{
				return this._LastPurchNum;
			}
			set
			{
				if ((this._LastPurchNum != value))
				{
					this.OnLastPurchNumChanging(value);
					this.SendPropertyChanging();
					this._LastPurchNum = value;
					this.SendPropertyChanged("LastPurchNum");
					this.OnLastPurchNumChanged();
				}
			}
		}
		
		[Column(Storage="_LastPurchDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPurchDate
		{
			get
			{
				return this._LastPurchDate;
			}
			set
			{
				if ((this._LastPurchDate != value))
				{
					this.OnLastPurchDateChanging(value);
					this.SendPropertyChanging();
					this._LastPurchDate = value;
					this.SendPropertyChanged("LastPurchDate");
					this.OnLastPurchDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastPurchAmt", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> LastPurchAmt
		{
			get
			{
				return this._LastPurchAmt;
			}
			set
			{
				if ((this._LastPurchAmt != value))
				{
					this.OnLastPurchAmtChanging(value);
					this.SendPropertyChanging();
					this._LastPurchAmt = value;
					this.SendPropertyChanged("LastPurchAmt");
					this.OnLastPurchAmtChanged();
				}
			}
		}
		
		[Column(Storage="_LastPayDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPayDate
		{
			get
			{
				return this._LastPayDate;
			}
			set
			{
				if ((this._LastPayDate != value))
				{
					this.OnLastPayDateChanging(value);
					this.SendPropertyChanging();
					this._LastPayDate = value;
					this.SendPropertyChanged("LastPayDate");
					this.OnLastPayDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastPayAmt", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> LastPayAmt
		{
			get
			{
				return this._LastPayAmt;
			}
			set
			{
				if ((this._LastPayAmt != value))
				{
					this.OnLastPayAmtChanging(value);
					this.SendPropertyChanging();
					this._LastPayAmt = value;
					this.SendPropertyChanged("LastPayAmt");
					this.OnLastPayAmtChanged();
				}
			}
		}
		
		[Column(Storage="_Notes", DbType="VarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[Column(Storage="_WebLogin", DbType="VarChar(15)")]
		public string WebLogin
		{
			get
			{
				return this._WebLogin;
			}
			set
			{
				if ((this._WebLogin != value))
				{
					this.OnWebLoginChanging(value);
					this.SendPropertyChanging();
					this._WebLogin = value;
					this.SendPropertyChanged("WebLogin");
					this.OnWebLoginChanged();
				}
			}
		}
		
		[Column(Storage="_WebPassword", DbType="VarChar(8)")]
		public string WebPassword
		{
			get
			{
				return this._WebPassword;
			}
			set
			{
				if ((this._WebPassword != value))
				{
					this.OnWebPasswordChanging(value);
					this.SendPropertyChanging();
					this._WebPassword = value;
					this.SendPropertyChanged("WebPassword");
					this.OnWebPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_LOCT", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> LOCT
		{
			get
			{
				return this._LOCT;
			}
			set
			{
				if ((this._LOCT != value))
				{
					this.OnLOCTChanging(value);
					this.SendPropertyChanging();
					this._LOCT = value;
					this.SendPropertyChanged("LOCT");
					this.OnLOCTChanged();
				}
			}
		}
		
		[Column(Storage="_LNOV", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> LNOV
		{
			get
			{
				return this._LNOV;
			}
			set
			{
				if ((this._LNOV != value))
				{
					this.OnLNOVChanging(value);
					this.SendPropertyChanging();
					this._LNOV = value;
					this.SendPropertyChanged("LNOV");
					this.OnLNOVChanged();
				}
			}
		}
		
		[Column(Storage="_LDEC", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> LDEC
		{
			get
			{
				return this._LDEC;
			}
			set
			{
				if ((this._LDEC != value))
				{
					this.OnLDECChanging(value);
					this.SendPropertyChanging();
					this._LDEC = value;
					this.SendPropertyChanged("LDEC");
					this.OnLDECChanged();
				}
			}
		}
		
		[Column(Storage="_JAN", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> JAN
		{
			get
			{
				return this._JAN;
			}
			set
			{
				if ((this._JAN != value))
				{
					this.OnJANChanging(value);
					this.SendPropertyChanging();
					this._JAN = value;
					this.SendPropertyChanged("JAN");
					this.OnJANChanged();
				}
			}
		}
		
		[Column(Storage="_FEB", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> FEB
		{
			get
			{
				return this._FEB;
			}
			set
			{
				if ((this._FEB != value))
				{
					this.OnFEBChanging(value);
					this.SendPropertyChanging();
					this._FEB = value;
					this.SendPropertyChanged("FEB");
					this.OnFEBChanged();
				}
			}
		}
		
		[Column(Storage="_MAR", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> MAR
		{
			get
			{
				return this._MAR;
			}
			set
			{
				if ((this._MAR != value))
				{
					this.OnMARChanging(value);
					this.SendPropertyChanging();
					this._MAR = value;
					this.SendPropertyChanged("MAR");
					this.OnMARChanged();
				}
			}
		}
		
		[Column(Storage="_APR", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> APR
		{
			get
			{
				return this._APR;
			}
			set
			{
				if ((this._APR != value))
				{
					this.OnAPRChanging(value);
					this.SendPropertyChanging();
					this._APR = value;
					this.SendPropertyChanged("APR");
					this.OnAPRChanged();
				}
			}
		}
		
		[Column(Storage="_MAY", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> MAY
		{
			get
			{
				return this._MAY;
			}
			set
			{
				if ((this._MAY != value))
				{
					this.OnMAYChanging(value);
					this.SendPropertyChanging();
					this._MAY = value;
					this.SendPropertyChanged("MAY");
					this.OnMAYChanged();
				}
			}
		}
		
		[Column(Storage="_JUN", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> JUN
		{
			get
			{
				return this._JUN;
			}
			set
			{
				if ((this._JUN != value))
				{
					this.OnJUNChanging(value);
					this.SendPropertyChanging();
					this._JUN = value;
					this.SendPropertyChanged("JUN");
					this.OnJUNChanged();
				}
			}
		}
		
		[Column(Storage="_JUL", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> JUL
		{
			get
			{
				return this._JUL;
			}
			set
			{
				if ((this._JUL != value))
				{
					this.OnJULChanging(value);
					this.SendPropertyChanging();
					this._JUL = value;
					this.SendPropertyChanged("JUL");
					this.OnJULChanged();
				}
			}
		}
		
		[Column(Storage="_AUG", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> AUG
		{
			get
			{
				return this._AUG;
			}
			set
			{
				if ((this._AUG != value))
				{
					this.OnAUGChanging(value);
					this.SendPropertyChanging();
					this._AUG = value;
					this.SendPropertyChanged("AUG");
					this.OnAUGChanged();
				}
			}
		}
		
		[Column(Storage="_SEP", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> SEP
		{
			get
			{
				return this._SEP;
			}
			set
			{
				if ((this._SEP != value))
				{
					this.OnSEPChanging(value);
					this.SendPropertyChanging();
					this._SEP = value;
					this.SendPropertyChanged("SEP");
					this.OnSEPChanged();
				}
			}
		}
		
		[Column(Storage="_OCT", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> OCT
		{
			get
			{
				return this._OCT;
			}
			set
			{
				if ((this._OCT != value))
				{
					this.OnOCTChanging(value);
					this.SendPropertyChanging();
					this._OCT = value;
					this.SendPropertyChanged("OCT");
					this.OnOCTChanged();
				}
			}
		}
		
		[Column(Storage="_NOV", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> NOV
		{
			get
			{
				return this._NOV;
			}
			set
			{
				if ((this._NOV != value))
				{
					this.OnNOVChanging(value);
					this.SendPropertyChanging();
					this._NOV = value;
					this.SendPropertyChanged("NOV");
					this.OnNOVChanged();
				}
			}
		}
		
		[Column(Storage="_DEC", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> DEC
		{
			get
			{
				return this._DEC;
			}
			set
			{
				if ((this._DEC != value))
				{
					this.OnDECChanging(value);
					this.SendPropertyChanging();
					this._DEC = value;
					this.SendPropertyChanged("DEC");
					this.OnDECChanged();
				}
			}
		}
		
		[Column(Storage="_AbbrevName", DbType="VarChar(25)")]
		public string AbbrevName
		{
			get
			{
				return this._AbbrevName;
			}
			set
			{
				if ((this._AbbrevName != value))
				{
					this.OnAbbrevNameChanging(value);
					this.SendPropertyChanging();
					this._AbbrevName = value;
					this.SendPropertyChanged("AbbrevName");
					this.OnAbbrevNameChanged();
				}
			}
		}
		
		[Column(Storage="_Branch", DbType="VarChar(5)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[Column(Storage="_AreaCode", DbType="TinyInt")]
		public System.Nullable<byte> AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					this.OnAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._AreaCode = value;
					this.SendPropertyChanged("AreaCode");
					this.OnAreaCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_ContactName", DbType="VarChar(20)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_BalFwd", DbType="Money")]
		public System.Nullable<decimal> BalFwd
		{
			get
			{
				return this._BalFwd;
			}
			set
			{
				if ((this._BalFwd != value))
				{
					this.OnBalFwdChanging(value);
					this.SendPropertyChanging();
					this._BalFwd = value;
					this.SendPropertyChanged("BalFwd");
					this.OnBalFwdChanged();
				}
			}
		}
		
		[Column(Storage="_NextMonth", DbType="Money")]
		public System.Nullable<decimal> NextMonth
		{
			get
			{
				return this._NextMonth;
			}
			set
			{
				if ((this._NextMonth != value))
				{
					this.OnNextMonthChanging(value);
					this.SendPropertyChanging();
					this._NextMonth = value;
					this.SendPropertyChanged("NextMonth");
					this.OnNextMonthChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentInv", DbType="Money")]
		public System.Nullable<decimal> CurrentInv
		{
			get
			{
				return this._CurrentInv;
			}
			set
			{
				if ((this._CurrentInv != value))
				{
					this.OnCurrentInvChanging(value);
					this.SendPropertyChanging();
					this._CurrentInv = value;
					this.SendPropertyChanged("CurrentInv");
					this.OnCurrentInvChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentPay", DbType="Money")]
		public System.Nullable<decimal> CurrentPay
		{
			get
			{
				return this._CurrentPay;
			}
			set
			{
				if ((this._CurrentPay != value))
				{
					this.OnCurrentPayChanging(value);
					this.SendPropertyChanging();
					this._CurrentPay = value;
					this.SendPropertyChanged("CurrentPay");
					this.OnCurrentPayChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentDisc", DbType="Money")]
		public System.Nullable<decimal> CurrentDisc
		{
			get
			{
				return this._CurrentDisc;
			}
			set
			{
				if ((this._CurrentDisc != value))
				{
					this.OnCurrentDiscChanging(value);
					this.SendPropertyChanging();
					this._CurrentDisc = value;
					this.SendPropertyChanged("CurrentDisc");
					this.OnCurrentDiscChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentJnl", DbType="Money")]
		public System.Nullable<decimal> CurrentJnl
		{
			get
			{
				return this._CurrentJnl;
			}
			set
			{
				if ((this._CurrentJnl != value))
				{
					this.OnCurrentJnlChanging(value);
					this.SendPropertyChanging();
					this._CurrentJnl = value;
					this.SendPropertyChanged("CurrentJnl");
					this.OnCurrentJnlChanged();
				}
			}
		}
		
		[Column(Storage="_ABN", DbType="VarChar(15)")]
		public string ABN
		{
			get
			{
				return this._ABN;
			}
			set
			{
				if ((this._ABN != value))
				{
					this.OnABNChanging(value);
					this.SendPropertyChanging();
					this._ABN = value;
					this.SendPropertyChanged("ABN");
					this.OnABNChanged();
				}
			}
		}
		
		[Column(Storage="_PurchCtrlAccGL", DbType="VarChar(16)")]
		public string PurchCtrlAccGL
		{
			get
			{
				return this._PurchCtrlAccGL;
			}
			set
			{
				if ((this._PurchCtrlAccGL != value))
				{
					this.OnPurchCtrlAccGLChanging(value);
					this.SendPropertyChanging();
					this._PurchCtrlAccGL = value;
					this.SendPropertyChanged("PurchCtrlAccGL");
					this.OnPurchCtrlAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_Production", DbType="Bit")]
		public System.Nullable<bool> Production
		{
			get
			{
				return this._Production;
			}
			set
			{
				if ((this._Production != value))
				{
					this.OnProductionChanging(value);
					this.SendPropertyChanging();
					this._Production = value;
					this.SendPropertyChanged("Production");
					this.OnProductionChanged();
				}
			}
		}
		
		[Column(Storage="_AccountStatus", DbType="VarChar(4)")]
		public string AccountStatus
		{
			get
			{
				return this._AccountStatus;
			}
			set
			{
				if ((this._AccountStatus != value))
				{
					this.OnAccountStatusChanging(value);
					this.SendPropertyChanging();
					this._AccountStatus = value;
					this.SendPropertyChanged("AccountStatus");
					this.OnAccountStatusChanged();
				}
			}
		}
		
		[Column(Storage="_BankDetails", DbType="VarChar(1024)")]
		public string BankDetails
		{
			get
			{
				return this._BankDetails;
			}
			set
			{
				if ((this._BankDetails != value))
				{
					this.OnBankDetailsChanging(value);
					this.SendPropertyChanging();
					this._BankDetails = value;
					this.SendPropertyChanged("BankDetails");
					this.OnBankDetailsChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(5)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_LJAN", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> LJAN
		{
			get
			{
				return this._LJAN;
			}
			set
			{
				if ((this._LJAN != value))
				{
					this.OnLJANChanging(value);
					this.SendPropertyChanging();
					this._LJAN = value;
					this.SendPropertyChanged("LJAN");
					this.OnLJANChanged();
				}
			}
		}
		
		[Column(Storage="_LFEB", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> LFEB
		{
			get
			{
				return this._LFEB;
			}
			set
			{
				if ((this._LFEB != value))
				{
					this.OnLFEBChanging(value);
					this.SendPropertyChanging();
					this._LFEB = value;
					this.SendPropertyChanged("LFEB");
					this.OnLFEBChanged();
				}
			}
		}
		
		[Column(Storage="_LMAR", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> LMAR
		{
			get
			{
				return this._LMAR;
			}
			set
			{
				if ((this._LMAR != value))
				{
					this.OnLMARChanging(value);
					this.SendPropertyChanging();
					this._LMAR = value;
					this.SendPropertyChanged("LMAR");
					this.OnLMARChanged();
				}
			}
		}
		
		[Column(Storage="_LAPR", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> LAPR
		{
			get
			{
				return this._LAPR;
			}
			set
			{
				if ((this._LAPR != value))
				{
					this.OnLAPRChanging(value);
					this.SendPropertyChanging();
					this._LAPR = value;
					this.SendPropertyChanged("LAPR");
					this.OnLAPRChanged();
				}
			}
		}
		
		[Column(Storage="_LMAY", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> LMAY
		{
			get
			{
				return this._LMAY;
			}
			set
			{
				if ((this._LMAY != value))
				{
					this.OnLMAYChanging(value);
					this.SendPropertyChanging();
					this._LMAY = value;
					this.SendPropertyChanged("LMAY");
					this.OnLMAYChanged();
				}
			}
		}
		
		[Column(Storage="_LJUN", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> LJUN
		{
			get
			{
				return this._LJUN;
			}
			set
			{
				if ((this._LJUN != value))
				{
					this.OnLJUNChanging(value);
					this.SendPropertyChanging();
					this._LJUN = value;
					this.SendPropertyChanged("LJUN");
					this.OnLJUNChanged();
				}
			}
		}
		
		[Column(Storage="_LJUL", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> LJUL
		{
			get
			{
				return this._LJUL;
			}
			set
			{
				if ((this._LJUL != value))
				{
					this.OnLJULChanging(value);
					this.SendPropertyChanging();
					this._LJUL = value;
					this.SendPropertyChanged("LJUL");
					this.OnLJULChanged();
				}
			}
		}
		
		[Column(Storage="_LAUG", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> LAUG
		{
			get
			{
				return this._LAUG;
			}
			set
			{
				if ((this._LAUG != value))
				{
					this.OnLAUGChanging(value);
					this.SendPropertyChanging();
					this._LAUG = value;
					this.SendPropertyChanged("LAUG");
					this.OnLAUGChanged();
				}
			}
		}
		
		[Column(Storage="_LSEP", DbType="Decimal(9,0)")]
		public System.Nullable<decimal> LSEP
		{
			get
			{
				return this._LSEP;
			}
			set
			{
				if ((this._LSEP != value))
				{
					this.OnLSEPChanging(value);
					this.SendPropertyChanging();
					this._LSEP = value;
					this.SendPropertyChanged("LSEP");
					this.OnLSEPChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentMethod", DbType="TinyInt")]
		public System.Nullable<byte> PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[Column(Storage="_GST_Type", DbType="Char(1)")]
		public string GST_Type
		{
			get
			{
				return this._GST_Type;
			}
			set
			{
				if ((this._GST_Type != value))
				{
					this.OnGST_TypeChanging(value);
					this.SendPropertyChanging();
					this._GST_Type = value;
					this.SendPropertyChanged("GST_Type");
					this.OnGST_TypeChanged();
				}
			}
		}
		
		[Column(Storage="_OurAccountNum", DbType="VarChar(16)")]
		public string OurAccountNum
		{
			get
			{
				return this._OurAccountNum;
			}
			set
			{
				if ((this._OurAccountNum != value))
				{
					this.OnOurAccountNumChanging(value);
					this.SendPropertyChanging();
					this._OurAccountNum = value;
					this.SendPropertyChanged("OurAccountNum");
					this.OnOurAccountNumChanged();
				}
			}
		}
		
		[Column(Storage="_AccpacVendorCode", DbType="Char(12)")]
		public string AccpacVendorCode
		{
			get
			{
				return this._AccpacVendorCode;
			}
			set
			{
				if ((this._AccpacVendorCode != value))
				{
					this.OnAccpacVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._AccpacVendorCode = value;
					this.SendPropertyChanged("AccpacVendorCode");
					this.OnAccpacVendorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryAddress1", DbType="VarChar(50)")]
		public string DeliveryAddress1
		{
			get
			{
				return this._DeliveryAddress1;
			}
			set
			{
				if ((this._DeliveryAddress1 != value))
				{
					this.OnDeliveryAddress1Changing(value);
					this.SendPropertyChanging();
					this._DeliveryAddress1 = value;
					this.SendPropertyChanged("DeliveryAddress1");
					this.OnDeliveryAddress1Changed();
				}
			}
		}
		
		[Column(Storage="_DeliveryAddress2", DbType="VarChar(50)")]
		public string DeliveryAddress2
		{
			get
			{
				return this._DeliveryAddress2;
			}
			set
			{
				if ((this._DeliveryAddress2 != value))
				{
					this.OnDeliveryAddress2Changing(value);
					this.SendPropertyChanging();
					this._DeliveryAddress2 = value;
					this.SendPropertyChanged("DeliveryAddress2");
					this.OnDeliveryAddress2Changed();
				}
			}
		}
		
		[Column(Storage="_DeliveryAddress3", DbType="VarChar(50)")]
		public string DeliveryAddress3
		{
			get
			{
				return this._DeliveryAddress3;
			}
			set
			{
				if ((this._DeliveryAddress3 != value))
				{
					this.OnDeliveryAddress3Changing(value);
					this.SendPropertyChanging();
					this._DeliveryAddress3 = value;
					this.SendPropertyChanged("DeliveryAddress3");
					this.OnDeliveryAddress3Changed();
				}
			}
		}
		
		[Column(Storage="_DeliveryCity", DbType="VarChar(25)")]
		public string DeliveryCity
		{
			get
			{
				return this._DeliveryCity;
			}
			set
			{
				if ((this._DeliveryCity != value))
				{
					this.OnDeliveryCityChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCity = value;
					this.SendPropertyChanged("DeliveryCity");
					this.OnDeliveryCityChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryState", DbType="VarChar(3)")]
		public string DeliveryState
		{
			get
			{
				return this._DeliveryState;
			}
			set
			{
				if ((this._DeliveryState != value))
				{
					this.OnDeliveryStateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryState = value;
					this.SendPropertyChanged("DeliveryState");
					this.OnDeliveryStateChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryPostCode", DbType="VarChar(15)")]
		public string DeliveryPostCode
		{
			get
			{
				return this._DeliveryPostCode;
			}
			set
			{
				if ((this._DeliveryPostCode != value))
				{
					this.OnDeliveryPostCodeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryPostCode = value;
					this.SendPropertyChanged("DeliveryPostCode");
					this.OnDeliveryPostCodeChanged();
				}
			}
		}
		
		[Column(Storage="_InActive", DbType="Bit NOT NULL")]
		public bool InActive
		{
			get
			{
				return this._InActive;
			}
			set
			{
				if ((this._InActive != value))
				{
					this.OnInActiveChanging(value);
					this.SendPropertyChanging();
					this._InActive = value;
					this.SendPropertyChanged("InActive");
					this.OnInActiveChanged();
				}
			}
		}
		
		[Column(Storage="_PrimaryFinanceContact", DbType="Int")]
		public System.Nullable<int> PrimaryFinanceContact
		{
			get
			{
				return this._PrimaryFinanceContact;
			}
			set
			{
				if ((this._PrimaryFinanceContact != value))
				{
					this.OnPrimaryFinanceContactChanging(value);
					this.SendPropertyChanging();
					this._PrimaryFinanceContact = value;
					this.SendPropertyChanged("PrimaryFinanceContact");
					this.OnPrimaryFinanceContactChanged();
				}
			}
		}
		
		[Column(Storage="_ThirdParty", DbType="Bit NOT NULL")]
		public bool ThirdParty
		{
			get
			{
				return this._ThirdParty;
			}
			set
			{
				if ((this._ThirdParty != value))
				{
					this.OnThirdPartyChanging(value);
					this.SendPropertyChanging();
					this._ThirdParty = value;
					this.SendPropertyChanged("ThirdParty");
					this.OnThirdPartyChanged();
				}
			}
		}
		
		[Association(Name="FK_CONTACTS_CREDITORS_CREDITOR", Storage="_CONTACTS_CREDITORS", ThisKey="AccountID", OtherKey="AccountID", DeleteRule="NO ACTION")]
		public EntitySet<CONTACTS_CREDITORS> CONTACTS_CREDITORS
		{
			get
			{
				return this._CONTACTS_CREDITORS;
			}
			set
			{
				this._CONTACTS_CREDITORS.Assign(value);
			}
		}
		
		[Association(Name="FK_CREDITORS_ACCPAC_VENDORS_CREDITORS", Storage="_CREDITORS_ACCPAC_VENDORS", ThisKey="AccountID", OtherKey="AccountID", DeleteRule="NO ACTION")]
		public EntitySet<CREDITORS_ACCPAC_VENDORS> CREDITORS_ACCPAC_VENDORS
		{
			get
			{
				return this._CREDITORS_ACCPAC_VENDORS;
			}
			set
			{
				this._CREDITORS_ACCPAC_VENDORS.Assign(value);
			}
		}
		
		[Association(Name="FK_DEBTORS_3P_AGREEMENTS_CREDITORS", Storage="_DEBTORS_3P_AGREEMENTS", ThisKey="AccountID", OtherKey="SupplierCode", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_3P_AGREEMENTS> DEBTORS_3P_AGREEMENTS
		{
			get
			{
				return this._DEBTORS_3P_AGREEMENTS;
			}
			set
			{
				this._DEBTORS_3P_AGREEMENTS.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_SERVICE_ID_CREDITORS", Storage="_INT_SERVICE_ID", ThisKey="AccountID", OtherKey="Creditor", DeleteRule="NO ACTION")]
		public EntitySet<INT_SERVICE_ID> INT_SERVICE_ID
		{
			get
			{
				return this._INT_SERVICE_ID;
			}
			set
			{
				this._INT_SERVICE_ID.Assign(value);
			}
		}
		
		[Association(Name="FK_STKORD_CREDITORS", Storage="_STKORD", ThisKey="AccountID", OtherKey="SupplierCode", DeleteRule="NO ACTION")]
		public EntitySet<STKORD> STKORD
		{
			get
			{
				return this._STKORD;
			}
			set
			{
				this._STKORD.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONTACTS_CREDITORS(CONTACTS_CREDITORS entity)
		{
			this.SendPropertyChanging();
			entity.CREDITORS = this;
		}
		
		private void detach_CONTACTS_CREDITORS(CONTACTS_CREDITORS entity)
		{
			this.SendPropertyChanging();
			entity.CREDITORS = null;
		}
		
		private void attach_CREDITORS_ACCPAC_VENDORS(CREDITORS_ACCPAC_VENDORS entity)
		{
			this.SendPropertyChanging();
			entity.CREDITORS = this;
		}
		
		private void detach_CREDITORS_ACCPAC_VENDORS(CREDITORS_ACCPAC_VENDORS entity)
		{
			this.SendPropertyChanging();
			entity.CREDITORS = null;
		}
		
		private void attach_DEBTORS_3P_AGREEMENTS(DEBTORS_3P_AGREEMENTS entity)
		{
			this.SendPropertyChanging();
			entity.CREDITORS = this;
		}
		
		private void detach_DEBTORS_3P_AGREEMENTS(DEBTORS_3P_AGREEMENTS entity)
		{
			this.SendPropertyChanging();
			entity.CREDITORS = null;
		}
		
		private void attach_INT_SERVICE_ID(INT_SERVICE_ID entity)
		{
			this.SendPropertyChanging();
			entity.CREDITORS = this;
		}
		
		private void detach_INT_SERVICE_ID(INT_SERVICE_ID entity)
		{
			this.SendPropertyChanging();
			entity.CREDITORS = null;
		}
		
		private void attach_STKORD(STKORD entity)
		{
			this.SendPropertyChanging();
			entity.CREDITORS = this;
		}
		
		private void detach_STKORD(STKORD entity)
		{
			this.SendPropertyChanging();
			entity.CREDITORS = null;
		}
	}
	
	[Table(Name="dbo.CREDITORS_ACCPAC_VENDORS")]
	public partial class CREDITORS_ACCPAC_VENDORS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CredAccpacID;
		
		private System.Nullable<int> _AccountID;
		
		private string _VendorCode;
		
		private EntityRef<CREDITORS> _CREDITORS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCredAccpacIDChanging(int value);
    partial void OnCredAccpacIDChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnVendorCodeChanging(string value);
    partial void OnVendorCodeChanged();
    #endregion
		
		public CREDITORS_ACCPAC_VENDORS()
		{
			this._CREDITORS = default(EntityRef<CREDITORS>);
			OnCreated();
		}
		
		[Column(Storage="_CredAccpacID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CredAccpacID
		{
			get
			{
				return this._CredAccpacID;
			}
			set
			{
				if ((this._CredAccpacID != value))
				{
					this.OnCredAccpacIDChanging(value);
					this.SendPropertyChanging();
					this._CredAccpacID = value;
					this.SendPropertyChanged("CredAccpacID");
					this.OnCredAccpacIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._CREDITORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_VendorCode", DbType="VarChar(50)")]
		public string VendorCode
		{
			get
			{
				return this._VendorCode;
			}
			set
			{
				if ((this._VendorCode != value))
				{
					this.OnVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorCode = value;
					this.SendPropertyChanged("VendorCode");
					this.OnVendorCodeChanged();
				}
			}
		}
		
		[Association(Name="FK_CREDITORS_ACCPAC_VENDORS_CREDITORS", Storage="_CREDITORS", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public CREDITORS CREDITORS
		{
			get
			{
				return this._CREDITORS.Entity;
			}
			set
			{
				CREDITORS previousValue = this._CREDITORS.Entity;
				if (((previousValue != value) 
							|| (this._CREDITORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CREDITORS.Entity = null;
						previousValue.CREDITORS_ACCPAC_VENDORS.Remove(this);
					}
					this._CREDITORS.Entity = value;
					if ((value != null))
					{
						value.CREDITORS_ACCPAC_VENDORS.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CREDITORS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CREDITORS_BAL")]
	public partial class CREDITORS_BAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccountID;
		
		private short _Year;
		
		private byte _Month;
		
		private System.Nullable<decimal> _Current;
		
		private System.Nullable<decimal> @__30Days;
		
		private System.Nullable<decimal> @__60Days;
		
		private System.Nullable<decimal> @__90Days;
		
		private System.Nullable<decimal> _OpenBal;
		
		private System.Nullable<decimal> _CloseBal;
		
		private System.Nullable<byte> _AreaCode;
		
		private string _Currency;
		
		private string _CompanyNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnCurrentChanging(System.Nullable<decimal> value);
    partial void OnCurrentChanged();
    partial void On_30DaysChanging(System.Nullable<decimal> value);
    partial void On_30DaysChanged();
    partial void On_60DaysChanging(System.Nullable<decimal> value);
    partial void On_60DaysChanged();
    partial void On_90DaysChanging(System.Nullable<decimal> value);
    partial void On_90DaysChanged();
    partial void OnOpenBalChanging(System.Nullable<decimal> value);
    partial void OnOpenBalChanged();
    partial void OnCloseBalChanging(System.Nullable<decimal> value);
    partial void OnCloseBalChanged();
    partial void OnAreaCodeChanging(System.Nullable<byte> value);
    partial void OnAreaCodeChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnCompanyNumChanging(string value);
    partial void OnCompanyNumChanged();
    #endregion
		
		public CREDITORS_BAL()
		{
			OnCreated();
		}
		
		[Column(Storage="_AccountID", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Current", DbType="Money")]
		public System.Nullable<decimal> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this.OnCurrentChanging(value);
					this.SendPropertyChanging();
					this._Current = value;
					this.SendPropertyChanged("Current");
					this.OnCurrentChanged();
				}
			}
		}
		
		[Column(Name="30Days", Storage="__30Days", DbType="Money")]
		public System.Nullable<decimal> _30Days
		{
			get
			{
				return this.@__30Days;
			}
			set
			{
				if ((this.@__30Days != value))
				{
					this.On_30DaysChanging(value);
					this.SendPropertyChanging();
					this.@__30Days = value;
					this.SendPropertyChanged("_30Days");
					this.On_30DaysChanged();
				}
			}
		}
		
		[Column(Name="60Days", Storage="__60Days", DbType="Money")]
		public System.Nullable<decimal> _60Days
		{
			get
			{
				return this.@__60Days;
			}
			set
			{
				if ((this.@__60Days != value))
				{
					this.On_60DaysChanging(value);
					this.SendPropertyChanging();
					this.@__60Days = value;
					this.SendPropertyChanged("_60Days");
					this.On_60DaysChanged();
				}
			}
		}
		
		[Column(Name="90Days", Storage="__90Days", DbType="Money")]
		public System.Nullable<decimal> _90Days
		{
			get
			{
				return this.@__90Days;
			}
			set
			{
				if ((this.@__90Days != value))
				{
					this.On_90DaysChanging(value);
					this.SendPropertyChanging();
					this.@__90Days = value;
					this.SendPropertyChanged("_90Days");
					this.On_90DaysChanged();
				}
			}
		}
		
		[Column(Storage="_OpenBal", DbType="Money")]
		public System.Nullable<decimal> OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this.OnOpenBalChanging(value);
					this.SendPropertyChanging();
					this._OpenBal = value;
					this.SendPropertyChanged("OpenBal");
					this.OnOpenBalChanged();
				}
			}
		}
		
		[Column(Storage="_CloseBal", DbType="Money")]
		public System.Nullable<decimal> CloseBal
		{
			get
			{
				return this._CloseBal;
			}
			set
			{
				if ((this._CloseBal != value))
				{
					this.OnCloseBalChanging(value);
					this.SendPropertyChanging();
					this._CloseBal = value;
					this.SendPropertyChanged("CloseBal");
					this.OnCloseBalChanged();
				}
			}
		}
		
		[Column(Storage="_AreaCode", DbType="TinyInt")]
		public System.Nullable<byte> AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					this.OnAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._AreaCode = value;
					this.SendPropertyChanged("AreaCode");
					this.OnAreaCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(5)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="Char(50)")]
		public string CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CREDITORS_CURRENT_PERIOD")]
	public partial class CREDITORS_CURRENT_PERIOD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Year;
		
		private byte _Month;
		
		private byte _Day;
		
		private string _Heading;
		
		private bool _PrevPeriodClosed;
		
		private byte _CompanyNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnDayChanging(byte value);
    partial void OnDayChanged();
    partial void OnHeadingChanging(string value);
    partial void OnHeadingChanged();
    partial void OnPrevPeriodClosedChanging(bool value);
    partial void OnPrevPeriodClosedChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    #endregion
		
		public CREDITORS_CURRENT_PERIOD()
		{
			OnCreated();
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Day", DbType="TinyInt NOT NULL")]
		public byte Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[Column(Storage="_Heading", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[Column(Storage="_PrevPeriodClosed", DbType="Bit NOT NULL")]
		public bool PrevPeriodClosed
		{
			get
			{
				return this._PrevPeriodClosed;
			}
			set
			{
				if ((this._PrevPeriodClosed != value))
				{
					this.OnPrevPeriodClosedChanging(value);
					this.SendPropertyChanging();
					this._PrevPeriodClosed = value;
					this.SendPropertyChanged("PrevPeriodClosed");
					this.OnPrevPeriodClosedChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CREDITORS_JNL")]
	public partial class CREDITORS_JNL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NKey;
		
		private System.Nullable<byte> _JnlType;
		
		private System.DateTime _JournalDate;
		
		private string _JournalName;
		
		private System.Nullable<short> _Year;
		
		private System.Nullable<byte> _Month;
		
		private byte _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNKeyChanging(int value);
    partial void OnNKeyChanged();
    partial void OnJnlTypeChanging(System.Nullable<byte> value);
    partial void OnJnlTypeChanged();
    partial void OnJournalDateChanging(System.DateTime value);
    partial void OnJournalDateChanged();
    partial void OnJournalNameChanging(string value);
    partial void OnJournalNameChanged();
    partial void OnYearChanging(System.Nullable<short> value);
    partial void OnYearChanged();
    partial void OnMonthChanging(System.Nullable<byte> value);
    partial void OnMonthChanged();
    partial void OnCompanyChanging(byte value);
    partial void OnCompanyChanged();
    #endregion
		
		public CREDITORS_JNL()
		{
			OnCreated();
		}
		
		[Column(Storage="_NKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NKey
		{
			get
			{
				return this._NKey;
			}
			set
			{
				if ((this._NKey != value))
				{
					this.OnNKeyChanging(value);
					this.SendPropertyChanging();
					this._NKey = value;
					this.SendPropertyChanged("NKey");
					this.OnNKeyChanged();
				}
			}
		}
		
		[Column(Storage="_JnlType", DbType="TinyInt")]
		public System.Nullable<byte> JnlType
		{
			get
			{
				return this._JnlType;
			}
			set
			{
				if ((this._JnlType != value))
				{
					this.OnJnlTypeChanging(value);
					this.SendPropertyChanging();
					this._JnlType = value;
					this.SendPropertyChanged("JnlType");
					this.OnJnlTypeChanged();
				}
			}
		}
		
		[Column(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this.OnJournalDateChanging(value);
					this.SendPropertyChanging();
					this._JournalDate = value;
					this.SendPropertyChanged("JournalDate");
					this.OnJournalDateChanged();
				}
			}
		}
		
		[Column(Storage="_JournalName", DbType="VarChar(50)")]
		public string JournalName
		{
			get
			{
				return this._JournalName;
			}
			set
			{
				if ((this._JournalName != value))
				{
					this.OnJournalNameChanging(value);
					this.SendPropertyChanging();
					this._JournalName = value;
					this.SendPropertyChanged("JournalName");
					this.OnJournalNameChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt")]
		public System.Nullable<short> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt")]
		public System.Nullable<byte> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="TinyInt NOT NULL")]
		public byte Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CREDITORS_TEMP")]
	public partial class CREDITORS_TEMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NKEY;
		
		private bool _BankRec;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<byte> _CompanyNum;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _DepositNum;
		
		private System.Nullable<decimal> _InvTotal;
		
		private string _ChequeNum;
		
		private string _Payee;
		
		private System.Nullable<int> _Audit;
		
		private System.Nullable<decimal> _TotalCash;
		
		private System.Nullable<decimal> _TotalDeposit;
		
		private string _AccountID;
		
		private string _BankAccGL;
		
		private string _InsUser;
		
		private System.Nullable<System.DateTime> _InsDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNKEYChanging(int value);
    partial void OnNKEYChanged();
    partial void OnBankRecChanging(bool value);
    partial void OnBankRecChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCompanyNumChanging(System.Nullable<byte> value);
    partial void OnCompanyNumChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnDepositNumChanging(System.Nullable<int> value);
    partial void OnDepositNumChanged();
    partial void OnInvTotalChanging(System.Nullable<decimal> value);
    partial void OnInvTotalChanged();
    partial void OnChequeNumChanging(string value);
    partial void OnChequeNumChanged();
    partial void OnPayeeChanging(string value);
    partial void OnPayeeChanged();
    partial void OnAuditChanging(System.Nullable<int> value);
    partial void OnAuditChanged();
    partial void OnTotalCashChanging(System.Nullable<decimal> value);
    partial void OnTotalCashChanged();
    partial void OnTotalDepositChanging(System.Nullable<decimal> value);
    partial void OnTotalDepositChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnBankAccGLChanging(string value);
    partial void OnBankAccGLChanged();
    partial void OnInsUserChanging(string value);
    partial void OnInsUserChanged();
    partial void OnInsDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsDateChanged();
    #endregion
		
		public CREDITORS_TEMP()
		{
			OnCreated();
		}
		
		[Column(Storage="_NKEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NKEY
		{
			get
			{
				return this._NKEY;
			}
			set
			{
				if ((this._NKEY != value))
				{
					this.OnNKEYChanging(value);
					this.SendPropertyChanging();
					this._NKEY = value;
					this.SendPropertyChanged("NKEY");
					this.OnNKEYChanged();
				}
			}
		}
		
		[Column(Storage="_BankRec", DbType="Bit NOT NULL")]
		public bool BankRec
		{
			get
			{
				return this._BankRec;
			}
			set
			{
				if ((this._BankRec != value))
				{
					this.OnBankRecChanging(value);
					this.SendPropertyChanging();
					this._BankRec = value;
					this.SendPropertyChanged("BankRec");
					this.OnBankRecChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_DepositNum", DbType="Int")]
		public System.Nullable<int> DepositNum
		{
			get
			{
				return this._DepositNum;
			}
			set
			{
				if ((this._DepositNum != value))
				{
					this.OnDepositNumChanging(value);
					this.SendPropertyChanging();
					this._DepositNum = value;
					this.SendPropertyChanged("DepositNum");
					this.OnDepositNumChanged();
				}
			}
		}
		
		[Column(Storage="_InvTotal", DbType="Money")]
		public System.Nullable<decimal> InvTotal
		{
			get
			{
				return this._InvTotal;
			}
			set
			{
				if ((this._InvTotal != value))
				{
					this.OnInvTotalChanging(value);
					this.SendPropertyChanging();
					this._InvTotal = value;
					this.SendPropertyChanged("InvTotal");
					this.OnInvTotalChanged();
				}
			}
		}
		
		[Column(Storage="_ChequeNum", DbType="VarChar(16)")]
		public string ChequeNum
		{
			get
			{
				return this._ChequeNum;
			}
			set
			{
				if ((this._ChequeNum != value))
				{
					this.OnChequeNumChanging(value);
					this.SendPropertyChanging();
					this._ChequeNum = value;
					this.SendPropertyChanged("ChequeNum");
					this.OnChequeNumChanged();
				}
			}
		}
		
		[Column(Storage="_Payee", DbType="VarChar(50)")]
		public string Payee
		{
			get
			{
				return this._Payee;
			}
			set
			{
				if ((this._Payee != value))
				{
					this.OnPayeeChanging(value);
					this.SendPropertyChanging();
					this._Payee = value;
					this.SendPropertyChanged("Payee");
					this.OnPayeeChanged();
				}
			}
		}
		
		[Column(Storage="_Audit", DbType="Int")]
		public System.Nullable<int> Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[Column(Storage="_TotalCash", DbType="Money")]
		public System.Nullable<decimal> TotalCash
		{
			get
			{
				return this._TotalCash;
			}
			set
			{
				if ((this._TotalCash != value))
				{
					this.OnTotalCashChanging(value);
					this.SendPropertyChanging();
					this._TotalCash = value;
					this.SendPropertyChanged("TotalCash");
					this.OnTotalCashChanged();
				}
			}
		}
		
		[Column(Storage="_TotalDeposit", DbType="Money")]
		public System.Nullable<decimal> TotalDeposit
		{
			get
			{
				return this._TotalDeposit;
			}
			set
			{
				if ((this._TotalDeposit != value))
				{
					this.OnTotalDepositChanging(value);
					this.SendPropertyChanging();
					this._TotalDeposit = value;
					this.SendPropertyChanged("TotalDeposit");
					this.OnTotalDepositChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="VarChar(12)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_BankAccGL", DbType="VarChar(16)")]
		public string BankAccGL
		{
			get
			{
				return this._BankAccGL;
			}
			set
			{
				if ((this._BankAccGL != value))
				{
					this.OnBankAccGLChanging(value);
					this.SendPropertyChanging();
					this._BankAccGL = value;
					this.SendPropertyChanged("BankAccGL");
					this.OnBankAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_InsUser", DbType="VarChar(25)")]
		public string InsUser
		{
			get
			{
				return this._InsUser;
			}
			set
			{
				if ((this._InsUser != value))
				{
					this.OnInsUserChanging(value);
					this.SendPropertyChanging();
					this._InsUser = value;
					this.SendPropertyChanged("InsUser");
					this.OnInsUserChanged();
				}
			}
		}
		
		[Column(Storage="_InsDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsDate
		{
			get
			{
				return this._InsDate;
			}
			set
			{
				if ((this._InsDate != value))
				{
					this.OnInsDateChanging(value);
					this.SendPropertyChanging();
					this._InsDate = value;
					this.SendPropertyChanged("InsDate");
					this.OnInsDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CRM_CALLS")]
	public partial class CRM_CALLS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nkey;
		
		private int _AccountID;
		
		private string _ID;
		
		private System.DateTime _CallDate;
		
		private string _Contact;
		
		private System.Nullable<System.DateTime> _NextCall;
		
		private bool _Appointment;
		
		private string _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNkeyChanging(int value);
    partial void OnNkeyChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCallDateChanging(System.DateTime value);
    partial void OnCallDateChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnNextCallChanging(System.Nullable<System.DateTime> value);
    partial void OnNextCallChanged();
    partial void OnAppointmentChanging(bool value);
    partial void OnAppointmentChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    #endregion
		
		public CRM_CALLS()
		{
			OnCreated();
		}
		
		[Column(Storage="_Nkey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nkey
		{
			get
			{
				return this._Nkey;
			}
			set
			{
				if ((this._Nkey != value))
				{
					this.OnNkeyChanging(value);
					this.SendPropertyChanging();
					this._Nkey = value;
					this.SendPropertyChanged("Nkey");
					this.OnNkeyChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int NOT NULL")]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_ID", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_CallDate", DbType="DateTime NOT NULL")]
		public System.DateTime CallDate
		{
			get
			{
				return this._CallDate;
			}
			set
			{
				if ((this._CallDate != value))
				{
					this.OnCallDateChanging(value);
					this.SendPropertyChanging();
					this._CallDate = value;
					this.SendPropertyChanged("CallDate");
					this.OnCallDateChanged();
				}
			}
		}
		
		[Column(Storage="_Contact", DbType="VarChar(25)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[Column(Storage="_NextCall", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextCall
		{
			get
			{
				return this._NextCall;
			}
			set
			{
				if ((this._NextCall != value))
				{
					this.OnNextCallChanging(value);
					this.SendPropertyChanging();
					this._NextCall = value;
					this.SendPropertyChanged("NextCall");
					this.OnNextCallChanged();
				}
			}
		}
		
		[Column(Storage="_Appointment", DbType="Bit NOT NULL")]
		public bool Appointment
		{
			get
			{
				return this._Appointment;
			}
			set
			{
				if ((this._Appointment != value))
				{
					this.OnAppointmentChanging(value);
					this.SendPropertyChanging();
					this._Appointment = value;
					this.SendPropertyChanged("Appointment");
					this.OnAppointmentChanged();
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="VarChar(896)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CTRAC_BSG_DELIVERY_STATUS")]
	public partial class CTRAC_BSG_DELIVERY_STATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeliveryStatusID;
		
		private string _DeliveryStatusDescription;
		
		private bool _EndState;
		
		private int _DisplayOrder;
		
		private bool _Ignore;
		
		private bool _ExcludeFromInvoicing;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeliveryStatusIDChanging(int value);
    partial void OnDeliveryStatusIDChanged();
    partial void OnDeliveryStatusDescriptionChanging(string value);
    partial void OnDeliveryStatusDescriptionChanged();
    partial void OnEndStateChanging(bool value);
    partial void OnEndStateChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnIgnoreChanging(bool value);
    partial void OnIgnoreChanged();
    partial void OnExcludeFromInvoicingChanging(bool value);
    partial void OnExcludeFromInvoicingChanged();
    #endregion
		
		public CTRAC_BSG_DELIVERY_STATUS()
		{
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			OnCreated();
		}
		
		[Column(Storage="_DeliveryStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DeliveryStatusID
		{
			get
			{
				return this._DeliveryStatusID;
			}
			set
			{
				if ((this._DeliveryStatusID != value))
				{
					this.OnDeliveryStatusIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryStatusID = value;
					this.SendPropertyChanged("DeliveryStatusID");
					this.OnDeliveryStatusIDChanged();
				}
			}
		}
		
		[Column(Storage="_DeliveryStatusDescription", DbType="VarChar(50)")]
		public string DeliveryStatusDescription
		{
			get
			{
				return this._DeliveryStatusDescription;
			}
			set
			{
				if ((this._DeliveryStatusDescription != value))
				{
					this.OnDeliveryStatusDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DeliveryStatusDescription = value;
					this.SendPropertyChanged("DeliveryStatusDescription");
					this.OnDeliveryStatusDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_EndState", DbType="Bit NOT NULL")]
		public bool EndState
		{
			get
			{
				return this._EndState;
			}
			set
			{
				if ((this._EndState != value))
				{
					this.OnEndStateChanging(value);
					this.SendPropertyChanging();
					this._EndState = value;
					this.SendPropertyChanged("EndState");
					this.OnEndStateChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[Column(Storage="_Ignore", DbType="Bit NOT NULL")]
		public bool Ignore
		{
			get
			{
				return this._Ignore;
			}
			set
			{
				if ((this._Ignore != value))
				{
					this.OnIgnoreChanging(value);
					this.SendPropertyChanging();
					this._Ignore = value;
					this.SendPropertyChanged("Ignore");
					this.OnIgnoreChanged();
				}
			}
		}
		
		[Column(Storage="_ExcludeFromInvoicing", DbType="Bit NOT NULL")]
		public bool ExcludeFromInvoicing
		{
			get
			{
				return this._ExcludeFromInvoicing;
			}
			set
			{
				if ((this._ExcludeFromInvoicing != value))
				{
					this.OnExcludeFromInvoicingChanging(value);
					this.SendPropertyChanging();
					this._ExcludeFromInvoicing = value;
					this.SendPropertyChanged("ExcludeFromInvoicing");
					this.OnExcludeFromInvoicingChanged();
				}
			}
		}
		
		[Association(Name="FK__CTRAC_ITE__LastB__548F96A0", Storage="_CTRAC_ITEM", ThisKey="DeliveryStatusID", OtherKey="LastBSGDeliveryStatus", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_BSG_DELIVERY_STATUS = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_BSG_DELIVERY_STATUS = null;
		}
	}
	
	[Table(Name="dbo.CTRAC_CHANGE_TYPES")]
	public partial class CTRAC_CHANGE_TYPES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChangeTypeID;
		
		private string _ChangeTypeDescription;
		
		private bool _ExcludeFromSnapshotComparison;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChangeTypeIDChanging(int value);
    partial void OnChangeTypeIDChanged();
    partial void OnChangeTypeDescriptionChanging(string value);
    partial void OnChangeTypeDescriptionChanged();
    partial void OnExcludeFromSnapshotComparisonChanging(bool value);
    partial void OnExcludeFromSnapshotComparisonChanged();
    #endregion
		
		public CTRAC_CHANGE_TYPES()
		{
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			OnCreated();
		}
		
		[Column(Storage="_ChangeTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChangeTypeID
		{
			get
			{
				return this._ChangeTypeID;
			}
			set
			{
				if ((this._ChangeTypeID != value))
				{
					this.OnChangeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ChangeTypeID = value;
					this.SendPropertyChanged("ChangeTypeID");
					this.OnChangeTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ChangeTypeDescription", DbType="VarChar(80)")]
		public string ChangeTypeDescription
		{
			get
			{
				return this._ChangeTypeDescription;
			}
			set
			{
				if ((this._ChangeTypeDescription != value))
				{
					this.OnChangeTypeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ChangeTypeDescription = value;
					this.SendPropertyChanged("ChangeTypeDescription");
					this.OnChangeTypeDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_ExcludeFromSnapshotComparison", DbType="Bit NOT NULL")]
		public bool ExcludeFromSnapshotComparison
		{
			get
			{
				return this._ExcludeFromSnapshotComparison;
			}
			set
			{
				if ((this._ExcludeFromSnapshotComparison != value))
				{
					this.OnExcludeFromSnapshotComparisonChanging(value);
					this.SendPropertyChanging();
					this._ExcludeFromSnapshotComparison = value;
					this.SendPropertyChanged("ExcludeFromSnapshotComparison");
					this.OnExcludeFromSnapshotComparisonChanged();
				}
			}
		}
		
		[Association(Name="FK__CTRAC_ITE__LastC__14200BD0", Storage="_CTRAC_ITEM", ThisKey="ChangeTypeID", OtherKey="LastChangeType", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_CHANGE_TYPES = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_CHANGE_TYPES = null;
		}
	}
	
	[Table(Name="dbo.CTRAC_DEAL_TYPES")]
	public partial class CTRAC_DEAL_TYPES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealTypeID;
		
		private string _DealType;
		
		private EntitySet<CTRAC_HEADER> _CTRAC_HEADER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealTypeIDChanging(int value);
    partial void OnDealTypeIDChanged();
    partial void OnDealTypeChanging(string value);
    partial void OnDealTypeChanged();
    #endregion
		
		public CTRAC_DEAL_TYPES()
		{
			this._CTRAC_HEADER = new EntitySet<CTRAC_HEADER>(new Action<CTRAC_HEADER>(this.attach_CTRAC_HEADER), new Action<CTRAC_HEADER>(this.detach_CTRAC_HEADER));
			OnCreated();
		}
		
		[Column(Storage="_DealTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DealTypeID
		{
			get
			{
				return this._DealTypeID;
			}
			set
			{
				if ((this._DealTypeID != value))
				{
					this.OnDealTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DealTypeID = value;
					this.SendPropertyChanged("DealTypeID");
					this.OnDealTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_DealType", DbType="VarChar(50)")]
		public string DealType
		{
			get
			{
				return this._DealType;
			}
			set
			{
				if ((this._DealType != value))
				{
					this.OnDealTypeChanging(value);
					this.SendPropertyChanging();
					this._DealType = value;
					this.SendPropertyChanged("DealType");
					this.OnDealTypeChanged();
				}
			}
		}
		
		[Association(Name="FK_CTRAC_HEADER_CTRAC_DEAL_TYPES", Storage="_CTRAC_HEADER", ThisKey="DealTypeID", OtherKey="DealType", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_HEADER> CTRAC_HEADER
		{
			get
			{
				return this._CTRAC_HEADER;
			}
			set
			{
				this._CTRAC_HEADER.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_HEADER(CTRAC_HEADER entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_DEAL_TYPES = this;
		}
		
		private void detach_CTRAC_HEADER(CTRAC_HEADER entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_DEAL_TYPES = null;
		}
	}
	
	[Table(Name="dbo.CTRAC_HEADER")]
	public partial class CTRAC_HEADER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractId;
		
		private int _AccountId;
		
		private System.Nullable<int> _PrimaryContact;
		
		private string _SalesRep;
		
		private string _AccountManager;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private System.Nullable<int> _SpecialTextId;
		
		private System.Nullable<int> _ContractType;
		
		private byte _CompanyNum;
		
		private string _DebtorPONumber;
		
		private System.Nullable<System.DateTime> _LastInvDate;
		
		private System.Nullable<int> _LastInvBatch;
		
		private int _InvFreq;
		
		private System.DateTime _NextInvDate;
		
		private string _DisplayContractID;
		
		private bool _Merged;
		
		private System.Nullable<int> _OldContractID;
		
		private System.Nullable<System.DateTime> _OriginalPOExpiryDate;
		
		private int _DealType;
		
		private bool _InActive;
		
		private EntityRef<CONTACTS> _CONTACTS;
		
		private EntityRef<CTRAC_DEAL_TYPES> _CTRAC_DEAL_TYPES;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
		private EntityRef<INT_CTRAC_TEXT> _INT_CTRAC_TEXT;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntitySet<INT_INV_BATCH_CONTROL> _INT_INV_BATCH_CONTROL;
		
		private EntitySet<INT_INV_LINE_TEXT> _INT_INV_LINE_TEXT;
		
		private EntitySet<SALEITEM> _SALEITEM;
		
		private EntitySet<SALESORD> _SALESORD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractIdChanging(int value);
    partial void OnContractIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnPrimaryContactChanging(System.Nullable<int> value);
    partial void OnPrimaryContactChanged();
    partial void OnSalesRepChanging(string value);
    partial void OnSalesRepChanged();
    partial void OnAccountManagerChanging(string value);
    partial void OnAccountManagerChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnSpecialTextIdChanging(System.Nullable<int> value);
    partial void OnSpecialTextIdChanged();
    partial void OnContractTypeChanging(System.Nullable<int> value);
    partial void OnContractTypeChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnDebtorPONumberChanging(string value);
    partial void OnDebtorPONumberChanged();
    partial void OnLastInvDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastInvDateChanged();
    partial void OnLastInvBatchChanging(System.Nullable<int> value);
    partial void OnLastInvBatchChanged();
    partial void OnInvFreqChanging(int value);
    partial void OnInvFreqChanged();
    partial void OnNextInvDateChanging(System.DateTime value);
    partial void OnNextInvDateChanged();
    partial void OnDisplayContractIDChanging(string value);
    partial void OnDisplayContractIDChanged();
    partial void OnMergedChanging(bool value);
    partial void OnMergedChanged();
    partial void OnOldContractIDChanging(System.Nullable<int> value);
    partial void OnOldContractIDChanged();
    partial void OnOriginalPOExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOriginalPOExpiryDateChanged();
    partial void OnDealTypeChanging(int value);
    partial void OnDealTypeChanged();
    partial void OnInActiveChanging(bool value);
    partial void OnInActiveChanged();
    #endregion
		
		public CTRAC_HEADER()
		{
			this._CONTACTS = default(EntityRef<CONTACTS>);
			this._CTRAC_DEAL_TYPES = default(EntityRef<CTRAC_DEAL_TYPES>);
			this._DEBTORS = default(EntityRef<DEBTORS>);
			this._INT_CTRAC_TEXT = default(EntityRef<INT_CTRAC_TEXT>);
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			this._INT_INV_BATCH_CONTROL = new EntitySet<INT_INV_BATCH_CONTROL>(new Action<INT_INV_BATCH_CONTROL>(this.attach_INT_INV_BATCH_CONTROL), new Action<INT_INV_BATCH_CONTROL>(this.detach_INT_INV_BATCH_CONTROL));
			this._INT_INV_LINE_TEXT = new EntitySet<INT_INV_LINE_TEXT>(new Action<INT_INV_LINE_TEXT>(this.attach_INT_INV_LINE_TEXT), new Action<INT_INV_LINE_TEXT>(this.detach_INT_INV_LINE_TEXT));
			this._SALEITEM = new EntitySet<SALEITEM>(new Action<SALEITEM>(this.attach_SALEITEM), new Action<SALEITEM>(this.detach_SALEITEM));
			this._SALESORD = new EntitySet<SALESORD>(new Action<SALESORD>(this.attach_SALESORD), new Action<SALESORD>(this.detach_SALESORD));
			OnCreated();
		}
		
		[Column(Storage="_ContractId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContractId
		{
			get
			{
				return this._ContractId;
			}
			set
			{
				if ((this._ContractId != value))
				{
					this.OnContractIdChanging(value);
					this.SendPropertyChanging();
					this._ContractId = value;
					this.SendPropertyChanged("ContractId");
					this.OnContractIdChanged();
				}
			}
		}
		
		[Column(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Storage="_PrimaryContact", DbType="Int")]
		public System.Nullable<int> PrimaryContact
		{
			get
			{
				return this._PrimaryContact;
			}
			set
			{
				if ((this._PrimaryContact != value))
				{
					if (this._CONTACTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimaryContactChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContact = value;
					this.SendPropertyChanged("PrimaryContact");
					this.OnPrimaryContactChanged();
				}
			}
		}
		
		[Column(Storage="_SalesRep", DbType="VarChar(25)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					this.OnSalesRepChanging(value);
					this.SendPropertyChanging();
					this._SalesRep = value;
					this.SendPropertyChanged("SalesRep");
					this.OnSalesRepChanged();
				}
			}
		}
		
		[Column(Storage="_AccountManager", DbType="VarChar(25)")]
		public string AccountManager
		{
			get
			{
				return this._AccountManager;
			}
			set
			{
				if ((this._AccountManager != value))
				{
					this.OnAccountManagerChanging(value);
					this.SendPropertyChanging();
					this._AccountManager = value;
					this.SendPropertyChanged("AccountManager");
					this.OnAccountManagerChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[Column(Storage="_SpecialTextId", DbType="Int")]
		public System.Nullable<int> SpecialTextId
		{
			get
			{
				return this._SpecialTextId;
			}
			set
			{
				if ((this._SpecialTextId != value))
				{
					if (this._INT_CTRAC_TEXT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialTextIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialTextId = value;
					this.SendPropertyChanged("SpecialTextId");
					this.OnSpecialTextIdChanged();
				}
			}
		}
		
		[Column(Storage="_ContractType", DbType="Int")]
		public System.Nullable<int> ContractType
		{
			get
			{
				return this._ContractType;
			}
			set
			{
				if ((this._ContractType != value))
				{
					this.OnContractTypeChanging(value);
					this.SendPropertyChanging();
					this._ContractType = value;
					this.SendPropertyChanged("ContractType");
					this.OnContractTypeChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_DebtorPONumber", DbType="VarChar(64)")]
		public string DebtorPONumber
		{
			get
			{
				return this._DebtorPONumber;
			}
			set
			{
				if ((this._DebtorPONumber != value))
				{
					this.OnDebtorPONumberChanging(value);
					this.SendPropertyChanging();
					this._DebtorPONumber = value;
					this.SendPropertyChanged("DebtorPONumber");
					this.OnDebtorPONumberChanged();
				}
			}
		}
		
		[Column(Storage="_LastInvDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastInvDate
		{
			get
			{
				return this._LastInvDate;
			}
			set
			{
				if ((this._LastInvDate != value))
				{
					this.OnLastInvDateChanging(value);
					this.SendPropertyChanging();
					this._LastInvDate = value;
					this.SendPropertyChanged("LastInvDate");
					this.OnLastInvDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastInvBatch", DbType="Int")]
		public System.Nullable<int> LastInvBatch
		{
			get
			{
				return this._LastInvBatch;
			}
			set
			{
				if ((this._LastInvBatch != value))
				{
					this.OnLastInvBatchChanging(value);
					this.SendPropertyChanging();
					this._LastInvBatch = value;
					this.SendPropertyChanged("LastInvBatch");
					this.OnLastInvBatchChanged();
				}
			}
		}
		
		[Column(Storage="_InvFreq", DbType="Int NOT NULL")]
		public int InvFreq
		{
			get
			{
				return this._InvFreq;
			}
			set
			{
				if ((this._InvFreq != value))
				{
					this.OnInvFreqChanging(value);
					this.SendPropertyChanging();
					this._InvFreq = value;
					this.SendPropertyChanged("InvFreq");
					this.OnInvFreqChanged();
				}
			}
		}
		
		[Column(Storage="_NextInvDate", DbType="DateTime NOT NULL")]
		public System.DateTime NextInvDate
		{
			get
			{
				return this._NextInvDate;
			}
			set
			{
				if ((this._NextInvDate != value))
				{
					this.OnNextInvDateChanging(value);
					this.SendPropertyChanging();
					this._NextInvDate = value;
					this.SendPropertyChanged("NextInvDate");
					this.OnNextInvDateChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayContractID", DbType="VarChar(255)")]
		public string DisplayContractID
		{
			get
			{
				return this._DisplayContractID;
			}
			set
			{
				if ((this._DisplayContractID != value))
				{
					this.OnDisplayContractIDChanging(value);
					this.SendPropertyChanging();
					this._DisplayContractID = value;
					this.SendPropertyChanged("DisplayContractID");
					this.OnDisplayContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_Merged", DbType="Bit NOT NULL")]
		public bool Merged
		{
			get
			{
				return this._Merged;
			}
			set
			{
				if ((this._Merged != value))
				{
					this.OnMergedChanging(value);
					this.SendPropertyChanging();
					this._Merged = value;
					this.SendPropertyChanged("Merged");
					this.OnMergedChanged();
				}
			}
		}
		
		[Column(Storage="_OldContractID", DbType="Int")]
		public System.Nullable<int> OldContractID
		{
			get
			{
				return this._OldContractID;
			}
			set
			{
				if ((this._OldContractID != value))
				{
					this.OnOldContractIDChanging(value);
					this.SendPropertyChanging();
					this._OldContractID = value;
					this.SendPropertyChanged("OldContractID");
					this.OnOldContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_OriginalPOExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OriginalPOExpiryDate
		{
			get
			{
				return this._OriginalPOExpiryDate;
			}
			set
			{
				if ((this._OriginalPOExpiryDate != value))
				{
					this.OnOriginalPOExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._OriginalPOExpiryDate = value;
					this.SendPropertyChanged("OriginalPOExpiryDate");
					this.OnOriginalPOExpiryDateChanged();
				}
			}
		}
		
		[Column(Storage="_DealType", DbType="Int NOT NULL")]
		public int DealType
		{
			get
			{
				return this._DealType;
			}
			set
			{
				if ((this._DealType != value))
				{
					if (this._CTRAC_DEAL_TYPES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealTypeChanging(value);
					this.SendPropertyChanging();
					this._DealType = value;
					this.SendPropertyChanged("DealType");
					this.OnDealTypeChanged();
				}
			}
		}
		
		[Column(Storage="_InActive", DbType="Bit NOT NULL")]
		public bool InActive
		{
			get
			{
				return this._InActive;
			}
			set
			{
				if ((this._InActive != value))
				{
					this.OnInActiveChanging(value);
					this.SendPropertyChanging();
					this._InActive = value;
					this.SendPropertyChanged("InActive");
					this.OnInActiveChanged();
				}
			}
		}
		
		[Association(Name="FK_CTRAC_HEADER_CONTACTS", Storage="_CONTACTS", ThisKey="PrimaryContact", OtherKey="ContactID", IsForeignKey=true)]
		public CONTACTS CONTACTS
		{
			get
			{
				return this._CONTACTS.Entity;
			}
			set
			{
				CONTACTS previousValue = this._CONTACTS.Entity;
				if (((previousValue != value) 
							|| (this._CONTACTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTACTS.Entity = null;
						previousValue.CTRAC_HEADER.Remove(this);
					}
					this._CONTACTS.Entity = value;
					if ((value != null))
					{
						value.CTRAC_HEADER.Add(this);
						this._PrimaryContact = value.ContactID;
					}
					else
					{
						this._PrimaryContact = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONTACTS");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_HEADER_CTRAC_DEAL_TYPES", Storage="_CTRAC_DEAL_TYPES", ThisKey="DealType", OtherKey="DealTypeID", IsForeignKey=true)]
		public CTRAC_DEAL_TYPES CTRAC_DEAL_TYPES
		{
			get
			{
				return this._CTRAC_DEAL_TYPES.Entity;
			}
			set
			{
				CTRAC_DEAL_TYPES previousValue = this._CTRAC_DEAL_TYPES.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_DEAL_TYPES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_DEAL_TYPES.Entity = null;
						previousValue.CTRAC_HEADER.Remove(this);
					}
					this._CTRAC_DEAL_TYPES.Entity = value;
					if ((value != null))
					{
						value.CTRAC_HEADER.Add(this);
						this._DealType = value.DealTypeID;
					}
					else
					{
						this._DealType = default(int);
					}
					this.SendPropertyChanged("CTRAC_DEAL_TYPES");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_HEADER_DEBTORS", Storage="_DEBTORS", ThisKey="AccountId", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.CTRAC_HEADER.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.CTRAC_HEADER.Add(this);
						this._AccountId = value.AccountID;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_HEADER_INT_CTRAC_TEXT", Storage="_INT_CTRAC_TEXT", ThisKey="SpecialTextId", OtherKey="TextID", IsForeignKey=true)]
		public INT_CTRAC_TEXT INT_CTRAC_TEXT
		{
			get
			{
				return this._INT_CTRAC_TEXT.Entity;
			}
			set
			{
				INT_CTRAC_TEXT previousValue = this._INT_CTRAC_TEXT.Entity;
				if (((previousValue != value) 
							|| (this._INT_CTRAC_TEXT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_CTRAC_TEXT.Entity = null;
						previousValue.CTRAC_HEADER.Remove(this);
					}
					this._INT_CTRAC_TEXT.Entity = value;
					if ((value != null))
					{
						value.CTRAC_HEADER.Add(this);
						this._SpecialTextId = value.TextID;
					}
					else
					{
						this._SpecialTextId = default(Nullable<int>);
					}
					this.SendPropertyChanged("INT_CTRAC_TEXT");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_CTRAC_HEADER", Storage="_CTRAC_ITEM", ThisKey="ContractId", OtherKey="ContractID", DeleteRule="CASCADE")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_CONTROL_CONTRACT", Storage="_INT_INV_BATCH_CONTROL", ThisKey="ContractId", OtherKey="ContractID", DeleteRule="NO ACTION")]
		public EntitySet<INT_INV_BATCH_CONTROL> INT_INV_BATCH_CONTROL
		{
			get
			{
				return this._INT_INV_BATCH_CONTROL;
			}
			set
			{
				this._INT_INV_BATCH_CONTROL.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_INV_LINE_TEXT_CONTRACT", Storage="_INT_INV_LINE_TEXT", ThisKey="ContractId", OtherKey="ContractID", DeleteRule="NO ACTION")]
		public EntitySet<INT_INV_LINE_TEXT> INT_INV_LINE_TEXT
		{
			get
			{
				return this._INT_INV_LINE_TEXT;
			}
			set
			{
				this._INT_INV_LINE_TEXT.Assign(value);
			}
		}
		
		[Association(Name="FK_SALEITEM_CTRAC_HEADER", Storage="_SALEITEM", ThisKey="ContractId", OtherKey="INT_ContractID", DeleteRule="NO ACTION")]
		public EntitySet<SALEITEM> SALEITEM
		{
			get
			{
				return this._SALEITEM;
			}
			set
			{
				this._SALEITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_SALESORD_CTRAC_HEADER", Storage="_SALESORD", ThisKey="ContractId", OtherKey="ContractID", DeleteRule="NO ACTION")]
		public EntitySet<SALESORD> SALESORD
		{
			get
			{
				return this._SALESORD;
			}
			set
			{
				this._SALESORD.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_HEADER = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_HEADER = null;
		}
		
		private void attach_INT_INV_BATCH_CONTROL(INT_INV_BATCH_CONTROL entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_HEADER = this;
		}
		
		private void detach_INT_INV_BATCH_CONTROL(INT_INV_BATCH_CONTROL entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_HEADER = null;
		}
		
		private void attach_INT_INV_LINE_TEXT(INT_INV_LINE_TEXT entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_HEADER = this;
		}
		
		private void detach_INT_INV_LINE_TEXT(INT_INV_LINE_TEXT entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_HEADER = null;
		}
		
		private void attach_SALEITEM(SALEITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_HEADER = this;
		}
		
		private void detach_SALEITEM(SALEITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_HEADER = null;
		}
		
		private void attach_SALESORD(SALESORD entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_HEADER = this;
		}
		
		private void detach_SALESORD(SALESORD entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_HEADER = null;
		}
	}
	
	[Table(Name="dbo.CTRAC_ITEM")]
	public partial class CTRAC_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _ContractItemID;
		
		private int _ContractID;
		
		private string _ProdCode;
		
		private short _Quantity;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private int _ServiceID;
		
		private System.Nullable<byte> _ServiceLevelID;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Engineer;
		
		private string _SerialNo;
		
		private System.Nullable<byte> _ResponseTime;
		
		private string _CoverageLimits;
		
		private System.Nullable<decimal> _OtherPrice;
		
		private System.Nullable<bool> _Variation;
		
		private System.Nullable<System.DateTime> _LastInvToDate;
		
		private string _DisplayCode;
		
		private System.Nullable<decimal> _TPPercent;
		
		private string _CustCode;
		
		private string _DeviceName;
		
		private bool _Merged;
		
		private System.Nullable<byte> _FromCompanyNum;
		
		private System.Nullable<int> _RevenueCategory;
		
		private System.Nullable<int> _OldContractID;
		
		private System.Nullable<System.DateTime> _OriginalStartDate;
		
		private bool _ExtraMerge;
		
		private string @__3PSpecialConsiderations;
		
		private string _SalesRep;
		
		private System.Nullable<decimal> _CommissionSet;
		
		private System.Nullable<decimal> _CommissionPaid;
		
		private System.Nullable<int> _LastChangeType;
		
		private int _ClaimableCommission;
		
		private System.Nullable<decimal> _CommissionCancelled;
		
		private string _LeadSalesRep;
		
		private int _BSGAligned;
		
		private System.Nullable<int> _Import;
		
		private int _ConsignmentStock;
		
		private System.Nullable<int> _SpaID;
		
		private System.Nullable<int> _AddDelID;
		
		private System.Nullable<int> _LastBSGDeliveryStatus;
		
		private string _BSGDescription;
		
		private System.Nullable<int> @__3PAgreement;
		
		private System.Nullable<System.DateTime> @__3PInvoiceStartDate;
		
		private System.Nullable<System.DateTime> @__3PInvoiceEndDate;
		
		private System.Nullable<int> _PartsShareLocation;
		
		private EntityRef<DEBTORS_3P_AGREEMENTS> _DEBTORS_3P_AGREEMENTS;
		
		private EntityRef<CTRAC_ITEM_IMPORT> _CTRAC_ITEM_IMPORT;
		
		private EntityRef<CTRAC_BSG_DELIVERY_STATUS> _CTRAC_BSG_DELIVERY_STATUS;
		
		private EntityRef<CTRAC_CHANGE_TYPES> _CTRAC_CHANGE_TYPES;
		
		private EntityRef<CTRAC_HEADER> _CTRAC_HEADER;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
		private EntityRef<EMPLOYEES> _EMPLOYEES;
		
		private EntityRef<EMPLOYEES> _LeadSalesRepEMPLOYEES;
		
		private EntityRef<EMPLOYEES> _SalesRepEMPLOYEES;
		
		private EntityRef<INT_RESPONSE_TIME> _INT_RESPONSE_TIME;
		
		private EntityRef<INT_SERVICE_ID> _INT_SERVICE_ID;
		
		private EntityRef<INT_SERVICE_LEVEL> _INT_SERVICE_LEVEL;
		
		private EntityRef<LOCATIONS> _LOCATIONS;
		
		private EntityRef<REVENUE_CATEGORIES> _REVENUE_CATEGORIES;
		
		private EntityRef<STOCK> _STOCK;
		
		private EntitySet<DEBTORS_3P_INVOICES_ITEMS> _DEBTORS_3P_INVOICES_ITEMS;
		
		private EntitySet<INT_INV_BATCH_CONTROL> _INT_INV_BATCH_CONTROL;
		
		private EntitySet<SALEITEM> _SALEITEM;
		
		private EntitySet<SALES_COMMISSION_DUE_ITEM> _SALES_COMMISSION_DUE_ITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnContractItemIDChanging(int value);
    partial void OnContractItemIDChanged();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnQuantityChanging(short value);
    partial void OnQuantityChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnServiceIDChanging(int value);
    partial void OnServiceIDChanged();
    partial void OnServiceLevelIDChanging(System.Nullable<byte> value);
    partial void OnServiceLevelIDChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnEngineerChanging(string value);
    partial void OnEngineerChanged();
    partial void OnSerialNoChanging(string value);
    partial void OnSerialNoChanged();
    partial void OnResponseTimeChanging(System.Nullable<byte> value);
    partial void OnResponseTimeChanged();
    partial void OnCoverageLimitsChanging(string value);
    partial void OnCoverageLimitsChanged();
    partial void OnOtherPriceChanging(System.Nullable<decimal> value);
    partial void OnOtherPriceChanged();
    partial void OnVariationChanging(System.Nullable<bool> value);
    partial void OnVariationChanged();
    partial void OnLastInvToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastInvToDateChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnTPPercentChanging(System.Nullable<decimal> value);
    partial void OnTPPercentChanged();
    partial void OnCustCodeChanging(string value);
    partial void OnCustCodeChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnMergedChanging(bool value);
    partial void OnMergedChanged();
    partial void OnFromCompanyNumChanging(System.Nullable<byte> value);
    partial void OnFromCompanyNumChanged();
    partial void OnRevenueCategoryChanging(System.Nullable<int> value);
    partial void OnRevenueCategoryChanged();
    partial void OnOldContractIDChanging(System.Nullable<int> value);
    partial void OnOldContractIDChanged();
    partial void OnOriginalStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOriginalStartDateChanged();
    partial void OnExtraMergeChanging(bool value);
    partial void OnExtraMergeChanged();
    partial void On_3PSpecialConsiderationsChanging(string value);
    partial void On_3PSpecialConsiderationsChanged();
    partial void OnSalesRepChanging(string value);
    partial void OnSalesRepChanged();
    partial void OnCommissionSetChanging(System.Nullable<decimal> value);
    partial void OnCommissionSetChanged();
    partial void OnCommissionPaidChanging(System.Nullable<decimal> value);
    partial void OnCommissionPaidChanged();
    partial void OnLastChangeTypeChanging(System.Nullable<int> value);
    partial void OnLastChangeTypeChanged();
    partial void OnClaimableCommissionChanging(int value);
    partial void OnClaimableCommissionChanged();
    partial void OnCommissionCancelledChanging(System.Nullable<decimal> value);
    partial void OnCommissionCancelledChanged();
    partial void OnLeadSalesRepChanging(string value);
    partial void OnLeadSalesRepChanged();
    partial void OnBSGAlignedChanging(int value);
    partial void OnBSGAlignedChanged();
    partial void OnImportChanging(System.Nullable<int> value);
    partial void OnImportChanged();
    partial void OnConsignmentStockChanging(int value);
    partial void OnConsignmentStockChanged();
    partial void OnSpaIDChanging(System.Nullable<int> value);
    partial void OnSpaIDChanged();
    partial void OnAddDelIDChanging(System.Nullable<int> value);
    partial void OnAddDelIDChanged();
    partial void OnLastBSGDeliveryStatusChanging(System.Nullable<int> value);
    partial void OnLastBSGDeliveryStatusChanged();
    partial void OnBSGDescriptionChanging(string value);
    partial void OnBSGDescriptionChanged();
    partial void On_3PAgreementChanging(System.Nullable<int> value);
    partial void On_3PAgreementChanged();
    partial void On_3PInvoiceStartDateChanging(System.Nullable<System.DateTime> value);
    partial void On_3PInvoiceStartDateChanged();
    partial void On_3PInvoiceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void On_3PInvoiceEndDateChanged();
    partial void OnPartsShareLocationChanging(System.Nullable<int> value);
    partial void OnPartsShareLocationChanged();
    #endregion
		
		public CTRAC_ITEM()
		{
			this._DEBTORS_3P_AGREEMENTS = default(EntityRef<DEBTORS_3P_AGREEMENTS>);
			this._CTRAC_ITEM_IMPORT = default(EntityRef<CTRAC_ITEM_IMPORT>);
			this._CTRAC_BSG_DELIVERY_STATUS = default(EntityRef<CTRAC_BSG_DELIVERY_STATUS>);
			this._CTRAC_CHANGE_TYPES = default(EntityRef<CTRAC_CHANGE_TYPES>);
			this._CTRAC_HEADER = default(EntityRef<CTRAC_HEADER>);
			this._DEBTORS = default(EntityRef<DEBTORS>);
			this._EMPLOYEES = default(EntityRef<EMPLOYEES>);
			this._LeadSalesRepEMPLOYEES = default(EntityRef<EMPLOYEES>);
			this._SalesRepEMPLOYEES = default(EntityRef<EMPLOYEES>);
			this._INT_RESPONSE_TIME = default(EntityRef<INT_RESPONSE_TIME>);
			this._INT_SERVICE_ID = default(EntityRef<INT_SERVICE_ID>);
			this._INT_SERVICE_LEVEL = default(EntityRef<INT_SERVICE_LEVEL>);
			this._LOCATIONS = default(EntityRef<LOCATIONS>);
			this._REVENUE_CATEGORIES = default(EntityRef<REVENUE_CATEGORIES>);
			this._STOCK = default(EntityRef<STOCK>);
			this._DEBTORS_3P_INVOICES_ITEMS = new EntitySet<DEBTORS_3P_INVOICES_ITEMS>(new Action<DEBTORS_3P_INVOICES_ITEMS>(this.attach_DEBTORS_3P_INVOICES_ITEMS), new Action<DEBTORS_3P_INVOICES_ITEMS>(this.detach_DEBTORS_3P_INVOICES_ITEMS));
			this._INT_INV_BATCH_CONTROL = new EntitySet<INT_INV_BATCH_CONTROL>(new Action<INT_INV_BATCH_CONTROL>(this.attach_INT_INV_BATCH_CONTROL), new Action<INT_INV_BATCH_CONTROL>(this.detach_INT_INV_BATCH_CONTROL));
			this._SALEITEM = new EntitySet<SALEITEM>(new Action<SALEITEM>(this.attach_SALEITEM), new Action<SALEITEM>(this.detach_SALEITEM));
			this._SALES_COMMISSION_DUE_ITEM = new EntitySet<SALES_COMMISSION_DUE_ITEM>(new Action<SALES_COMMISSION_DUE_ITEM>(this.attach_SALES_COMMISSION_DUE_ITEM), new Action<SALES_COMMISSION_DUE_ITEM>(this.detach_SALES_COMMISSION_DUE_ITEM));
			OnCreated();
		}
		
		[Column(Storage="_AccountID", DbType="Int NOT NULL")]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this.OnContractItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContractItemID = value;
					this.SendPropertyChanged("ContractItemID");
					this.OnContractItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int NOT NULL")]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._CTRAC_HEADER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Quantity", DbType="SmallInt NOT NULL")]
		public short Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_ExpiryDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="Int NOT NULL")]
		public int ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._INT_SERVICE_ID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceLevelID", DbType="TinyInt")]
		public System.Nullable<byte> ServiceLevelID
		{
			get
			{
				return this._ServiceLevelID;
			}
			set
			{
				if ((this._ServiceLevelID != value))
				{
					if (this._INT_SERVICE_LEVEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceLevelIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceLevelID = value;
					this.SendPropertyChanged("ServiceLevelID");
					this.OnServiceLevelIDChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_Engineer", DbType="VarChar(25)")]
		public string Engineer
		{
			get
			{
				return this._Engineer;
			}
			set
			{
				if ((this._Engineer != value))
				{
					if (this._EMPLOYEES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEngineerChanging(value);
					this.SendPropertyChanging();
					this._Engineer = value;
					this.SendPropertyChanged("Engineer");
					this.OnEngineerChanged();
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="VarChar(64)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[Column(Storage="_ResponseTime", DbType="TinyInt")]
		public System.Nullable<byte> ResponseTime
		{
			get
			{
				return this._ResponseTime;
			}
			set
			{
				if ((this._ResponseTime != value))
				{
					if (this._INT_RESPONSE_TIME.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponseTimeChanging(value);
					this.SendPropertyChanging();
					this._ResponseTime = value;
					this.SendPropertyChanged("ResponseTime");
					this.OnResponseTimeChanged();
				}
			}
		}
		
		[Column(Storage="_CoverageLimits", DbType="VarChar(32)")]
		public string CoverageLimits
		{
			get
			{
				return this._CoverageLimits;
			}
			set
			{
				if ((this._CoverageLimits != value))
				{
					this.OnCoverageLimitsChanging(value);
					this.SendPropertyChanging();
					this._CoverageLimits = value;
					this.SendPropertyChanged("CoverageLimits");
					this.OnCoverageLimitsChanged();
				}
			}
		}
		
		[Column(Storage="_OtherPrice", DbType="Money")]
		public System.Nullable<decimal> OtherPrice
		{
			get
			{
				return this._OtherPrice;
			}
			set
			{
				if ((this._OtherPrice != value))
				{
					this.OnOtherPriceChanging(value);
					this.SendPropertyChanging();
					this._OtherPrice = value;
					this.SendPropertyChanged("OtherPrice");
					this.OnOtherPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Variation", DbType="Bit")]
		public System.Nullable<bool> Variation
		{
			get
			{
				return this._Variation;
			}
			set
			{
				if ((this._Variation != value))
				{
					this.OnVariationChanging(value);
					this.SendPropertyChanging();
					this._Variation = value;
					this.SendPropertyChanged("Variation");
					this.OnVariationChanged();
				}
			}
		}
		
		[Column(Storage="_LastInvToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastInvToDate
		{
			get
			{
				return this._LastInvToDate;
			}
			set
			{
				if ((this._LastInvToDate != value))
				{
					this.OnLastInvToDateChanging(value);
					this.SendPropertyChanging();
					this._LastInvToDate = value;
					this.SendPropertyChanged("LastInvToDate");
					this.OnLastInvToDateChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayCode", DbType="VarChar(35)")]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TPPercent", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> TPPercent
		{
			get
			{
				return this._TPPercent;
			}
			set
			{
				if ((this._TPPercent != value))
				{
					this.OnTPPercentChanging(value);
					this.SendPropertyChanging();
					this._TPPercent = value;
					this.SendPropertyChanged("TPPercent");
					this.OnTPPercentChanged();
				}
			}
		}
		
		[Column(Storage="_CustCode", DbType="VarChar(50)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					this.OnCustCodeChanging(value);
					this.SendPropertyChanging();
					this._CustCode = value;
					this.SendPropertyChanged("CustCode");
					this.OnCustCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DeviceName", DbType="VarChar(50)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[Column(Storage="_Merged", DbType="Bit NOT NULL")]
		public bool Merged
		{
			get
			{
				return this._Merged;
			}
			set
			{
				if ((this._Merged != value))
				{
					this.OnMergedChanging(value);
					this.SendPropertyChanging();
					this._Merged = value;
					this.SendPropertyChanged("Merged");
					this.OnMergedChanged();
				}
			}
		}
		
		[Column(Storage="_FromCompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> FromCompanyNum
		{
			get
			{
				return this._FromCompanyNum;
			}
			set
			{
				if ((this._FromCompanyNum != value))
				{
					this.OnFromCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._FromCompanyNum = value;
					this.SendPropertyChanged("FromCompanyNum");
					this.OnFromCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					if (this._REVENUE_CATEGORIES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevenueCategoryChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategory = value;
					this.SendPropertyChanged("RevenueCategory");
					this.OnRevenueCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_OldContractID", DbType="Int")]
		public System.Nullable<int> OldContractID
		{
			get
			{
				return this._OldContractID;
			}
			set
			{
				if ((this._OldContractID != value))
				{
					this.OnOldContractIDChanging(value);
					this.SendPropertyChanging();
					this._OldContractID = value;
					this.SendPropertyChanged("OldContractID");
					this.OnOldContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_OriginalStartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OriginalStartDate
		{
			get
			{
				return this._OriginalStartDate;
			}
			set
			{
				if ((this._OriginalStartDate != value))
				{
					this.OnOriginalStartDateChanging(value);
					this.SendPropertyChanging();
					this._OriginalStartDate = value;
					this.SendPropertyChanged("OriginalStartDate");
					this.OnOriginalStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_ExtraMerge", DbType="Bit NOT NULL")]
		public bool ExtraMerge
		{
			get
			{
				return this._ExtraMerge;
			}
			set
			{
				if ((this._ExtraMerge != value))
				{
					this.OnExtraMergeChanging(value);
					this.SendPropertyChanging();
					this._ExtraMerge = value;
					this.SendPropertyChanged("ExtraMerge");
					this.OnExtraMergeChanged();
				}
			}
		}
		
		[Column(Name="3PSpecialConsiderations", Storage="__3PSpecialConsiderations", DbType="VarChar(300)")]
		public string _3PSpecialConsiderations
		{
			get
			{
				return this.@__3PSpecialConsiderations;
			}
			set
			{
				if ((this.@__3PSpecialConsiderations != value))
				{
					this.On_3PSpecialConsiderationsChanging(value);
					this.SendPropertyChanging();
					this.@__3PSpecialConsiderations = value;
					this.SendPropertyChanged("_3PSpecialConsiderations");
					this.On_3PSpecialConsiderationsChanged();
				}
			}
		}
		
		[Column(Storage="_SalesRep", DbType="VarChar(25)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					if (this._SalesRepEMPLOYEES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesRepChanging(value);
					this.SendPropertyChanging();
					this._SalesRep = value;
					this.SendPropertyChanged("SalesRep");
					this.OnSalesRepChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionSet", DbType="Money")]
		public System.Nullable<decimal> CommissionSet
		{
			get
			{
				return this._CommissionSet;
			}
			set
			{
				if ((this._CommissionSet != value))
				{
					this.OnCommissionSetChanging(value);
					this.SendPropertyChanging();
					this._CommissionSet = value;
					this.SendPropertyChanged("CommissionSet");
					this.OnCommissionSetChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionPaid", DbType="Money")]
		public System.Nullable<decimal> CommissionPaid
		{
			get
			{
				return this._CommissionPaid;
			}
			set
			{
				if ((this._CommissionPaid != value))
				{
					this.OnCommissionPaidChanging(value);
					this.SendPropertyChanging();
					this._CommissionPaid = value;
					this.SendPropertyChanged("CommissionPaid");
					this.OnCommissionPaidChanged();
				}
			}
		}
		
		[Column(Storage="_LastChangeType", DbType="Int")]
		public System.Nullable<int> LastChangeType
		{
			get
			{
				return this._LastChangeType;
			}
			set
			{
				if ((this._LastChangeType != value))
				{
					if (this._CTRAC_CHANGE_TYPES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastChangeTypeChanging(value);
					this.SendPropertyChanging();
					this._LastChangeType = value;
					this.SendPropertyChanged("LastChangeType");
					this.OnLastChangeTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ClaimableCommission", DbType="Int NOT NULL")]
		public int ClaimableCommission
		{
			get
			{
				return this._ClaimableCommission;
			}
			set
			{
				if ((this._ClaimableCommission != value))
				{
					this.OnClaimableCommissionChanging(value);
					this.SendPropertyChanging();
					this._ClaimableCommission = value;
					this.SendPropertyChanged("ClaimableCommission");
					this.OnClaimableCommissionChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionCancelled", DbType="Money")]
		public System.Nullable<decimal> CommissionCancelled
		{
			get
			{
				return this._CommissionCancelled;
			}
			set
			{
				if ((this._CommissionCancelled != value))
				{
					this.OnCommissionCancelledChanging(value);
					this.SendPropertyChanging();
					this._CommissionCancelled = value;
					this.SendPropertyChanged("CommissionCancelled");
					this.OnCommissionCancelledChanged();
				}
			}
		}
		
		[Column(Storage="_LeadSalesRep", DbType="VarChar(25)")]
		public string LeadSalesRep
		{
			get
			{
				return this._LeadSalesRep;
			}
			set
			{
				if ((this._LeadSalesRep != value))
				{
					if (this._LeadSalesRepEMPLOYEES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeadSalesRepChanging(value);
					this.SendPropertyChanging();
					this._LeadSalesRep = value;
					this.SendPropertyChanged("LeadSalesRep");
					this.OnLeadSalesRepChanged();
				}
			}
		}
		
		[Column(Storage="_BSGAligned", DbType="Int NOT NULL")]
		public int BSGAligned
		{
			get
			{
				return this._BSGAligned;
			}
			set
			{
				if ((this._BSGAligned != value))
				{
					this.OnBSGAlignedChanging(value);
					this.SendPropertyChanging();
					this._BSGAligned = value;
					this.SendPropertyChanged("BSGAligned");
					this.OnBSGAlignedChanged();
				}
			}
		}
		
		[Column(Storage="_Import", DbType="Int")]
		public System.Nullable<int> Import
		{
			get
			{
				return this._Import;
			}
			set
			{
				if ((this._Import != value))
				{
					if (this._CTRAC_ITEM_IMPORT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImportChanging(value);
					this.SendPropertyChanging();
					this._Import = value;
					this.SendPropertyChanged("Import");
					this.OnImportChanged();
				}
			}
		}
		
		[Column(Storage="_ConsignmentStock", DbType="Int NOT NULL")]
		public int ConsignmentStock
		{
			get
			{
				return this._ConsignmentStock;
			}
			set
			{
				if ((this._ConsignmentStock != value))
				{
					this.OnConsignmentStockChanging(value);
					this.SendPropertyChanging();
					this._ConsignmentStock = value;
					this.SendPropertyChanged("ConsignmentStock");
					this.OnConsignmentStockChanged();
				}
			}
		}
		
		[Column(Storage="_SpaID", DbType="Int")]
		public System.Nullable<int> SpaID
		{
			get
			{
				return this._SpaID;
			}
			set
			{
				if ((this._SpaID != value))
				{
					this.OnSpaIDChanging(value);
					this.SendPropertyChanging();
					this._SpaID = value;
					this.SendPropertyChanged("SpaID");
					this.OnSpaIDChanged();
				}
			}
		}
		
		[Column(Storage="_AddDelID", DbType="Int")]
		public System.Nullable<int> AddDelID
		{
			get
			{
				return this._AddDelID;
			}
			set
			{
				if ((this._AddDelID != value))
				{
					this.OnAddDelIDChanging(value);
					this.SendPropertyChanging();
					this._AddDelID = value;
					this.SendPropertyChanged("AddDelID");
					this.OnAddDelIDChanged();
				}
			}
		}
		
		[Column(Storage="_LastBSGDeliveryStatus", DbType="Int")]
		public System.Nullable<int> LastBSGDeliveryStatus
		{
			get
			{
				return this._LastBSGDeliveryStatus;
			}
			set
			{
				if ((this._LastBSGDeliveryStatus != value))
				{
					if (this._CTRAC_BSG_DELIVERY_STATUS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastBSGDeliveryStatusChanging(value);
					this.SendPropertyChanging();
					this._LastBSGDeliveryStatus = value;
					this.SendPropertyChanged("LastBSGDeliveryStatus");
					this.OnLastBSGDeliveryStatusChanged();
				}
			}
		}
		
		[Column(Storage="_BSGDescription", DbType="VarChar(50)")]
		public string BSGDescription
		{
			get
			{
				return this._BSGDescription;
			}
			set
			{
				if ((this._BSGDescription != value))
				{
					this.OnBSGDescriptionChanging(value);
					this.SendPropertyChanging();
					this._BSGDescription = value;
					this.SendPropertyChanged("BSGDescription");
					this.OnBSGDescriptionChanged();
				}
			}
		}
		
		[Column(Name="3PAgreement", Storage="__3PAgreement", DbType="Int")]
		public System.Nullable<int> _3PAgreement
		{
			get
			{
				return this.@__3PAgreement;
			}
			set
			{
				if ((this.@__3PAgreement != value))
				{
					this.On_3PAgreementChanging(value);
					this.SendPropertyChanging();
					this.@__3PAgreement = value;
					this.SendPropertyChanged("_3PAgreement");
					this.On_3PAgreementChanged();
				}
			}
		}
		
		[Column(Name="3PInvoiceStartDate", Storage="__3PInvoiceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> _3PInvoiceStartDate
		{
			get
			{
				return this.@__3PInvoiceStartDate;
			}
			set
			{
				if ((this.@__3PInvoiceStartDate != value))
				{
					this.On_3PInvoiceStartDateChanging(value);
					this.SendPropertyChanging();
					this.@__3PInvoiceStartDate = value;
					this.SendPropertyChanged("_3PInvoiceStartDate");
					this.On_3PInvoiceStartDateChanged();
				}
			}
		}
		
		[Column(Name="3PInvoiceEndDate", Storage="__3PInvoiceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> _3PInvoiceEndDate
		{
			get
			{
				return this.@__3PInvoiceEndDate;
			}
			set
			{
				if ((this.@__3PInvoiceEndDate != value))
				{
					this.On_3PInvoiceEndDateChanging(value);
					this.SendPropertyChanging();
					this.@__3PInvoiceEndDate = value;
					this.SendPropertyChanged("_3PInvoiceEndDate");
					this.On_3PInvoiceEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_PartsShareLocation", DbType="Int")]
		public System.Nullable<int> PartsShareLocation
		{
			get
			{
				return this._PartsShareLocation;
			}
			set
			{
				if ((this._PartsShareLocation != value))
				{
					if (this._LOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartsShareLocationChanging(value);
					this.SendPropertyChanging();
					this._PartsShareLocation = value;
					this.SendPropertyChanged("PartsShareLocation");
					this.OnPartsShareLocationChanged();
				}
			}
		}
		
		[Association(Name="FK__CTRAC_ITE__3PAgr__1475118B", Storage="_DEBTORS_3P_AGREEMENTS", ThisKey="_3PAgreement", OtherKey="AgreementID", IsForeignKey=true)]
		public DEBTORS_3P_AGREEMENTS DEBTORS_3P_AGREEMENTS
		{
			get
			{
				return this._DEBTORS_3P_AGREEMENTS.Entity;
			}
			set
			{
				DEBTORS_3P_AGREEMENTS previousValue = this._DEBTORS_3P_AGREEMENTS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS_3P_AGREEMENTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS_3P_AGREEMENTS.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._DEBTORS_3P_AGREEMENTS.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this.@__3PAgreement = value.AgreementID;
					}
					else
					{
						this.@__3PAgreement = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEBTORS_3P_AGREEMENTS");
				}
			}
		}
		
		[Association(Name="FK__CTRAC_ITE__Impor__1C8047A7", Storage="_CTRAC_ITEM_IMPORT", ThisKey="Import", OtherKey="ImportID", IsForeignKey=true)]
		public CTRAC_ITEM_IMPORT CTRAC_ITEM_IMPORT
		{
			get
			{
				return this._CTRAC_ITEM_IMPORT.Entity;
			}
			set
			{
				CTRAC_ITEM_IMPORT previousValue = this._CTRAC_ITEM_IMPORT.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_ITEM_IMPORT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_ITEM_IMPORT.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._CTRAC_ITEM_IMPORT.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this._Import = value.ImportID;
					}
					else
					{
						this._Import = default(Nullable<int>);
					}
					this.SendPropertyChanged("CTRAC_ITEM_IMPORT");
				}
			}
		}
		
		[Association(Name="FK__CTRAC_ITE__LastB__548F96A0", Storage="_CTRAC_BSG_DELIVERY_STATUS", ThisKey="LastBSGDeliveryStatus", OtherKey="DeliveryStatusID", IsForeignKey=true)]
		public CTRAC_BSG_DELIVERY_STATUS CTRAC_BSG_DELIVERY_STATUS
		{
			get
			{
				return this._CTRAC_BSG_DELIVERY_STATUS.Entity;
			}
			set
			{
				CTRAC_BSG_DELIVERY_STATUS previousValue = this._CTRAC_BSG_DELIVERY_STATUS.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_BSG_DELIVERY_STATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_BSG_DELIVERY_STATUS.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._CTRAC_BSG_DELIVERY_STATUS.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this._LastBSGDeliveryStatus = value.DeliveryStatusID;
					}
					else
					{
						this._LastBSGDeliveryStatus = default(Nullable<int>);
					}
					this.SendPropertyChanged("CTRAC_BSG_DELIVERY_STATUS");
				}
			}
		}
		
		[Association(Name="FK__CTRAC_ITE__LastC__14200BD0", Storage="_CTRAC_CHANGE_TYPES", ThisKey="LastChangeType", OtherKey="ChangeTypeID", IsForeignKey=true)]
		public CTRAC_CHANGE_TYPES CTRAC_CHANGE_TYPES
		{
			get
			{
				return this._CTRAC_CHANGE_TYPES.Entity;
			}
			set
			{
				CTRAC_CHANGE_TYPES previousValue = this._CTRAC_CHANGE_TYPES.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_CHANGE_TYPES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_CHANGE_TYPES.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._CTRAC_CHANGE_TYPES.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this._LastChangeType = value.ChangeTypeID;
					}
					else
					{
						this._LastChangeType = default(Nullable<int>);
					}
					this.SendPropertyChanged("CTRAC_CHANGE_TYPES");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_CTRAC_HEADER", Storage="_CTRAC_HEADER", ThisKey="ContractID", OtherKey="ContractId", IsForeignKey=true, DeleteOnNull=true)]
		public CTRAC_HEADER CTRAC_HEADER
		{
			get
			{
				return this._CTRAC_HEADER.Entity;
			}
			set
			{
				CTRAC_HEADER previousValue = this._CTRAC_HEADER.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_HEADER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_HEADER.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._CTRAC_HEADER.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this._ContractID = value.ContractId;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("CTRAC_HEADER");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_DEBTORS", Storage="_DEBTORS", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_EMPLOYEES", Storage="_EMPLOYEES", ThisKey="Engineer", OtherKey="EmployeeID", IsForeignKey=true)]
		public EMPLOYEES EMPLOYEES
		{
			get
			{
				return this._EMPLOYEES.Entity;
			}
			set
			{
				EMPLOYEES previousValue = this._EMPLOYEES.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEES.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._EMPLOYEES.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this._Engineer = value.EmployeeID;
					}
					else
					{
						this._Engineer = default(string);
					}
					this.SendPropertyChanged("EMPLOYEES");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_EMPLOYEES_LEADSALESREP", Storage="_LeadSalesRepEMPLOYEES", ThisKey="LeadSalesRep", OtherKey="EmployeeID", IsForeignKey=true)]
		public EMPLOYEES LeadSalesRepEMPLOYEES
		{
			get
			{
				return this._LeadSalesRepEMPLOYEES.Entity;
			}
			set
			{
				EMPLOYEES previousValue = this._LeadSalesRepEMPLOYEES.Entity;
				if (((previousValue != value) 
							|| (this._LeadSalesRepEMPLOYEES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LeadSalesRepEMPLOYEES.Entity = null;
						previousValue.Employee.Remove(this);
					}
					this._LeadSalesRepEMPLOYEES.Entity = value;
					if ((value != null))
					{
						value.Employee.Add(this);
						this._LeadSalesRep = value.EmployeeID;
					}
					else
					{
						this._LeadSalesRep = default(string);
					}
					this.SendPropertyChanged("LeadSalesRepEMPLOYEES");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_EMPLOYEES_SALESREP", Storage="_SalesRepEMPLOYEES", ThisKey="SalesRep", OtherKey="EmployeeID", IsForeignKey=true)]
		public EMPLOYEES SalesRepEMPLOYEES
		{
			get
			{
				return this._SalesRepEMPLOYEES.Entity;
			}
			set
			{
				EMPLOYEES previousValue = this._SalesRepEMPLOYEES.Entity;
				if (((previousValue != value) 
							|| (this._SalesRepEMPLOYEES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesRepEMPLOYEES.Entity = null;
						previousValue.CTRAC_ITEM_EMPLOYEES_SALESREP.Remove(this);
					}
					this._SalesRepEMPLOYEES.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM_EMPLOYEES_SALESREP.Add(this);
						this._SalesRep = value.EmployeeID;
					}
					else
					{
						this._SalesRep = default(string);
					}
					this.SendPropertyChanged("SalesRepEMPLOYEES");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_INT_RESPONSE_TIME", Storage="_INT_RESPONSE_TIME", ThisKey="ResponseTime", OtherKey="ResponseTimeId", IsForeignKey=true)]
		public INT_RESPONSE_TIME INT_RESPONSE_TIME
		{
			get
			{
				return this._INT_RESPONSE_TIME.Entity;
			}
			set
			{
				INT_RESPONSE_TIME previousValue = this._INT_RESPONSE_TIME.Entity;
				if (((previousValue != value) 
							|| (this._INT_RESPONSE_TIME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_RESPONSE_TIME.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._INT_RESPONSE_TIME.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this._ResponseTime = value.ResponseTimeId;
					}
					else
					{
						this._ResponseTime = default(Nullable<byte>);
					}
					this.SendPropertyChanged("INT_RESPONSE_TIME");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_INT_SERVICE_ID", Storage="_INT_SERVICE_ID", ThisKey="ServiceID", OtherKey="ServiceId", IsForeignKey=true)]
		public INT_SERVICE_ID INT_SERVICE_ID
		{
			get
			{
				return this._INT_SERVICE_ID.Entity;
			}
			set
			{
				INT_SERVICE_ID previousValue = this._INT_SERVICE_ID.Entity;
				if (((previousValue != value) 
							|| (this._INT_SERVICE_ID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_SERVICE_ID.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._INT_SERVICE_ID.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this._ServiceID = value.ServiceId;
					}
					else
					{
						this._ServiceID = default(int);
					}
					this.SendPropertyChanged("INT_SERVICE_ID");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_INT_SERVICE_LEVEL", Storage="_INT_SERVICE_LEVEL", ThisKey="ServiceLevelID", OtherKey="ServiceLevelId", IsForeignKey=true)]
		public INT_SERVICE_LEVEL INT_SERVICE_LEVEL
		{
			get
			{
				return this._INT_SERVICE_LEVEL.Entity;
			}
			set
			{
				INT_SERVICE_LEVEL previousValue = this._INT_SERVICE_LEVEL.Entity;
				if (((previousValue != value) 
							|| (this._INT_SERVICE_LEVEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_SERVICE_LEVEL.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._INT_SERVICE_LEVEL.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this._ServiceLevelID = value.ServiceLevelId;
					}
					else
					{
						this._ServiceLevelID = default(Nullable<byte>);
					}
					this.SendPropertyChanged("INT_SERVICE_LEVEL");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_PARTS_SHARE_LOCATIONS", Storage="_LOCATIONS", ThisKey="PartsShareLocation", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LOCATIONS
		{
			get
			{
				return this._LOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._LOCATIONS.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this._PartsShareLocation = value.LocationID;
					}
					else
					{
						this._PartsShareLocation = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_REVENUE_CATEGORIES", Storage="_REVENUE_CATEGORIES", ThisKey="RevenueCategory", OtherKey="RevenueCategoryId", IsForeignKey=true)]
		public REVENUE_CATEGORIES REVENUE_CATEGORIES
		{
			get
			{
				return this._REVENUE_CATEGORIES.Entity;
			}
			set
			{
				REVENUE_CATEGORIES previousValue = this._REVENUE_CATEGORIES.Entity;
				if (((previousValue != value) 
							|| (this._REVENUE_CATEGORIES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REVENUE_CATEGORIES.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._REVENUE_CATEGORIES.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this._RevenueCategory = value.RevenueCategoryId;
					}
					else
					{
						this._RevenueCategory = default(Nullable<int>);
					}
					this.SendPropertyChanged("REVENUE_CATEGORIES");
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.CTRAC_ITEM.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_3P_INVOICES_ITEMS_CTRAC_ITEM", Storage="_DEBTORS_3P_INVOICES_ITEMS", ThisKey="ContractItemID", OtherKey="ContractItemID", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_3P_INVOICES_ITEMS> DEBTORS_3P_INVOICES_ITEMS
		{
			get
			{
				return this._DEBTORS_3P_INVOICES_ITEMS;
			}
			set
			{
				this._DEBTORS_3P_INVOICES_ITEMS.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_CONTROL_CTRAC_ITEM", Storage="_INT_INV_BATCH_CONTROL", ThisKey="ContractItemID", OtherKey="ContractItemID", DeleteRule="NO ACTION")]
		public EntitySet<INT_INV_BATCH_CONTROL> INT_INV_BATCH_CONTROL
		{
			get
			{
				return this._INT_INV_BATCH_CONTROL;
			}
			set
			{
				this._INT_INV_BATCH_CONTROL.Assign(value);
			}
		}
		
		[Association(Name="FK_SALEITEM_CTRAC_ITEM", Storage="_SALEITEM", ThisKey="ContractItemID", OtherKey="INT_ContractItemID", DeleteRule="NO ACTION")]
		public EntitySet<SALEITEM> SALEITEM
		{
			get
			{
				return this._SALEITEM;
			}
			set
			{
				this._SALEITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_DUE_ITEM_CTRAC_ITEM", Storage="_SALES_COMMISSION_DUE_ITEM", ThisKey="ContractItemID", OtherKey="ContractItemID", DeleteRule="NO ACTION")]
		public EntitySet<SALES_COMMISSION_DUE_ITEM> SALES_COMMISSION_DUE_ITEM
		{
			get
			{
				return this._SALES_COMMISSION_DUE_ITEM;
			}
			set
			{
				this._SALES_COMMISSION_DUE_ITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEBTORS_3P_INVOICES_ITEMS(DEBTORS_3P_INVOICES_ITEMS entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_ITEM = this;
		}
		
		private void detach_DEBTORS_3P_INVOICES_ITEMS(DEBTORS_3P_INVOICES_ITEMS entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_ITEM = null;
		}
		
		private void attach_INT_INV_BATCH_CONTROL(INT_INV_BATCH_CONTROL entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_ITEM = this;
		}
		
		private void detach_INT_INV_BATCH_CONTROL(INT_INV_BATCH_CONTROL entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_ITEM = null;
		}
		
		private void attach_SALEITEM(SALEITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_ITEM = this;
		}
		
		private void detach_SALEITEM(SALEITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_ITEM = null;
		}
		
		private void attach_SALES_COMMISSION_DUE_ITEM(SALES_COMMISSION_DUE_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_ITEM = this;
		}
		
		private void detach_SALES_COMMISSION_DUE_ITEM(SALES_COMMISSION_DUE_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_ITEM = null;
		}
	}
	
	[Table(Name="dbo.ctrac_item_backup")]
	public partial class Ctrac_item_backup
	{
		
		private int _AccountID;
		
		private int _ContractItemID;
		
		private int _ContractID;
		
		private string _ProdCode;
		
		private short _Quantity;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private System.Nullable<int> _ServiceID;
		
		private System.Nullable<byte> _ServiceLevelID;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Engineer;
		
		private string _SerialNo;
		
		private System.Nullable<byte> _ResponseTime;
		
		private string _CoverageLimits;
		
		private System.Nullable<decimal> _OtherPrice;
		
		private System.Nullable<bool> _Variation;
		
		private System.Nullable<System.DateTime> _LastInvToDate;
		
		private string _DisplayCode;
		
		private System.Nullable<decimal> _TPPercent;
		
		private string _CustCode;
		
		private string _DeviceName;
		
		private bool _Merged;
		
		private System.Nullable<byte> _FromCompanyNum;
		
		private System.Nullable<int> _RevenueCategory;
		
		private System.Nullable<int> _OldContractID;
		
		private System.Nullable<System.DateTime> _OriginalStartDate;
		
		private bool _ExtraMerge;
		
		private string @__3PSpecialConsiderations;
		
		private string _SalesRep;
		
		private System.Nullable<decimal> _CommissionSet;
		
		private System.Nullable<decimal> _CommissionPaid;
		
		private System.Nullable<int> _LastChangeType;
		
		private int _ClaimableCommission;
		
		private System.Nullable<decimal> _CommissionCancelled;
		
		private string _LeadSalesRep;
		
		private int _BSGAligned;
		
		private System.Nullable<int> _Import;
		
		private int _ConsignmentStock;
		
		private System.Nullable<int> _SpaID;
		
		private System.Nullable<int> _AddDelID;
		
		private System.Nullable<int> _LastBSGDeliveryStatus;
		
		public Ctrac_item_backup()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Int NOT NULL")]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_ContractItemID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this._ContractItemID = value;
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int NOT NULL")]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this._ContractID = value;
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Storage="_Quantity", DbType="SmallInt NOT NULL")]
		public short Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_ExpiryDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this._ExpiryDate = value;
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="Int")]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this._ServiceID = value;
				}
			}
		}
		
		[Column(Storage="_ServiceLevelID", DbType="TinyInt")]
		public System.Nullable<byte> ServiceLevelID
		{
			get
			{
				return this._ServiceLevelID;
			}
			set
			{
				if ((this._ServiceLevelID != value))
				{
					this._ServiceLevelID = value;
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Storage="_Engineer", DbType="VarChar(25)")]
		public string Engineer
		{
			get
			{
				return this._Engineer;
			}
			set
			{
				if ((this._Engineer != value))
				{
					this._Engineer = value;
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="VarChar(64)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this._SerialNo = value;
				}
			}
		}
		
		[Column(Storage="_ResponseTime", DbType="TinyInt")]
		public System.Nullable<byte> ResponseTime
		{
			get
			{
				return this._ResponseTime;
			}
			set
			{
				if ((this._ResponseTime != value))
				{
					this._ResponseTime = value;
				}
			}
		}
		
		[Column(Storage="_CoverageLimits", DbType="VarChar(32)")]
		public string CoverageLimits
		{
			get
			{
				return this._CoverageLimits;
			}
			set
			{
				if ((this._CoverageLimits != value))
				{
					this._CoverageLimits = value;
				}
			}
		}
		
		[Column(Storage="_OtherPrice", DbType="Money")]
		public System.Nullable<decimal> OtherPrice
		{
			get
			{
				return this._OtherPrice;
			}
			set
			{
				if ((this._OtherPrice != value))
				{
					this._OtherPrice = value;
				}
			}
		}
		
		[Column(Storage="_Variation", DbType="Bit")]
		public System.Nullable<bool> Variation
		{
			get
			{
				return this._Variation;
			}
			set
			{
				if ((this._Variation != value))
				{
					this._Variation = value;
				}
			}
		}
		
		[Column(Storage="_LastInvToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastInvToDate
		{
			get
			{
				return this._LastInvToDate;
			}
			set
			{
				if ((this._LastInvToDate != value))
				{
					this._LastInvToDate = value;
				}
			}
		}
		
		[Column(Storage="_DisplayCode", DbType="VarChar(35)")]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this._DisplayCode = value;
				}
			}
		}
		
		[Column(Storage="_TPPercent", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> TPPercent
		{
			get
			{
				return this._TPPercent;
			}
			set
			{
				if ((this._TPPercent != value))
				{
					this._TPPercent = value;
				}
			}
		}
		
		[Column(Storage="_CustCode", DbType="VarChar(50)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					this._CustCode = value;
				}
			}
		}
		
		[Column(Storage="_DeviceName", DbType="VarChar(40)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this._DeviceName = value;
				}
			}
		}
		
		[Column(Storage="_Merged", DbType="Bit NOT NULL")]
		public bool Merged
		{
			get
			{
				return this._Merged;
			}
			set
			{
				if ((this._Merged != value))
				{
					this._Merged = value;
				}
			}
		}
		
		[Column(Storage="_FromCompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> FromCompanyNum
		{
			get
			{
				return this._FromCompanyNum;
			}
			set
			{
				if ((this._FromCompanyNum != value))
				{
					this._FromCompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this._RevenueCategory = value;
				}
			}
		}
		
		[Column(Storage="_OldContractID", DbType="Int")]
		public System.Nullable<int> OldContractID
		{
			get
			{
				return this._OldContractID;
			}
			set
			{
				if ((this._OldContractID != value))
				{
					this._OldContractID = value;
				}
			}
		}
		
		[Column(Storage="_OriginalStartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OriginalStartDate
		{
			get
			{
				return this._OriginalStartDate;
			}
			set
			{
				if ((this._OriginalStartDate != value))
				{
					this._OriginalStartDate = value;
				}
			}
		}
		
		[Column(Storage="_ExtraMerge", DbType="Bit NOT NULL")]
		public bool ExtraMerge
		{
			get
			{
				return this._ExtraMerge;
			}
			set
			{
				if ((this._ExtraMerge != value))
				{
					this._ExtraMerge = value;
				}
			}
		}
		
		[Column(Name="3PSpecialConsiderations", Storage="__3PSpecialConsiderations", DbType="VarChar(300)")]
		public string _3PSpecialConsiderations
		{
			get
			{
				return this.@__3PSpecialConsiderations;
			}
			set
			{
				if ((this.@__3PSpecialConsiderations != value))
				{
					this.@__3PSpecialConsiderations = value;
				}
			}
		}
		
		[Column(Storage="_SalesRep", DbType="VarChar(25)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					this._SalesRep = value;
				}
			}
		}
		
		[Column(Storage="_CommissionSet", DbType="Money")]
		public System.Nullable<decimal> CommissionSet
		{
			get
			{
				return this._CommissionSet;
			}
			set
			{
				if ((this._CommissionSet != value))
				{
					this._CommissionSet = value;
				}
			}
		}
		
		[Column(Storage="_CommissionPaid", DbType="Money")]
		public System.Nullable<decimal> CommissionPaid
		{
			get
			{
				return this._CommissionPaid;
			}
			set
			{
				if ((this._CommissionPaid != value))
				{
					this._CommissionPaid = value;
				}
			}
		}
		
		[Column(Storage="_LastChangeType", DbType="Int")]
		public System.Nullable<int> LastChangeType
		{
			get
			{
				return this._LastChangeType;
			}
			set
			{
				if ((this._LastChangeType != value))
				{
					this._LastChangeType = value;
				}
			}
		}
		
		[Column(Storage="_ClaimableCommission", DbType="Int NOT NULL")]
		public int ClaimableCommission
		{
			get
			{
				return this._ClaimableCommission;
			}
			set
			{
				if ((this._ClaimableCommission != value))
				{
					this._ClaimableCommission = value;
				}
			}
		}
		
		[Column(Storage="_CommissionCancelled", DbType="Money")]
		public System.Nullable<decimal> CommissionCancelled
		{
			get
			{
				return this._CommissionCancelled;
			}
			set
			{
				if ((this._CommissionCancelled != value))
				{
					this._CommissionCancelled = value;
				}
			}
		}
		
		[Column(Storage="_LeadSalesRep", DbType="VarChar(25)")]
		public string LeadSalesRep
		{
			get
			{
				return this._LeadSalesRep;
			}
			set
			{
				if ((this._LeadSalesRep != value))
				{
					this._LeadSalesRep = value;
				}
			}
		}
		
		[Column(Storage="_BSGAligned", DbType="Int NOT NULL")]
		public int BSGAligned
		{
			get
			{
				return this._BSGAligned;
			}
			set
			{
				if ((this._BSGAligned != value))
				{
					this._BSGAligned = value;
				}
			}
		}
		
		[Column(Storage="_Import", DbType="Int")]
		public System.Nullable<int> Import
		{
			get
			{
				return this._Import;
			}
			set
			{
				if ((this._Import != value))
				{
					this._Import = value;
				}
			}
		}
		
		[Column(Storage="_ConsignmentStock", DbType="Int NOT NULL")]
		public int ConsignmentStock
		{
			get
			{
				return this._ConsignmentStock;
			}
			set
			{
				if ((this._ConsignmentStock != value))
				{
					this._ConsignmentStock = value;
				}
			}
		}
		
		[Column(Storage="_SpaID", DbType="Int")]
		public System.Nullable<int> SpaID
		{
			get
			{
				return this._SpaID;
			}
			set
			{
				if ((this._SpaID != value))
				{
					this._SpaID = value;
				}
			}
		}
		
		[Column(Storage="_AddDelID", DbType="Int")]
		public System.Nullable<int> AddDelID
		{
			get
			{
				return this._AddDelID;
			}
			set
			{
				if ((this._AddDelID != value))
				{
					this._AddDelID = value;
				}
			}
		}
		
		[Column(Storage="_LastBSGDeliveryStatus", DbType="Int")]
		public System.Nullable<int> LastBSGDeliveryStatus
		{
			get
			{
				return this._LastBSGDeliveryStatus;
			}
			set
			{
				if ((this._LastBSGDeliveryStatus != value))
				{
					this._LastBSGDeliveryStatus = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.CTRAC_ITEM_CARBON_TAX_RAW")]
	public partial class CTRAC_ITEM_CARBON_TAX_RAW : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChargeId;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<int> _ContractID;
		
		private System.Nullable<decimal> _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChargeIdChanging(int value);
    partial void OnChargeIdChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnContractIDChanging(System.Nullable<int> value);
    partial void OnContractIDChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    #endregion
		
		public CTRAC_ITEM_CARBON_TAX_RAW()
		{
			OnCreated();
		}
		
		[Column(Storage="_ChargeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChargeId
		{
			get
			{
				return this._ChargeId;
			}
			set
			{
				if ((this._ChargeId != value))
				{
					this.OnChargeIdChanging(value);
					this.SendPropertyChanging();
					this._ChargeId = value;
					this.SendPropertyChanged("ChargeId");
					this.OnChargeIdChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CTRAC_ITEM_CARBON_TAX_RAW_ERRORS")]
	public partial class CTRAC_ITEM_CARBON_TAX_RAW_ERRORS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ErrorId;
		
		private string _ErrorDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorIdChanging(int value);
    partial void OnErrorIdChanged();
    partial void OnErrorDescriptionChanging(string value);
    partial void OnErrorDescriptionChanged();
    #endregion
		
		public CTRAC_ITEM_CARBON_TAX_RAW_ERRORS()
		{
			OnCreated();
		}
		
		[Column(Storage="_ErrorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ErrorId
		{
			get
			{
				return this._ErrorId;
			}
			set
			{
				if ((this._ErrorId != value))
				{
					this.OnErrorIdChanging(value);
					this.SendPropertyChanging();
					this._ErrorId = value;
					this.SendPropertyChanged("ErrorId");
					this.OnErrorIdChanged();
				}
			}
		}
		
		[Column(Storage="_ErrorDescription", DbType="VarChar(200)")]
		public string ErrorDescription
		{
			get
			{
				return this._ErrorDescription;
			}
			set
			{
				if ((this._ErrorDescription != value))
				{
					this.OnErrorDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ErrorDescription = value;
					this.SendPropertyChanged("ErrorDescription");
					this.OnErrorDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CTRAC_ITEM_IMPORT")]
	public partial class CTRAC_ITEM_IMPORT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImportID;
		
		private System.Nullable<System.DateTime> _ImportDate;
		
		private string _ImportedBy;
		
		private EntitySet<CTRAC_ITEM_IMPORT_ITEM_EXCEPTION> _CTRAC_ITEM_IMPORT_ITEM_EXCEPTION;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntityRef<EMPLOYEES> _EMPLOYEES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImportIDChanging(int value);
    partial void OnImportIDChanged();
    partial void OnImportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportDateChanged();
    partial void OnImportedByChanging(string value);
    partial void OnImportedByChanged();
    #endregion
		
		public CTRAC_ITEM_IMPORT()
		{
			this._CTRAC_ITEM_IMPORT_ITEM_EXCEPTION = new EntitySet<CTRAC_ITEM_IMPORT_ITEM_EXCEPTION>(new Action<CTRAC_ITEM_IMPORT_ITEM_EXCEPTION>(this.attach_CTRAC_ITEM_IMPORT_ITEM_EXCEPTION), new Action<CTRAC_ITEM_IMPORT_ITEM_EXCEPTION>(this.detach_CTRAC_ITEM_IMPORT_ITEM_EXCEPTION));
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			this._EMPLOYEES = default(EntityRef<EMPLOYEES>);
			OnCreated();
		}
		
		[Column(Storage="_ImportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImportID
		{
			get
			{
				return this._ImportID;
			}
			set
			{
				if ((this._ImportID != value))
				{
					this.OnImportIDChanging(value);
					this.SendPropertyChanging();
					this._ImportID = value;
					this.SendPropertyChanged("ImportID");
					this.OnImportIDChanged();
				}
			}
		}
		
		[Column(Storage="_ImportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportDate
		{
			get
			{
				return this._ImportDate;
			}
			set
			{
				if ((this._ImportDate != value))
				{
					this.OnImportDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDate = value;
					this.SendPropertyChanged("ImportDate");
					this.OnImportDateChanged();
				}
			}
		}
		
		[Column(Storage="_ImportedBy", DbType="VarChar(25)")]
		public string ImportedBy
		{
			get
			{
				return this._ImportedBy;
			}
			set
			{
				if ((this._ImportedBy != value))
				{
					if (this._EMPLOYEES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImportedByChanging(value);
					this.SendPropertyChanging();
					this._ImportedBy = value;
					this.SendPropertyChanged("ImportedBy");
					this.OnImportedByChanged();
				}
			}
		}
		
		[Association(Name="FK__CTRAC_ITE__Impor__1B8C236E", Storage="_CTRAC_ITEM_IMPORT_ITEM_EXCEPTION", ThisKey="ImportID", OtherKey="Import", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM_IMPORT_ITEM_EXCEPTION> CTRAC_ITEM_IMPORT_ITEM_EXCEPTION
		{
			get
			{
				return this._CTRAC_ITEM_IMPORT_ITEM_EXCEPTION;
			}
			set
			{
				this._CTRAC_ITEM_IMPORT_ITEM_EXCEPTION.Assign(value);
			}
		}
		
		[Association(Name="FK__CTRAC_ITE__Impor__1C8047A7", Storage="_CTRAC_ITEM", ThisKey="ImportID", OtherKey="Import", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_IMPORT_EMPLOYEES", Storage="_EMPLOYEES", ThisKey="ImportedBy", OtherKey="EmployeeID", IsForeignKey=true)]
		public EMPLOYEES EMPLOYEES
		{
			get
			{
				return this._EMPLOYEES.Entity;
			}
			set
			{
				EMPLOYEES previousValue = this._EMPLOYEES.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEES.Entity = null;
						previousValue.CTRAC_ITEM_IMPORT.Remove(this);
					}
					this._EMPLOYEES.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM_IMPORT.Add(this);
						this._ImportedBy = value.EmployeeID;
					}
					else
					{
						this._ImportedBy = default(string);
					}
					this.SendPropertyChanged("EMPLOYEES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_ITEM_IMPORT_ITEM_EXCEPTION(CTRAC_ITEM_IMPORT_ITEM_EXCEPTION entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_ITEM_IMPORT = this;
		}
		
		private void detach_CTRAC_ITEM_IMPORT_ITEM_EXCEPTION(CTRAC_ITEM_IMPORT_ITEM_EXCEPTION entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_ITEM_IMPORT = null;
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_ITEM_IMPORT = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.CTRAC_ITEM_IMPORT = null;
		}
	}
	
	[Table(Name="dbo.CTRAC_ITEM_IMPORT_FIELDS")]
	public partial class CTRAC_ITEM_IMPORT_FIELDS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FieldName;
		
		private int _OrderID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    #endregion
		
		public CTRAC_ITEM_IMPORT_FIELDS()
		{
			OnCreated();
		}
		
		[Column(Storage="_FieldName", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[Column(Storage="_OrderID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CTRAC_ITEM_IMPORT_ITEM_EXCEPTION")]
	public partial class CTRAC_ITEM_IMPORT_ITEM_EXCEPTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExceptionID;
		
		private int _Import;
		
		private int _LineNumber;
		
		private string _Field;
		
		private string _ExceptionType;
		
		private string _ExceptionDescription;
		
		private EntityRef<CTRAC_ITEM_IMPORT> _CTRAC_ITEM_IMPORT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExceptionIDChanging(int value);
    partial void OnExceptionIDChanged();
    partial void OnImportChanging(int value);
    partial void OnImportChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnFieldChanging(string value);
    partial void OnFieldChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnExceptionDescriptionChanging(string value);
    partial void OnExceptionDescriptionChanged();
    #endregion
		
		public CTRAC_ITEM_IMPORT_ITEM_EXCEPTION()
		{
			this._CTRAC_ITEM_IMPORT = default(EntityRef<CTRAC_ITEM_IMPORT>);
			OnCreated();
		}
		
		[Column(Storage="_ExceptionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExceptionID
		{
			get
			{
				return this._ExceptionID;
			}
			set
			{
				if ((this._ExceptionID != value))
				{
					this.OnExceptionIDChanging(value);
					this.SendPropertyChanging();
					this._ExceptionID = value;
					this.SendPropertyChanged("ExceptionID");
					this.OnExceptionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Import", DbType="Int NOT NULL")]
		public int Import
		{
			get
			{
				return this._Import;
			}
			set
			{
				if ((this._Import != value))
				{
					if (this._CTRAC_ITEM_IMPORT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImportChanging(value);
					this.SendPropertyChanging();
					this._Import = value;
					this.SendPropertyChanged("Import");
					this.OnImportChanged();
				}
			}
		}
		
		[Column(Storage="_LineNumber", DbType="Int NOT NULL")]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Field", DbType="VarChar(100)")]
		public string Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					this.OnFieldChanging(value);
					this.SendPropertyChanging();
					this._Field = value;
					this.SendPropertyChanged("Field");
					this.OnFieldChanged();
				}
			}
		}
		
		[Column(Storage="_ExceptionType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ExceptionDescription", DbType="VarChar(100)")]
		public string ExceptionDescription
		{
			get
			{
				return this._ExceptionDescription;
			}
			set
			{
				if ((this._ExceptionDescription != value))
				{
					this.OnExceptionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ExceptionDescription = value;
					this.SendPropertyChanged("ExceptionDescription");
					this.OnExceptionDescriptionChanged();
				}
			}
		}
		
		[Association(Name="FK__CTRAC_ITE__Impor__1B8C236E", Storage="_CTRAC_ITEM_IMPORT", ThisKey="Import", OtherKey="ImportID", IsForeignKey=true)]
		public CTRAC_ITEM_IMPORT CTRAC_ITEM_IMPORT
		{
			get
			{
				return this._CTRAC_ITEM_IMPORT.Entity;
			}
			set
			{
				CTRAC_ITEM_IMPORT previousValue = this._CTRAC_ITEM_IMPORT.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_ITEM_IMPORT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_ITEM_IMPORT.Entity = null;
						previousValue.CTRAC_ITEM_IMPORT_ITEM_EXCEPTION.Remove(this);
					}
					this._CTRAC_ITEM_IMPORT.Entity = value;
					if ((value != null))
					{
						value.CTRAC_ITEM_IMPORT_ITEM_EXCEPTION.Add(this);
						this._Import = value.ImportID;
					}
					else
					{
						this._Import = default(int);
					}
					this.SendPropertyChanged("CTRAC_ITEM_IMPORT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CTRAC_MERGEHISTORY")]
	public partial class CTRAC_MERGEHISTORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CtracMergeID;
		
		private System.Nullable<int> _OldContractID;
		
		private System.Nullable<byte> _OldCompanyNum;
		
		private System.Nullable<int> _NewContractID;
		
		private System.Nullable<byte> _NewCompanyNum;
		
		private System.DateTime _DateMerged;
		
		private string _EmployeeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCtracMergeIDChanging(int value);
    partial void OnCtracMergeIDChanged();
    partial void OnOldContractIDChanging(System.Nullable<int> value);
    partial void OnOldContractIDChanged();
    partial void OnOldCompanyNumChanging(System.Nullable<byte> value);
    partial void OnOldCompanyNumChanged();
    partial void OnNewContractIDChanging(System.Nullable<int> value);
    partial void OnNewContractIDChanged();
    partial void OnNewCompanyNumChanging(System.Nullable<byte> value);
    partial void OnNewCompanyNumChanged();
    partial void OnDateMergedChanging(System.DateTime value);
    partial void OnDateMergedChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    #endregion
		
		public CTRAC_MERGEHISTORY()
		{
			OnCreated();
		}
		
		[Column(Storage="_CtracMergeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CtracMergeID
		{
			get
			{
				return this._CtracMergeID;
			}
			set
			{
				if ((this._CtracMergeID != value))
				{
					this.OnCtracMergeIDChanging(value);
					this.SendPropertyChanging();
					this._CtracMergeID = value;
					this.SendPropertyChanged("CtracMergeID");
					this.OnCtracMergeIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldContractID", DbType="Int")]
		public System.Nullable<int> OldContractID
		{
			get
			{
				return this._OldContractID;
			}
			set
			{
				if ((this._OldContractID != value))
				{
					this.OnOldContractIDChanging(value);
					this.SendPropertyChanging();
					this._OldContractID = value;
					this.SendPropertyChanged("OldContractID");
					this.OnOldContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldCompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> OldCompanyNum
		{
			get
			{
				return this._OldCompanyNum;
			}
			set
			{
				if ((this._OldCompanyNum != value))
				{
					this.OnOldCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._OldCompanyNum = value;
					this.SendPropertyChanged("OldCompanyNum");
					this.OnOldCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_NewContractID", DbType="Int")]
		public System.Nullable<int> NewContractID
		{
			get
			{
				return this._NewContractID;
			}
			set
			{
				if ((this._NewContractID != value))
				{
					this.OnNewContractIDChanging(value);
					this.SendPropertyChanging();
					this._NewContractID = value;
					this.SendPropertyChanged("NewContractID");
					this.OnNewContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_NewCompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> NewCompanyNum
		{
			get
			{
				return this._NewCompanyNum;
			}
			set
			{
				if ((this._NewCompanyNum != value))
				{
					this.OnNewCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._NewCompanyNum = value;
					this.SendPropertyChanged("NewCompanyNum");
					this.OnNewCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_DateMerged", DbType="DateTime NOT NULL")]
		public System.DateTime DateMerged
		{
			get
			{
				return this._DateMerged;
			}
			set
			{
				if ((this._DateMerged != value))
				{
					this.OnDateMergedChanging(value);
					this.SendPropertyChanging();
					this._DateMerged = value;
					this.SendPropertyChanged("DateMerged");
					this.OnDateMergedChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CTRAC_PM_DATES")]
	public partial class CTRAC_PM_DATES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccountId;
		
		private System.DateTime _PMDate;
		
		private string _PMEngineer;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(string value);
    partial void OnAccountIdChanged();
    partial void OnPMDateChanging(System.DateTime value);
    partial void OnPMDateChanged();
    partial void OnPMEngineerChanging(string value);
    partial void OnPMEngineerChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public CTRAC_PM_DATES()
		{
			OnCreated();
		}
		
		[Column(Storage="_AccountId", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Storage="_PMDate", DbType="SmallDateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime PMDate
		{
			get
			{
				return this._PMDate;
			}
			set
			{
				if ((this._PMDate != value))
				{
					this.OnPMDateChanging(value);
					this.SendPropertyChanging();
					this._PMDate = value;
					this.SendPropertyChanged("PMDate");
					this.OnPMDateChanged();
				}
			}
		}
		
		[Column(Storage="_PMEngineer", DbType="Char(3)")]
		public string PMEngineer
		{
			get
			{
				return this._PMEngineer;
			}
			set
			{
				if ((this._PMEngineer != value))
				{
					this.OnPMEngineerChanging(value);
					this.SendPropertyChanging();
					this._PMEngineer = value;
					this.SendPropertyChanged("PMEngineer");
					this.OnPMEngineerChanged();
				}
			}
		}
		
		[Column(Storage="_Notes", DbType="VarChar(2048)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CTRAC_RESET")]
	public partial class CTRAC_RESET
	{
		
		private System.Nullable<int> _ContractID;
		
		private System.Nullable<System.DateTime> _LDate;
		
		public CTRAC_RESET()
		{
		}
		
		[Column(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this._ContractID = value;
				}
			}
		}
		
		[Column(Storage="_LDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LDate
		{
			get
			{
				return this._LDate;
			}
			set
			{
				if ((this._LDate != value))
				{
					this._LDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.CTRAC_TYPE")]
	public partial class CTRAC_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CtracTypeId;
		
		private string _CtracTypeDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCtracTypeIdChanging(int value);
    partial void OnCtracTypeIdChanged();
    partial void OnCtracTypeDescriptionChanging(string value);
    partial void OnCtracTypeDescriptionChanged();
    #endregion
		
		public CTRAC_TYPE()
		{
			OnCreated();
		}
		
		[Column(Storage="_CtracTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CtracTypeId
		{
			get
			{
				return this._CtracTypeId;
			}
			set
			{
				if ((this._CtracTypeId != value))
				{
					this.OnCtracTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CtracTypeId = value;
					this.SendPropertyChanged("CtracTypeId");
					this.OnCtracTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_CtracTypeDescription", DbType="VarChar(32)")]
		public string CtracTypeDescription
		{
			get
			{
				return this._CtracTypeDescription;
			}
			set
			{
				if ((this._CtracTypeDescription != value))
				{
					this.OnCtracTypeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CtracTypeDescription = value;
					this.SendPropertyChanged("CtracTypeDescription");
					this.OnCtracTypeDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CTRACITEM_RESET")]
	public partial class CTRACITEM_RESET
	{
		
		private System.Nullable<int> _ContractItemID;
		
		private System.Nullable<System.DateTime> _LDate;
		
		public CTRACITEM_RESET()
		{
		}
		
		[Column(Storage="_ContractItemID", DbType="Int")]
		public System.Nullable<int> ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this._ContractItemID = value;
				}
			}
		}
		
		[Column(Storage="_LDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LDate
		{
			get
			{
				return this._LDate;
			}
			set
			{
				if ((this._LDate != value))
				{
					this._LDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.CURRENT_PERIOD")]
	public partial class CURRENT_PERIOD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Year;
		
		private byte _Month;
		
		private byte _Day;
		
		private string _Heading;
		
		private int _CompanyNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnDayChanging(byte value);
    partial void OnDayChanged();
    partial void OnHeadingChanging(string value);
    partial void OnHeadingChanged();
    partial void OnCompanyNumChanging(int value);
    partial void OnCompanyNumChanged();
    #endregion
		
		public CURRENT_PERIOD()
		{
			OnCreated();
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Day", DbType="TinyInt NOT NULL")]
		public byte Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[Column(Storage="_Heading", DbType="VarChar(16)")]
		public string Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.\'Customer Enginer$\'")]
	public partial class _CustomerEnginer__
	{
		
		private System.Nullable<double> _F1;
		
		private string _F2;
		
		public _CustomerEnginer__()
		{
		}
		
		[Column(Storage="_F1", DbType="Float")]
		public System.Nullable<double> F1
		{
			get
			{
				return this._F1;
			}
			set
			{
				if ((this._F1 != value))
				{
					this._F1 = value;
				}
			}
		}
		
		[Column(Storage="_F2", DbType="NVarChar(255)")]
		public string F2
		{
			get
			{
				return this._F2;
			}
			set
			{
				if ((this._F2 != value))
				{
					this._F2 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DEBTORS")]
	public partial class DEBTORS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private string _OldAccount;
		
		private System.Nullable<int> _Parent;
		
		private string _Child;
		
		private string _Company;
		
		private System.Nullable<int> _PrimaryContact;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Type;
		
		private string _AccountStatus;
		
		private bool _COD;
		
		private bool _Industrial;
		
		private bool _BO;
		
		private bool _FO;
		
		private string _Group;
		
		private bool _ByDepartment;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Address4;
		
		private string _City;
		
		private string _State;
		
		private string _PostCode;
		
		private string _Phone;
		
		private string _PhoneAfterHrs;
		
		private string _Fax;
		
		private string _WebSite;
		
		private string _Email;
		
		private int _Courier;
		
		private System.Nullable<short> _RepArea1;
		
		private System.Nullable<short> _RepArea2;
		
		private string _BankAcctName;
		
		private string _BankName;
		
		private string _BankSuburb;
		
		private string _BankBSB;
		
		private string _BankAcct;
		
		private string _CreditCardName;
		
		private string _CreditCardType;
		
		private string _CreditCardNo;
		
		private System.Nullable<System.DateTime> _CreditCardExpire;
		
		private System.Nullable<byte> _SpecialPrice;
		
		private System.Nullable<byte> _SpecialDelivery;
		
		private System.Nullable<byte> _Urgent;
		
		private System.Nullable<byte> _Local;
		
		private short _Discount1;
		
		private short _Discount2;
		
		private byte _PriceLevel;
		
		private string _AccountClass;
		
		private decimal _OpenBal;
		
		private decimal _Current;
		
		private decimal @__30Days;
		
		private decimal @__60Days;
		
		private decimal @__90Days;
		
		private string _Terms;
		
		private byte _NumDaysCredit;
		
		private decimal _CreditLimit;
		
		private System.Nullable<int> _LastInvNum;
		
		private System.Nullable<System.DateTime> _LastInvDate;
		
		private System.Nullable<decimal> _LastInvAmt;
		
		private System.Nullable<System.DateTime> _LastPayDate;
		
		private System.Nullable<decimal> _LastPayAmt;
		
		private System.Nullable<System.DateTime> _LastPick;
		
		private string _StaxNum;
		
		private string _WebLogin;
		
		private string _WebPassword;
		
		private System.Nullable<decimal> _MTD;
		
		private System.Nullable<decimal> _YTD;
		
		private System.Nullable<decimal> _LY;
		
		private System.Nullable<decimal> _JAN;
		
		private System.Nullable<decimal> _FEB;
		
		private System.Nullable<decimal> _MAR;
		
		private System.Nullable<decimal> _APR;
		
		private System.Nullable<decimal> _MAY;
		
		private System.Nullable<decimal> _JUN;
		
		private System.Nullable<decimal> _JUL;
		
		private System.Nullable<decimal> _AUG;
		
		private System.Nullable<decimal> _SEP;
		
		private System.Nullable<decimal> _OCT;
		
		private System.Nullable<decimal> _NOV;
		
		private System.Nullable<decimal> _DEC;
		
		private string _AbbrevName;
		
		private bool _PrintInvoice;
		
		private int _InvoiceQty;
		
		private bool _PrintPackSlip;
		
		private int _PackSlipQty;
		
		private byte _RRPType;
		
		private int _RRPQty;
		
		private decimal _RRPMarkup1;
		
		private decimal _RRPMarkup2;
		
		private bool _International;
		
		private string _Country;
		
		private string _CurrencyType;
		
		private bool _CIF;
		
		private bool _FIS;
		
		private bool _FOB;
		
		private byte _CompanyNum;
		
		private string _SpecialReq;
		
		private string _InvMsg;
		
		private string _SalesNotes;
		
		private string _Remarks;
		
		private System.Nullable<decimal> _FwdVal;
		
		private bool _SDI;
		
		private System.Nullable<bool> _OpenItem;
		
		private decimal _CurrentInv;
		
		private decimal _CurrentRec;
		
		private decimal _CurrentDisc;
		
		private decimal _CurrentJnl;
		
		private string _FlagMsg;
		
		private string _SalesRep;
		
		private string _SalesRep2;
		
		private string _StatementNotes;
		
		private string _ABN;
		
		private System.Nullable<int> _OrdNumOK;
		
		private string _ShipBy;
		
		private bool _PrintLabel;
		
		private bool _GotCalls;
		
		private System.Nullable<System.DateTime> _NextCall;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private bool _InActive;
		
		private bool _CreditHold;
		
		private string _Selector;
		
		private decimal _FwdDateAmount;
		
		private decimal _Rebate;
		
		private decimal _LY2;
		
		private byte _PmFrequency;
		
		private System.Nullable<byte> _PmPeriod;
		
		private System.Nullable<System.DateTime> _PmLastVisit;
		
		private System.Nullable<System.DateTime> _PMNextVisit;
		
		private string _OldParent;
		
		private byte _DefaultInvStyle;
		
		private byte _InvoiceFreq;
		
		private string _SalesCtrlAccGL;
		
		private string _SalesAccGL;
		
		private System.Nullable<decimal> _LJAN;
		
		private System.Nullable<decimal> _LFEB;
		
		private System.Nullable<decimal> _LMAR;
		
		private System.Nullable<decimal> _LAPR;
		
		private System.Nullable<decimal> _LMAY;
		
		private System.Nullable<decimal> _LJUN;
		
		private System.Nullable<decimal> _LJUL;
		
		private System.Nullable<decimal> _LAUG;
		
		private System.Nullable<decimal> _LSEP;
		
		private System.Nullable<decimal> _LOCT;
		
		private System.Nullable<decimal> _LNOV;
		
		private System.Nullable<decimal> _LDEC;
		
		private System.Nullable<bool> _NoCreditLimit;
		
		private System.Nullable<int> _StockLocation;
		
		private string _SiteEngineer;
		
		private string _LastCallBy;
		
		private string _TMInvAccGL;
		
		private System.Nullable<decimal> _OverpayBucket;
		
		private bool _InterCompany;
		
		private bool _Merged;
		
		private bool _PreMerged;
		
		private string _ContractLocation;
		
		private string _IMRep;
		
		private string _IPRep;
		
		private string _RM1;
		
		private string _RM2;
		
		private int _SeparateBatchPrint;
		
		private bool _SoftInvoice;
		
		private string _SoftInvoicePath;
		
		private System.Nullable<int> _ReportingGroupID;
		
		private bool _MixedInternational;
		
		private bool _PDFInvoice;
		
		private string _PDFInvoiceEmail;
		
		private string _BSGTechnicalOwner;
		
		private string _SalesRepBSG;
		
		private int _BillingMethod;
		
		private bool _BillToLocation;
		
		private bool _PrintAlways;
		
		private System.Nullable<System.DateTime> _OriginalAccountDate;
		
		private System.Nullable<bool> _PDFInvoiceToContacts;
		
		private System.Nullable<int> _PrimaryFinanceContact;
		
		private string _FinancePhone;
		
		private string _FinanceFax;
		
		private string _FinancePhoneAfterHrs;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private bool _Issue;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _EngineerNotes;
		
		private string _TechnicalAccountManager;
		
		private System.Nullable<int> _GLState;
		
		private bool _ExcludeFromCarbonTax;
		
		private EntitySet<DEBTORS_3P_AGREEMENTS> _DEBTORS_3P_AGREEMENTS;
		
		private EntitySet<CONTACTS> _CONTACTS;
		
		private EntitySet<CTRAC_HEADER> _CTRAC_HEADER;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntityRef<GL_STATES> _GL_STATES;
		
		private EntityRef<INT_REPORTING_GROUPS> _INT_REPORTING_GROUPS;
		
		private EntitySet<DEBTORS_JNL_DETAILS> _DEBTORS_JNL_DETAILS;
		
		private EntityRef<LOCATIONS> _LOCATIONS;
		
		private EntitySet<DEBTORS_PM_VISITS> _DEBTORS_PM_VISITS;
		
		private EntitySet<DEBTORS_RECEIPTS> _DEBTORS_RECEIPTS;
		
		private EntitySet<DEBTORS_UPDATE_HISTORY> _DEBTORS_UPDATE_HISTORY;
		
		private EntitySet<INT_INV_BATCH_CONTROL> _INT_INV_BATCH_CONTROL;
		
		private EntitySet<INT_INV_BATCH_CONTROL> _Account;
		
		private EntitySet<INT_PM_HISTORY> _INT_PM_HISTORY;
		
		private EntitySet<INT_STOCK_OUTAGE> _INT_STOCK_OUTAGE;
		
		private EntitySet<INT_STOCK_USAGE> _INT_STOCK_USAGE;
		
		private EntitySet<REPS_DIARY> _REPS_DIARY;
		
		private EntitySet<STKORDITEM> _STKORDITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnOldAccountChanging(string value);
    partial void OnOldAccountChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnChildChanging(string value);
    partial void OnChildChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPrimaryContactChanging(System.Nullable<int> value);
    partial void OnPrimaryContactChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAccountStatusChanging(string value);
    partial void OnAccountStatusChanged();
    partial void OnCODChanging(bool value);
    partial void OnCODChanged();
    partial void OnIndustrialChanging(bool value);
    partial void OnIndustrialChanged();
    partial void OnBOChanging(bool value);
    partial void OnBOChanged();
    partial void OnFOChanging(bool value);
    partial void OnFOChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnByDepartmentChanging(bool value);
    partial void OnByDepartmentChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnAddress4Changing(string value);
    partial void OnAddress4Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhoneAfterHrsChanging(string value);
    partial void OnPhoneAfterHrsChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCourierChanging(int value);
    partial void OnCourierChanged();
    partial void OnRepArea1Changing(System.Nullable<short> value);
    partial void OnRepArea1Changed();
    partial void OnRepArea2Changing(System.Nullable<short> value);
    partial void OnRepArea2Changed();
    partial void OnBankAcctNameChanging(string value);
    partial void OnBankAcctNameChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankSuburbChanging(string value);
    partial void OnBankSuburbChanged();
    partial void OnBankBSBChanging(string value);
    partial void OnBankBSBChanged();
    partial void OnBankAcctChanging(string value);
    partial void OnBankAcctChanged();
    partial void OnCreditCardNameChanging(string value);
    partial void OnCreditCardNameChanged();
    partial void OnCreditCardTypeChanging(string value);
    partial void OnCreditCardTypeChanged();
    partial void OnCreditCardNoChanging(string value);
    partial void OnCreditCardNoChanged();
    partial void OnCreditCardExpireChanging(System.Nullable<System.DateTime> value);
    partial void OnCreditCardExpireChanged();
    partial void OnSpecialPriceChanging(System.Nullable<byte> value);
    partial void OnSpecialPriceChanged();
    partial void OnSpecialDeliveryChanging(System.Nullable<byte> value);
    partial void OnSpecialDeliveryChanged();
    partial void OnUrgentChanging(System.Nullable<byte> value);
    partial void OnUrgentChanged();
    partial void OnLocalChanging(System.Nullable<byte> value);
    partial void OnLocalChanged();
    partial void OnDiscount1Changing(short value);
    partial void OnDiscount1Changed();
    partial void OnDiscount2Changing(short value);
    partial void OnDiscount2Changed();
    partial void OnPriceLevelChanging(byte value);
    partial void OnPriceLevelChanged();
    partial void OnAccountClassChanging(string value);
    partial void OnAccountClassChanged();
    partial void OnOpenBalChanging(decimal value);
    partial void OnOpenBalChanged();
    partial void OnCurrentChanging(decimal value);
    partial void OnCurrentChanged();
    partial void On_30DaysChanging(decimal value);
    partial void On_30DaysChanged();
    partial void On_60DaysChanging(decimal value);
    partial void On_60DaysChanged();
    partial void On_90DaysChanging(decimal value);
    partial void On_90DaysChanged();
    partial void OnTermsChanging(string value);
    partial void OnTermsChanged();
    partial void OnNumDaysCreditChanging(byte value);
    partial void OnNumDaysCreditChanged();
    partial void OnCreditLimitChanging(decimal value);
    partial void OnCreditLimitChanged();
    partial void OnLastInvNumChanging(System.Nullable<int> value);
    partial void OnLastInvNumChanged();
    partial void OnLastInvDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastInvDateChanged();
    partial void OnLastInvAmtChanging(System.Nullable<decimal> value);
    partial void OnLastInvAmtChanged();
    partial void OnLastPayDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPayDateChanged();
    partial void OnLastPayAmtChanging(System.Nullable<decimal> value);
    partial void OnLastPayAmtChanged();
    partial void OnLastPickChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPickChanged();
    partial void OnStaxNumChanging(string value);
    partial void OnStaxNumChanged();
    partial void OnWebLoginChanging(string value);
    partial void OnWebLoginChanged();
    partial void OnWebPasswordChanging(string value);
    partial void OnWebPasswordChanged();
    partial void OnMTDChanging(System.Nullable<decimal> value);
    partial void OnMTDChanged();
    partial void OnYTDChanging(System.Nullable<decimal> value);
    partial void OnYTDChanged();
    partial void OnLYChanging(System.Nullable<decimal> value);
    partial void OnLYChanged();
    partial void OnJANChanging(System.Nullable<decimal> value);
    partial void OnJANChanged();
    partial void OnFEBChanging(System.Nullable<decimal> value);
    partial void OnFEBChanged();
    partial void OnMARChanging(System.Nullable<decimal> value);
    partial void OnMARChanged();
    partial void OnAPRChanging(System.Nullable<decimal> value);
    partial void OnAPRChanged();
    partial void OnMAYChanging(System.Nullable<decimal> value);
    partial void OnMAYChanged();
    partial void OnJUNChanging(System.Nullable<decimal> value);
    partial void OnJUNChanged();
    partial void OnJULChanging(System.Nullable<decimal> value);
    partial void OnJULChanged();
    partial void OnAUGChanging(System.Nullable<decimal> value);
    partial void OnAUGChanged();
    partial void OnSEPChanging(System.Nullable<decimal> value);
    partial void OnSEPChanged();
    partial void OnOCTChanging(System.Nullable<decimal> value);
    partial void OnOCTChanged();
    partial void OnNOVChanging(System.Nullable<decimal> value);
    partial void OnNOVChanged();
    partial void OnDECChanging(System.Nullable<decimal> value);
    partial void OnDECChanged();
    partial void OnAbbrevNameChanging(string value);
    partial void OnAbbrevNameChanged();
    partial void OnPrintInvoiceChanging(bool value);
    partial void OnPrintInvoiceChanged();
    partial void OnInvoiceQtyChanging(int value);
    partial void OnInvoiceQtyChanged();
    partial void OnPrintPackSlipChanging(bool value);
    partial void OnPrintPackSlipChanged();
    partial void OnPackSlipQtyChanging(int value);
    partial void OnPackSlipQtyChanged();
    partial void OnRRPTypeChanging(byte value);
    partial void OnRRPTypeChanged();
    partial void OnRRPQtyChanging(int value);
    partial void OnRRPQtyChanged();
    partial void OnRRPMarkup1Changing(decimal value);
    partial void OnRRPMarkup1Changed();
    partial void OnRRPMarkup2Changing(decimal value);
    partial void OnRRPMarkup2Changed();
    partial void OnInternationalChanging(bool value);
    partial void OnInternationalChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCurrencyTypeChanging(string value);
    partial void OnCurrencyTypeChanged();
    partial void OnCIFChanging(bool value);
    partial void OnCIFChanged();
    partial void OnFISChanging(bool value);
    partial void OnFISChanged();
    partial void OnFOBChanging(bool value);
    partial void OnFOBChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnSpecialReqChanging(string value);
    partial void OnSpecialReqChanged();
    partial void OnInvMsgChanging(string value);
    partial void OnInvMsgChanged();
    partial void OnSalesNotesChanging(string value);
    partial void OnSalesNotesChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnFwdValChanging(System.Nullable<decimal> value);
    partial void OnFwdValChanged();
    partial void OnSDIChanging(bool value);
    partial void OnSDIChanged();
    partial void OnOpenItemChanging(System.Nullable<bool> value);
    partial void OnOpenItemChanged();
    partial void OnCurrentInvChanging(decimal value);
    partial void OnCurrentInvChanged();
    partial void OnCurrentRecChanging(decimal value);
    partial void OnCurrentRecChanged();
    partial void OnCurrentDiscChanging(decimal value);
    partial void OnCurrentDiscChanged();
    partial void OnCurrentJnlChanging(decimal value);
    partial void OnCurrentJnlChanged();
    partial void OnFlagMsgChanging(string value);
    partial void OnFlagMsgChanged();
    partial void OnSalesRepChanging(string value);
    partial void OnSalesRepChanged();
    partial void OnSalesRep2Changing(string value);
    partial void OnSalesRep2Changed();
    partial void OnStatementNotesChanging(string value);
    partial void OnStatementNotesChanged();
    partial void OnABNChanging(string value);
    partial void OnABNChanged();
    partial void OnOrdNumOKChanging(System.Nullable<int> value);
    partial void OnOrdNumOKChanged();
    partial void OnShipByChanging(string value);
    partial void OnShipByChanged();
    partial void OnPrintLabelChanging(bool value);
    partial void OnPrintLabelChanged();
    partial void OnGotCallsChanging(bool value);
    partial void OnGotCallsChanged();
    partial void OnNextCallChanging(System.Nullable<System.DateTime> value);
    partial void OnNextCallChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnInActiveChanging(bool value);
    partial void OnInActiveChanged();
    partial void OnCreditHoldChanging(bool value);
    partial void OnCreditHoldChanged();
    partial void OnSelectorChanging(string value);
    partial void OnSelectorChanged();
    partial void OnFwdDateAmountChanging(decimal value);
    partial void OnFwdDateAmountChanged();
    partial void OnRebateChanging(decimal value);
    partial void OnRebateChanged();
    partial void OnLY2Changing(decimal value);
    partial void OnLY2Changed();
    partial void OnPmFrequencyChanging(byte value);
    partial void OnPmFrequencyChanged();
    partial void OnPmPeriodChanging(System.Nullable<byte> value);
    partial void OnPmPeriodChanged();
    partial void OnPmLastVisitChanging(System.Nullable<System.DateTime> value);
    partial void OnPmLastVisitChanged();
    partial void OnPMNextVisitChanging(System.Nullable<System.DateTime> value);
    partial void OnPMNextVisitChanged();
    partial void OnOldParentChanging(string value);
    partial void OnOldParentChanged();
    partial void OnDefaultInvStyleChanging(byte value);
    partial void OnDefaultInvStyleChanged();
    partial void OnInvoiceFreqChanging(byte value);
    partial void OnInvoiceFreqChanged();
    partial void OnSalesCtrlAccGLChanging(string value);
    partial void OnSalesCtrlAccGLChanged();
    partial void OnSalesAccGLChanging(string value);
    partial void OnSalesAccGLChanged();
    partial void OnLJANChanging(System.Nullable<decimal> value);
    partial void OnLJANChanged();
    partial void OnLFEBChanging(System.Nullable<decimal> value);
    partial void OnLFEBChanged();
    partial void OnLMARChanging(System.Nullable<decimal> value);
    partial void OnLMARChanged();
    partial void OnLAPRChanging(System.Nullable<decimal> value);
    partial void OnLAPRChanged();
    partial void OnLMAYChanging(System.Nullable<decimal> value);
    partial void OnLMAYChanged();
    partial void OnLJUNChanging(System.Nullable<decimal> value);
    partial void OnLJUNChanged();
    partial void OnLJULChanging(System.Nullable<decimal> value);
    partial void OnLJULChanged();
    partial void OnLAUGChanging(System.Nullable<decimal> value);
    partial void OnLAUGChanged();
    partial void OnLSEPChanging(System.Nullable<decimal> value);
    partial void OnLSEPChanged();
    partial void OnLOCTChanging(System.Nullable<decimal> value);
    partial void OnLOCTChanged();
    partial void OnLNOVChanging(System.Nullable<decimal> value);
    partial void OnLNOVChanged();
    partial void OnLDECChanging(System.Nullable<decimal> value);
    partial void OnLDECChanged();
    partial void OnNoCreditLimitChanging(System.Nullable<bool> value);
    partial void OnNoCreditLimitChanged();
    partial void OnStockLocationChanging(System.Nullable<int> value);
    partial void OnStockLocationChanged();
    partial void OnSiteEngineerChanging(string value);
    partial void OnSiteEngineerChanged();
    partial void OnLastCallByChanging(string value);
    partial void OnLastCallByChanged();
    partial void OnTMInvAccGLChanging(string value);
    partial void OnTMInvAccGLChanged();
    partial void OnOverpayBucketChanging(System.Nullable<decimal> value);
    partial void OnOverpayBucketChanged();
    partial void OnInterCompanyChanging(bool value);
    partial void OnInterCompanyChanged();
    partial void OnMergedChanging(bool value);
    partial void OnMergedChanged();
    partial void OnPreMergedChanging(bool value);
    partial void OnPreMergedChanged();
    partial void OnContractLocationChanging(string value);
    partial void OnContractLocationChanged();
    partial void OnIMRepChanging(string value);
    partial void OnIMRepChanged();
    partial void OnIPRepChanging(string value);
    partial void OnIPRepChanged();
    partial void OnRM1Changing(string value);
    partial void OnRM1Changed();
    partial void OnRM2Changing(string value);
    partial void OnRM2Changed();
    partial void OnSeparateBatchPrintChanging(int value);
    partial void OnSeparateBatchPrintChanged();
    partial void OnSoftInvoiceChanging(bool value);
    partial void OnSoftInvoiceChanged();
    partial void OnSoftInvoicePathChanging(string value);
    partial void OnSoftInvoicePathChanged();
    partial void OnReportingGroupIDChanging(System.Nullable<int> value);
    partial void OnReportingGroupIDChanged();
    partial void OnMixedInternationalChanging(bool value);
    partial void OnMixedInternationalChanged();
    partial void OnPDFInvoiceChanging(bool value);
    partial void OnPDFInvoiceChanged();
    partial void OnPDFInvoiceEmailChanging(string value);
    partial void OnPDFInvoiceEmailChanged();
    partial void OnBSGTechnicalOwnerChanging(string value);
    partial void OnBSGTechnicalOwnerChanged();
    partial void OnSalesRepBSGChanging(string value);
    partial void OnSalesRepBSGChanged();
    partial void OnBillingMethodChanging(int value);
    partial void OnBillingMethodChanged();
    partial void OnBillToLocationChanging(bool value);
    partial void OnBillToLocationChanged();
    partial void OnPrintAlwaysChanging(bool value);
    partial void OnPrintAlwaysChanged();
    partial void OnOriginalAccountDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOriginalAccountDateChanged();
    partial void OnPDFInvoiceToContactsChanging(System.Nullable<bool> value);
    partial void OnPDFInvoiceToContactsChanged();
    partial void OnPrimaryFinanceContactChanging(System.Nullable<int> value);
    partial void OnPrimaryFinanceContactChanged();
    partial void OnFinancePhoneChanging(string value);
    partial void OnFinancePhoneChanged();
    partial void OnFinanceFaxChanging(string value);
    partial void OnFinanceFaxChanged();
    partial void OnFinancePhoneAfterHrsChanging(string value);
    partial void OnFinancePhoneAfterHrsChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnIssueChanging(bool value);
    partial void OnIssueChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnEngineerNotesChanging(string value);
    partial void OnEngineerNotesChanged();
    partial void OnTechnicalAccountManagerChanging(string value);
    partial void OnTechnicalAccountManagerChanged();
    partial void OnGLStateChanging(System.Nullable<int> value);
    partial void OnGLStateChanged();
    partial void OnExcludeFromCarbonTaxChanging(bool value);
    partial void OnExcludeFromCarbonTaxChanged();
    #endregion
		
		public DEBTORS()
		{
			this._DEBTORS_3P_AGREEMENTS = new EntitySet<DEBTORS_3P_AGREEMENTS>(new Action<DEBTORS_3P_AGREEMENTS>(this.attach_DEBTORS_3P_AGREEMENTS), new Action<DEBTORS_3P_AGREEMENTS>(this.detach_DEBTORS_3P_AGREEMENTS));
			this._CONTACTS = new EntitySet<CONTACTS>(new Action<CONTACTS>(this.attach_CONTACTS), new Action<CONTACTS>(this.detach_CONTACTS));
			this._CTRAC_HEADER = new EntitySet<CTRAC_HEADER>(new Action<CTRAC_HEADER>(this.attach_CTRAC_HEADER), new Action<CTRAC_HEADER>(this.detach_CTRAC_HEADER));
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			this._GL_STATES = default(EntityRef<GL_STATES>);
			this._INT_REPORTING_GROUPS = default(EntityRef<INT_REPORTING_GROUPS>);
			this._DEBTORS_JNL_DETAILS = new EntitySet<DEBTORS_JNL_DETAILS>(new Action<DEBTORS_JNL_DETAILS>(this.attach_DEBTORS_JNL_DETAILS), new Action<DEBTORS_JNL_DETAILS>(this.detach_DEBTORS_JNL_DETAILS));
			this._LOCATIONS = default(EntityRef<LOCATIONS>);
			this._DEBTORS_PM_VISITS = new EntitySet<DEBTORS_PM_VISITS>(new Action<DEBTORS_PM_VISITS>(this.attach_DEBTORS_PM_VISITS), new Action<DEBTORS_PM_VISITS>(this.detach_DEBTORS_PM_VISITS));
			this._DEBTORS_RECEIPTS = new EntitySet<DEBTORS_RECEIPTS>(new Action<DEBTORS_RECEIPTS>(this.attach_DEBTORS_RECEIPTS), new Action<DEBTORS_RECEIPTS>(this.detach_DEBTORS_RECEIPTS));
			this._DEBTORS_UPDATE_HISTORY = new EntitySet<DEBTORS_UPDATE_HISTORY>(new Action<DEBTORS_UPDATE_HISTORY>(this.attach_DEBTORS_UPDATE_HISTORY), new Action<DEBTORS_UPDATE_HISTORY>(this.detach_DEBTORS_UPDATE_HISTORY));
			this._INT_INV_BATCH_CONTROL = new EntitySet<INT_INV_BATCH_CONTROL>(new Action<INT_INV_BATCH_CONTROL>(this.attach_INT_INV_BATCH_CONTROL), new Action<INT_INV_BATCH_CONTROL>(this.detach_INT_INV_BATCH_CONTROL));
			this._Account = new EntitySet<INT_INV_BATCH_CONTROL>(new Action<INT_INV_BATCH_CONTROL>(this.attach_Account), new Action<INT_INV_BATCH_CONTROL>(this.detach_Account));
			this._INT_PM_HISTORY = new EntitySet<INT_PM_HISTORY>(new Action<INT_PM_HISTORY>(this.attach_INT_PM_HISTORY), new Action<INT_PM_HISTORY>(this.detach_INT_PM_HISTORY));
			this._INT_STOCK_OUTAGE = new EntitySet<INT_STOCK_OUTAGE>(new Action<INT_STOCK_OUTAGE>(this.attach_INT_STOCK_OUTAGE), new Action<INT_STOCK_OUTAGE>(this.detach_INT_STOCK_OUTAGE));
			this._INT_STOCK_USAGE = new EntitySet<INT_STOCK_USAGE>(new Action<INT_STOCK_USAGE>(this.attach_INT_STOCK_USAGE), new Action<INT_STOCK_USAGE>(this.detach_INT_STOCK_USAGE));
			this._REPS_DIARY = new EntitySet<REPS_DIARY>(new Action<REPS_DIARY>(this.attach_REPS_DIARY), new Action<REPS_DIARY>(this.detach_REPS_DIARY));
			this._STKORDITEM = new EntitySet<STKORDITEM>(new Action<STKORDITEM>(this.attach_STKORDITEM), new Action<STKORDITEM>(this.detach_STKORDITEM));
			OnCreated();
		}
		
		[Column(Storage="_AccountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldAccount", DbType="VarChar(12)")]
		public string OldAccount
		{
			get
			{
				return this._OldAccount;
			}
			set
			{
				if ((this._OldAccount != value))
				{
					this.OnOldAccountChanging(value);
					this.SendPropertyChanging();
					this._OldAccount = value;
					this.SendPropertyChanged("OldAccount");
					this.OnOldAccountChanged();
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[Column(Storage="_Child", DbType="VarChar(4)")]
		public string Child
		{
			get
			{
				return this._Child;
			}
			set
			{
				if ((this._Child != value))
				{
					this.OnChildChanging(value);
					this.SendPropertyChanging();
					this._Child = value;
					this.SendPropertyChanged("Child");
					this.OnChildChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_PrimaryContact", DbType="Int")]
		public System.Nullable<int> PrimaryContact
		{
			get
			{
				return this._PrimaryContact;
			}
			set
			{
				if ((this._PrimaryContact != value))
				{
					this.OnPrimaryContactChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContact = value;
					this.SendPropertyChanged("PrimaryContact");
					this.OnPrimaryContactChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(7)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_AccountStatus", DbType="VarChar(7)")]
		public string AccountStatus
		{
			get
			{
				return this._AccountStatus;
			}
			set
			{
				if ((this._AccountStatus != value))
				{
					this.OnAccountStatusChanging(value);
					this.SendPropertyChanging();
					this._AccountStatus = value;
					this.SendPropertyChanged("AccountStatus");
					this.OnAccountStatusChanged();
				}
			}
		}
		
		[Column(Storage="_COD", DbType="Bit NOT NULL")]
		public bool COD
		{
			get
			{
				return this._COD;
			}
			set
			{
				if ((this._COD != value))
				{
					this.OnCODChanging(value);
					this.SendPropertyChanging();
					this._COD = value;
					this.SendPropertyChanged("COD");
					this.OnCODChanged();
				}
			}
		}
		
		[Column(Storage="_Industrial", DbType="Bit NOT NULL")]
		public bool Industrial
		{
			get
			{
				return this._Industrial;
			}
			set
			{
				if ((this._Industrial != value))
				{
					this.OnIndustrialChanging(value);
					this.SendPropertyChanging();
					this._Industrial = value;
					this.SendPropertyChanged("Industrial");
					this.OnIndustrialChanged();
				}
			}
		}
		
		[Column(Storage="_BO", DbType="Bit NOT NULL")]
		public bool BO
		{
			get
			{
				return this._BO;
			}
			set
			{
				if ((this._BO != value))
				{
					this.OnBOChanging(value);
					this.SendPropertyChanging();
					this._BO = value;
					this.SendPropertyChanged("BO");
					this.OnBOChanged();
				}
			}
		}
		
		[Column(Storage="_FO", DbType="Bit NOT NULL")]
		public bool FO
		{
			get
			{
				return this._FO;
			}
			set
			{
				if ((this._FO != value))
				{
					this.OnFOChanging(value);
					this.SendPropertyChanging();
					this._FO = value;
					this.SendPropertyChanged("FO");
					this.OnFOChanged();
				}
			}
		}
		
		[Column(Storage="_Group", DbType="VarChar(12)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[Column(Storage="_ByDepartment", DbType="Bit NOT NULL")]
		public bool ByDepartment
		{
			get
			{
				return this._ByDepartment;
			}
			set
			{
				if ((this._ByDepartment != value))
				{
					this.OnByDepartmentChanging(value);
					this.SendPropertyChanging();
					this._ByDepartment = value;
					this.SendPropertyChanged("ByDepartment");
					this.OnByDepartmentChanged();
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[Column(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[Column(Storage="_Address4", DbType="VarChar(50)")]
		public string Address4
		{
			get
			{
				return this._Address4;
			}
			set
			{
				if ((this._Address4 != value))
				{
					this.OnAddress4Changing(value);
					this.SendPropertyChanging();
					this._Address4 = value;
					this.SendPropertyChanged("Address4");
					this.OnAddress4Changed();
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(25)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_PostCode", DbType="VarChar(6)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_PhoneAfterHrs", DbType="VarChar(20)")]
		public string PhoneAfterHrs
		{
			get
			{
				return this._PhoneAfterHrs;
			}
			set
			{
				if ((this._PhoneAfterHrs != value))
				{
					this.OnPhoneAfterHrsChanging(value);
					this.SendPropertyChanging();
					this._PhoneAfterHrs = value;
					this.SendPropertyChanged("PhoneAfterHrs");
					this.OnPhoneAfterHrsChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_WebSite", DbType="VarChar(40)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(70)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Courier", DbType="Int NOT NULL")]
		public int Courier
		{
			get
			{
				return this._Courier;
			}
			set
			{
				if ((this._Courier != value))
				{
					this.OnCourierChanging(value);
					this.SendPropertyChanging();
					this._Courier = value;
					this.SendPropertyChanged("Courier");
					this.OnCourierChanged();
				}
			}
		}
		
		[Column(Storage="_RepArea1", DbType="SmallInt")]
		public System.Nullable<short> RepArea1
		{
			get
			{
				return this._RepArea1;
			}
			set
			{
				if ((this._RepArea1 != value))
				{
					this.OnRepArea1Changing(value);
					this.SendPropertyChanging();
					this._RepArea1 = value;
					this.SendPropertyChanged("RepArea1");
					this.OnRepArea1Changed();
				}
			}
		}
		
		[Column(Storage="_RepArea2", DbType="SmallInt")]
		public System.Nullable<short> RepArea2
		{
			get
			{
				return this._RepArea2;
			}
			set
			{
				if ((this._RepArea2 != value))
				{
					this.OnRepArea2Changing(value);
					this.SendPropertyChanging();
					this._RepArea2 = value;
					this.SendPropertyChanged("RepArea2");
					this.OnRepArea2Changed();
				}
			}
		}
		
		[Column(Storage="_BankAcctName", DbType="VarChar(50)")]
		public string BankAcctName
		{
			get
			{
				return this._BankAcctName;
			}
			set
			{
				if ((this._BankAcctName != value))
				{
					this.OnBankAcctNameChanging(value);
					this.SendPropertyChanging();
					this._BankAcctName = value;
					this.SendPropertyChanged("BankAcctName");
					this.OnBankAcctNameChanged();
				}
			}
		}
		
		[Column(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[Column(Storage="_BankSuburb", DbType="VarChar(25)")]
		public string BankSuburb
		{
			get
			{
				return this._BankSuburb;
			}
			set
			{
				if ((this._BankSuburb != value))
				{
					this.OnBankSuburbChanging(value);
					this.SendPropertyChanging();
					this._BankSuburb = value;
					this.SendPropertyChanged("BankSuburb");
					this.OnBankSuburbChanged();
				}
			}
		}
		
		[Column(Storage="_BankBSB", DbType="VarChar(10)")]
		public string BankBSB
		{
			get
			{
				return this._BankBSB;
			}
			set
			{
				if ((this._BankBSB != value))
				{
					this.OnBankBSBChanging(value);
					this.SendPropertyChanging();
					this._BankBSB = value;
					this.SendPropertyChanged("BankBSB");
					this.OnBankBSBChanged();
				}
			}
		}
		
		[Column(Storage="_BankAcct", DbType="VarChar(12)")]
		public string BankAcct
		{
			get
			{
				return this._BankAcct;
			}
			set
			{
				if ((this._BankAcct != value))
				{
					this.OnBankAcctChanging(value);
					this.SendPropertyChanging();
					this._BankAcct = value;
					this.SendPropertyChanged("BankAcct");
					this.OnBankAcctChanged();
				}
			}
		}
		
		[Column(Storage="_CreditCardName", DbType="VarChar(30)")]
		public string CreditCardName
		{
			get
			{
				return this._CreditCardName;
			}
			set
			{
				if ((this._CreditCardName != value))
				{
					this.OnCreditCardNameChanging(value);
					this.SendPropertyChanging();
					this._CreditCardName = value;
					this.SendPropertyChanged("CreditCardName");
					this.OnCreditCardNameChanged();
				}
			}
		}
		
		[Column(Storage="_CreditCardType", DbType="VarChar(20)")]
		public string CreditCardType
		{
			get
			{
				return this._CreditCardType;
			}
			set
			{
				if ((this._CreditCardType != value))
				{
					this.OnCreditCardTypeChanging(value);
					this.SendPropertyChanging();
					this._CreditCardType = value;
					this.SendPropertyChanged("CreditCardType");
					this.OnCreditCardTypeChanged();
				}
			}
		}
		
		[Column(Storage="_CreditCardNo", DbType="VarChar(30)")]
		public string CreditCardNo
		{
			get
			{
				return this._CreditCardNo;
			}
			set
			{
				if ((this._CreditCardNo != value))
				{
					this.OnCreditCardNoChanging(value);
					this.SendPropertyChanging();
					this._CreditCardNo = value;
					this.SendPropertyChanged("CreditCardNo");
					this.OnCreditCardNoChanged();
				}
			}
		}
		
		[Column(Storage="_CreditCardExpire", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreditCardExpire
		{
			get
			{
				return this._CreditCardExpire;
			}
			set
			{
				if ((this._CreditCardExpire != value))
				{
					this.OnCreditCardExpireChanging(value);
					this.SendPropertyChanging();
					this._CreditCardExpire = value;
					this.SendPropertyChanged("CreditCardExpire");
					this.OnCreditCardExpireChanged();
				}
			}
		}
		
		[Column(Storage="_SpecialPrice", DbType="TinyInt")]
		public System.Nullable<byte> SpecialPrice
		{
			get
			{
				return this._SpecialPrice;
			}
			set
			{
				if ((this._SpecialPrice != value))
				{
					this.OnSpecialPriceChanging(value);
					this.SendPropertyChanging();
					this._SpecialPrice = value;
					this.SendPropertyChanged("SpecialPrice");
					this.OnSpecialPriceChanged();
				}
			}
		}
		
		[Column(Storage="_SpecialDelivery", DbType="TinyInt")]
		public System.Nullable<byte> SpecialDelivery
		{
			get
			{
				return this._SpecialDelivery;
			}
			set
			{
				if ((this._SpecialDelivery != value))
				{
					this.OnSpecialDeliveryChanging(value);
					this.SendPropertyChanging();
					this._SpecialDelivery = value;
					this.SendPropertyChanged("SpecialDelivery");
					this.OnSpecialDeliveryChanged();
				}
			}
		}
		
		[Column(Storage="_Urgent", DbType="TinyInt")]
		public System.Nullable<byte> Urgent
		{
			get
			{
				return this._Urgent;
			}
			set
			{
				if ((this._Urgent != value))
				{
					this.OnUrgentChanging(value);
					this.SendPropertyChanging();
					this._Urgent = value;
					this.SendPropertyChanged("Urgent");
					this.OnUrgentChanged();
				}
			}
		}
		
		[Column(Storage="_Local", DbType="TinyInt")]
		public System.Nullable<byte> Local
		{
			get
			{
				return this._Local;
			}
			set
			{
				if ((this._Local != value))
				{
					this.OnLocalChanging(value);
					this.SendPropertyChanging();
					this._Local = value;
					this.SendPropertyChanged("Local");
					this.OnLocalChanged();
				}
			}
		}
		
		[Column(Storage="_Discount1", DbType="SmallInt NOT NULL")]
		public short Discount1
		{
			get
			{
				return this._Discount1;
			}
			set
			{
				if ((this._Discount1 != value))
				{
					this.OnDiscount1Changing(value);
					this.SendPropertyChanging();
					this._Discount1 = value;
					this.SendPropertyChanged("Discount1");
					this.OnDiscount1Changed();
				}
			}
		}
		
		[Column(Storage="_Discount2", DbType="SmallInt NOT NULL")]
		public short Discount2
		{
			get
			{
				return this._Discount2;
			}
			set
			{
				if ((this._Discount2 != value))
				{
					this.OnDiscount2Changing(value);
					this.SendPropertyChanging();
					this._Discount2 = value;
					this.SendPropertyChanged("Discount2");
					this.OnDiscount2Changed();
				}
			}
		}
		
		[Column(Storage="_PriceLevel", DbType="TinyInt NOT NULL")]
		public byte PriceLevel
		{
			get
			{
				return this._PriceLevel;
			}
			set
			{
				if ((this._PriceLevel != value))
				{
					this.OnPriceLevelChanging(value);
					this.SendPropertyChanging();
					this._PriceLevel = value;
					this.SendPropertyChanged("PriceLevel");
					this.OnPriceLevelChanged();
				}
			}
		}
		
		[Column(Storage="_AccountClass", DbType="VarChar(50)")]
		public string AccountClass
		{
			get
			{
				return this._AccountClass;
			}
			set
			{
				if ((this._AccountClass != value))
				{
					this.OnAccountClassChanging(value);
					this.SendPropertyChanging();
					this._AccountClass = value;
					this.SendPropertyChanged("AccountClass");
					this.OnAccountClassChanged();
				}
			}
		}
		
		[Column(Storage="_OpenBal", DbType="Decimal(9,2) NOT NULL")]
		public decimal OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this.OnOpenBalChanging(value);
					this.SendPropertyChanging();
					this._OpenBal = value;
					this.SendPropertyChanged("OpenBal");
					this.OnOpenBalChanged();
				}
			}
		}
		
		[Column(Storage="_Current", DbType="Decimal(9,2) NOT NULL")]
		public decimal Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this.OnCurrentChanging(value);
					this.SendPropertyChanging();
					this._Current = value;
					this.SendPropertyChanged("Current");
					this.OnCurrentChanged();
				}
			}
		}
		
		[Column(Name="30Days", Storage="__30Days", DbType="Decimal(9,2) NOT NULL")]
		public decimal _30Days
		{
			get
			{
				return this.@__30Days;
			}
			set
			{
				if ((this.@__30Days != value))
				{
					this.On_30DaysChanging(value);
					this.SendPropertyChanging();
					this.@__30Days = value;
					this.SendPropertyChanged("_30Days");
					this.On_30DaysChanged();
				}
			}
		}
		
		[Column(Name="60Days", Storage="__60Days", DbType="Decimal(9,2) NOT NULL")]
		public decimal _60Days
		{
			get
			{
				return this.@__60Days;
			}
			set
			{
				if ((this.@__60Days != value))
				{
					this.On_60DaysChanging(value);
					this.SendPropertyChanging();
					this.@__60Days = value;
					this.SendPropertyChanged("_60Days");
					this.On_60DaysChanged();
				}
			}
		}
		
		[Column(Name="90Days", Storage="__90Days", DbType="Decimal(9,2) NOT NULL")]
		public decimal _90Days
		{
			get
			{
				return this.@__90Days;
			}
			set
			{
				if ((this.@__90Days != value))
				{
					this.On_90DaysChanging(value);
					this.SendPropertyChanging();
					this.@__90Days = value;
					this.SendPropertyChanged("_90Days");
					this.On_90DaysChanged();
				}
			}
		}
		
		[Column(Storage="_Terms", DbType="VarChar(196)")]
		public string Terms
		{
			get
			{
				return this._Terms;
			}
			set
			{
				if ((this._Terms != value))
				{
					this.OnTermsChanging(value);
					this.SendPropertyChanging();
					this._Terms = value;
					this.SendPropertyChanged("Terms");
					this.OnTermsChanged();
				}
			}
		}
		
		[Column(Storage="_NumDaysCredit", DbType="TinyInt NOT NULL")]
		public byte NumDaysCredit
		{
			get
			{
				return this._NumDaysCredit;
			}
			set
			{
				if ((this._NumDaysCredit != value))
				{
					this.OnNumDaysCreditChanging(value);
					this.SendPropertyChanging();
					this._NumDaysCredit = value;
					this.SendPropertyChanged("NumDaysCredit");
					this.OnNumDaysCreditChanged();
				}
			}
		}
		
		[Column(Storage="_CreditLimit", DbType="Decimal(9,2) NOT NULL")]
		public decimal CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[Column(Storage="_LastInvNum", DbType="Int")]
		public System.Nullable<int> LastInvNum
		{
			get
			{
				return this._LastInvNum;
			}
			set
			{
				if ((this._LastInvNum != value))
				{
					this.OnLastInvNumChanging(value);
					this.SendPropertyChanging();
					this._LastInvNum = value;
					this.SendPropertyChanged("LastInvNum");
					this.OnLastInvNumChanged();
				}
			}
		}
		
		[Column(Storage="_LastInvDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastInvDate
		{
			get
			{
				return this._LastInvDate;
			}
			set
			{
				if ((this._LastInvDate != value))
				{
					this.OnLastInvDateChanging(value);
					this.SendPropertyChanging();
					this._LastInvDate = value;
					this.SendPropertyChanged("LastInvDate");
					this.OnLastInvDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastInvAmt", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LastInvAmt
		{
			get
			{
				return this._LastInvAmt;
			}
			set
			{
				if ((this._LastInvAmt != value))
				{
					this.OnLastInvAmtChanging(value);
					this.SendPropertyChanging();
					this._LastInvAmt = value;
					this.SendPropertyChanged("LastInvAmt");
					this.OnLastInvAmtChanged();
				}
			}
		}
		
		[Column(Storage="_LastPayDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPayDate
		{
			get
			{
				return this._LastPayDate;
			}
			set
			{
				if ((this._LastPayDate != value))
				{
					this.OnLastPayDateChanging(value);
					this.SendPropertyChanging();
					this._LastPayDate = value;
					this.SendPropertyChanged("LastPayDate");
					this.OnLastPayDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastPayAmt", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LastPayAmt
		{
			get
			{
				return this._LastPayAmt;
			}
			set
			{
				if ((this._LastPayAmt != value))
				{
					this.OnLastPayAmtChanging(value);
					this.SendPropertyChanging();
					this._LastPayAmt = value;
					this.SendPropertyChanged("LastPayAmt");
					this.OnLastPayAmtChanged();
				}
			}
		}
		
		[Column(Storage="_LastPick", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPick
		{
			get
			{
				return this._LastPick;
			}
			set
			{
				if ((this._LastPick != value))
				{
					this.OnLastPickChanging(value);
					this.SendPropertyChanging();
					this._LastPick = value;
					this.SendPropertyChanged("LastPick");
					this.OnLastPickChanged();
				}
			}
		}
		
		[Column(Storage="_StaxNum", DbType="VarChar(10)")]
		public string StaxNum
		{
			get
			{
				return this._StaxNum;
			}
			set
			{
				if ((this._StaxNum != value))
				{
					this.OnStaxNumChanging(value);
					this.SendPropertyChanging();
					this._StaxNum = value;
					this.SendPropertyChanged("StaxNum");
					this.OnStaxNumChanged();
				}
			}
		}
		
		[Column(Storage="_WebLogin", DbType="VarChar(20)")]
		public string WebLogin
		{
			get
			{
				return this._WebLogin;
			}
			set
			{
				if ((this._WebLogin != value))
				{
					this.OnWebLoginChanging(value);
					this.SendPropertyChanging();
					this._WebLogin = value;
					this.SendPropertyChanged("WebLogin");
					this.OnWebLoginChanged();
				}
			}
		}
		
		[Column(Storage="_WebPassword", DbType="VarChar(15)")]
		public string WebPassword
		{
			get
			{
				return this._WebPassword;
			}
			set
			{
				if ((this._WebPassword != value))
				{
					this.OnWebPasswordChanging(value);
					this.SendPropertyChanging();
					this._WebPassword = value;
					this.SendPropertyChanged("WebPassword");
					this.OnWebPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_MTD", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MTD
		{
			get
			{
				return this._MTD;
			}
			set
			{
				if ((this._MTD != value))
				{
					this.OnMTDChanging(value);
					this.SendPropertyChanging();
					this._MTD = value;
					this.SendPropertyChanged("MTD");
					this.OnMTDChanged();
				}
			}
		}
		
		[Column(Storage="_YTD", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> YTD
		{
			get
			{
				return this._YTD;
			}
			set
			{
				if ((this._YTD != value))
				{
					this.OnYTDChanging(value);
					this.SendPropertyChanging();
					this._YTD = value;
					this.SendPropertyChanged("YTD");
					this.OnYTDChanged();
				}
			}
		}
		
		[Column(Storage="_LY", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LY
		{
			get
			{
				return this._LY;
			}
			set
			{
				if ((this._LY != value))
				{
					this.OnLYChanging(value);
					this.SendPropertyChanging();
					this._LY = value;
					this.SendPropertyChanged("LY");
					this.OnLYChanged();
				}
			}
		}
		
		[Column(Storage="_JAN", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> JAN
		{
			get
			{
				return this._JAN;
			}
			set
			{
				if ((this._JAN != value))
				{
					this.OnJANChanging(value);
					this.SendPropertyChanging();
					this._JAN = value;
					this.SendPropertyChanged("JAN");
					this.OnJANChanged();
				}
			}
		}
		
		[Column(Storage="_FEB", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FEB
		{
			get
			{
				return this._FEB;
			}
			set
			{
				if ((this._FEB != value))
				{
					this.OnFEBChanging(value);
					this.SendPropertyChanging();
					this._FEB = value;
					this.SendPropertyChanged("FEB");
					this.OnFEBChanged();
				}
			}
		}
		
		[Column(Storage="_MAR", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MAR
		{
			get
			{
				return this._MAR;
			}
			set
			{
				if ((this._MAR != value))
				{
					this.OnMARChanging(value);
					this.SendPropertyChanging();
					this._MAR = value;
					this.SendPropertyChanged("MAR");
					this.OnMARChanged();
				}
			}
		}
		
		[Column(Storage="_APR", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> APR
		{
			get
			{
				return this._APR;
			}
			set
			{
				if ((this._APR != value))
				{
					this.OnAPRChanging(value);
					this.SendPropertyChanging();
					this._APR = value;
					this.SendPropertyChanged("APR");
					this.OnAPRChanged();
				}
			}
		}
		
		[Column(Storage="_MAY", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MAY
		{
			get
			{
				return this._MAY;
			}
			set
			{
				if ((this._MAY != value))
				{
					this.OnMAYChanging(value);
					this.SendPropertyChanging();
					this._MAY = value;
					this.SendPropertyChanged("MAY");
					this.OnMAYChanged();
				}
			}
		}
		
		[Column(Storage="_JUN", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> JUN
		{
			get
			{
				return this._JUN;
			}
			set
			{
				if ((this._JUN != value))
				{
					this.OnJUNChanging(value);
					this.SendPropertyChanging();
					this._JUN = value;
					this.SendPropertyChanged("JUN");
					this.OnJUNChanged();
				}
			}
		}
		
		[Column(Storage="_JUL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> JUL
		{
			get
			{
				return this._JUL;
			}
			set
			{
				if ((this._JUL != value))
				{
					this.OnJULChanging(value);
					this.SendPropertyChanging();
					this._JUL = value;
					this.SendPropertyChanged("JUL");
					this.OnJULChanged();
				}
			}
		}
		
		[Column(Storage="_AUG", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AUG
		{
			get
			{
				return this._AUG;
			}
			set
			{
				if ((this._AUG != value))
				{
					this.OnAUGChanging(value);
					this.SendPropertyChanging();
					this._AUG = value;
					this.SendPropertyChanged("AUG");
					this.OnAUGChanged();
				}
			}
		}
		
		[Column(Storage="_SEP", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SEP
		{
			get
			{
				return this._SEP;
			}
			set
			{
				if ((this._SEP != value))
				{
					this.OnSEPChanging(value);
					this.SendPropertyChanging();
					this._SEP = value;
					this.SendPropertyChanged("SEP");
					this.OnSEPChanged();
				}
			}
		}
		
		[Column(Storage="_OCT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OCT
		{
			get
			{
				return this._OCT;
			}
			set
			{
				if ((this._OCT != value))
				{
					this.OnOCTChanging(value);
					this.SendPropertyChanging();
					this._OCT = value;
					this.SendPropertyChanged("OCT");
					this.OnOCTChanged();
				}
			}
		}
		
		[Column(Storage="_NOV", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NOV
		{
			get
			{
				return this._NOV;
			}
			set
			{
				if ((this._NOV != value))
				{
					this.OnNOVChanging(value);
					this.SendPropertyChanging();
					this._NOV = value;
					this.SendPropertyChanged("NOV");
					this.OnNOVChanged();
				}
			}
		}
		
		[Column(Storage="_DEC", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DEC
		{
			get
			{
				return this._DEC;
			}
			set
			{
				if ((this._DEC != value))
				{
					this.OnDECChanging(value);
					this.SendPropertyChanging();
					this._DEC = value;
					this.SendPropertyChanged("DEC");
					this.OnDECChanged();
				}
			}
		}
		
		[Column(Storage="_AbbrevName", DbType="VarChar(20)")]
		public string AbbrevName
		{
			get
			{
				return this._AbbrevName;
			}
			set
			{
				if ((this._AbbrevName != value))
				{
					this.OnAbbrevNameChanging(value);
					this.SendPropertyChanging();
					this._AbbrevName = value;
					this.SendPropertyChanged("AbbrevName");
					this.OnAbbrevNameChanged();
				}
			}
		}
		
		[Column(Storage="_PrintInvoice", DbType="Bit NOT NULL")]
		public bool PrintInvoice
		{
			get
			{
				return this._PrintInvoice;
			}
			set
			{
				if ((this._PrintInvoice != value))
				{
					this.OnPrintInvoiceChanging(value);
					this.SendPropertyChanging();
					this._PrintInvoice = value;
					this.SendPropertyChanged("PrintInvoice");
					this.OnPrintInvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceQty", DbType="Int NOT NULL")]
		public int InvoiceQty
		{
			get
			{
				return this._InvoiceQty;
			}
			set
			{
				if ((this._InvoiceQty != value))
				{
					this.OnInvoiceQtyChanging(value);
					this.SendPropertyChanging();
					this._InvoiceQty = value;
					this.SendPropertyChanged("InvoiceQty");
					this.OnInvoiceQtyChanged();
				}
			}
		}
		
		[Column(Storage="_PrintPackSlip", DbType="Bit NOT NULL")]
		public bool PrintPackSlip
		{
			get
			{
				return this._PrintPackSlip;
			}
			set
			{
				if ((this._PrintPackSlip != value))
				{
					this.OnPrintPackSlipChanging(value);
					this.SendPropertyChanging();
					this._PrintPackSlip = value;
					this.SendPropertyChanged("PrintPackSlip");
					this.OnPrintPackSlipChanged();
				}
			}
		}
		
		[Column(Storage="_PackSlipQty", DbType="Int NOT NULL")]
		public int PackSlipQty
		{
			get
			{
				return this._PackSlipQty;
			}
			set
			{
				if ((this._PackSlipQty != value))
				{
					this.OnPackSlipQtyChanging(value);
					this.SendPropertyChanging();
					this._PackSlipQty = value;
					this.SendPropertyChanged("PackSlipQty");
					this.OnPackSlipQtyChanged();
				}
			}
		}
		
		[Column(Storage="_RRPType", DbType="TinyInt NOT NULL")]
		public byte RRPType
		{
			get
			{
				return this._RRPType;
			}
			set
			{
				if ((this._RRPType != value))
				{
					this.OnRRPTypeChanging(value);
					this.SendPropertyChanging();
					this._RRPType = value;
					this.SendPropertyChanged("RRPType");
					this.OnRRPTypeChanged();
				}
			}
		}
		
		[Column(Storage="_RRPQty", DbType="Int NOT NULL")]
		public int RRPQty
		{
			get
			{
				return this._RRPQty;
			}
			set
			{
				if ((this._RRPQty != value))
				{
					this.OnRRPQtyChanging(value);
					this.SendPropertyChanging();
					this._RRPQty = value;
					this.SendPropertyChanged("RRPQty");
					this.OnRRPQtyChanged();
				}
			}
		}
		
		[Column(Storage="_RRPMarkup1", DbType="Decimal(9,2) NOT NULL")]
		public decimal RRPMarkup1
		{
			get
			{
				return this._RRPMarkup1;
			}
			set
			{
				if ((this._RRPMarkup1 != value))
				{
					this.OnRRPMarkup1Changing(value);
					this.SendPropertyChanging();
					this._RRPMarkup1 = value;
					this.SendPropertyChanged("RRPMarkup1");
					this.OnRRPMarkup1Changed();
				}
			}
		}
		
		[Column(Storage="_RRPMarkup2", DbType="Decimal(9,2) NOT NULL")]
		public decimal RRPMarkup2
		{
			get
			{
				return this._RRPMarkup2;
			}
			set
			{
				if ((this._RRPMarkup2 != value))
				{
					this.OnRRPMarkup2Changing(value);
					this.SendPropertyChanging();
					this._RRPMarkup2 = value;
					this.SendPropertyChanged("RRPMarkup2");
					this.OnRRPMarkup2Changed();
				}
			}
		}
		
		[Column(Storage="_International", DbType="Bit NOT NULL")]
		public bool International
		{
			get
			{
				return this._International;
			}
			set
			{
				if ((this._International != value))
				{
					this.OnInternationalChanging(value);
					this.SendPropertyChanging();
					this._International = value;
					this.SendPropertyChanged("International");
					this.OnInternationalChanged();
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(25)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[Column(Storage="_CurrencyType", DbType="VarChar(5)")]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this.OnCurrencyTypeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyType = value;
					this.SendPropertyChanged("CurrencyType");
					this.OnCurrencyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_CIF", DbType="Bit NOT NULL")]
		public bool CIF
		{
			get
			{
				return this._CIF;
			}
			set
			{
				if ((this._CIF != value))
				{
					this.OnCIFChanging(value);
					this.SendPropertyChanging();
					this._CIF = value;
					this.SendPropertyChanged("CIF");
					this.OnCIFChanged();
				}
			}
		}
		
		[Column(Storage="_FIS", DbType="Bit NOT NULL")]
		public bool FIS
		{
			get
			{
				return this._FIS;
			}
			set
			{
				if ((this._FIS != value))
				{
					this.OnFISChanging(value);
					this.SendPropertyChanging();
					this._FIS = value;
					this.SendPropertyChanged("FIS");
					this.OnFISChanged();
				}
			}
		}
		
		[Column(Storage="_FOB", DbType="Bit NOT NULL")]
		public bool FOB
		{
			get
			{
				return this._FOB;
			}
			set
			{
				if ((this._FOB != value))
				{
					this.OnFOBChanging(value);
					this.SendPropertyChanging();
					this._FOB = value;
					this.SendPropertyChanged("FOB");
					this.OnFOBChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_SpecialReq", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string SpecialReq
		{
			get
			{
				return this._SpecialReq;
			}
			set
			{
				if ((this._SpecialReq != value))
				{
					this.OnSpecialReqChanging(value);
					this.SendPropertyChanging();
					this._SpecialReq = value;
					this.SendPropertyChanged("SpecialReq");
					this.OnSpecialReqChanged();
				}
			}
		}
		
		[Column(Storage="_InvMsg", DbType="VarChar(120)")]
		public string InvMsg
		{
			get
			{
				return this._InvMsg;
			}
			set
			{
				if ((this._InvMsg != value))
				{
					this.OnInvMsgChanging(value);
					this.SendPropertyChanging();
					this._InvMsg = value;
					this.SendPropertyChanged("InvMsg");
					this.OnInvMsgChanged();
				}
			}
		}
		
		[Column(Storage="_SalesNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string SalesNotes
		{
			get
			{
				return this._SalesNotes;
			}
			set
			{
				if ((this._SalesNotes != value))
				{
					this.OnSalesNotesChanging(value);
					this.SendPropertyChanging();
					this._SalesNotes = value;
					this.SendPropertyChanged("SalesNotes");
					this.OnSalesNotesChanged();
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[Column(Storage="_FwdVal", DbType="Money")]
		public System.Nullable<decimal> FwdVal
		{
			get
			{
				return this._FwdVal;
			}
			set
			{
				if ((this._FwdVal != value))
				{
					this.OnFwdValChanging(value);
					this.SendPropertyChanging();
					this._FwdVal = value;
					this.SendPropertyChanged("FwdVal");
					this.OnFwdValChanged();
				}
			}
		}
		
		[Column(Storage="_SDI", DbType="Bit NOT NULL")]
		public bool SDI
		{
			get
			{
				return this._SDI;
			}
			set
			{
				if ((this._SDI != value))
				{
					this.OnSDIChanging(value);
					this.SendPropertyChanging();
					this._SDI = value;
					this.SendPropertyChanged("SDI");
					this.OnSDIChanged();
				}
			}
		}
		
		[Column(Storage="_OpenItem", DbType="Bit")]
		public System.Nullable<bool> OpenItem
		{
			get
			{
				return this._OpenItem;
			}
			set
			{
				if ((this._OpenItem != value))
				{
					this.OnOpenItemChanging(value);
					this.SendPropertyChanging();
					this._OpenItem = value;
					this.SendPropertyChanged("OpenItem");
					this.OnOpenItemChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentInv", DbType="Decimal(9,2) NOT NULL")]
		public decimal CurrentInv
		{
			get
			{
				return this._CurrentInv;
			}
			set
			{
				if ((this._CurrentInv != value))
				{
					this.OnCurrentInvChanging(value);
					this.SendPropertyChanging();
					this._CurrentInv = value;
					this.SendPropertyChanged("CurrentInv");
					this.OnCurrentInvChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentRec", DbType="Decimal(9,2) NOT NULL")]
		public decimal CurrentRec
		{
			get
			{
				return this._CurrentRec;
			}
			set
			{
				if ((this._CurrentRec != value))
				{
					this.OnCurrentRecChanging(value);
					this.SendPropertyChanging();
					this._CurrentRec = value;
					this.SendPropertyChanged("CurrentRec");
					this.OnCurrentRecChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentDisc", DbType="Decimal(9,2) NOT NULL")]
		public decimal CurrentDisc
		{
			get
			{
				return this._CurrentDisc;
			}
			set
			{
				if ((this._CurrentDisc != value))
				{
					this.OnCurrentDiscChanging(value);
					this.SendPropertyChanging();
					this._CurrentDisc = value;
					this.SendPropertyChanged("CurrentDisc");
					this.OnCurrentDiscChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentJnl", DbType="Decimal(9,2) NOT NULL")]
		public decimal CurrentJnl
		{
			get
			{
				return this._CurrentJnl;
			}
			set
			{
				if ((this._CurrentJnl != value))
				{
					this.OnCurrentJnlChanging(value);
					this.SendPropertyChanging();
					this._CurrentJnl = value;
					this.SendPropertyChanged("CurrentJnl");
					this.OnCurrentJnlChanged();
				}
			}
		}
		
		[Column(Storage="_FlagMsg", DbType="VarChar(20)")]
		public string FlagMsg
		{
			get
			{
				return this._FlagMsg;
			}
			set
			{
				if ((this._FlagMsg != value))
				{
					this.OnFlagMsgChanging(value);
					this.SendPropertyChanging();
					this._FlagMsg = value;
					this.SendPropertyChanged("FlagMsg");
					this.OnFlagMsgChanged();
				}
			}
		}
		
		[Column(Storage="_SalesRep", DbType="VarChar(25)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					this.OnSalesRepChanging(value);
					this.SendPropertyChanging();
					this._SalesRep = value;
					this.SendPropertyChanged("SalesRep");
					this.OnSalesRepChanged();
				}
			}
		}
		
		[Column(Storage="_SalesRep2", DbType="VarChar(25)")]
		public string SalesRep2
		{
			get
			{
				return this._SalesRep2;
			}
			set
			{
				if ((this._SalesRep2 != value))
				{
					this.OnSalesRep2Changing(value);
					this.SendPropertyChanging();
					this._SalesRep2 = value;
					this.SendPropertyChanged("SalesRep2");
					this.OnSalesRep2Changed();
				}
			}
		}
		
		[Column(Storage="_StatementNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string StatementNotes
		{
			get
			{
				return this._StatementNotes;
			}
			set
			{
				if ((this._StatementNotes != value))
				{
					this.OnStatementNotesChanging(value);
					this.SendPropertyChanging();
					this._StatementNotes = value;
					this.SendPropertyChanged("StatementNotes");
					this.OnStatementNotesChanged();
				}
			}
		}
		
		[Column(Storage="_ABN", DbType="VarChar(15)")]
		public string ABN
		{
			get
			{
				return this._ABN;
			}
			set
			{
				if ((this._ABN != value))
				{
					this.OnABNChanging(value);
					this.SendPropertyChanging();
					this._ABN = value;
					this.SendPropertyChanged("ABN");
					this.OnABNChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNumOK", DbType="Int")]
		public System.Nullable<int> OrdNumOK
		{
			get
			{
				return this._OrdNumOK;
			}
			set
			{
				if ((this._OrdNumOK != value))
				{
					this.OnOrdNumOKChanging(value);
					this.SendPropertyChanging();
					this._OrdNumOK = value;
					this.SendPropertyChanged("OrdNumOK");
					this.OnOrdNumOKChanged();
				}
			}
		}
		
		[Column(Storage="_ShipBy", DbType="VarChar(40)")]
		public string ShipBy
		{
			get
			{
				return this._ShipBy;
			}
			set
			{
				if ((this._ShipBy != value))
				{
					this.OnShipByChanging(value);
					this.SendPropertyChanging();
					this._ShipBy = value;
					this.SendPropertyChanged("ShipBy");
					this.OnShipByChanged();
				}
			}
		}
		
		[Column(Storage="_PrintLabel", DbType="Bit NOT NULL")]
		public bool PrintLabel
		{
			get
			{
				return this._PrintLabel;
			}
			set
			{
				if ((this._PrintLabel != value))
				{
					this.OnPrintLabelChanging(value);
					this.SendPropertyChanging();
					this._PrintLabel = value;
					this.SendPropertyChanged("PrintLabel");
					this.OnPrintLabelChanged();
				}
			}
		}
		
		[Column(Storage="_GotCalls", DbType="Bit NOT NULL")]
		public bool GotCalls
		{
			get
			{
				return this._GotCalls;
			}
			set
			{
				if ((this._GotCalls != value))
				{
					this.OnGotCallsChanging(value);
					this.SendPropertyChanging();
					this._GotCalls = value;
					this.SendPropertyChanged("GotCalls");
					this.OnGotCallsChanged();
				}
			}
		}
		
		[Column(Storage="_NextCall", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextCall
		{
			get
			{
				return this._NextCall;
			}
			set
			{
				if ((this._NextCall != value))
				{
					this.OnNextCallChanging(value);
					this.SendPropertyChanging();
					this._NextCall = value;
					this.SendPropertyChanged("NextCall");
					this.OnNextCallChanged();
				}
			}
		}
		
		[Column(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[Column(Storage="_InActive", DbType="Bit NOT NULL")]
		public bool InActive
		{
			get
			{
				return this._InActive;
			}
			set
			{
				if ((this._InActive != value))
				{
					this.OnInActiveChanging(value);
					this.SendPropertyChanging();
					this._InActive = value;
					this.SendPropertyChanged("InActive");
					this.OnInActiveChanged();
				}
			}
		}
		
		[Column(Storage="_CreditHold", DbType="Bit NOT NULL")]
		public bool CreditHold
		{
			get
			{
				return this._CreditHold;
			}
			set
			{
				if ((this._CreditHold != value))
				{
					this.OnCreditHoldChanging(value);
					this.SendPropertyChanging();
					this._CreditHold = value;
					this.SendPropertyChanged("CreditHold");
					this.OnCreditHoldChanged();
				}
			}
		}
		
		[Column(Storage="_Selector", DbType="VarChar(5)")]
		public string Selector
		{
			get
			{
				return this._Selector;
			}
			set
			{
				if ((this._Selector != value))
				{
					this.OnSelectorChanging(value);
					this.SendPropertyChanging();
					this._Selector = value;
					this.SendPropertyChanged("Selector");
					this.OnSelectorChanged();
				}
			}
		}
		
		[Column(Storage="_FwdDateAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal FwdDateAmount
		{
			get
			{
				return this._FwdDateAmount;
			}
			set
			{
				if ((this._FwdDateAmount != value))
				{
					this.OnFwdDateAmountChanging(value);
					this.SendPropertyChanging();
					this._FwdDateAmount = value;
					this.SendPropertyChanged("FwdDateAmount");
					this.OnFwdDateAmountChanged();
				}
			}
		}
		
		[Column(Storage="_Rebate", DbType="Decimal(9,2) NOT NULL")]
		public decimal Rebate
		{
			get
			{
				return this._Rebate;
			}
			set
			{
				if ((this._Rebate != value))
				{
					this.OnRebateChanging(value);
					this.SendPropertyChanging();
					this._Rebate = value;
					this.SendPropertyChanged("Rebate");
					this.OnRebateChanged();
				}
			}
		}
		
		[Column(Storage="_LY2", DbType="Decimal(18,2) NOT NULL")]
		public decimal LY2
		{
			get
			{
				return this._LY2;
			}
			set
			{
				if ((this._LY2 != value))
				{
					this.OnLY2Changing(value);
					this.SendPropertyChanging();
					this._LY2 = value;
					this.SendPropertyChanged("LY2");
					this.OnLY2Changed();
				}
			}
		}
		
		[Column(Storage="_PmFrequency", DbType="TinyInt NOT NULL")]
		public byte PmFrequency
		{
			get
			{
				return this._PmFrequency;
			}
			set
			{
				if ((this._PmFrequency != value))
				{
					this.OnPmFrequencyChanging(value);
					this.SendPropertyChanging();
					this._PmFrequency = value;
					this.SendPropertyChanged("PmFrequency");
					this.OnPmFrequencyChanged();
				}
			}
		}
		
		[Column(Storage="_PmPeriod", DbType="TinyInt")]
		public System.Nullable<byte> PmPeriod
		{
			get
			{
				return this._PmPeriod;
			}
			set
			{
				if ((this._PmPeriod != value))
				{
					this.OnPmPeriodChanging(value);
					this.SendPropertyChanging();
					this._PmPeriod = value;
					this.SendPropertyChanged("PmPeriod");
					this.OnPmPeriodChanged();
				}
			}
		}
		
		[Column(Storage="_PmLastVisit", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PmLastVisit
		{
			get
			{
				return this._PmLastVisit;
			}
			set
			{
				if ((this._PmLastVisit != value))
				{
					this.OnPmLastVisitChanging(value);
					this.SendPropertyChanging();
					this._PmLastVisit = value;
					this.SendPropertyChanged("PmLastVisit");
					this.OnPmLastVisitChanged();
				}
			}
		}
		
		[Column(Storage="_PMNextVisit", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PMNextVisit
		{
			get
			{
				return this._PMNextVisit;
			}
			set
			{
				if ((this._PMNextVisit != value))
				{
					this.OnPMNextVisitChanging(value);
					this.SendPropertyChanging();
					this._PMNextVisit = value;
					this.SendPropertyChanged("PMNextVisit");
					this.OnPMNextVisitChanged();
				}
			}
		}
		
		[Column(Storage="_OldParent", DbType="VarChar(12)")]
		public string OldParent
		{
			get
			{
				return this._OldParent;
			}
			set
			{
				if ((this._OldParent != value))
				{
					this.OnOldParentChanging(value);
					this.SendPropertyChanging();
					this._OldParent = value;
					this.SendPropertyChanged("OldParent");
					this.OnOldParentChanged();
				}
			}
		}
		
		[Column(Storage="_DefaultInvStyle", DbType="TinyInt NOT NULL")]
		public byte DefaultInvStyle
		{
			get
			{
				return this._DefaultInvStyle;
			}
			set
			{
				if ((this._DefaultInvStyle != value))
				{
					this.OnDefaultInvStyleChanging(value);
					this.SendPropertyChanging();
					this._DefaultInvStyle = value;
					this.SendPropertyChanged("DefaultInvStyle");
					this.OnDefaultInvStyleChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceFreq", DbType="TinyInt NOT NULL")]
		public byte InvoiceFreq
		{
			get
			{
				return this._InvoiceFreq;
			}
			set
			{
				if ((this._InvoiceFreq != value))
				{
					this.OnInvoiceFreqChanging(value);
					this.SendPropertyChanging();
					this._InvoiceFreq = value;
					this.SendPropertyChanged("InvoiceFreq");
					this.OnInvoiceFreqChanged();
				}
			}
		}
		
		[Column(Storage="_SalesCtrlAccGL", DbType="VarChar(16)")]
		public string SalesCtrlAccGL
		{
			get
			{
				return this._SalesCtrlAccGL;
			}
			set
			{
				if ((this._SalesCtrlAccGL != value))
				{
					this.OnSalesCtrlAccGLChanging(value);
					this.SendPropertyChanging();
					this._SalesCtrlAccGL = value;
					this.SendPropertyChanged("SalesCtrlAccGL");
					this.OnSalesCtrlAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_SalesAccGL", DbType="VarChar(16)")]
		public string SalesAccGL
		{
			get
			{
				return this._SalesAccGL;
			}
			set
			{
				if ((this._SalesAccGL != value))
				{
					this.OnSalesAccGLChanging(value);
					this.SendPropertyChanging();
					this._SalesAccGL = value;
					this.SendPropertyChanged("SalesAccGL");
					this.OnSalesAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_LJAN", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LJAN
		{
			get
			{
				return this._LJAN;
			}
			set
			{
				if ((this._LJAN != value))
				{
					this.OnLJANChanging(value);
					this.SendPropertyChanging();
					this._LJAN = value;
					this.SendPropertyChanged("LJAN");
					this.OnLJANChanged();
				}
			}
		}
		
		[Column(Storage="_LFEB", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LFEB
		{
			get
			{
				return this._LFEB;
			}
			set
			{
				if ((this._LFEB != value))
				{
					this.OnLFEBChanging(value);
					this.SendPropertyChanging();
					this._LFEB = value;
					this.SendPropertyChanged("LFEB");
					this.OnLFEBChanged();
				}
			}
		}
		
		[Column(Storage="_LMAR", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LMAR
		{
			get
			{
				return this._LMAR;
			}
			set
			{
				if ((this._LMAR != value))
				{
					this.OnLMARChanging(value);
					this.SendPropertyChanging();
					this._LMAR = value;
					this.SendPropertyChanged("LMAR");
					this.OnLMARChanged();
				}
			}
		}
		
		[Column(Storage="_LAPR", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LAPR
		{
			get
			{
				return this._LAPR;
			}
			set
			{
				if ((this._LAPR != value))
				{
					this.OnLAPRChanging(value);
					this.SendPropertyChanging();
					this._LAPR = value;
					this.SendPropertyChanged("LAPR");
					this.OnLAPRChanged();
				}
			}
		}
		
		[Column(Storage="_LMAY", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LMAY
		{
			get
			{
				return this._LMAY;
			}
			set
			{
				if ((this._LMAY != value))
				{
					this.OnLMAYChanging(value);
					this.SendPropertyChanging();
					this._LMAY = value;
					this.SendPropertyChanged("LMAY");
					this.OnLMAYChanged();
				}
			}
		}
		
		[Column(Storage="_LJUN", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LJUN
		{
			get
			{
				return this._LJUN;
			}
			set
			{
				if ((this._LJUN != value))
				{
					this.OnLJUNChanging(value);
					this.SendPropertyChanging();
					this._LJUN = value;
					this.SendPropertyChanged("LJUN");
					this.OnLJUNChanged();
				}
			}
		}
		
		[Column(Storage="_LJUL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LJUL
		{
			get
			{
				return this._LJUL;
			}
			set
			{
				if ((this._LJUL != value))
				{
					this.OnLJULChanging(value);
					this.SendPropertyChanging();
					this._LJUL = value;
					this.SendPropertyChanged("LJUL");
					this.OnLJULChanged();
				}
			}
		}
		
		[Column(Storage="_LAUG", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LAUG
		{
			get
			{
				return this._LAUG;
			}
			set
			{
				if ((this._LAUG != value))
				{
					this.OnLAUGChanging(value);
					this.SendPropertyChanging();
					this._LAUG = value;
					this.SendPropertyChanged("LAUG");
					this.OnLAUGChanged();
				}
			}
		}
		
		[Column(Storage="_LSEP", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LSEP
		{
			get
			{
				return this._LSEP;
			}
			set
			{
				if ((this._LSEP != value))
				{
					this.OnLSEPChanging(value);
					this.SendPropertyChanging();
					this._LSEP = value;
					this.SendPropertyChanged("LSEP");
					this.OnLSEPChanged();
				}
			}
		}
		
		[Column(Storage="_LOCT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LOCT
		{
			get
			{
				return this._LOCT;
			}
			set
			{
				if ((this._LOCT != value))
				{
					this.OnLOCTChanging(value);
					this.SendPropertyChanging();
					this._LOCT = value;
					this.SendPropertyChanged("LOCT");
					this.OnLOCTChanged();
				}
			}
		}
		
		[Column(Storage="_LNOV", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LNOV
		{
			get
			{
				return this._LNOV;
			}
			set
			{
				if ((this._LNOV != value))
				{
					this.OnLNOVChanging(value);
					this.SendPropertyChanging();
					this._LNOV = value;
					this.SendPropertyChanged("LNOV");
					this.OnLNOVChanged();
				}
			}
		}
		
		[Column(Storage="_LDEC", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LDEC
		{
			get
			{
				return this._LDEC;
			}
			set
			{
				if ((this._LDEC != value))
				{
					this.OnLDECChanging(value);
					this.SendPropertyChanging();
					this._LDEC = value;
					this.SendPropertyChanged("LDEC");
					this.OnLDECChanged();
				}
			}
		}
		
		[Column(Storage="_NoCreditLimit", DbType="Bit")]
		public System.Nullable<bool> NoCreditLimit
		{
			get
			{
				return this._NoCreditLimit;
			}
			set
			{
				if ((this._NoCreditLimit != value))
				{
					this.OnNoCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._NoCreditLimit = value;
					this.SendPropertyChanged("NoCreditLimit");
					this.OnNoCreditLimitChanged();
				}
			}
		}
		
		[Column(Storage="_StockLocation", DbType="Int")]
		public System.Nullable<int> StockLocation
		{
			get
			{
				return this._StockLocation;
			}
			set
			{
				if ((this._StockLocation != value))
				{
					if (this._LOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockLocationChanging(value);
					this.SendPropertyChanging();
					this._StockLocation = value;
					this.SendPropertyChanged("StockLocation");
					this.OnStockLocationChanged();
				}
			}
		}
		
		[Column(Storage="_SiteEngineer", DbType="Char(25)")]
		public string SiteEngineer
		{
			get
			{
				return this._SiteEngineer;
			}
			set
			{
				if ((this._SiteEngineer != value))
				{
					this.OnSiteEngineerChanging(value);
					this.SendPropertyChanging();
					this._SiteEngineer = value;
					this.SendPropertyChanged("SiteEngineer");
					this.OnSiteEngineerChanged();
				}
			}
		}
		
		[Column(Storage="_LastCallBy", DbType="VarChar(25)")]
		public string LastCallBy
		{
			get
			{
				return this._LastCallBy;
			}
			set
			{
				if ((this._LastCallBy != value))
				{
					this.OnLastCallByChanging(value);
					this.SendPropertyChanging();
					this._LastCallBy = value;
					this.SendPropertyChanged("LastCallBy");
					this.OnLastCallByChanged();
				}
			}
		}
		
		[Column(Storage="_TMInvAccGL", DbType="VarChar(16)")]
		public string TMInvAccGL
		{
			get
			{
				return this._TMInvAccGL;
			}
			set
			{
				if ((this._TMInvAccGL != value))
				{
					this.OnTMInvAccGLChanging(value);
					this.SendPropertyChanging();
					this._TMInvAccGL = value;
					this.SendPropertyChanged("TMInvAccGL");
					this.OnTMInvAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_OverpayBucket", DbType="Money")]
		public System.Nullable<decimal> OverpayBucket
		{
			get
			{
				return this._OverpayBucket;
			}
			set
			{
				if ((this._OverpayBucket != value))
				{
					this.OnOverpayBucketChanging(value);
					this.SendPropertyChanging();
					this._OverpayBucket = value;
					this.SendPropertyChanged("OverpayBucket");
					this.OnOverpayBucketChanged();
				}
			}
		}
		
		[Column(Storage="_InterCompany", DbType="Bit NOT NULL")]
		public bool InterCompany
		{
			get
			{
				return this._InterCompany;
			}
			set
			{
				if ((this._InterCompany != value))
				{
					this.OnInterCompanyChanging(value);
					this.SendPropertyChanging();
					this._InterCompany = value;
					this.SendPropertyChanged("InterCompany");
					this.OnInterCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_Merged", DbType="Bit NOT NULL")]
		public bool Merged
		{
			get
			{
				return this._Merged;
			}
			set
			{
				if ((this._Merged != value))
				{
					this.OnMergedChanging(value);
					this.SendPropertyChanging();
					this._Merged = value;
					this.SendPropertyChanged("Merged");
					this.OnMergedChanged();
				}
			}
		}
		
		[Column(Storage="_PreMerged", DbType="Bit NOT NULL")]
		public bool PreMerged
		{
			get
			{
				return this._PreMerged;
			}
			set
			{
				if ((this._PreMerged != value))
				{
					this.OnPreMergedChanging(value);
					this.SendPropertyChanging();
					this._PreMerged = value;
					this.SendPropertyChanged("PreMerged");
					this.OnPreMergedChanged();
				}
			}
		}
		
		[Column(Storage="_ContractLocation", DbType="VarChar(5)")]
		public string ContractLocation
		{
			get
			{
				return this._ContractLocation;
			}
			set
			{
				if ((this._ContractLocation != value))
				{
					this.OnContractLocationChanging(value);
					this.SendPropertyChanging();
					this._ContractLocation = value;
					this.SendPropertyChanged("ContractLocation");
					this.OnContractLocationChanged();
				}
			}
		}
		
		[Column(Storage="_IMRep", DbType="VarChar(25)")]
		public string IMRep
		{
			get
			{
				return this._IMRep;
			}
			set
			{
				if ((this._IMRep != value))
				{
					this.OnIMRepChanging(value);
					this.SendPropertyChanging();
					this._IMRep = value;
					this.SendPropertyChanged("IMRep");
					this.OnIMRepChanged();
				}
			}
		}
		
		[Column(Storage="_IPRep", DbType="VarChar(25)")]
		public string IPRep
		{
			get
			{
				return this._IPRep;
			}
			set
			{
				if ((this._IPRep != value))
				{
					this.OnIPRepChanging(value);
					this.SendPropertyChanging();
					this._IPRep = value;
					this.SendPropertyChanged("IPRep");
					this.OnIPRepChanged();
				}
			}
		}
		
		[Column(Storage="_RM1", DbType="VarChar(25)")]
		public string RM1
		{
			get
			{
				return this._RM1;
			}
			set
			{
				if ((this._RM1 != value))
				{
					this.OnRM1Changing(value);
					this.SendPropertyChanging();
					this._RM1 = value;
					this.SendPropertyChanged("RM1");
					this.OnRM1Changed();
				}
			}
		}
		
		[Column(Storage="_RM2", DbType="VarChar(25)")]
		public string RM2
		{
			get
			{
				return this._RM2;
			}
			set
			{
				if ((this._RM2 != value))
				{
					this.OnRM2Changing(value);
					this.SendPropertyChanging();
					this._RM2 = value;
					this.SendPropertyChanged("RM2");
					this.OnRM2Changed();
				}
			}
		}
		
		[Column(Storage="_SeparateBatchPrint", DbType="Int NOT NULL")]
		public int SeparateBatchPrint
		{
			get
			{
				return this._SeparateBatchPrint;
			}
			set
			{
				if ((this._SeparateBatchPrint != value))
				{
					this.OnSeparateBatchPrintChanging(value);
					this.SendPropertyChanging();
					this._SeparateBatchPrint = value;
					this.SendPropertyChanged("SeparateBatchPrint");
					this.OnSeparateBatchPrintChanged();
				}
			}
		}
		
		[Column(Storage="_SoftInvoice", DbType="Bit NOT NULL")]
		public bool SoftInvoice
		{
			get
			{
				return this._SoftInvoice;
			}
			set
			{
				if ((this._SoftInvoice != value))
				{
					this.OnSoftInvoiceChanging(value);
					this.SendPropertyChanging();
					this._SoftInvoice = value;
					this.SendPropertyChanged("SoftInvoice");
					this.OnSoftInvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_SoftInvoicePath", DbType="VarChar(100)")]
		public string SoftInvoicePath
		{
			get
			{
				return this._SoftInvoicePath;
			}
			set
			{
				if ((this._SoftInvoicePath != value))
				{
					this.OnSoftInvoicePathChanging(value);
					this.SendPropertyChanging();
					this._SoftInvoicePath = value;
					this.SendPropertyChanged("SoftInvoicePath");
					this.OnSoftInvoicePathChanged();
				}
			}
		}
		
		[Column(Storage="_ReportingGroupID", DbType="Int")]
		public System.Nullable<int> ReportingGroupID
		{
			get
			{
				return this._ReportingGroupID;
			}
			set
			{
				if ((this._ReportingGroupID != value))
				{
					if (this._INT_REPORTING_GROUPS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ReportingGroupID = value;
					this.SendPropertyChanged("ReportingGroupID");
					this.OnReportingGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_MixedInternational", DbType="Bit NOT NULL")]
		public bool MixedInternational
		{
			get
			{
				return this._MixedInternational;
			}
			set
			{
				if ((this._MixedInternational != value))
				{
					this.OnMixedInternationalChanging(value);
					this.SendPropertyChanging();
					this._MixedInternational = value;
					this.SendPropertyChanged("MixedInternational");
					this.OnMixedInternationalChanged();
				}
			}
		}
		
		[Column(Storage="_PDFInvoice", DbType="Bit NOT NULL")]
		public bool PDFInvoice
		{
			get
			{
				return this._PDFInvoice;
			}
			set
			{
				if ((this._PDFInvoice != value))
				{
					this.OnPDFInvoiceChanging(value);
					this.SendPropertyChanging();
					this._PDFInvoice = value;
					this.SendPropertyChanged("PDFInvoice");
					this.OnPDFInvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_PDFInvoiceEmail", DbType="VarChar(100)")]
		public string PDFInvoiceEmail
		{
			get
			{
				return this._PDFInvoiceEmail;
			}
			set
			{
				if ((this._PDFInvoiceEmail != value))
				{
					this.OnPDFInvoiceEmailChanging(value);
					this.SendPropertyChanging();
					this._PDFInvoiceEmail = value;
					this.SendPropertyChanged("PDFInvoiceEmail");
					this.OnPDFInvoiceEmailChanged();
				}
			}
		}
		
		[Column(Storage="_BSGTechnicalOwner", DbType="VarChar(25)")]
		public string BSGTechnicalOwner
		{
			get
			{
				return this._BSGTechnicalOwner;
			}
			set
			{
				if ((this._BSGTechnicalOwner != value))
				{
					this.OnBSGTechnicalOwnerChanging(value);
					this.SendPropertyChanging();
					this._BSGTechnicalOwner = value;
					this.SendPropertyChanged("BSGTechnicalOwner");
					this.OnBSGTechnicalOwnerChanged();
				}
			}
		}
		
		[Column(Storage="_SalesRepBSG", DbType="VarChar(25)")]
		public string SalesRepBSG
		{
			get
			{
				return this._SalesRepBSG;
			}
			set
			{
				if ((this._SalesRepBSG != value))
				{
					this.OnSalesRepBSGChanging(value);
					this.SendPropertyChanging();
					this._SalesRepBSG = value;
					this.SendPropertyChanged("SalesRepBSG");
					this.OnSalesRepBSGChanged();
				}
			}
		}
		
		[Column(Storage="_BillingMethod", DbType="Int NOT NULL")]
		public int BillingMethod
		{
			get
			{
				return this._BillingMethod;
			}
			set
			{
				if ((this._BillingMethod != value))
				{
					this.OnBillingMethodChanging(value);
					this.SendPropertyChanging();
					this._BillingMethod = value;
					this.SendPropertyChanged("BillingMethod");
					this.OnBillingMethodChanged();
				}
			}
		}
		
		[Column(Storage="_BillToLocation", DbType="Bit NOT NULL")]
		public bool BillToLocation
		{
			get
			{
				return this._BillToLocation;
			}
			set
			{
				if ((this._BillToLocation != value))
				{
					this.OnBillToLocationChanging(value);
					this.SendPropertyChanging();
					this._BillToLocation = value;
					this.SendPropertyChanged("BillToLocation");
					this.OnBillToLocationChanged();
				}
			}
		}
		
		[Column(Storage="_PrintAlways", DbType="Bit NOT NULL")]
		public bool PrintAlways
		{
			get
			{
				return this._PrintAlways;
			}
			set
			{
				if ((this._PrintAlways != value))
				{
					this.OnPrintAlwaysChanging(value);
					this.SendPropertyChanging();
					this._PrintAlways = value;
					this.SendPropertyChanged("PrintAlways");
					this.OnPrintAlwaysChanged();
				}
			}
		}
		
		[Column(Storage="_OriginalAccountDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OriginalAccountDate
		{
			get
			{
				return this._OriginalAccountDate;
			}
			set
			{
				if ((this._OriginalAccountDate != value))
				{
					this.OnOriginalAccountDateChanging(value);
					this.SendPropertyChanging();
					this._OriginalAccountDate = value;
					this.SendPropertyChanged("OriginalAccountDate");
					this.OnOriginalAccountDateChanged();
				}
			}
		}
		
		[Column(Storage="_PDFInvoiceToContacts", DbType="Bit")]
		public System.Nullable<bool> PDFInvoiceToContacts
		{
			get
			{
				return this._PDFInvoiceToContacts;
			}
			set
			{
				if ((this._PDFInvoiceToContacts != value))
				{
					this.OnPDFInvoiceToContactsChanging(value);
					this.SendPropertyChanging();
					this._PDFInvoiceToContacts = value;
					this.SendPropertyChanged("PDFInvoiceToContacts");
					this.OnPDFInvoiceToContactsChanged();
				}
			}
		}
		
		[Column(Storage="_PrimaryFinanceContact", DbType="Int")]
		public System.Nullable<int> PrimaryFinanceContact
		{
			get
			{
				return this._PrimaryFinanceContact;
			}
			set
			{
				if ((this._PrimaryFinanceContact != value))
				{
					this.OnPrimaryFinanceContactChanging(value);
					this.SendPropertyChanging();
					this._PrimaryFinanceContact = value;
					this.SendPropertyChanged("PrimaryFinanceContact");
					this.OnPrimaryFinanceContactChanged();
				}
			}
		}
		
		[Column(Storage="_FinancePhone", DbType="VarChar(20)")]
		public string FinancePhone
		{
			get
			{
				return this._FinancePhone;
			}
			set
			{
				if ((this._FinancePhone != value))
				{
					this.OnFinancePhoneChanging(value);
					this.SendPropertyChanging();
					this._FinancePhone = value;
					this.SendPropertyChanged("FinancePhone");
					this.OnFinancePhoneChanged();
				}
			}
		}
		
		[Column(Storage="_FinanceFax", DbType="VarChar(20)")]
		public string FinanceFax
		{
			get
			{
				return this._FinanceFax;
			}
			set
			{
				if ((this._FinanceFax != value))
				{
					this.OnFinanceFaxChanging(value);
					this.SendPropertyChanging();
					this._FinanceFax = value;
					this.SendPropertyChanged("FinanceFax");
					this.OnFinanceFaxChanged();
				}
			}
		}
		
		[Column(Storage="_FinancePhoneAfterHrs", DbType="VarChar(20)")]
		public string FinancePhoneAfterHrs
		{
			get
			{
				return this._FinancePhoneAfterHrs;
			}
			set
			{
				if ((this._FinancePhoneAfterHrs != value))
				{
					this.OnFinancePhoneAfterHrsChanging(value);
					this.SendPropertyChanging();
					this._FinancePhoneAfterHrs = value;
					this.SendPropertyChanged("FinancePhoneAfterHrs");
					this.OnFinancePhoneAfterHrsChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Decimal(10,7)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Decimal(10,7)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Issue", DbType="Bit NOT NULL")]
		public bool Issue
		{
			get
			{
				return this._Issue;
			}
			set
			{
				if ((this._Issue != value))
				{
					this.OnIssueChanging(value);
					this.SendPropertyChanging();
					this._Issue = value;
					this.SendPropertyChanged("Issue");
					this.OnIssueChanged();
				}
			}
		}
		
		[Column(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[Column(Storage="_EngineerNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string EngineerNotes
		{
			get
			{
				return this._EngineerNotes;
			}
			set
			{
				if ((this._EngineerNotes != value))
				{
					this.OnEngineerNotesChanging(value);
					this.SendPropertyChanging();
					this._EngineerNotes = value;
					this.SendPropertyChanged("EngineerNotes");
					this.OnEngineerNotesChanged();
				}
			}
		}
		
		[Column(Storage="_TechnicalAccountManager", DbType="VarChar(25)")]
		public string TechnicalAccountManager
		{
			get
			{
				return this._TechnicalAccountManager;
			}
			set
			{
				if ((this._TechnicalAccountManager != value))
				{
					this.OnTechnicalAccountManagerChanging(value);
					this.SendPropertyChanging();
					this._TechnicalAccountManager = value;
					this.SendPropertyChanged("TechnicalAccountManager");
					this.OnTechnicalAccountManagerChanged();
				}
			}
		}
		
		[Column(Storage="_GLState", DbType="Int")]
		public System.Nullable<int> GLState
		{
			get
			{
				return this._GLState;
			}
			set
			{
				if ((this._GLState != value))
				{
					if (this._GL_STATES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLStateChanging(value);
					this.SendPropertyChanging();
					this._GLState = value;
					this.SendPropertyChanged("GLState");
					this.OnGLStateChanged();
				}
			}
		}
		
		[Column(Storage="_ExcludeFromCarbonTax", DbType="Bit NOT NULL")]
		public bool ExcludeFromCarbonTax
		{
			get
			{
				return this._ExcludeFromCarbonTax;
			}
			set
			{
				if ((this._ExcludeFromCarbonTax != value))
				{
					this.OnExcludeFromCarbonTaxChanging(value);
					this.SendPropertyChanging();
					this._ExcludeFromCarbonTax = value;
					this.SendPropertyChanged("ExcludeFromCarbonTax");
					this.OnExcludeFromCarbonTaxChanged();
				}
			}
		}
		
		[Association(Name="FK__DEBTORS_3__Accou__1380ED52", Storage="_DEBTORS_3P_AGREEMENTS", ThisKey="AccountID", OtherKey="AccountID", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_3P_AGREEMENTS> DEBTORS_3P_AGREEMENTS
		{
			get
			{
				return this._DEBTORS_3P_AGREEMENTS;
			}
			set
			{
				this._DEBTORS_3P_AGREEMENTS.Assign(value);
			}
		}
		
		[Association(Name="FK_CONTACTS_DEBTORS", Storage="_CONTACTS", ThisKey="AccountID", OtherKey="AccountID", DeleteRule="CASCADE")]
		public EntitySet<CONTACTS> CONTACTS
		{
			get
			{
				return this._CONTACTS;
			}
			set
			{
				this._CONTACTS.Assign(value);
			}
		}
		
		[Association(Name="FK_CTRAC_HEADER_DEBTORS", Storage="_CTRAC_HEADER", ThisKey="AccountID", OtherKey="AccountId", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_HEADER> CTRAC_HEADER
		{
			get
			{
				return this._CTRAC_HEADER;
			}
			set
			{
				this._CTRAC_HEADER.Assign(value);
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_DEBTORS", Storage="_CTRAC_ITEM", ThisKey="AccountID", OtherKey="AccountID", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_DEBTORS_GL_STATES", Storage="_GL_STATES", ThisKey="GLState", OtherKey="GLStateID", IsForeignKey=true)]
		public GL_STATES GL_STATES
		{
			get
			{
				return this._GL_STATES.Entity;
			}
			set
			{
				GL_STATES previousValue = this._GL_STATES.Entity;
				if (((previousValue != value) 
							|| (this._GL_STATES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_STATES.Entity = null;
						previousValue.DEBTORS.Remove(this);
					}
					this._GL_STATES.Entity = value;
					if ((value != null))
					{
						value.DEBTORS.Add(this);
						this._GLState = value.GLStateID;
					}
					else
					{
						this._GLState = default(Nullable<int>);
					}
					this.SendPropertyChanged("GL_STATES");
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_INT_REPORTING_GROUPS", Storage="_INT_REPORTING_GROUPS", ThisKey="ReportingGroupID", OtherKey="ReportingGroupID", IsForeignKey=true)]
		public INT_REPORTING_GROUPS INT_REPORTING_GROUPS
		{
			get
			{
				return this._INT_REPORTING_GROUPS.Entity;
			}
			set
			{
				INT_REPORTING_GROUPS previousValue = this._INT_REPORTING_GROUPS.Entity;
				if (((previousValue != value) 
							|| (this._INT_REPORTING_GROUPS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_REPORTING_GROUPS.Entity = null;
						previousValue.DEBTORS.Remove(this);
					}
					this._INT_REPORTING_GROUPS.Entity = value;
					if ((value != null))
					{
						value.DEBTORS.Add(this);
						this._ReportingGroupID = value.ReportingGroupID;
					}
					else
					{
						this._ReportingGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("INT_REPORTING_GROUPS");
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_JNL_DETAILS_DEBTOR", Storage="_DEBTORS_JNL_DETAILS", ThisKey="AccountID", OtherKey="AccountID", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_JNL_DETAILS> DEBTORS_JNL_DETAILS
		{
			get
			{
				return this._DEBTORS_JNL_DETAILS;
			}
			set
			{
				this._DEBTORS_JNL_DETAILS.Assign(value);
			}
		}
		
		[Association(Name="FK_DEBTORS_LOCATIONS", Storage="_LOCATIONS", ThisKey="StockLocation", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LOCATIONS
		{
			get
			{
				return this._LOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS.Entity = null;
						previousValue.DEBTORS.Remove(this);
					}
					this._LOCATIONS.Entity = value;
					if ((value != null))
					{
						value.DEBTORS.Add(this);
						this._StockLocation = value.LocationID;
					}
					else
					{
						this._StockLocation = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_PM_VISITS_DEBTORS", Storage="_DEBTORS_PM_VISITS", ThisKey="AccountID", OtherKey="AccountID", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_PM_VISITS> DEBTORS_PM_VISITS
		{
			get
			{
				return this._DEBTORS_PM_VISITS;
			}
			set
			{
				this._DEBTORS_PM_VISITS.Assign(value);
			}
		}
		
		[Association(Name="FK_DEBTORS_RECEIPTS_DEBTOR", Storage="_DEBTORS_RECEIPTS", ThisKey="AccountID", OtherKey="AccountID", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_RECEIPTS> DEBTORS_RECEIPTS
		{
			get
			{
				return this._DEBTORS_RECEIPTS;
			}
			set
			{
				this._DEBTORS_RECEIPTS.Assign(value);
			}
		}
		
		[Association(Name="FK_DEBTORS_UPDATE_HISTORY_DEBTOR", Storage="_DEBTORS_UPDATE_HISTORY", ThisKey="AccountID", OtherKey="AccountID", DeleteRule="CASCADE")]
		public EntitySet<DEBTORS_UPDATE_HISTORY> DEBTORS_UPDATE_HISTORY
		{
			get
			{
				return this._DEBTORS_UPDATE_HISTORY;
			}
			set
			{
				this._DEBTORS_UPDATE_HISTORY.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_CONTROL_DEBTOR", Storage="_INT_INV_BATCH_CONTROL", ThisKey="AccountID", OtherKey="CustAccountid", DeleteRule="NO ACTION")]
		public EntitySet<INT_INV_BATCH_CONTROL> INT_INV_BATCH_CONTROL
		{
			get
			{
				return this._INT_INV_BATCH_CONTROL;
			}
			set
			{
				this._INT_INV_BATCH_CONTROL.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_CONTROL_DEBTORS1", Storage="_Account", ThisKey="AccountID", OtherKey="LocAccountid", DeleteRule="NO ACTION")]
		public EntitySet<INT_INV_BATCH_CONTROL> Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				this._Account.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_PM_HISTORY_ACCOUNT", Storage="_INT_PM_HISTORY", ThisKey="AccountID", OtherKey="AccountId", DeleteRule="NO ACTION")]
		public EntitySet<INT_PM_HISTORY> INT_PM_HISTORY
		{
			get
			{
				return this._INT_PM_HISTORY;
			}
			set
			{
				this._INT_PM_HISTORY.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_OUTAGE_DEBTOR", Storage="_INT_STOCK_OUTAGE", ThisKey="AccountID", OtherKey="DebtorID", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_OUTAGE> INT_STOCK_OUTAGE
		{
			get
			{
				return this._INT_STOCK_OUTAGE;
			}
			set
			{
				this._INT_STOCK_OUTAGE.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_USAGE_DEBTORS", Storage="_INT_STOCK_USAGE", ThisKey="AccountID", OtherKey="CustomerID", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_USAGE> INT_STOCK_USAGE
		{
			get
			{
				return this._INT_STOCK_USAGE;
			}
			set
			{
				this._INT_STOCK_USAGE.Assign(value);
			}
		}
		
		[Association(Name="FK_REPS_DIARY_DEBTORS", Storage="_REPS_DIARY", ThisKey="AccountID", OtherKey="Location", DeleteRule="NO ACTION")]
		public EntitySet<REPS_DIARY> REPS_DIARY
		{
			get
			{
				return this._REPS_DIARY;
			}
			set
			{
				this._REPS_DIARY.Assign(value);
			}
		}
		
		[Association(Name="FK_STKORDITEM_DEBTORS", Storage="_STKORDITEM", ThisKey="AccountID", OtherKey="Customer", DeleteRule="NO ACTION")]
		public EntitySet<STKORDITEM> STKORDITEM
		{
			get
			{
				return this._STKORDITEM;
			}
			set
			{
				this._STKORDITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEBTORS_3P_AGREEMENTS(DEBTORS_3P_AGREEMENTS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_DEBTORS_3P_AGREEMENTS(DEBTORS_3P_AGREEMENTS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_CONTACTS(CONTACTS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_CONTACTS(CONTACTS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_CTRAC_HEADER(CTRAC_HEADER entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_CTRAC_HEADER(CTRAC_HEADER entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_DEBTORS_JNL_DETAILS(DEBTORS_JNL_DETAILS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_DEBTORS_JNL_DETAILS(DEBTORS_JNL_DETAILS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_DEBTORS_PM_VISITS(DEBTORS_PM_VISITS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_DEBTORS_PM_VISITS(DEBTORS_PM_VISITS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_DEBTORS_RECEIPTS(DEBTORS_RECEIPTS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_DEBTORS_RECEIPTS(DEBTORS_RECEIPTS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_DEBTORS_UPDATE_HISTORY(DEBTORS_UPDATE_HISTORY entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_DEBTORS_UPDATE_HISTORY(DEBTORS_UPDATE_HISTORY entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_INT_INV_BATCH_CONTROL(INT_INV_BATCH_CONTROL entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_INT_INV_BATCH_CONTROL(INT_INV_BATCH_CONTROL entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_Account(INT_INV_BATCH_CONTROL entity)
		{
			this.SendPropertyChanging();
			entity.LocAccount = this;
		}
		
		private void detach_Account(INT_INV_BATCH_CONTROL entity)
		{
			this.SendPropertyChanging();
			entity.LocAccount = null;
		}
		
		private void attach_INT_PM_HISTORY(INT_PM_HISTORY entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_INT_PM_HISTORY(INT_PM_HISTORY entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_INT_STOCK_OUTAGE(INT_STOCK_OUTAGE entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_INT_STOCK_OUTAGE(INT_STOCK_OUTAGE entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_INT_STOCK_USAGE(INT_STOCK_USAGE entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_INT_STOCK_USAGE(INT_STOCK_USAGE entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_REPS_DIARY(REPS_DIARY entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_REPS_DIARY(REPS_DIARY entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
		
		private void attach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = this;
		}
		
		private void detach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS = null;
		}
	}
	
	[Table(Name="dbo.DEBTORS_3P_AGREEMENTS")]
	public partial class DEBTORS_3P_AGREEMENTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AgreementID;
		
		private string _SarID;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<int> _BillingFrequency;
		
		private System.Nullable<System.DateTime> _InvoiceStartDate;
		
		private System.Nullable<System.DateTime> _InvoiceEndDate;
		
		private System.Nullable<int> _SupplierCode;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
		private EntityRef<CREDITORS> _CREDITORS;
		
		private EntitySet<DEBTORS_3P_INVOICES> _DEBTORS_3P_INVOICES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAgreementIDChanging(int value);
    partial void OnAgreementIDChanged();
    partial void OnSarIDChanging(string value);
    partial void OnSarIDChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnBillingFrequencyChanging(System.Nullable<int> value);
    partial void OnBillingFrequencyChanged();
    partial void OnInvoiceStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceStartDateChanged();
    partial void OnInvoiceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceEndDateChanged();
    partial void OnSupplierCodeChanging(System.Nullable<int> value);
    partial void OnSupplierCodeChanged();
    #endregion
		
		public DEBTORS_3P_AGREEMENTS()
		{
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			this._DEBTORS = default(EntityRef<DEBTORS>);
			this._CREDITORS = default(EntityRef<CREDITORS>);
			this._DEBTORS_3P_INVOICES = new EntitySet<DEBTORS_3P_INVOICES>(new Action<DEBTORS_3P_INVOICES>(this.attach_DEBTORS_3P_INVOICES), new Action<DEBTORS_3P_INVOICES>(this.detach_DEBTORS_3P_INVOICES));
			OnCreated();
		}
		
		[Column(Storage="_AgreementID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AgreementID
		{
			get
			{
				return this._AgreementID;
			}
			set
			{
				if ((this._AgreementID != value))
				{
					this.OnAgreementIDChanging(value);
					this.SendPropertyChanging();
					this._AgreementID = value;
					this.SendPropertyChanged("AgreementID");
					this.OnAgreementIDChanged();
				}
			}
		}
		
		[Column(Storage="_SarID", DbType="VarChar(20)")]
		public string SarID
		{
			get
			{
				return this._SarID;
			}
			set
			{
				if ((this._SarID != value))
				{
					this.OnSarIDChanging(value);
					this.SendPropertyChanging();
					this._SarID = value;
					this.SendPropertyChanged("SarID");
					this.OnSarIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_BillingFrequency", DbType="Int")]
		public System.Nullable<int> BillingFrequency
		{
			get
			{
				return this._BillingFrequency;
			}
			set
			{
				if ((this._BillingFrequency != value))
				{
					this.OnBillingFrequencyChanging(value);
					this.SendPropertyChanging();
					this._BillingFrequency = value;
					this.SendPropertyChanged("BillingFrequency");
					this.OnBillingFrequencyChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceStartDate
		{
			get
			{
				return this._InvoiceStartDate;
			}
			set
			{
				if ((this._InvoiceStartDate != value))
				{
					this.OnInvoiceStartDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceStartDate = value;
					this.SendPropertyChanged("InvoiceStartDate");
					this.OnInvoiceStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceEndDate
		{
			get
			{
				return this._InvoiceEndDate;
			}
			set
			{
				if ((this._InvoiceEndDate != value))
				{
					this.OnInvoiceEndDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceEndDate = value;
					this.SendPropertyChanged("InvoiceEndDate");
					this.OnInvoiceEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierCode", DbType="Int")]
		public System.Nullable<int> SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					if (this._CREDITORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[Association(Name="FK__CTRAC_ITE__3PAgr__1475118B", Storage="_CTRAC_ITEM", ThisKey="AgreementID", OtherKey="_3PAgreement", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		[Association(Name="FK__DEBTORS_3__Accou__1380ED52", Storage="_DEBTORS", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.DEBTORS_3P_AGREEMENTS.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_3P_AGREEMENTS.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_3P_AGREEMENTS_CREDITORS", Storage="_CREDITORS", ThisKey="SupplierCode", OtherKey="AccountID", IsForeignKey=true)]
		public CREDITORS CREDITORS
		{
			get
			{
				return this._CREDITORS.Entity;
			}
			set
			{
				CREDITORS previousValue = this._CREDITORS.Entity;
				if (((previousValue != value) 
							|| (this._CREDITORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CREDITORS.Entity = null;
						previousValue.DEBTORS_3P_AGREEMENTS.Remove(this);
					}
					this._CREDITORS.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_3P_AGREEMENTS.Add(this);
						this._SupplierCode = value.AccountID;
					}
					else
					{
						this._SupplierCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("CREDITORS");
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_3P_INVOICES_DEBTORS_3P_AGREEMENTS", Storage="_DEBTORS_3P_INVOICES", ThisKey="AgreementID", OtherKey="_3PAgreement", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_3P_INVOICES> DEBTORS_3P_INVOICES
		{
			get
			{
				return this._DEBTORS_3P_INVOICES;
			}
			set
			{
				this._DEBTORS_3P_INVOICES.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS_3P_AGREEMENTS = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS_3P_AGREEMENTS = null;
		}
		
		private void attach_DEBTORS_3P_INVOICES(DEBTORS_3P_INVOICES entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS_3P_AGREEMENTS = this;
		}
		
		private void detach_DEBTORS_3P_INVOICES(DEBTORS_3P_INVOICES entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS_3P_AGREEMENTS = null;
		}
	}
	
	[Table(Name="dbo.DEBTORS_3P_INVOICES")]
	public partial class DEBTORS_3P_INVOICES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrdNum;
		
		private string _InvoiceNum;
		
		private int @__3PAgreement;
		
		private System.Nullable<System.DateTime> _InvoiceFromDate;
		
		private System.Nullable<System.DateTime> _InvoiceToDate;
		
		private EntityRef<DEBTORS_3P_AGREEMENTS> _DEBTORS_3P_AGREEMENTS;
		
		private EntitySet<DEBTORS_3P_INVOICES_ITEMS> _DEBTORS_3P_INVOICES_ITEMS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnInvoiceNumChanging(string value);
    partial void OnInvoiceNumChanged();
    partial void On_3PAgreementChanging(int value);
    partial void On_3PAgreementChanged();
    partial void OnInvoiceFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceFromDateChanged();
    partial void OnInvoiceToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceToDateChanged();
    #endregion
		
		public DEBTORS_3P_INVOICES()
		{
			this._DEBTORS_3P_AGREEMENTS = default(EntityRef<DEBTORS_3P_AGREEMENTS>);
			this._DEBTORS_3P_INVOICES_ITEMS = new EntitySet<DEBTORS_3P_INVOICES_ITEMS>(new Action<DEBTORS_3P_INVOICES_ITEMS>(this.attach_DEBTORS_3P_INVOICES_ITEMS), new Action<DEBTORS_3P_INVOICES_ITEMS>(this.detach_DEBTORS_3P_INVOICES_ITEMS));
			OnCreated();
		}
		
		[Column(Storage="_OrdNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceNum", DbType="VarChar(20)")]
		public string InvoiceNum
		{
			get
			{
				return this._InvoiceNum;
			}
			set
			{
				if ((this._InvoiceNum != value))
				{
					this.OnInvoiceNumChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNum = value;
					this.SendPropertyChanged("InvoiceNum");
					this.OnInvoiceNumChanged();
				}
			}
		}
		
		[Column(Name="3PAgreement", Storage="__3PAgreement", DbType="Int NOT NULL")]
		public int _3PAgreement
		{
			get
			{
				return this.@__3PAgreement;
			}
			set
			{
				if ((this.@__3PAgreement != value))
				{
					this.On_3PAgreementChanging(value);
					this.SendPropertyChanging();
					this.@__3PAgreement = value;
					this.SendPropertyChanged("_3PAgreement");
					this.On_3PAgreementChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceFromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceFromDate
		{
			get
			{
				return this._InvoiceFromDate;
			}
			set
			{
				if ((this._InvoiceFromDate != value))
				{
					this.OnInvoiceFromDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceFromDate = value;
					this.SendPropertyChanged("InvoiceFromDate");
					this.OnInvoiceFromDateChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceToDate
		{
			get
			{
				return this._InvoiceToDate;
			}
			set
			{
				if ((this._InvoiceToDate != value))
				{
					this.OnInvoiceToDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceToDate = value;
					this.SendPropertyChanged("InvoiceToDate");
					this.OnInvoiceToDateChanged();
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_3P_INVOICES_DEBTORS_3P_AGREEMENTS", Storage="_DEBTORS_3P_AGREEMENTS", ThisKey="_3PAgreement", OtherKey="AgreementID", IsForeignKey=true)]
		public DEBTORS_3P_AGREEMENTS DEBTORS_3P_AGREEMENTS
		{
			get
			{
				return this._DEBTORS_3P_AGREEMENTS.Entity;
			}
			set
			{
				DEBTORS_3P_AGREEMENTS previousValue = this._DEBTORS_3P_AGREEMENTS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS_3P_AGREEMENTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS_3P_AGREEMENTS.Entity = null;
						previousValue.DEBTORS_3P_INVOICES.Remove(this);
					}
					this._DEBTORS_3P_AGREEMENTS.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_3P_INVOICES.Add(this);
						this.@__3PAgreement = value.AgreementID;
					}
					else
					{
						this.@__3PAgreement = default(int);
					}
					this.SendPropertyChanged("DEBTORS_3P_AGREEMENTS");
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_3P_INVOICES_ITEMS_DEBTORS_3P_INVOICES", Storage="_DEBTORS_3P_INVOICES_ITEMS", ThisKey="OrdNum", OtherKey="OrdNum", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_3P_INVOICES_ITEMS> DEBTORS_3P_INVOICES_ITEMS
		{
			get
			{
				return this._DEBTORS_3P_INVOICES_ITEMS;
			}
			set
			{
				this._DEBTORS_3P_INVOICES_ITEMS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEBTORS_3P_INVOICES_ITEMS(DEBTORS_3P_INVOICES_ITEMS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS_3P_INVOICES = this;
		}
		
		private void detach_DEBTORS_3P_INVOICES_ITEMS(DEBTORS_3P_INVOICES_ITEMS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS_3P_INVOICES = null;
		}
	}
	
	[Table(Name="dbo.DEBTORS_3P_INVOICES_ITEMS")]
	public partial class DEBTORS_3P_INVOICES_ITEMS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemNum;
		
		private int _OrdNum;
		
		private int _ContractItemID;
		
		private string _ProdCode;
		
		private string _State;
		
		private System.Nullable<int> _RevenueCategory;
		
		private string _GLCode;
		
		private System.Nullable<System.DateTime> _InvoiceFromDate;
		
		private System.Nullable<System.DateTime> _InvoiceToDate;
		
		private System.Nullable<int> _Qty;
		
		private System.Nullable<decimal> _Price;
		
		private EntityRef<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntityRef<DEBTORS_3P_INVOICES> _DEBTORS_3P_INVOICES;
		
		private EntityRef<REVENUE_CATEGORIES> _REVENUE_CATEGORIES;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemNumChanging(int value);
    partial void OnItemNumChanged();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnContractItemIDChanging(int value);
    partial void OnContractItemIDChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnRevenueCategoryChanging(System.Nullable<int> value);
    partial void OnRevenueCategoryChanged();
    partial void OnGLCodeChanging(string value);
    partial void OnGLCodeChanged();
    partial void OnInvoiceFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceFromDateChanged();
    partial void OnInvoiceToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceToDateChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    #endregion
		
		public DEBTORS_3P_INVOICES_ITEMS()
		{
			this._CTRAC_ITEM = default(EntityRef<CTRAC_ITEM>);
			this._DEBTORS_3P_INVOICES = default(EntityRef<DEBTORS_3P_INVOICES>);
			this._REVENUE_CATEGORIES = default(EntityRef<REVENUE_CATEGORIES>);
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_ItemNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemNum
		{
			get
			{
				return this._ItemNum;
			}
			set
			{
				if ((this._ItemNum != value))
				{
					this.OnItemNumChanging(value);
					this.SendPropertyChanging();
					this._ItemNum = value;
					this.SendPropertyChanged("ItemNum");
					this.OnItemNumChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int NOT NULL")]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					if (this._DEBTORS_3P_INVOICES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_ContractItemID", DbType="Int NOT NULL")]
		public int ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					if (this._CTRAC_ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContractItemID = value;
					this.SendPropertyChanged("ContractItemID");
					this.OnContractItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					if (this._REVENUE_CATEGORIES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevenueCategoryChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategory = value;
					this.SendPropertyChanged("RevenueCategory");
					this.OnRevenueCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_GLCode", DbType="VarChar(16)")]
		public string GLCode
		{
			get
			{
				return this._GLCode;
			}
			set
			{
				if ((this._GLCode != value))
				{
					this.OnGLCodeChanging(value);
					this.SendPropertyChanging();
					this._GLCode = value;
					this.SendPropertyChanged("GLCode");
					this.OnGLCodeChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceFromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceFromDate
		{
			get
			{
				return this._InvoiceFromDate;
			}
			set
			{
				if ((this._InvoiceFromDate != value))
				{
					this.OnInvoiceFromDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceFromDate = value;
					this.SendPropertyChanged("InvoiceFromDate");
					this.OnInvoiceFromDateChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceToDate
		{
			get
			{
				return this._InvoiceToDate;
			}
			set
			{
				if ((this._InvoiceToDate != value))
				{
					this.OnInvoiceToDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceToDate = value;
					this.SendPropertyChanged("InvoiceToDate");
					this.OnInvoiceToDateChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_3P_INVOICES_ITEMS_CTRAC_ITEM", Storage="_CTRAC_ITEM", ThisKey="ContractItemID", OtherKey="ContractItemID", IsForeignKey=true)]
		public CTRAC_ITEM CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM.Entity;
			}
			set
			{
				CTRAC_ITEM previousValue = this._CTRAC_ITEM.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_ITEM.Entity = null;
						previousValue.DEBTORS_3P_INVOICES_ITEMS.Remove(this);
					}
					this._CTRAC_ITEM.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_3P_INVOICES_ITEMS.Add(this);
						this._ContractItemID = value.ContractItemID;
					}
					else
					{
						this._ContractItemID = default(int);
					}
					this.SendPropertyChanged("CTRAC_ITEM");
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_3P_INVOICES_ITEMS_DEBTORS_3P_INVOICES", Storage="_DEBTORS_3P_INVOICES", ThisKey="OrdNum", OtherKey="OrdNum", IsForeignKey=true)]
		public DEBTORS_3P_INVOICES DEBTORS_3P_INVOICES
		{
			get
			{
				return this._DEBTORS_3P_INVOICES.Entity;
			}
			set
			{
				DEBTORS_3P_INVOICES previousValue = this._DEBTORS_3P_INVOICES.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS_3P_INVOICES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS_3P_INVOICES.Entity = null;
						previousValue.DEBTORS_3P_INVOICES_ITEMS.Remove(this);
					}
					this._DEBTORS_3P_INVOICES.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_3P_INVOICES_ITEMS.Add(this);
						this._OrdNum = value.OrdNum;
					}
					else
					{
						this._OrdNum = default(int);
					}
					this.SendPropertyChanged("DEBTORS_3P_INVOICES");
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_3P_INVOICES_ITEMS_REVENUE_CATEGORIES", Storage="_REVENUE_CATEGORIES", ThisKey="RevenueCategory", OtherKey="RevenueCategoryId", IsForeignKey=true)]
		public REVENUE_CATEGORIES REVENUE_CATEGORIES
		{
			get
			{
				return this._REVENUE_CATEGORIES.Entity;
			}
			set
			{
				REVENUE_CATEGORIES previousValue = this._REVENUE_CATEGORIES.Entity;
				if (((previousValue != value) 
							|| (this._REVENUE_CATEGORIES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REVENUE_CATEGORIES.Entity = null;
						previousValue.DEBTORS_3P_INVOICES_ITEMS.Remove(this);
					}
					this._REVENUE_CATEGORIES.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_3P_INVOICES_ITEMS.Add(this);
						this._RevenueCategory = value.RevenueCategoryId;
					}
					else
					{
						this._RevenueCategory = default(Nullable<int>);
					}
					this.SendPropertyChanged("REVENUE_CATEGORIES");
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_3P_INVOICES_ITEMS_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.DEBTORS_3P_INVOICES_ITEMS.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_3P_INVOICES_ITEMS.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.debtors_backup")]
	public partial class Debtors_backup
	{
		
		private int _AccountID;
		
		private string _OldAccount;
		
		private System.Nullable<int> _Parent;
		
		private string _Child;
		
		private string _Company;
		
		private System.Nullable<int> _PrimaryContact;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Type;
		
		private string _AccountStatus;
		
		private bool _COD;
		
		private bool _Industrial;
		
		private bool _BO;
		
		private bool _FO;
		
		private string _Group;
		
		private bool _ByDepartment;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Address4;
		
		private string _City;
		
		private string _State;
		
		private string _PostCode;
		
		private string _Phone;
		
		private string _PhoneAfterHrs;
		
		private string _Fax;
		
		private string _WebSite;
		
		private string _Email;
		
		private int _Courier;
		
		private System.Nullable<short> _RepArea1;
		
		private System.Nullable<short> _RepArea2;
		
		private string _BankAcctName;
		
		private string _BankName;
		
		private string _BankSuburb;
		
		private string _BankBSB;
		
		private string _BankAcct;
		
		private string _CreditCardName;
		
		private string _CreditCardType;
		
		private string _CreditCardNo;
		
		private System.Nullable<System.DateTime> _CreditCardExpire;
		
		private System.Nullable<byte> _SpecialPrice;
		
		private System.Nullable<byte> _SpecialDelivery;
		
		private System.Nullable<byte> _Urgent;
		
		private System.Nullable<byte> _Local;
		
		private short _Discount1;
		
		private short _Discount2;
		
		private byte _PriceLevel;
		
		private string _AccountClass;
		
		private decimal _OpenBal;
		
		private decimal _Current;
		
		private decimal @__30Days;
		
		private decimal @__60Days;
		
		private decimal @__90Days;
		
		private string _Terms;
		
		private byte _NumDaysCredit;
		
		private decimal _CreditLimit;
		
		private System.Nullable<int> _LastInvNum;
		
		private System.Nullable<System.DateTime> _LastInvDate;
		
		private System.Nullable<decimal> _LastInvAmt;
		
		private System.Nullable<System.DateTime> _LastPayDate;
		
		private System.Nullable<decimal> _LastPayAmt;
		
		private System.Nullable<System.DateTime> _LastPick;
		
		private string _StaxNum;
		
		private string _WebLogin;
		
		private string _WebPassword;
		
		private System.Nullable<decimal> _MTD;
		
		private System.Nullable<decimal> _YTD;
		
		private System.Nullable<decimal> _LY;
		
		private System.Nullable<decimal> _JAN;
		
		private System.Nullable<decimal> _FEB;
		
		private System.Nullable<decimal> _MAR;
		
		private System.Nullable<decimal> _APR;
		
		private System.Nullable<decimal> _MAY;
		
		private System.Nullable<decimal> _JUN;
		
		private System.Nullable<decimal> _JUL;
		
		private System.Nullable<decimal> _AUG;
		
		private System.Nullable<decimal> _SEP;
		
		private System.Nullable<decimal> _OCT;
		
		private System.Nullable<decimal> _NOV;
		
		private System.Nullable<decimal> _DEC;
		
		private string _AbbrevName;
		
		private bool _PrintInvoice;
		
		private int _InvoiceQty;
		
		private bool _PrintPackSlip;
		
		private int _PackSlipQty;
		
		private byte _RRPType;
		
		private int _RRPQty;
		
		private decimal _RRPMarkup1;
		
		private decimal _RRPMarkup2;
		
		private bool _International;
		
		private string _Country;
		
		private string _CurrencyType;
		
		private bool _CIF;
		
		private bool _FIS;
		
		private bool _FOB;
		
		private byte _CompanyNum;
		
		private string _SpecialReq;
		
		private string _InvMsg;
		
		private string _SalesNotes;
		
		private string _Remarks;
		
		private System.Nullable<decimal> _FwdVal;
		
		private bool _SDI;
		
		private System.Nullable<bool> _OpenItem;
		
		private decimal _CurrentInv;
		
		private decimal _CurrentRec;
		
		private decimal _CurrentDisc;
		
		private decimal _CurrentJnl;
		
		private string _FlagMsg;
		
		private string _SalesRep;
		
		private string _SalesRep2;
		
		private string _StatementNotes;
		
		private string _ABN;
		
		private System.Nullable<int> _OrdNumOK;
		
		private string _ShipBy;
		
		private bool _PrintLabel;
		
		private bool _GotCalls;
		
		private System.Nullable<System.DateTime> _NextCall;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private bool _InActive;
		
		private bool _CreditHold;
		
		private string _Selector;
		
		private decimal _FwdDateAmount;
		
		private decimal _Rebate;
		
		private decimal _LY2;
		
		private System.Nullable<byte> _PmFrequency;
		
		private System.Nullable<byte> _PmPeriod;
		
		private System.Nullable<System.DateTime> _PmLastVisit;
		
		private System.Nullable<System.DateTime> _PMNextVisit;
		
		private string _OldParent;
		
		private byte _DefaultInvStyle;
		
		private byte _InvoiceFreq;
		
		private string _SalesCtrlAccGL;
		
		private string _SalesAccGL;
		
		private System.Nullable<decimal> _LJAN;
		
		private System.Nullable<decimal> _LFEB;
		
		private System.Nullable<decimal> _LMAR;
		
		private System.Nullable<decimal> _LAPR;
		
		private System.Nullable<decimal> _LMAY;
		
		private System.Nullable<decimal> _LJUN;
		
		private System.Nullable<decimal> _LJUL;
		
		private System.Nullable<decimal> _LAUG;
		
		private System.Nullable<decimal> _LSEP;
		
		private System.Nullable<decimal> _LOCT;
		
		private System.Nullable<decimal> _LNOV;
		
		private System.Nullable<decimal> _LDEC;
		
		private System.Nullable<bool> _NoCreditLimit;
		
		private System.Nullable<int> _StockLocation;
		
		private string _SiteEngineer;
		
		private string _LastCallBy;
		
		private string _TMInvAccGL;
		
		private System.Nullable<decimal> _OverpayBucket;
		
		private bool _InterCompany;
		
		private bool _Merged;
		
		private bool _PreMerged;
		
		private string _ContractLocation;
		
		private string _IMRep;
		
		private string _IPRep;
		
		private string _RM1;
		
		private string _RM2;
		
		private int _SeparateBatchPrint;
		
		private bool _SoftInvoice;
		
		private string _SoftInvoicePath;
		
		private System.Nullable<int> _ReportingGroupID;
		
		private bool _MixedInternational;
		
		private bool _PDFInvoice;
		
		private string _PDFInvoiceEmail;
		
		private string _BSGTechnicalOwner;
		
		private string _SalesRepBSG;
		
		private int _BillingMethod;
		
		private bool _BillToLocation;
		
		private bool _PrintAlways;
		
		private System.Nullable<System.DateTime> _OriginalAccountDate;
		
		private System.Nullable<bool> _PDFInvoiceToContacts;
		
		private System.Nullable<int> _PrimaryFinanceContact;
		
		private string _FinancePhone;
		
		private string _FinanceFax;
		
		private string _FinancePhoneAfterHrs;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private bool _Issue;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _EngineerNotes;
		
		public Debtors_backup()
		{
		}
		
		[Column(Storage="_AccountID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_OldAccount", DbType="VarChar(12)")]
		public string OldAccount
		{
			get
			{
				return this._OldAccount;
			}
			set
			{
				if ((this._OldAccount != value))
				{
					this._OldAccount = value;
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this._Parent = value;
				}
			}
		}
		
		[Column(Storage="_Child", DbType="VarChar(4)")]
		public string Child
		{
			get
			{
				return this._Child;
			}
			set
			{
				if ((this._Child != value))
				{
					this._Child = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_PrimaryContact", DbType="Int")]
		public System.Nullable<int> PrimaryContact
		{
			get
			{
				return this._PrimaryContact;
			}
			set
			{
				if ((this._PrimaryContact != value))
				{
					this._PrimaryContact = value;
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(7)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_AccountStatus", DbType="VarChar(7)")]
		public string AccountStatus
		{
			get
			{
				return this._AccountStatus;
			}
			set
			{
				if ((this._AccountStatus != value))
				{
					this._AccountStatus = value;
				}
			}
		}
		
		[Column(Storage="_COD", DbType="Bit NOT NULL")]
		public bool COD
		{
			get
			{
				return this._COD;
			}
			set
			{
				if ((this._COD != value))
				{
					this._COD = value;
				}
			}
		}
		
		[Column(Storage="_Industrial", DbType="Bit NOT NULL")]
		public bool Industrial
		{
			get
			{
				return this._Industrial;
			}
			set
			{
				if ((this._Industrial != value))
				{
					this._Industrial = value;
				}
			}
		}
		
		[Column(Storage="_BO", DbType="Bit NOT NULL")]
		public bool BO
		{
			get
			{
				return this._BO;
			}
			set
			{
				if ((this._BO != value))
				{
					this._BO = value;
				}
			}
		}
		
		[Column(Storage="_FO", DbType="Bit NOT NULL")]
		public bool FO
		{
			get
			{
				return this._FO;
			}
			set
			{
				if ((this._FO != value))
				{
					this._FO = value;
				}
			}
		}
		
		[Column(Storage="_Group", DbType="VarChar(12)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this._Group = value;
				}
			}
		}
		
		[Column(Storage="_ByDepartment", DbType="Bit NOT NULL")]
		public bool ByDepartment
		{
			get
			{
				return this._ByDepartment;
			}
			set
			{
				if ((this._ByDepartment != value))
				{
					this._ByDepartment = value;
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[Column(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this._Address3 = value;
				}
			}
		}
		
		[Column(Storage="_Address4", DbType="VarChar(50)")]
		public string Address4
		{
			get
			{
				return this._Address4;
			}
			set
			{
				if ((this._Address4 != value))
				{
					this._Address4 = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(25)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_PostCode", DbType="VarChar(6)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this._PostCode = value;
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[Column(Storage="_PhoneAfterHrs", DbType="VarChar(20)")]
		public string PhoneAfterHrs
		{
			get
			{
				return this._PhoneAfterHrs;
			}
			set
			{
				if ((this._PhoneAfterHrs != value))
				{
					this._PhoneAfterHrs = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_WebSite", DbType="VarChar(40)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this._WebSite = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(70)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Courier", DbType="Int NOT NULL")]
		public int Courier
		{
			get
			{
				return this._Courier;
			}
			set
			{
				if ((this._Courier != value))
				{
					this._Courier = value;
				}
			}
		}
		
		[Column(Storage="_RepArea1", DbType="SmallInt")]
		public System.Nullable<short> RepArea1
		{
			get
			{
				return this._RepArea1;
			}
			set
			{
				if ((this._RepArea1 != value))
				{
					this._RepArea1 = value;
				}
			}
		}
		
		[Column(Storage="_RepArea2", DbType="SmallInt")]
		public System.Nullable<short> RepArea2
		{
			get
			{
				return this._RepArea2;
			}
			set
			{
				if ((this._RepArea2 != value))
				{
					this._RepArea2 = value;
				}
			}
		}
		
		[Column(Storage="_BankAcctName", DbType="VarChar(50)")]
		public string BankAcctName
		{
			get
			{
				return this._BankAcctName;
			}
			set
			{
				if ((this._BankAcctName != value))
				{
					this._BankAcctName = value;
				}
			}
		}
		
		[Column(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[Column(Storage="_BankSuburb", DbType="VarChar(25)")]
		public string BankSuburb
		{
			get
			{
				return this._BankSuburb;
			}
			set
			{
				if ((this._BankSuburb != value))
				{
					this._BankSuburb = value;
				}
			}
		}
		
		[Column(Storage="_BankBSB", DbType="VarChar(10)")]
		public string BankBSB
		{
			get
			{
				return this._BankBSB;
			}
			set
			{
				if ((this._BankBSB != value))
				{
					this._BankBSB = value;
				}
			}
		}
		
		[Column(Storage="_BankAcct", DbType="VarChar(12)")]
		public string BankAcct
		{
			get
			{
				return this._BankAcct;
			}
			set
			{
				if ((this._BankAcct != value))
				{
					this._BankAcct = value;
				}
			}
		}
		
		[Column(Storage="_CreditCardName", DbType="VarChar(30)")]
		public string CreditCardName
		{
			get
			{
				return this._CreditCardName;
			}
			set
			{
				if ((this._CreditCardName != value))
				{
					this._CreditCardName = value;
				}
			}
		}
		
		[Column(Storage="_CreditCardType", DbType="VarChar(20)")]
		public string CreditCardType
		{
			get
			{
				return this._CreditCardType;
			}
			set
			{
				if ((this._CreditCardType != value))
				{
					this._CreditCardType = value;
				}
			}
		}
		
		[Column(Storage="_CreditCardNo", DbType="VarChar(30)")]
		public string CreditCardNo
		{
			get
			{
				return this._CreditCardNo;
			}
			set
			{
				if ((this._CreditCardNo != value))
				{
					this._CreditCardNo = value;
				}
			}
		}
		
		[Column(Storage="_CreditCardExpire", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreditCardExpire
		{
			get
			{
				return this._CreditCardExpire;
			}
			set
			{
				if ((this._CreditCardExpire != value))
				{
					this._CreditCardExpire = value;
				}
			}
		}
		
		[Column(Storage="_SpecialPrice", DbType="TinyInt")]
		public System.Nullable<byte> SpecialPrice
		{
			get
			{
				return this._SpecialPrice;
			}
			set
			{
				if ((this._SpecialPrice != value))
				{
					this._SpecialPrice = value;
				}
			}
		}
		
		[Column(Storage="_SpecialDelivery", DbType="TinyInt")]
		public System.Nullable<byte> SpecialDelivery
		{
			get
			{
				return this._SpecialDelivery;
			}
			set
			{
				if ((this._SpecialDelivery != value))
				{
					this._SpecialDelivery = value;
				}
			}
		}
		
		[Column(Storage="_Urgent", DbType="TinyInt")]
		public System.Nullable<byte> Urgent
		{
			get
			{
				return this._Urgent;
			}
			set
			{
				if ((this._Urgent != value))
				{
					this._Urgent = value;
				}
			}
		}
		
		[Column(Storage="_Local", DbType="TinyInt")]
		public System.Nullable<byte> Local
		{
			get
			{
				return this._Local;
			}
			set
			{
				if ((this._Local != value))
				{
					this._Local = value;
				}
			}
		}
		
		[Column(Storage="_Discount1", DbType="SmallInt NOT NULL")]
		public short Discount1
		{
			get
			{
				return this._Discount1;
			}
			set
			{
				if ((this._Discount1 != value))
				{
					this._Discount1 = value;
				}
			}
		}
		
		[Column(Storage="_Discount2", DbType="SmallInt NOT NULL")]
		public short Discount2
		{
			get
			{
				return this._Discount2;
			}
			set
			{
				if ((this._Discount2 != value))
				{
					this._Discount2 = value;
				}
			}
		}
		
		[Column(Storage="_PriceLevel", DbType="TinyInt NOT NULL")]
		public byte PriceLevel
		{
			get
			{
				return this._PriceLevel;
			}
			set
			{
				if ((this._PriceLevel != value))
				{
					this._PriceLevel = value;
				}
			}
		}
		
		[Column(Storage="_AccountClass", DbType="VarChar(50)")]
		public string AccountClass
		{
			get
			{
				return this._AccountClass;
			}
			set
			{
				if ((this._AccountClass != value))
				{
					this._AccountClass = value;
				}
			}
		}
		
		[Column(Storage="_OpenBal", DbType="Decimal(9,2) NOT NULL")]
		public decimal OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this._OpenBal = value;
				}
			}
		}
		
		[Column(Storage="_Current", DbType="Decimal(9,2) NOT NULL")]
		public decimal Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Name="30Days", Storage="__30Days", DbType="Decimal(9,2) NOT NULL")]
		public decimal _30Days
		{
			get
			{
				return this.@__30Days;
			}
			set
			{
				if ((this.@__30Days != value))
				{
					this.@__30Days = value;
				}
			}
		}
		
		[Column(Name="60Days", Storage="__60Days", DbType="Decimal(9,2) NOT NULL")]
		public decimal _60Days
		{
			get
			{
				return this.@__60Days;
			}
			set
			{
				if ((this.@__60Days != value))
				{
					this.@__60Days = value;
				}
			}
		}
		
		[Column(Name="90Days", Storage="__90Days", DbType="Decimal(9,2) NOT NULL")]
		public decimal _90Days
		{
			get
			{
				return this.@__90Days;
			}
			set
			{
				if ((this.@__90Days != value))
				{
					this.@__90Days = value;
				}
			}
		}
		
		[Column(Storage="_Terms", DbType="VarChar(196)")]
		public string Terms
		{
			get
			{
				return this._Terms;
			}
			set
			{
				if ((this._Terms != value))
				{
					this._Terms = value;
				}
			}
		}
		
		[Column(Storage="_NumDaysCredit", DbType="TinyInt NOT NULL")]
		public byte NumDaysCredit
		{
			get
			{
				return this._NumDaysCredit;
			}
			set
			{
				if ((this._NumDaysCredit != value))
				{
					this._NumDaysCredit = value;
				}
			}
		}
		
		[Column(Storage="_CreditLimit", DbType="Decimal(9,2) NOT NULL")]
		public decimal CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this._CreditLimit = value;
				}
			}
		}
		
		[Column(Storage="_LastInvNum", DbType="Int")]
		public System.Nullable<int> LastInvNum
		{
			get
			{
				return this._LastInvNum;
			}
			set
			{
				if ((this._LastInvNum != value))
				{
					this._LastInvNum = value;
				}
			}
		}
		
		[Column(Storage="_LastInvDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastInvDate
		{
			get
			{
				return this._LastInvDate;
			}
			set
			{
				if ((this._LastInvDate != value))
				{
					this._LastInvDate = value;
				}
			}
		}
		
		[Column(Storage="_LastInvAmt", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LastInvAmt
		{
			get
			{
				return this._LastInvAmt;
			}
			set
			{
				if ((this._LastInvAmt != value))
				{
					this._LastInvAmt = value;
				}
			}
		}
		
		[Column(Storage="_LastPayDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPayDate
		{
			get
			{
				return this._LastPayDate;
			}
			set
			{
				if ((this._LastPayDate != value))
				{
					this._LastPayDate = value;
				}
			}
		}
		
		[Column(Storage="_LastPayAmt", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LastPayAmt
		{
			get
			{
				return this._LastPayAmt;
			}
			set
			{
				if ((this._LastPayAmt != value))
				{
					this._LastPayAmt = value;
				}
			}
		}
		
		[Column(Storage="_LastPick", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPick
		{
			get
			{
				return this._LastPick;
			}
			set
			{
				if ((this._LastPick != value))
				{
					this._LastPick = value;
				}
			}
		}
		
		[Column(Storage="_StaxNum", DbType="VarChar(10)")]
		public string StaxNum
		{
			get
			{
				return this._StaxNum;
			}
			set
			{
				if ((this._StaxNum != value))
				{
					this._StaxNum = value;
				}
			}
		}
		
		[Column(Storage="_WebLogin", DbType="VarChar(20)")]
		public string WebLogin
		{
			get
			{
				return this._WebLogin;
			}
			set
			{
				if ((this._WebLogin != value))
				{
					this._WebLogin = value;
				}
			}
		}
		
		[Column(Storage="_WebPassword", DbType="VarChar(15)")]
		public string WebPassword
		{
			get
			{
				return this._WebPassword;
			}
			set
			{
				if ((this._WebPassword != value))
				{
					this._WebPassword = value;
				}
			}
		}
		
		[Column(Storage="_MTD", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MTD
		{
			get
			{
				return this._MTD;
			}
			set
			{
				if ((this._MTD != value))
				{
					this._MTD = value;
				}
			}
		}
		
		[Column(Storage="_YTD", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> YTD
		{
			get
			{
				return this._YTD;
			}
			set
			{
				if ((this._YTD != value))
				{
					this._YTD = value;
				}
			}
		}
		
		[Column(Storage="_LY", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LY
		{
			get
			{
				return this._LY;
			}
			set
			{
				if ((this._LY != value))
				{
					this._LY = value;
				}
			}
		}
		
		[Column(Storage="_JAN", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> JAN
		{
			get
			{
				return this._JAN;
			}
			set
			{
				if ((this._JAN != value))
				{
					this._JAN = value;
				}
			}
		}
		
		[Column(Storage="_FEB", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FEB
		{
			get
			{
				return this._FEB;
			}
			set
			{
				if ((this._FEB != value))
				{
					this._FEB = value;
				}
			}
		}
		
		[Column(Storage="_MAR", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MAR
		{
			get
			{
				return this._MAR;
			}
			set
			{
				if ((this._MAR != value))
				{
					this._MAR = value;
				}
			}
		}
		
		[Column(Storage="_APR", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> APR
		{
			get
			{
				return this._APR;
			}
			set
			{
				if ((this._APR != value))
				{
					this._APR = value;
				}
			}
		}
		
		[Column(Storage="_MAY", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MAY
		{
			get
			{
				return this._MAY;
			}
			set
			{
				if ((this._MAY != value))
				{
					this._MAY = value;
				}
			}
		}
		
		[Column(Storage="_JUN", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> JUN
		{
			get
			{
				return this._JUN;
			}
			set
			{
				if ((this._JUN != value))
				{
					this._JUN = value;
				}
			}
		}
		
		[Column(Storage="_JUL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> JUL
		{
			get
			{
				return this._JUL;
			}
			set
			{
				if ((this._JUL != value))
				{
					this._JUL = value;
				}
			}
		}
		
		[Column(Storage="_AUG", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AUG
		{
			get
			{
				return this._AUG;
			}
			set
			{
				if ((this._AUG != value))
				{
					this._AUG = value;
				}
			}
		}
		
		[Column(Storage="_SEP", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SEP
		{
			get
			{
				return this._SEP;
			}
			set
			{
				if ((this._SEP != value))
				{
					this._SEP = value;
				}
			}
		}
		
		[Column(Storage="_OCT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OCT
		{
			get
			{
				return this._OCT;
			}
			set
			{
				if ((this._OCT != value))
				{
					this._OCT = value;
				}
			}
		}
		
		[Column(Storage="_NOV", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NOV
		{
			get
			{
				return this._NOV;
			}
			set
			{
				if ((this._NOV != value))
				{
					this._NOV = value;
				}
			}
		}
		
		[Column(Storage="_DEC", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DEC
		{
			get
			{
				return this._DEC;
			}
			set
			{
				if ((this._DEC != value))
				{
					this._DEC = value;
				}
			}
		}
		
		[Column(Storage="_AbbrevName", DbType="VarChar(20)")]
		public string AbbrevName
		{
			get
			{
				return this._AbbrevName;
			}
			set
			{
				if ((this._AbbrevName != value))
				{
					this._AbbrevName = value;
				}
			}
		}
		
		[Column(Storage="_PrintInvoice", DbType="Bit NOT NULL")]
		public bool PrintInvoice
		{
			get
			{
				return this._PrintInvoice;
			}
			set
			{
				if ((this._PrintInvoice != value))
				{
					this._PrintInvoice = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceQty", DbType="Int NOT NULL")]
		public int InvoiceQty
		{
			get
			{
				return this._InvoiceQty;
			}
			set
			{
				if ((this._InvoiceQty != value))
				{
					this._InvoiceQty = value;
				}
			}
		}
		
		[Column(Storage="_PrintPackSlip", DbType="Bit NOT NULL")]
		public bool PrintPackSlip
		{
			get
			{
				return this._PrintPackSlip;
			}
			set
			{
				if ((this._PrintPackSlip != value))
				{
					this._PrintPackSlip = value;
				}
			}
		}
		
		[Column(Storage="_PackSlipQty", DbType="Int NOT NULL")]
		public int PackSlipQty
		{
			get
			{
				return this._PackSlipQty;
			}
			set
			{
				if ((this._PackSlipQty != value))
				{
					this._PackSlipQty = value;
				}
			}
		}
		
		[Column(Storage="_RRPType", DbType="TinyInt NOT NULL")]
		public byte RRPType
		{
			get
			{
				return this._RRPType;
			}
			set
			{
				if ((this._RRPType != value))
				{
					this._RRPType = value;
				}
			}
		}
		
		[Column(Storage="_RRPQty", DbType="Int NOT NULL")]
		public int RRPQty
		{
			get
			{
				return this._RRPQty;
			}
			set
			{
				if ((this._RRPQty != value))
				{
					this._RRPQty = value;
				}
			}
		}
		
		[Column(Storage="_RRPMarkup1", DbType="Decimal(9,2) NOT NULL")]
		public decimal RRPMarkup1
		{
			get
			{
				return this._RRPMarkup1;
			}
			set
			{
				if ((this._RRPMarkup1 != value))
				{
					this._RRPMarkup1 = value;
				}
			}
		}
		
		[Column(Storage="_RRPMarkup2", DbType="Decimal(9,2) NOT NULL")]
		public decimal RRPMarkup2
		{
			get
			{
				return this._RRPMarkup2;
			}
			set
			{
				if ((this._RRPMarkup2 != value))
				{
					this._RRPMarkup2 = value;
				}
			}
		}
		
		[Column(Storage="_International", DbType="Bit NOT NULL")]
		public bool International
		{
			get
			{
				return this._International;
			}
			set
			{
				if ((this._International != value))
				{
					this._International = value;
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(25)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[Column(Storage="_CurrencyType", DbType="VarChar(5)")]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this._CurrencyType = value;
				}
			}
		}
		
		[Column(Storage="_CIF", DbType="Bit NOT NULL")]
		public bool CIF
		{
			get
			{
				return this._CIF;
			}
			set
			{
				if ((this._CIF != value))
				{
					this._CIF = value;
				}
			}
		}
		
		[Column(Storage="_FIS", DbType="Bit NOT NULL")]
		public bool FIS
		{
			get
			{
				return this._FIS;
			}
			set
			{
				if ((this._FIS != value))
				{
					this._FIS = value;
				}
			}
		}
		
		[Column(Storage="_FOB", DbType="Bit NOT NULL")]
		public bool FOB
		{
			get
			{
				return this._FOB;
			}
			set
			{
				if ((this._FOB != value))
				{
					this._FOB = value;
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_SpecialReq", DbType="VarChar(120)")]
		public string SpecialReq
		{
			get
			{
				return this._SpecialReq;
			}
			set
			{
				if ((this._SpecialReq != value))
				{
					this._SpecialReq = value;
				}
			}
		}
		
		[Column(Storage="_InvMsg", DbType="VarChar(120)")]
		public string InvMsg
		{
			get
			{
				return this._InvMsg;
			}
			set
			{
				if ((this._InvMsg != value))
				{
					this._InvMsg = value;
				}
			}
		}
		
		[Column(Storage="_SalesNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string SalesNotes
		{
			get
			{
				return this._SalesNotes;
			}
			set
			{
				if ((this._SalesNotes != value))
				{
					this._SalesNotes = value;
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
		
		[Column(Storage="_FwdVal", DbType="Money")]
		public System.Nullable<decimal> FwdVal
		{
			get
			{
				return this._FwdVal;
			}
			set
			{
				if ((this._FwdVal != value))
				{
					this._FwdVal = value;
				}
			}
		}
		
		[Column(Storage="_SDI", DbType="Bit NOT NULL")]
		public bool SDI
		{
			get
			{
				return this._SDI;
			}
			set
			{
				if ((this._SDI != value))
				{
					this._SDI = value;
				}
			}
		}
		
		[Column(Storage="_OpenItem", DbType="Bit")]
		public System.Nullable<bool> OpenItem
		{
			get
			{
				return this._OpenItem;
			}
			set
			{
				if ((this._OpenItem != value))
				{
					this._OpenItem = value;
				}
			}
		}
		
		[Column(Storage="_CurrentInv", DbType="Decimal(9,2) NOT NULL")]
		public decimal CurrentInv
		{
			get
			{
				return this._CurrentInv;
			}
			set
			{
				if ((this._CurrentInv != value))
				{
					this._CurrentInv = value;
				}
			}
		}
		
		[Column(Storage="_CurrentRec", DbType="Decimal(9,2) NOT NULL")]
		public decimal CurrentRec
		{
			get
			{
				return this._CurrentRec;
			}
			set
			{
				if ((this._CurrentRec != value))
				{
					this._CurrentRec = value;
				}
			}
		}
		
		[Column(Storage="_CurrentDisc", DbType="Decimal(9,2) NOT NULL")]
		public decimal CurrentDisc
		{
			get
			{
				return this._CurrentDisc;
			}
			set
			{
				if ((this._CurrentDisc != value))
				{
					this._CurrentDisc = value;
				}
			}
		}
		
		[Column(Storage="_CurrentJnl", DbType="Decimal(9,2) NOT NULL")]
		public decimal CurrentJnl
		{
			get
			{
				return this._CurrentJnl;
			}
			set
			{
				if ((this._CurrentJnl != value))
				{
					this._CurrentJnl = value;
				}
			}
		}
		
		[Column(Storage="_FlagMsg", DbType="VarChar(20)")]
		public string FlagMsg
		{
			get
			{
				return this._FlagMsg;
			}
			set
			{
				if ((this._FlagMsg != value))
				{
					this._FlagMsg = value;
				}
			}
		}
		
		[Column(Storage="_SalesRep", DbType="VarChar(25)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					this._SalesRep = value;
				}
			}
		}
		
		[Column(Storage="_SalesRep2", DbType="VarChar(25)")]
		public string SalesRep2
		{
			get
			{
				return this._SalesRep2;
			}
			set
			{
				if ((this._SalesRep2 != value))
				{
					this._SalesRep2 = value;
				}
			}
		}
		
		[Column(Storage="_StatementNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string StatementNotes
		{
			get
			{
				return this._StatementNotes;
			}
			set
			{
				if ((this._StatementNotes != value))
				{
					this._StatementNotes = value;
				}
			}
		}
		
		[Column(Storage="_ABN", DbType="VarChar(15)")]
		public string ABN
		{
			get
			{
				return this._ABN;
			}
			set
			{
				if ((this._ABN != value))
				{
					this._ABN = value;
				}
			}
		}
		
		[Column(Storage="_OrdNumOK", DbType="Int")]
		public System.Nullable<int> OrdNumOK
		{
			get
			{
				return this._OrdNumOK;
			}
			set
			{
				if ((this._OrdNumOK != value))
				{
					this._OrdNumOK = value;
				}
			}
		}
		
		[Column(Storage="_ShipBy", DbType="VarChar(40)")]
		public string ShipBy
		{
			get
			{
				return this._ShipBy;
			}
			set
			{
				if ((this._ShipBy != value))
				{
					this._ShipBy = value;
				}
			}
		}
		
		[Column(Storage="_PrintLabel", DbType="Bit NOT NULL")]
		public bool PrintLabel
		{
			get
			{
				return this._PrintLabel;
			}
			set
			{
				if ((this._PrintLabel != value))
				{
					this._PrintLabel = value;
				}
			}
		}
		
		[Column(Storage="_GotCalls", DbType="Bit NOT NULL")]
		public bool GotCalls
		{
			get
			{
				return this._GotCalls;
			}
			set
			{
				if ((this._GotCalls != value))
				{
					this._GotCalls = value;
				}
			}
		}
		
		[Column(Storage="_NextCall", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextCall
		{
			get
			{
				return this._NextCall;
			}
			set
			{
				if ((this._NextCall != value))
				{
					this._NextCall = value;
				}
			}
		}
		
		[Column(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this._DateAdded = value;
				}
			}
		}
		
		[Column(Storage="_InActive", DbType="Bit NOT NULL")]
		public bool InActive
		{
			get
			{
				return this._InActive;
			}
			set
			{
				if ((this._InActive != value))
				{
					this._InActive = value;
				}
			}
		}
		
		[Column(Storage="_CreditHold", DbType="Bit NOT NULL")]
		public bool CreditHold
		{
			get
			{
				return this._CreditHold;
			}
			set
			{
				if ((this._CreditHold != value))
				{
					this._CreditHold = value;
				}
			}
		}
		
		[Column(Storage="_Selector", DbType="VarChar(5)")]
		public string Selector
		{
			get
			{
				return this._Selector;
			}
			set
			{
				if ((this._Selector != value))
				{
					this._Selector = value;
				}
			}
		}
		
		[Column(Storage="_FwdDateAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal FwdDateAmount
		{
			get
			{
				return this._FwdDateAmount;
			}
			set
			{
				if ((this._FwdDateAmount != value))
				{
					this._FwdDateAmount = value;
				}
			}
		}
		
		[Column(Storage="_Rebate", DbType="Decimal(9,2) NOT NULL")]
		public decimal Rebate
		{
			get
			{
				return this._Rebate;
			}
			set
			{
				if ((this._Rebate != value))
				{
					this._Rebate = value;
				}
			}
		}
		
		[Column(Storage="_LY2", DbType="Decimal(18,2) NOT NULL")]
		public decimal LY2
		{
			get
			{
				return this._LY2;
			}
			set
			{
				if ((this._LY2 != value))
				{
					this._LY2 = value;
				}
			}
		}
		
		[Column(Storage="_PmFrequency", DbType="TinyInt")]
		public System.Nullable<byte> PmFrequency
		{
			get
			{
				return this._PmFrequency;
			}
			set
			{
				if ((this._PmFrequency != value))
				{
					this._PmFrequency = value;
				}
			}
		}
		
		[Column(Storage="_PmPeriod", DbType="TinyInt")]
		public System.Nullable<byte> PmPeriod
		{
			get
			{
				return this._PmPeriod;
			}
			set
			{
				if ((this._PmPeriod != value))
				{
					this._PmPeriod = value;
				}
			}
		}
		
		[Column(Storage="_PmLastVisit", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PmLastVisit
		{
			get
			{
				return this._PmLastVisit;
			}
			set
			{
				if ((this._PmLastVisit != value))
				{
					this._PmLastVisit = value;
				}
			}
		}
		
		[Column(Storage="_PMNextVisit", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PMNextVisit
		{
			get
			{
				return this._PMNextVisit;
			}
			set
			{
				if ((this._PMNextVisit != value))
				{
					this._PMNextVisit = value;
				}
			}
		}
		
		[Column(Storage="_OldParent", DbType="VarChar(12)")]
		public string OldParent
		{
			get
			{
				return this._OldParent;
			}
			set
			{
				if ((this._OldParent != value))
				{
					this._OldParent = value;
				}
			}
		}
		
		[Column(Storage="_DefaultInvStyle", DbType="TinyInt NOT NULL")]
		public byte DefaultInvStyle
		{
			get
			{
				return this._DefaultInvStyle;
			}
			set
			{
				if ((this._DefaultInvStyle != value))
				{
					this._DefaultInvStyle = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceFreq", DbType="TinyInt NOT NULL")]
		public byte InvoiceFreq
		{
			get
			{
				return this._InvoiceFreq;
			}
			set
			{
				if ((this._InvoiceFreq != value))
				{
					this._InvoiceFreq = value;
				}
			}
		}
		
		[Column(Storage="_SalesCtrlAccGL", DbType="VarChar(16)")]
		public string SalesCtrlAccGL
		{
			get
			{
				return this._SalesCtrlAccGL;
			}
			set
			{
				if ((this._SalesCtrlAccGL != value))
				{
					this._SalesCtrlAccGL = value;
				}
			}
		}
		
		[Column(Storage="_SalesAccGL", DbType="VarChar(16)")]
		public string SalesAccGL
		{
			get
			{
				return this._SalesAccGL;
			}
			set
			{
				if ((this._SalesAccGL != value))
				{
					this._SalesAccGL = value;
				}
			}
		}
		
		[Column(Storage="_LJAN", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LJAN
		{
			get
			{
				return this._LJAN;
			}
			set
			{
				if ((this._LJAN != value))
				{
					this._LJAN = value;
				}
			}
		}
		
		[Column(Storage="_LFEB", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LFEB
		{
			get
			{
				return this._LFEB;
			}
			set
			{
				if ((this._LFEB != value))
				{
					this._LFEB = value;
				}
			}
		}
		
		[Column(Storage="_LMAR", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LMAR
		{
			get
			{
				return this._LMAR;
			}
			set
			{
				if ((this._LMAR != value))
				{
					this._LMAR = value;
				}
			}
		}
		
		[Column(Storage="_LAPR", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LAPR
		{
			get
			{
				return this._LAPR;
			}
			set
			{
				if ((this._LAPR != value))
				{
					this._LAPR = value;
				}
			}
		}
		
		[Column(Storage="_LMAY", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LMAY
		{
			get
			{
				return this._LMAY;
			}
			set
			{
				if ((this._LMAY != value))
				{
					this._LMAY = value;
				}
			}
		}
		
		[Column(Storage="_LJUN", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LJUN
		{
			get
			{
				return this._LJUN;
			}
			set
			{
				if ((this._LJUN != value))
				{
					this._LJUN = value;
				}
			}
		}
		
		[Column(Storage="_LJUL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LJUL
		{
			get
			{
				return this._LJUL;
			}
			set
			{
				if ((this._LJUL != value))
				{
					this._LJUL = value;
				}
			}
		}
		
		[Column(Storage="_LAUG", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LAUG
		{
			get
			{
				return this._LAUG;
			}
			set
			{
				if ((this._LAUG != value))
				{
					this._LAUG = value;
				}
			}
		}
		
		[Column(Storage="_LSEP", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LSEP
		{
			get
			{
				return this._LSEP;
			}
			set
			{
				if ((this._LSEP != value))
				{
					this._LSEP = value;
				}
			}
		}
		
		[Column(Storage="_LOCT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LOCT
		{
			get
			{
				return this._LOCT;
			}
			set
			{
				if ((this._LOCT != value))
				{
					this._LOCT = value;
				}
			}
		}
		
		[Column(Storage="_LNOV", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LNOV
		{
			get
			{
				return this._LNOV;
			}
			set
			{
				if ((this._LNOV != value))
				{
					this._LNOV = value;
				}
			}
		}
		
		[Column(Storage="_LDEC", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LDEC
		{
			get
			{
				return this._LDEC;
			}
			set
			{
				if ((this._LDEC != value))
				{
					this._LDEC = value;
				}
			}
		}
		
		[Column(Storage="_NoCreditLimit", DbType="Bit")]
		public System.Nullable<bool> NoCreditLimit
		{
			get
			{
				return this._NoCreditLimit;
			}
			set
			{
				if ((this._NoCreditLimit != value))
				{
					this._NoCreditLimit = value;
				}
			}
		}
		
		[Column(Storage="_StockLocation", DbType="Int")]
		public System.Nullable<int> StockLocation
		{
			get
			{
				return this._StockLocation;
			}
			set
			{
				if ((this._StockLocation != value))
				{
					this._StockLocation = value;
				}
			}
		}
		
		[Column(Storage="_SiteEngineer", DbType="Char(25)")]
		public string SiteEngineer
		{
			get
			{
				return this._SiteEngineer;
			}
			set
			{
				if ((this._SiteEngineer != value))
				{
					this._SiteEngineer = value;
				}
			}
		}
		
		[Column(Storage="_LastCallBy", DbType="VarChar(25)")]
		public string LastCallBy
		{
			get
			{
				return this._LastCallBy;
			}
			set
			{
				if ((this._LastCallBy != value))
				{
					this._LastCallBy = value;
				}
			}
		}
		
		[Column(Storage="_TMInvAccGL", DbType="VarChar(16)")]
		public string TMInvAccGL
		{
			get
			{
				return this._TMInvAccGL;
			}
			set
			{
				if ((this._TMInvAccGL != value))
				{
					this._TMInvAccGL = value;
				}
			}
		}
		
		[Column(Storage="_OverpayBucket", DbType="Money")]
		public System.Nullable<decimal> OverpayBucket
		{
			get
			{
				return this._OverpayBucket;
			}
			set
			{
				if ((this._OverpayBucket != value))
				{
					this._OverpayBucket = value;
				}
			}
		}
		
		[Column(Storage="_InterCompany", DbType="Bit NOT NULL")]
		public bool InterCompany
		{
			get
			{
				return this._InterCompany;
			}
			set
			{
				if ((this._InterCompany != value))
				{
					this._InterCompany = value;
				}
			}
		}
		
		[Column(Storage="_Merged", DbType="Bit NOT NULL")]
		public bool Merged
		{
			get
			{
				return this._Merged;
			}
			set
			{
				if ((this._Merged != value))
				{
					this._Merged = value;
				}
			}
		}
		
		[Column(Storage="_PreMerged", DbType="Bit NOT NULL")]
		public bool PreMerged
		{
			get
			{
				return this._PreMerged;
			}
			set
			{
				if ((this._PreMerged != value))
				{
					this._PreMerged = value;
				}
			}
		}
		
		[Column(Storage="_ContractLocation", DbType="VarChar(5)")]
		public string ContractLocation
		{
			get
			{
				return this._ContractLocation;
			}
			set
			{
				if ((this._ContractLocation != value))
				{
					this._ContractLocation = value;
				}
			}
		}
		
		[Column(Storage="_IMRep", DbType="VarChar(25)")]
		public string IMRep
		{
			get
			{
				return this._IMRep;
			}
			set
			{
				if ((this._IMRep != value))
				{
					this._IMRep = value;
				}
			}
		}
		
		[Column(Storage="_IPRep", DbType="VarChar(25)")]
		public string IPRep
		{
			get
			{
				return this._IPRep;
			}
			set
			{
				if ((this._IPRep != value))
				{
					this._IPRep = value;
				}
			}
		}
		
		[Column(Storage="_RM1", DbType="VarChar(25)")]
		public string RM1
		{
			get
			{
				return this._RM1;
			}
			set
			{
				if ((this._RM1 != value))
				{
					this._RM1 = value;
				}
			}
		}
		
		[Column(Storage="_RM2", DbType="VarChar(25)")]
		public string RM2
		{
			get
			{
				return this._RM2;
			}
			set
			{
				if ((this._RM2 != value))
				{
					this._RM2 = value;
				}
			}
		}
		
		[Column(Storage="_SeparateBatchPrint", DbType="Int NOT NULL")]
		public int SeparateBatchPrint
		{
			get
			{
				return this._SeparateBatchPrint;
			}
			set
			{
				if ((this._SeparateBatchPrint != value))
				{
					this._SeparateBatchPrint = value;
				}
			}
		}
		
		[Column(Storage="_SoftInvoice", DbType="Bit NOT NULL")]
		public bool SoftInvoice
		{
			get
			{
				return this._SoftInvoice;
			}
			set
			{
				if ((this._SoftInvoice != value))
				{
					this._SoftInvoice = value;
				}
			}
		}
		
		[Column(Storage="_SoftInvoicePath", DbType="VarChar(100)")]
		public string SoftInvoicePath
		{
			get
			{
				return this._SoftInvoicePath;
			}
			set
			{
				if ((this._SoftInvoicePath != value))
				{
					this._SoftInvoicePath = value;
				}
			}
		}
		
		[Column(Storage="_ReportingGroupID", DbType="Int")]
		public System.Nullable<int> ReportingGroupID
		{
			get
			{
				return this._ReportingGroupID;
			}
			set
			{
				if ((this._ReportingGroupID != value))
				{
					this._ReportingGroupID = value;
				}
			}
		}
		
		[Column(Storage="_MixedInternational", DbType="Bit NOT NULL")]
		public bool MixedInternational
		{
			get
			{
				return this._MixedInternational;
			}
			set
			{
				if ((this._MixedInternational != value))
				{
					this._MixedInternational = value;
				}
			}
		}
		
		[Column(Storage="_PDFInvoice", DbType="Bit NOT NULL")]
		public bool PDFInvoice
		{
			get
			{
				return this._PDFInvoice;
			}
			set
			{
				if ((this._PDFInvoice != value))
				{
					this._PDFInvoice = value;
				}
			}
		}
		
		[Column(Storage="_PDFInvoiceEmail", DbType="VarChar(100)")]
		public string PDFInvoiceEmail
		{
			get
			{
				return this._PDFInvoiceEmail;
			}
			set
			{
				if ((this._PDFInvoiceEmail != value))
				{
					this._PDFInvoiceEmail = value;
				}
			}
		}
		
		[Column(Storage="_BSGTechnicalOwner", DbType="VarChar(25)")]
		public string BSGTechnicalOwner
		{
			get
			{
				return this._BSGTechnicalOwner;
			}
			set
			{
				if ((this._BSGTechnicalOwner != value))
				{
					this._BSGTechnicalOwner = value;
				}
			}
		}
		
		[Column(Storage="_SalesRepBSG", DbType="VarChar(25)")]
		public string SalesRepBSG
		{
			get
			{
				return this._SalesRepBSG;
			}
			set
			{
				if ((this._SalesRepBSG != value))
				{
					this._SalesRepBSG = value;
				}
			}
		}
		
		[Column(Storage="_BillingMethod", DbType="Int NOT NULL")]
		public int BillingMethod
		{
			get
			{
				return this._BillingMethod;
			}
			set
			{
				if ((this._BillingMethod != value))
				{
					this._BillingMethod = value;
				}
			}
		}
		
		[Column(Storage="_BillToLocation", DbType="Bit NOT NULL")]
		public bool BillToLocation
		{
			get
			{
				return this._BillToLocation;
			}
			set
			{
				if ((this._BillToLocation != value))
				{
					this._BillToLocation = value;
				}
			}
		}
		
		[Column(Storage="_PrintAlways", DbType="Bit NOT NULL")]
		public bool PrintAlways
		{
			get
			{
				return this._PrintAlways;
			}
			set
			{
				if ((this._PrintAlways != value))
				{
					this._PrintAlways = value;
				}
			}
		}
		
		[Column(Storage="_OriginalAccountDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OriginalAccountDate
		{
			get
			{
				return this._OriginalAccountDate;
			}
			set
			{
				if ((this._OriginalAccountDate != value))
				{
					this._OriginalAccountDate = value;
				}
			}
		}
		
		[Column(Storage="_PDFInvoiceToContacts", DbType="Bit")]
		public System.Nullable<bool> PDFInvoiceToContacts
		{
			get
			{
				return this._PDFInvoiceToContacts;
			}
			set
			{
				if ((this._PDFInvoiceToContacts != value))
				{
					this._PDFInvoiceToContacts = value;
				}
			}
		}
		
		[Column(Storage="_PrimaryFinanceContact", DbType="Int")]
		public System.Nullable<int> PrimaryFinanceContact
		{
			get
			{
				return this._PrimaryFinanceContact;
			}
			set
			{
				if ((this._PrimaryFinanceContact != value))
				{
					this._PrimaryFinanceContact = value;
				}
			}
		}
		
		[Column(Storage="_FinancePhone", DbType="VarChar(20)")]
		public string FinancePhone
		{
			get
			{
				return this._FinancePhone;
			}
			set
			{
				if ((this._FinancePhone != value))
				{
					this._FinancePhone = value;
				}
			}
		}
		
		[Column(Storage="_FinanceFax", DbType="VarChar(20)")]
		public string FinanceFax
		{
			get
			{
				return this._FinanceFax;
			}
			set
			{
				if ((this._FinanceFax != value))
				{
					this._FinanceFax = value;
				}
			}
		}
		
		[Column(Storage="_FinancePhoneAfterHrs", DbType="VarChar(20)")]
		public string FinancePhoneAfterHrs
		{
			get
			{
				return this._FinancePhoneAfterHrs;
			}
			set
			{
				if ((this._FinancePhoneAfterHrs != value))
				{
					this._FinancePhoneAfterHrs = value;
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Decimal(10,7)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Decimal(10,7)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[Column(Storage="_Issue", DbType="Bit NOT NULL")]
		public bool Issue
		{
			get
			{
				return this._Issue;
			}
			set
			{
				if ((this._Issue != value))
				{
					this._Issue = value;
				}
			}
		}
		
		[Column(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this._IssueDate = value;
				}
			}
		}
		
		[Column(Storage="_EngineerNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string EngineerNotes
		{
			get
			{
				return this._EngineerNotes;
			}
			set
			{
				if ((this._EngineerNotes != value))
				{
					this._EngineerNotes = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DEBTORS_BAL")]
	public partial class DEBTORS_BAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccountID;
		
		private short _Year;
		
		private byte _Month;
		
		private decimal _OpenCurrent;
		
		private decimal _Open30Days;
		
		private decimal _Open60Days;
		
		private decimal _Open90Days;
		
		private decimal _OpenBal;
		
		private decimal _CloseBal;
		
		private bool _International;
		
		private int _CompanyNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnOpenCurrentChanging(decimal value);
    partial void OnOpenCurrentChanged();
    partial void OnOpen30DaysChanging(decimal value);
    partial void OnOpen30DaysChanged();
    partial void OnOpen60DaysChanging(decimal value);
    partial void OnOpen60DaysChanged();
    partial void OnOpen90DaysChanging(decimal value);
    partial void OnOpen90DaysChanged();
    partial void OnOpenBalChanging(decimal value);
    partial void OnOpenBalChanged();
    partial void OnCloseBalChanging(decimal value);
    partial void OnCloseBalChanged();
    partial void OnInternationalChanging(bool value);
    partial void OnInternationalChanged();
    partial void OnCompanyNumChanging(int value);
    partial void OnCompanyNumChanged();
    #endregion
		
		public DEBTORS_BAL()
		{
			OnCreated();
		}
		
		[Column(Storage="_AccountID", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_OpenCurrent", DbType="Money NOT NULL")]
		public decimal OpenCurrent
		{
			get
			{
				return this._OpenCurrent;
			}
			set
			{
				if ((this._OpenCurrent != value))
				{
					this.OnOpenCurrentChanging(value);
					this.SendPropertyChanging();
					this._OpenCurrent = value;
					this.SendPropertyChanged("OpenCurrent");
					this.OnOpenCurrentChanged();
				}
			}
		}
		
		[Column(Storage="_Open30Days", DbType="Money NOT NULL")]
		public decimal Open30Days
		{
			get
			{
				return this._Open30Days;
			}
			set
			{
				if ((this._Open30Days != value))
				{
					this.OnOpen30DaysChanging(value);
					this.SendPropertyChanging();
					this._Open30Days = value;
					this.SendPropertyChanged("Open30Days");
					this.OnOpen30DaysChanged();
				}
			}
		}
		
		[Column(Storage="_Open60Days", DbType="Money NOT NULL")]
		public decimal Open60Days
		{
			get
			{
				return this._Open60Days;
			}
			set
			{
				if ((this._Open60Days != value))
				{
					this.OnOpen60DaysChanging(value);
					this.SendPropertyChanging();
					this._Open60Days = value;
					this.SendPropertyChanged("Open60Days");
					this.OnOpen60DaysChanged();
				}
			}
		}
		
		[Column(Storage="_Open90Days", DbType="Money NOT NULL")]
		public decimal Open90Days
		{
			get
			{
				return this._Open90Days;
			}
			set
			{
				if ((this._Open90Days != value))
				{
					this.OnOpen90DaysChanging(value);
					this.SendPropertyChanging();
					this._Open90Days = value;
					this.SendPropertyChanged("Open90Days");
					this.OnOpen90DaysChanged();
				}
			}
		}
		
		[Column(Storage="_OpenBal", DbType="Money NOT NULL")]
		public decimal OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this.OnOpenBalChanging(value);
					this.SendPropertyChanging();
					this._OpenBal = value;
					this.SendPropertyChanged("OpenBal");
					this.OnOpenBalChanged();
				}
			}
		}
		
		[Column(Storage="_CloseBal", DbType="Money NOT NULL")]
		public decimal CloseBal
		{
			get
			{
				return this._CloseBal;
			}
			set
			{
				if ((this._CloseBal != value))
				{
					this.OnCloseBalChanging(value);
					this.SendPropertyChanging();
					this._CloseBal = value;
					this.SendPropertyChanged("CloseBal");
					this.OnCloseBalChanged();
				}
			}
		}
		
		[Column(Storage="_International", DbType="Bit NOT NULL")]
		public bool International
		{
			get
			{
				return this._International;
			}
			set
			{
				if ((this._International != value))
				{
					this.OnInternationalChanging(value);
					this.SendPropertyChanging();
					this._International = value;
					this.SendPropertyChanged("International");
					this.OnInternationalChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="Int NOT NULL")]
		public int CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DEBTORS_JNL_DETAILS")]
	public partial class DEBTORS_JNL_DETAILS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NKey;
		
		private System.Nullable<System.DateTime> _JnlDate;
		
		private int _AccountID;
		
		private System.DateTime _Date;
		
		private int _Audit;
		
		private string _RefNo;
		
		private string _Description;
		
		private byte _Period;
		
		private decimal _Amount;
		
		private decimal _GST;
		
		private string _Rep;
		
		private byte _CompanyNum;
		
		private byte _GLType;
		
		private decimal _ExchangeRate;
		
		private string _CurrencyType;
		
		private string _SalesAccGL;
		
		private string _SalesCtrlAccGL;
		
		private string _InsUser;
		
		private System.Nullable<System.DateTime> _InsDate;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNKeyChanging(int value);
    partial void OnNKeyChanged();
    partial void OnJnlDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJnlDateChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnAuditChanging(int value);
    partial void OnAuditChanged();
    partial void OnRefNoChanging(string value);
    partial void OnRefNoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPeriodChanging(byte value);
    partial void OnPeriodChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnGSTChanging(decimal value);
    partial void OnGSTChanged();
    partial void OnRepChanging(string value);
    partial void OnRepChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnGLTypeChanging(byte value);
    partial void OnGLTypeChanged();
    partial void OnExchangeRateChanging(decimal value);
    partial void OnExchangeRateChanged();
    partial void OnCurrencyTypeChanging(string value);
    partial void OnCurrencyTypeChanged();
    partial void OnSalesAccGLChanging(string value);
    partial void OnSalesAccGLChanged();
    partial void OnSalesCtrlAccGLChanging(string value);
    partial void OnSalesCtrlAccGLChanged();
    partial void OnInsUserChanging(string value);
    partial void OnInsUserChanged();
    partial void OnInsDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsDateChanged();
    #endregion
		
		public DEBTORS_JNL_DETAILS()
		{
			this._DEBTORS = default(EntityRef<DEBTORS>);
			OnCreated();
		}
		
		[Column(Storage="_NKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NKey
		{
			get
			{
				return this._NKey;
			}
			set
			{
				if ((this._NKey != value))
				{
					this.OnNKeyChanging(value);
					this.SendPropertyChanging();
					this._NKey = value;
					this.SendPropertyChanged("NKey");
					this.OnNKeyChanged();
				}
			}
		}
		
		[Column(Storage="_JnlDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JnlDate
		{
			get
			{
				return this._JnlDate;
			}
			set
			{
				if ((this._JnlDate != value))
				{
					this.OnJnlDateChanging(value);
					this.SendPropertyChanging();
					this._JnlDate = value;
					this.SendPropertyChanged("JnlDate");
					this.OnJnlDateChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int NOT NULL")]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Audit", DbType="Int NOT NULL")]
		public int Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[Column(Storage="_RefNo", DbType="VarChar(16)")]
		public string RefNo
		{
			get
			{
				return this._RefNo;
			}
			set
			{
				if ((this._RefNo != value))
				{
					this.OnRefNoChanging(value);
					this.SendPropertyChanging();
					this._RefNo = value;
					this.SendPropertyChanged("RefNo");
					this.OnRefNoChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(32)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Period", DbType="TinyInt NOT NULL")]
		public byte Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_GST", DbType="Money NOT NULL")]
		public decimal GST
		{
			get
			{
				return this._GST;
			}
			set
			{
				if ((this._GST != value))
				{
					this.OnGSTChanging(value);
					this.SendPropertyChanging();
					this._GST = value;
					this.SendPropertyChanged("GST");
					this.OnGSTChanged();
				}
			}
		}
		
		[Column(Storage="_Rep", DbType="VarChar(25)")]
		public string Rep
		{
			get
			{
				return this._Rep;
			}
			set
			{
				if ((this._Rep != value))
				{
					this.OnRepChanging(value);
					this.SendPropertyChanging();
					this._Rep = value;
					this.SendPropertyChanged("Rep");
					this.OnRepChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_GLType", DbType="TinyInt NOT NULL")]
		public byte GLType
		{
			get
			{
				return this._GLType;
			}
			set
			{
				if ((this._GLType != value))
				{
					this.OnGLTypeChanging(value);
					this.SendPropertyChanging();
					this._GLType = value;
					this.SendPropertyChanged("GLType");
					this.OnGLTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ExchangeRate", DbType="Decimal(3,2) NOT NULL")]
		public decimal ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[Column(Storage="_CurrencyType", DbType="VarChar(5)")]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this.OnCurrencyTypeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyType = value;
					this.SendPropertyChanged("CurrencyType");
					this.OnCurrencyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_SalesAccGL", DbType="VarChar(16)")]
		public string SalesAccGL
		{
			get
			{
				return this._SalesAccGL;
			}
			set
			{
				if ((this._SalesAccGL != value))
				{
					this.OnSalesAccGLChanging(value);
					this.SendPropertyChanging();
					this._SalesAccGL = value;
					this.SendPropertyChanged("SalesAccGL");
					this.OnSalesAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_SalesCtrlAccGL", DbType="VarChar(16)")]
		public string SalesCtrlAccGL
		{
			get
			{
				return this._SalesCtrlAccGL;
			}
			set
			{
				if ((this._SalesCtrlAccGL != value))
				{
					this.OnSalesCtrlAccGLChanging(value);
					this.SendPropertyChanging();
					this._SalesCtrlAccGL = value;
					this.SendPropertyChanged("SalesCtrlAccGL");
					this.OnSalesCtrlAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_InsUser", DbType="VarChar(25)")]
		public string InsUser
		{
			get
			{
				return this._InsUser;
			}
			set
			{
				if ((this._InsUser != value))
				{
					this.OnInsUserChanging(value);
					this.SendPropertyChanging();
					this._InsUser = value;
					this.SendPropertyChanged("InsUser");
					this.OnInsUserChanged();
				}
			}
		}
		
		[Column(Storage="_InsDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsDate
		{
			get
			{
				return this._InsDate;
			}
			set
			{
				if ((this._InsDate != value))
				{
					this.OnInsDateChanging(value);
					this.SendPropertyChanging();
					this._InsDate = value;
					this.SendPropertyChanged("InsDate");
					this.OnInsDateChanged();
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_JNL_DETAILS_DEBTOR", Storage="_DEBTORS", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.DEBTORS_JNL_DETAILS.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_JNL_DETAILS.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DEBTORS_JOURNALS")]
	public partial class DEBTORS_JOURNALS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _JournalDate;
		
		private string _Explanation;
		
		private System.Nullable<short> _Year;
		
		private System.Nullable<byte> _Month;
		
		private byte _COMPANYNUM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalDateChanging(System.DateTime value);
    partial void OnJournalDateChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    partial void OnYearChanging(System.Nullable<short> value);
    partial void OnYearChanged();
    partial void OnMonthChanging(System.Nullable<byte> value);
    partial void OnMonthChanged();
    partial void OnCOMPANYNUMChanging(byte value);
    partial void OnCOMPANYNUMChanged();
    #endregion
		
		public DEBTORS_JOURNALS()
		{
			OnCreated();
		}
		
		[Column(Storage="_JournalDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this.OnJournalDateChanging(value);
					this.SendPropertyChanging();
					this._JournalDate = value;
					this.SendPropertyChanged("JournalDate");
					this.OnJournalDateChanged();
				}
			}
		}
		
		[Column(Storage="_Explanation", DbType="VarChar(50)")]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt")]
		public System.Nullable<short> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt")]
		public System.Nullable<byte> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_COMPANYNUM", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte COMPANYNUM
		{
			get
			{
				return this._COMPANYNUM;
			}
			set
			{
				if ((this._COMPANYNUM != value))
				{
					this.OnCOMPANYNUMChanging(value);
					this.SendPropertyChanging();
					this._COMPANYNUM = value;
					this.SendPropertyChanged("COMPANYNUM");
					this.OnCOMPANYNUMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DEBTORS_LOCATION_IMPORT")]
	public partial class DEBTORS_LOCATION_IMPORT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImportID;
		
		private System.Nullable<System.DateTime> _ImportDate;
		
		private string _ImportedBy;
		
		private EntitySet<DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION> _DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION;
		
		private EntityRef<EMPLOYEES> _EMPLOYEES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImportIDChanging(int value);
    partial void OnImportIDChanged();
    partial void OnImportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportDateChanged();
    partial void OnImportedByChanging(string value);
    partial void OnImportedByChanged();
    #endregion
		
		public DEBTORS_LOCATION_IMPORT()
		{
			this._DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION = new EntitySet<DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION>(new Action<DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION>(this.attach_DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION), new Action<DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION>(this.detach_DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION));
			this._EMPLOYEES = default(EntityRef<EMPLOYEES>);
			OnCreated();
		}
		
		[Column(Storage="_ImportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImportID
		{
			get
			{
				return this._ImportID;
			}
			set
			{
				if ((this._ImportID != value))
				{
					this.OnImportIDChanging(value);
					this.SendPropertyChanging();
					this._ImportID = value;
					this.SendPropertyChanged("ImportID");
					this.OnImportIDChanged();
				}
			}
		}
		
		[Column(Storage="_ImportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportDate
		{
			get
			{
				return this._ImportDate;
			}
			set
			{
				if ((this._ImportDate != value))
				{
					this.OnImportDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDate = value;
					this.SendPropertyChanged("ImportDate");
					this.OnImportDateChanged();
				}
			}
		}
		
		[Column(Storage="_ImportedBy", DbType="VarChar(25)")]
		public string ImportedBy
		{
			get
			{
				return this._ImportedBy;
			}
			set
			{
				if ((this._ImportedBy != value))
				{
					if (this._EMPLOYEES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImportedByChanging(value);
					this.SendPropertyChanging();
					this._ImportedBy = value;
					this.SendPropertyChanged("ImportedBy");
					this.OnImportedByChanged();
				}
			}
		}
		
		[Association(Name="FK__DEBTORS_L__Impor__7F79F4A5", Storage="_DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION", ThisKey="ImportID", OtherKey="Import", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION> DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION
		{
			get
			{
				return this._DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION;
			}
			set
			{
				this._DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION.Assign(value);
			}
		}
		
		[Association(Name="FK_DEBTORS_LOCATION_IMPORT_EMPLOYEES", Storage="_EMPLOYEES", ThisKey="ImportedBy", OtherKey="EmployeeID", IsForeignKey=true)]
		public EMPLOYEES EMPLOYEES
		{
			get
			{
				return this._EMPLOYEES.Entity;
			}
			set
			{
				EMPLOYEES previousValue = this._EMPLOYEES.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEES.Entity = null;
						previousValue.DEBTORS_LOCATION_IMPORT.Remove(this);
					}
					this._EMPLOYEES.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_LOCATION_IMPORT.Add(this);
						this._ImportedBy = value.EmployeeID;
					}
					else
					{
						this._ImportedBy = default(string);
					}
					this.SendPropertyChanged("EMPLOYEES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION(DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS_LOCATION_IMPORT = this;
		}
		
		private void detach_DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION(DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS_LOCATION_IMPORT = null;
		}
	}
	
	[Table(Name="dbo.DEBTORS_LOCATION_IMPORT_FIELDS")]
	public partial class DEBTORS_LOCATION_IMPORT_FIELDS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FieldName;
		
		private int _OrderID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    #endregion
		
		public DEBTORS_LOCATION_IMPORT_FIELDS()
		{
			OnCreated();
		}
		
		[Column(Storage="_FieldName", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[Column(Storage="_OrderID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION")]
	public partial class DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExceptionID;
		
		private int _Import;
		
		private int _LineNumber;
		
		private string _Field;
		
		private string _ExceptionType;
		
		private string _ExceptionDescription;
		
		private EntityRef<DEBTORS_LOCATION_IMPORT> _DEBTORS_LOCATION_IMPORT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExceptionIDChanging(int value);
    partial void OnExceptionIDChanged();
    partial void OnImportChanging(int value);
    partial void OnImportChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnFieldChanging(string value);
    partial void OnFieldChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnExceptionDescriptionChanging(string value);
    partial void OnExceptionDescriptionChanged();
    #endregion
		
		public DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION()
		{
			this._DEBTORS_LOCATION_IMPORT = default(EntityRef<DEBTORS_LOCATION_IMPORT>);
			OnCreated();
		}
		
		[Column(Storage="_ExceptionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExceptionID
		{
			get
			{
				return this._ExceptionID;
			}
			set
			{
				if ((this._ExceptionID != value))
				{
					this.OnExceptionIDChanging(value);
					this.SendPropertyChanging();
					this._ExceptionID = value;
					this.SendPropertyChanged("ExceptionID");
					this.OnExceptionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Import", DbType="Int NOT NULL")]
		public int Import
		{
			get
			{
				return this._Import;
			}
			set
			{
				if ((this._Import != value))
				{
					if (this._DEBTORS_LOCATION_IMPORT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImportChanging(value);
					this.SendPropertyChanging();
					this._Import = value;
					this.SendPropertyChanged("Import");
					this.OnImportChanged();
				}
			}
		}
		
		[Column(Storage="_LineNumber", DbType="Int NOT NULL")]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Field", DbType="VarChar(100)")]
		public string Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					this.OnFieldChanging(value);
					this.SendPropertyChanging();
					this._Field = value;
					this.SendPropertyChanged("Field");
					this.OnFieldChanged();
				}
			}
		}
		
		[Column(Storage="_ExceptionType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ExceptionDescription", DbType="VarChar(100)")]
		public string ExceptionDescription
		{
			get
			{
				return this._ExceptionDescription;
			}
			set
			{
				if ((this._ExceptionDescription != value))
				{
					this.OnExceptionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ExceptionDescription = value;
					this.SendPropertyChanged("ExceptionDescription");
					this.OnExceptionDescriptionChanged();
				}
			}
		}
		
		[Association(Name="FK__DEBTORS_L__Impor__7F79F4A5", Storage="_DEBTORS_LOCATION_IMPORT", ThisKey="Import", OtherKey="ImportID", IsForeignKey=true)]
		public DEBTORS_LOCATION_IMPORT DEBTORS_LOCATION_IMPORT
		{
			get
			{
				return this._DEBTORS_LOCATION_IMPORT.Entity;
			}
			set
			{
				DEBTORS_LOCATION_IMPORT previousValue = this._DEBTORS_LOCATION_IMPORT.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS_LOCATION_IMPORT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS_LOCATION_IMPORT.Entity = null;
						previousValue.DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION.Remove(this);
					}
					this._DEBTORS_LOCATION_IMPORT.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_LOCATION_IMPORT_ITEM_EXCEPTION.Add(this);
						this._Import = value.ImportID;
					}
					else
					{
						this._Import = default(int);
					}
					this.SendPropertyChanged("DEBTORS_LOCATION_IMPORT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DEBTORS_MERGEHISTORY")]
	public partial class DEBTORS_MERGEHISTORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DebtorsMergeID;
		
		private System.Nullable<int> _OldAccountID;
		
		private System.Nullable<byte> _OldCompanyNum;
		
		private System.Nullable<int> _NewAccountID;
		
		private System.Nullable<byte> _NewCompanyNum;
		
		private System.DateTime _DateMerged;
		
		private string _EmployeeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDebtorsMergeIDChanging(int value);
    partial void OnDebtorsMergeIDChanged();
    partial void OnOldAccountIDChanging(System.Nullable<int> value);
    partial void OnOldAccountIDChanged();
    partial void OnOldCompanyNumChanging(System.Nullable<byte> value);
    partial void OnOldCompanyNumChanged();
    partial void OnNewAccountIDChanging(System.Nullable<int> value);
    partial void OnNewAccountIDChanged();
    partial void OnNewCompanyNumChanging(System.Nullable<byte> value);
    partial void OnNewCompanyNumChanged();
    partial void OnDateMergedChanging(System.DateTime value);
    partial void OnDateMergedChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    #endregion
		
		public DEBTORS_MERGEHISTORY()
		{
			OnCreated();
		}
		
		[Column(Storage="_DebtorsMergeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DebtorsMergeID
		{
			get
			{
				return this._DebtorsMergeID;
			}
			set
			{
				if ((this._DebtorsMergeID != value))
				{
					this.OnDebtorsMergeIDChanging(value);
					this.SendPropertyChanging();
					this._DebtorsMergeID = value;
					this.SendPropertyChanged("DebtorsMergeID");
					this.OnDebtorsMergeIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldAccountID", DbType="Int")]
		public System.Nullable<int> OldAccountID
		{
			get
			{
				return this._OldAccountID;
			}
			set
			{
				if ((this._OldAccountID != value))
				{
					this.OnOldAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OldAccountID = value;
					this.SendPropertyChanged("OldAccountID");
					this.OnOldAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldCompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> OldCompanyNum
		{
			get
			{
				return this._OldCompanyNum;
			}
			set
			{
				if ((this._OldCompanyNum != value))
				{
					this.OnOldCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._OldCompanyNum = value;
					this.SendPropertyChanged("OldCompanyNum");
					this.OnOldCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_NewAccountID", DbType="Int")]
		public System.Nullable<int> NewAccountID
		{
			get
			{
				return this._NewAccountID;
			}
			set
			{
				if ((this._NewAccountID != value))
				{
					this.OnNewAccountIDChanging(value);
					this.SendPropertyChanging();
					this._NewAccountID = value;
					this.SendPropertyChanged("NewAccountID");
					this.OnNewAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_NewCompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> NewCompanyNum
		{
			get
			{
				return this._NewCompanyNum;
			}
			set
			{
				if ((this._NewCompanyNum != value))
				{
					this.OnNewCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._NewCompanyNum = value;
					this.SendPropertyChanged("NewCompanyNum");
					this.OnNewCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_DateMerged", DbType="DateTime NOT NULL")]
		public System.DateTime DateMerged
		{
			get
			{
				return this._DateMerged;
			}
			set
			{
				if ((this._DateMerged != value))
				{
					this.OnDateMergedChanging(value);
					this.SendPropertyChanging();
					this._DateMerged = value;
					this.SendPropertyChanged("DateMerged");
					this.OnDateMergedChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DEBTORS_MERGERESULT")]
	public partial class DEBTORS_MERGERESULT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DebtorsMergeResultID;
		
		private int _AccountID;
		
		private int _OldAccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDebtorsMergeResultIDChanging(int value);
    partial void OnDebtorsMergeResultIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnOldAccountIDChanging(int value);
    partial void OnOldAccountIDChanged();
    #endregion
		
		public DEBTORS_MERGERESULT()
		{
			OnCreated();
		}
		
		[Column(Storage="_DebtorsMergeResultID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DebtorsMergeResultID
		{
			get
			{
				return this._DebtorsMergeResultID;
			}
			set
			{
				if ((this._DebtorsMergeResultID != value))
				{
					this.OnDebtorsMergeResultIDChanging(value);
					this.SendPropertyChanging();
					this._DebtorsMergeResultID = value;
					this.SendPropertyChanged("DebtorsMergeResultID");
					this.OnDebtorsMergeResultIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int NOT NULL")]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldAccountID", DbType="Int NOT NULL")]
		public int OldAccountID
		{
			get
			{
				return this._OldAccountID;
			}
			set
			{
				if ((this._OldAccountID != value))
				{
					this.OnOldAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OldAccountID = value;
					this.SendPropertyChanged("OldAccountID");
					this.OnOldAccountIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DEBTORS_PM_VISITS")]
	public partial class DEBTORS_PM_VISITS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PMVisitID;
		
		private System.Nullable<int> _OldPMHistoryID;
		
		private int _AccountID;
		
		private string _Parent_AccountID;
		
		private System.Nullable<System.DateTime> _PM_Date;
		
		private string _PM_Engineer;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
		private EntitySet<DEBTORS_PM_VISITS_NOTES> _DEBTORS_PM_VISITS_NOTES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPMVisitIDChanging(int value);
    partial void OnPMVisitIDChanged();
    partial void OnOldPMHistoryIDChanging(System.Nullable<int> value);
    partial void OnOldPMHistoryIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnParent_AccountIDChanging(string value);
    partial void OnParent_AccountIDChanged();
    partial void OnPM_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnPM_DateChanged();
    partial void OnPM_EngineerChanging(string value);
    partial void OnPM_EngineerChanged();
    #endregion
		
		public DEBTORS_PM_VISITS()
		{
			this._DEBTORS = default(EntityRef<DEBTORS>);
			this._DEBTORS_PM_VISITS_NOTES = new EntitySet<DEBTORS_PM_VISITS_NOTES>(new Action<DEBTORS_PM_VISITS_NOTES>(this.attach_DEBTORS_PM_VISITS_NOTES), new Action<DEBTORS_PM_VISITS_NOTES>(this.detach_DEBTORS_PM_VISITS_NOTES));
			OnCreated();
		}
		
		[Column(Storage="_PMVisitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PMVisitID
		{
			get
			{
				return this._PMVisitID;
			}
			set
			{
				if ((this._PMVisitID != value))
				{
					this.OnPMVisitIDChanging(value);
					this.SendPropertyChanging();
					this._PMVisitID = value;
					this.SendPropertyChanged("PMVisitID");
					this.OnPMVisitIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldPMHistoryID", DbType="Int")]
		public System.Nullable<int> OldPMHistoryID
		{
			get
			{
				return this._OldPMHistoryID;
			}
			set
			{
				if ((this._OldPMHistoryID != value))
				{
					this.OnOldPMHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._OldPMHistoryID = value;
					this.SendPropertyChanged("OldPMHistoryID");
					this.OnOldPMHistoryIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int NOT NULL")]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_Parent_AccountID", DbType="VarChar(35)")]
		public string Parent_AccountID
		{
			get
			{
				return this._Parent_AccountID;
			}
			set
			{
				if ((this._Parent_AccountID != value))
				{
					this.OnParent_AccountIDChanging(value);
					this.SendPropertyChanging();
					this._Parent_AccountID = value;
					this.SendPropertyChanged("Parent_AccountID");
					this.OnParent_AccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_PM_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> PM_Date
		{
			get
			{
				return this._PM_Date;
			}
			set
			{
				if ((this._PM_Date != value))
				{
					this.OnPM_DateChanging(value);
					this.SendPropertyChanging();
					this._PM_Date = value;
					this.SendPropertyChanged("PM_Date");
					this.OnPM_DateChanged();
				}
			}
		}
		
		[Column(Storage="_PM_Engineer", DbType="VarChar(50)")]
		public string PM_Engineer
		{
			get
			{
				return this._PM_Engineer;
			}
			set
			{
				if ((this._PM_Engineer != value))
				{
					this.OnPM_EngineerChanging(value);
					this.SendPropertyChanging();
					this._PM_Engineer = value;
					this.SendPropertyChanged("PM_Engineer");
					this.OnPM_EngineerChanged();
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_PM_VISITS_DEBTORS", Storage="_DEBTORS", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.DEBTORS_PM_VISITS.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_PM_VISITS.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_PM_VISITS_NOTES_DEBTORS_PM_VISITS", Storage="_DEBTORS_PM_VISITS_NOTES", ThisKey="PMVisitID", OtherKey="PMVisitID", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_PM_VISITS_NOTES> DEBTORS_PM_VISITS_NOTES
		{
			get
			{
				return this._DEBTORS_PM_VISITS_NOTES;
			}
			set
			{
				this._DEBTORS_PM_VISITS_NOTES.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEBTORS_PM_VISITS_NOTES(DEBTORS_PM_VISITS_NOTES entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS_PM_VISITS = this;
		}
		
		private void detach_DEBTORS_PM_VISITS_NOTES(DEBTORS_PM_VISITS_NOTES entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS_PM_VISITS = null;
		}
	}
	
	[Table(Name="dbo.DEBTORS_PM_VISITS_NOTES")]
	public partial class DEBTORS_PM_VISITS_NOTES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PMVisitNotesID;
		
		private int _PMVisitID;
		
		private string _Notes;
		
		private string _AddedBy;
		
		private System.Nullable<System.DateTime> _AddedDate;
		
		private EntityRef<DEBTORS_PM_VISITS> _DEBTORS_PM_VISITS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPMVisitNotesIDChanging(int value);
    partial void OnPMVisitNotesIDChanged();
    partial void OnPMVisitIDChanging(int value);
    partial void OnPMVisitIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OnAddedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAddedDateChanged();
    #endregion
		
		public DEBTORS_PM_VISITS_NOTES()
		{
			this._DEBTORS_PM_VISITS = default(EntityRef<DEBTORS_PM_VISITS>);
			OnCreated();
		}
		
		[Column(Storage="_PMVisitNotesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PMVisitNotesID
		{
			get
			{
				return this._PMVisitNotesID;
			}
			set
			{
				if ((this._PMVisitNotesID != value))
				{
					this.OnPMVisitNotesIDChanging(value);
					this.SendPropertyChanging();
					this._PMVisitNotesID = value;
					this.SendPropertyChanged("PMVisitNotesID");
					this.OnPMVisitNotesIDChanged();
				}
			}
		}
		
		[Column(Storage="_PMVisitID", DbType="Int NOT NULL")]
		public int PMVisitID
		{
			get
			{
				return this._PMVisitID;
			}
			set
			{
				if ((this._PMVisitID != value))
				{
					if (this._DEBTORS_PM_VISITS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPMVisitIDChanging(value);
					this.SendPropertyChanging();
					this._PMVisitID = value;
					this.SendPropertyChanged("PMVisitID");
					this.OnPMVisitIDChanged();
				}
			}
		}
		
		[Column(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[Column(Storage="_AddedBy", DbType="VarChar(25)")]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[Column(Storage="_AddedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddedDate
		{
			get
			{
				return this._AddedDate;
			}
			set
			{
				if ((this._AddedDate != value))
				{
					this.OnAddedDateChanging(value);
					this.SendPropertyChanging();
					this._AddedDate = value;
					this.SendPropertyChanged("AddedDate");
					this.OnAddedDateChanged();
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_PM_VISITS_NOTES_DEBTORS_PM_VISITS", Storage="_DEBTORS_PM_VISITS", ThisKey="PMVisitID", OtherKey="PMVisitID", IsForeignKey=true)]
		public DEBTORS_PM_VISITS DEBTORS_PM_VISITS
		{
			get
			{
				return this._DEBTORS_PM_VISITS.Entity;
			}
			set
			{
				DEBTORS_PM_VISITS previousValue = this._DEBTORS_PM_VISITS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS_PM_VISITS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS_PM_VISITS.Entity = null;
						previousValue.DEBTORS_PM_VISITS_NOTES.Remove(this);
					}
					this._DEBTORS_PM_VISITS.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_PM_VISITS_NOTES.Add(this);
						this._PMVisitID = value.PMVisitID;
					}
					else
					{
						this._PMVisitID = default(int);
					}
					this.SendPropertyChanged("DEBTORS_PM_VISITS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DEBTORS_RECEIPT_DETAILS")]
	public partial class DEBTORS_RECEIPT_DETAILS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecDetailID;
		
		private System.Nullable<int> _RecNum;
		
		private System.Nullable<int> _OrdNum;
		
		private System.Nullable<decimal> _Amount;
		
		private string _Narrative;
		
		private EntityRef<SALESORD> _SALESORD;
		
		private EntityRef<DEBTORS_RECEIPTS> _DEBTORS_RECEIPTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecDetailIDChanging(int value);
    partial void OnRecDetailIDChanged();
    partial void OnRecNumChanging(System.Nullable<int> value);
    partial void OnRecNumChanged();
    partial void OnOrdNumChanging(System.Nullable<int> value);
    partial void OnOrdNumChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnNarrativeChanging(string value);
    partial void OnNarrativeChanged();
    #endregion
		
		public DEBTORS_RECEIPT_DETAILS()
		{
			this._SALESORD = default(EntityRef<SALESORD>);
			this._DEBTORS_RECEIPTS = default(EntityRef<DEBTORS_RECEIPTS>);
			OnCreated();
		}
		
		[Column(Storage="_RecDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecDetailID
		{
			get
			{
				return this._RecDetailID;
			}
			set
			{
				if ((this._RecDetailID != value))
				{
					this.OnRecDetailIDChanging(value);
					this.SendPropertyChanging();
					this._RecDetailID = value;
					this.SendPropertyChanged("RecDetailID");
					this.OnRecDetailIDChanged();
				}
			}
		}
		
		[Column(Storage="_RecNum", DbType="Int")]
		public System.Nullable<int> RecNum
		{
			get
			{
				return this._RecNum;
			}
			set
			{
				if ((this._RecNum != value))
				{
					if (this._DEBTORS_RECEIPTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecNumChanging(value);
					this.SendPropertyChanging();
					this._RecNum = value;
					this.SendPropertyChanged("RecNum");
					this.OnRecNumChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					if (this._SALESORD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_Narrative", DbType="VarChar(128)")]
		public string Narrative
		{
			get
			{
				return this._Narrative;
			}
			set
			{
				if ((this._Narrative != value))
				{
					this.OnNarrativeChanging(value);
					this.SendPropertyChanging();
					this._Narrative = value;
					this.SendPropertyChanged("Narrative");
					this.OnNarrativeChanged();
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_RECEIPT_DETAILS_INV", Storage="_SALESORD", ThisKey="OrdNum", OtherKey="OrdNum", IsForeignKey=true)]
		public SALESORD SALESORD
		{
			get
			{
				return this._SALESORD.Entity;
			}
			set
			{
				SALESORD previousValue = this._SALESORD.Entity;
				if (((previousValue != value) 
							|| (this._SALESORD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALESORD.Entity = null;
						previousValue.DEBTORS_RECEIPT_DETAILS.Remove(this);
					}
					this._SALESORD.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_RECEIPT_DETAILS.Add(this);
						this._OrdNum = value.OrdNum;
					}
					else
					{
						this._OrdNum = default(Nullable<int>);
					}
					this.SendPropertyChanged("SALESORD");
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_RECEIPT_DETAILS_RECEIPT", Storage="_DEBTORS_RECEIPTS", ThisKey="RecNum", OtherKey="Receipt", IsForeignKey=true)]
		public DEBTORS_RECEIPTS DEBTORS_RECEIPTS
		{
			get
			{
				return this._DEBTORS_RECEIPTS.Entity;
			}
			set
			{
				DEBTORS_RECEIPTS previousValue = this._DEBTORS_RECEIPTS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS_RECEIPTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS_RECEIPTS.Entity = null;
						previousValue.DEBTORS_RECEIPT_DETAILS.Remove(this);
					}
					this._DEBTORS_RECEIPTS.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_RECEIPT_DETAILS.Add(this);
						this._RecNum = value.Receipt;
					}
					else
					{
						this._RecNum = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEBTORS_RECEIPTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DEBTORS_RECEIPTS")]
	public partial class DEBTORS_RECEIPTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Receipt;
		
		private int _AccountID;
		
		private System.DateTime _Date;
		
		private System.Nullable<int> _OldReceipt;
		
		private string _OldAccount;
		
		private System.Nullable<int> _Audit;
		
		private string _Parent;
		
		private int _Deposit;
		
		private string _Bank;
		
		private string _Branch;
		
		private string _BSB;
		
		private string _ChequeNum;
		
		private System.Nullable<decimal> _Amount;
		
		private decimal _Discount;
		
		private System.Nullable<byte> _Period;
		
		private bool _Sec;
		
		private System.Nullable<byte> _CompanyNum;
		
		private string _GLAccNum;
		
		private byte _GLType;
		
		private bool _BankRec;
		
		private System.Nullable<System.DateTime> _RecDate;
		
		private decimal _ExchangeRate;
		
		private string _CurrencyType;
		
		private string _BankAccGL;
		
		private bool _IsGLAccount;
		
		private string _Company;
		
		private string _GLAccAdjust;
		
		private EntitySet<DEBTORS_RECEIPT_DETAILS> _DEBTORS_RECEIPT_DETAILS;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceiptChanging(int value);
    partial void OnReceiptChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnOldReceiptChanging(System.Nullable<int> value);
    partial void OnOldReceiptChanged();
    partial void OnOldAccountChanging(string value);
    partial void OnOldAccountChanged();
    partial void OnAuditChanging(System.Nullable<int> value);
    partial void OnAuditChanged();
    partial void OnParentChanging(string value);
    partial void OnParentChanged();
    partial void OnDepositChanging(int value);
    partial void OnDepositChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnBSBChanging(string value);
    partial void OnBSBChanged();
    partial void OnChequeNumChanging(string value);
    partial void OnChequeNumChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnPeriodChanging(System.Nullable<byte> value);
    partial void OnPeriodChanged();
    partial void OnSecChanging(bool value);
    partial void OnSecChanged();
    partial void OnCompanyNumChanging(System.Nullable<byte> value);
    partial void OnCompanyNumChanged();
    partial void OnGLAccNumChanging(string value);
    partial void OnGLAccNumChanged();
    partial void OnGLTypeChanging(byte value);
    partial void OnGLTypeChanged();
    partial void OnBankRecChanging(bool value);
    partial void OnBankRecChanged();
    partial void OnRecDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecDateChanged();
    partial void OnExchangeRateChanging(decimal value);
    partial void OnExchangeRateChanged();
    partial void OnCurrencyTypeChanging(string value);
    partial void OnCurrencyTypeChanged();
    partial void OnBankAccGLChanging(string value);
    partial void OnBankAccGLChanged();
    partial void OnIsGLAccountChanging(bool value);
    partial void OnIsGLAccountChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnGLAccAdjustChanging(string value);
    partial void OnGLAccAdjustChanged();
    #endregion
		
		public DEBTORS_RECEIPTS()
		{
			this._DEBTORS_RECEIPT_DETAILS = new EntitySet<DEBTORS_RECEIPT_DETAILS>(new Action<DEBTORS_RECEIPT_DETAILS>(this.attach_DEBTORS_RECEIPT_DETAILS), new Action<DEBTORS_RECEIPT_DETAILS>(this.detach_DEBTORS_RECEIPT_DETAILS));
			this._DEBTORS = default(EntityRef<DEBTORS>);
			OnCreated();
		}
		
		[Column(Storage="_Receipt", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this.OnReceiptChanging(value);
					this.SendPropertyChanging();
					this._Receipt = value;
					this.SendPropertyChanged("Receipt");
					this.OnReceiptChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int NOT NULL")]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_OldReceipt", DbType="Int")]
		public System.Nullable<int> OldReceipt
		{
			get
			{
				return this._OldReceipt;
			}
			set
			{
				if ((this._OldReceipt != value))
				{
					this.OnOldReceiptChanging(value);
					this.SendPropertyChanging();
					this._OldReceipt = value;
					this.SendPropertyChanged("OldReceipt");
					this.OnOldReceiptChanged();
				}
			}
		}
		
		[Column(Storage="_OldAccount", DbType="VarChar(12)")]
		public string OldAccount
		{
			get
			{
				return this._OldAccount;
			}
			set
			{
				if ((this._OldAccount != value))
				{
					this.OnOldAccountChanging(value);
					this.SendPropertyChanging();
					this._OldAccount = value;
					this.SendPropertyChanged("OldAccount");
					this.OnOldAccountChanged();
				}
			}
		}
		
		[Column(Storage="_Audit", DbType="Int")]
		public System.Nullable<int> Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="VarChar(12)")]
		public string Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[Column(Storage="_Deposit", DbType="Int NOT NULL")]
		public int Deposit
		{
			get
			{
				return this._Deposit;
			}
			set
			{
				if ((this._Deposit != value))
				{
					this.OnDepositChanging(value);
					this.SendPropertyChanging();
					this._Deposit = value;
					this.SendPropertyChanged("Deposit");
					this.OnDepositChanged();
				}
			}
		}
		
		[Column(Storage="_Bank", DbType="VarChar(50)")]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[Column(Storage="_Branch", DbType="VarChar(25)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[Column(Storage="_BSB", DbType="VarChar(10)")]
		public string BSB
		{
			get
			{
				return this._BSB;
			}
			set
			{
				if ((this._BSB != value))
				{
					this.OnBSBChanging(value);
					this.SendPropertyChanging();
					this._BSB = value;
					this.SendPropertyChanged("BSB");
					this.OnBSBChanged();
				}
			}
		}
		
		[Column(Storage="_ChequeNum", DbType="VarChar(12)")]
		public string ChequeNum
		{
			get
			{
				return this._ChequeNum;
			}
			set
			{
				if ((this._ChequeNum != value))
				{
					this.OnChequeNumChanging(value);
					this.SendPropertyChanging();
					this._ChequeNum = value;
					this.SendPropertyChanged("ChequeNum");
					this.OnChequeNumChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_Discount", DbType="Money NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[Column(Storage="_Period", DbType="TinyInt")]
		public System.Nullable<byte> Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[Column(Storage="_Sec", DbType="Bit NOT NULL")]
		public bool Sec
		{
			get
			{
				return this._Sec;
			}
			set
			{
				if ((this._Sec != value))
				{
					this.OnSecChanging(value);
					this.SendPropertyChanging();
					this._Sec = value;
					this.SendPropertyChanged("Sec");
					this.OnSecChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_GLAccNum", DbType="VarChar(16)")]
		public string GLAccNum
		{
			get
			{
				return this._GLAccNum;
			}
			set
			{
				if ((this._GLAccNum != value))
				{
					this.OnGLAccNumChanging(value);
					this.SendPropertyChanging();
					this._GLAccNum = value;
					this.SendPropertyChanged("GLAccNum");
					this.OnGLAccNumChanged();
				}
			}
		}
		
		[Column(Storage="_GLType", DbType="TinyInt NOT NULL")]
		public byte GLType
		{
			get
			{
				return this._GLType;
			}
			set
			{
				if ((this._GLType != value))
				{
					this.OnGLTypeChanging(value);
					this.SendPropertyChanging();
					this._GLType = value;
					this.SendPropertyChanged("GLType");
					this.OnGLTypeChanged();
				}
			}
		}
		
		[Column(Storage="_BankRec", DbType="Bit NOT NULL")]
		public bool BankRec
		{
			get
			{
				return this._BankRec;
			}
			set
			{
				if ((this._BankRec != value))
				{
					this.OnBankRecChanging(value);
					this.SendPropertyChanging();
					this._BankRec = value;
					this.SendPropertyChanged("BankRec");
					this.OnBankRecChanged();
				}
			}
		}
		
		[Column(Storage="_RecDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecDate
		{
			get
			{
				return this._RecDate;
			}
			set
			{
				if ((this._RecDate != value))
				{
					this.OnRecDateChanging(value);
					this.SendPropertyChanging();
					this._RecDate = value;
					this.SendPropertyChanged("RecDate");
					this.OnRecDateChanged();
				}
			}
		}
		
		[Column(Storage="_ExchangeRate", DbType="Decimal(3,2) NOT NULL")]
		public decimal ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[Column(Storage="_CurrencyType", DbType="VarChar(5)")]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this.OnCurrencyTypeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyType = value;
					this.SendPropertyChanged("CurrencyType");
					this.OnCurrencyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_BankAccGL", DbType="VarChar(16)")]
		public string BankAccGL
		{
			get
			{
				return this._BankAccGL;
			}
			set
			{
				if ((this._BankAccGL != value))
				{
					this.OnBankAccGLChanging(value);
					this.SendPropertyChanging();
					this._BankAccGL = value;
					this.SendPropertyChanged("BankAccGL");
					this.OnBankAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_IsGLAccount", DbType="Bit NOT NULL")]
		public bool IsGLAccount
		{
			get
			{
				return this._IsGLAccount;
			}
			set
			{
				if ((this._IsGLAccount != value))
				{
					this.OnIsGLAccountChanging(value);
					this.SendPropertyChanging();
					this._IsGLAccount = value;
					this.SendPropertyChanged("IsGLAccount");
					this.OnIsGLAccountChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_GLAccAdjust", DbType="VarChar(16)")]
		public string GLAccAdjust
		{
			get
			{
				return this._GLAccAdjust;
			}
			set
			{
				if ((this._GLAccAdjust != value))
				{
					this.OnGLAccAdjustChanging(value);
					this.SendPropertyChanging();
					this._GLAccAdjust = value;
					this.SendPropertyChanged("GLAccAdjust");
					this.OnGLAccAdjustChanged();
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_RECEIPT_DETAILS_RECEIPT", Storage="_DEBTORS_RECEIPT_DETAILS", ThisKey="Receipt", OtherKey="RecNum", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_RECEIPT_DETAILS> DEBTORS_RECEIPT_DETAILS
		{
			get
			{
				return this._DEBTORS_RECEIPT_DETAILS;
			}
			set
			{
				this._DEBTORS_RECEIPT_DETAILS.Assign(value);
			}
		}
		
		[Association(Name="FK_DEBTORS_RECEIPTS_DEBTOR", Storage="_DEBTORS", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.DEBTORS_RECEIPTS.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_RECEIPTS.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEBTORS_RECEIPT_DETAILS(DEBTORS_RECEIPT_DETAILS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS_RECEIPTS = this;
		}
		
		private void detach_DEBTORS_RECEIPT_DETAILS(DEBTORS_RECEIPT_DETAILS entity)
		{
			this.SendPropertyChanging();
			entity.DEBTORS_RECEIPTS = null;
		}
	}
	
	[Table(Name="dbo.DEBTORS_UPDATE_HISTORY")]
	public partial class DEBTORS_UPDATE_HISTORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<System.DateTime> _UpdDate;
		
		private string _UpdUser;
		
		private string _Type;
		
		private int _UpdateHistoryID;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnUpdDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdDateChanged();
    partial void OnUpdUserChanging(string value);
    partial void OnUpdUserChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnUpdateHistoryIDChanging(int value);
    partial void OnUpdateHistoryIDChanged();
    #endregion
		
		public DEBTORS_UPDATE_HISTORY()
		{
			this._DEBTORS = default(EntityRef<DEBTORS>);
			OnCreated();
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_UpdDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[Column(Storage="_UpdUser", DbType="VarChar(25)")]
		public string UpdUser
		{
			get
			{
				return this._UpdUser;
			}
			set
			{
				if ((this._UpdUser != value))
				{
					this.OnUpdUserChanging(value);
					this.SendPropertyChanging();
					this._UpdUser = value;
					this.SendPropertyChanged("UpdUser");
					this.OnUpdUserChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(7)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateHistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UpdateHistoryID
		{
			get
			{
				return this._UpdateHistoryID;
			}
			set
			{
				if ((this._UpdateHistoryID != value))
				{
					this.OnUpdateHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._UpdateHistoryID = value;
					this.SendPropertyChanged("UpdateHistoryID");
					this.OnUpdateHistoryIDChanged();
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_UPDATE_HISTORY_DEBTOR", Storage="_DEBTORS", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.DEBTORS_UPDATE_HISTORY.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.DEBTORS_UPDATE_HISTORY.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DEPARTMENTS")]
	public partial class DEPARTMENTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProdCode;
		
		private string _AccountID;
		
		private string _Department;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    #endregion
		
		public DEPARTMENTS()
		{
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_Department", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[Association(Name="FK_DEPARTMENTS_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.DEPARTMENTS.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.DEPARTMENTS.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EMAIL_TYPES")]
	public partial class EMAIL_TYPES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmailTypeID;
		
		private string _EmailType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailTypeIDChanging(int value);
    partial void OnEmailTypeIDChanged();
    partial void OnEmailTypeChanging(string value);
    partial void OnEmailTypeChanged();
    #endregion
		
		public EMAIL_TYPES()
		{
			OnCreated();
		}
		
		[Column(Storage="_EmailTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmailTypeID
		{
			get
			{
				return this._EmailTypeID;
			}
			set
			{
				if ((this._EmailTypeID != value))
				{
					this.OnEmailTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EmailTypeID = value;
					this.SendPropertyChanged("EmailTypeID");
					this.OnEmailTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_EmailType", DbType="VarChar(80)")]
		public string EmailType
		{
			get
			{
				return this._EmailType;
			}
			set
			{
				if ((this._EmailType != value))
				{
					this.OnEmailTypeChanging(value);
					this.SendPropertyChanging();
					this._EmailType = value;
					this.SendPropertyChanged("EmailType");
					this.OnEmailTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EMP_CO")]
	public partial class EMP_CO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private System.Nullable<int> _CompanyNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCompanyNumChanging(System.Nullable<int> value);
    partial void OnCompanyNumChanged();
    #endregion
		
		public EMP_CO()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserName", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="Int")]
		public System.Nullable<int> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EMP_SPID_CO")]
	public partial class EMP_SPID_CO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SPID;
		
		private byte _CompanyNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSPIDChanging(int value);
    partial void OnSPIDChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    #endregion
		
		public EMP_SPID_CO()
		{
			OnCreated();
		}
		
		[Column(Storage="_SPID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SPID
		{
			get
			{
				return this._SPID;
			}
			set
			{
				if ((this._SPID != value))
				{
					this.OnSPIDChanging(value);
					this.SendPropertyChanging();
					this._SPID = value;
					this.SendPropertyChanged("SPID");
					this.OnSPIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EMPLOYEE_COMPANY")]
	public partial class EMPLOYEE_COMPANY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeID;
		
		private byte _CompanyNum;
		
		private bool _Active;
		
		private EntityRef<SETUP> _SETUP;
		
		private EntityRef<EMPLOYEES> _EMPLOYEES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public EMPLOYEE_COMPANY()
		{
			this._SETUP = default(EntityRef<SETUP>);
			this._EMPLOYEES = default(EntityRef<EMPLOYEES>);
			OnCreated();
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._EMPLOYEES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					if (this._SETUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Association(Name="FK_COM", Storage="_SETUP", ThisKey="CompanyNum", OtherKey="CompanyNum", IsForeignKey=true)]
		public SETUP SETUP
		{
			get
			{
				return this._SETUP.Entity;
			}
			set
			{
				SETUP previousValue = this._SETUP.Entity;
				if (((previousValue != value) 
							|| (this._SETUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SETUP.Entity = null;
						previousValue.EMPLOYEE_COMPANY.Remove(this);
					}
					this._SETUP.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEE_COMPANY.Add(this);
						this._CompanyNum = value.CompanyNum;
					}
					else
					{
						this._CompanyNum = default(byte);
					}
					this.SendPropertyChanged("SETUP");
				}
			}
		}
		
		[Association(Name="FK_EMP", Storage="_EMPLOYEES", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public EMPLOYEES EMPLOYEES
		{
			get
			{
				return this._EMPLOYEES.Entity;
			}
			set
			{
				EMPLOYEES previousValue = this._EMPLOYEES.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEES.Entity = null;
						previousValue.EMPLOYEE_COMPANY.Remove(this);
					}
					this._EMPLOYEES.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEE_COMPANY.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(string);
					}
					this.SendPropertyChanged("EMPLOYEES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EMPLOYEES")]
	public partial class EMPLOYEES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeID;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.Nullable<System.DateTime> _HireDate;
		
		private System.Nullable<System.DateTime> _Departed;
		
		private System.Nullable<bool> _Terminated;
		
		private string _Address;
		
		private string _City;
		
		private string _Region;
		
		private string _PostCode;
		
		private string _Country;
		
		private string _HomePhone;
		
		private string _Extension;
		
		private string _Notes;
		
		private string _Mobile;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<int> _SickDaysLast;
		
		private System.Nullable<int> _SickDays;
		
		private System.Nullable<int> _HolidaysLast;
		
		private System.Nullable<int> _Holidays;
		
		private System.Nullable<System.DateTime> _LastReview;
		
		private string _Reviews;
		
		private string _Password;
		
		private System.Nullable<int> _Company;
		
		private System.Nullable<int> _Department;
		
		private bool _Administrator;
		
		private System.Nullable<byte> _Branch;
		
		private System.Nullable<bool> _Engineer;
		
		private System.Nullable<bool> _AM;
		
		private System.Nullable<bool> _Rep;
		
		private System.Nullable<int> _LocationID;
		
		private string _LastProd;
		
		private System.Nullable<bool> _SearchIncLoc;
		
		private System.Nullable<int> _StkSearchLoc;
		
		private System.Nullable<bool> _SearchIncMerged;
		
		private string _ReportingState;
		
		private string _ActualState;
		
		private string _EmailAddress;
		
		private string _OfficePhone;
		
		private System.Nullable<decimal> _HourlyRate;
		
		private bool _ProjectAdministrator;
		
		private System.Nullable<bool> _SearchIncNotInUse;
		
		private bool _BSGTechnicalOwner;
		
		private bool _Manager;
		
		private bool _Logistics;
		
		private string _RepsSalesSupport;
		
		private System.Nullable<int> _RepsSalesTeam;
		
		private bool _StateManager;
		
		private bool _RepAdministrator;
		
		private System.Nullable<decimal> _CommissionCapMonth;
		
		private System.Nullable<decimal> _CommissionCapYear;
		
		private string _ShelfLabelReport;
		
		private string _StkSearchLocs;
		
		private bool _TechnicalAccountManager;
		
		private string _ADUserName;
		
		private EntitySet<COMPANY_APPROVALS> _COMPANY_APPROVALS;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntitySet<CTRAC_ITEM> _Employee;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM_EMPLOYEES_SALESREP;
		
		private EntitySet<CTRAC_ITEM_IMPORT> _CTRAC_ITEM_IMPORT;
		
		private EntitySet<DEBTORS_LOCATION_IMPORT> _DEBTORS_LOCATION_IMPORT;
		
		private EntitySet<EMPLOYEE_COMPANY> _EMPLOYEE_COMPANY;
		
		private EntitySet<INT_STOCK_TRANSFER_BATCH> _INT_STOCK_TRANSFER_BATCH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnHireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHireDateChanged();
    partial void OnDepartedChanging(System.Nullable<System.DateTime> value);
    partial void OnDepartedChanged();
    partial void OnTerminatedChanging(System.Nullable<bool> value);
    partial void OnTerminatedChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    partial void OnSickDaysLastChanging(System.Nullable<int> value);
    partial void OnSickDaysLastChanged();
    partial void OnSickDaysChanging(System.Nullable<int> value);
    partial void OnSickDaysChanged();
    partial void OnHolidaysLastChanging(System.Nullable<int> value);
    partial void OnHolidaysLastChanged();
    partial void OnHolidaysChanging(System.Nullable<int> value);
    partial void OnHolidaysChanged();
    partial void OnLastReviewChanging(System.Nullable<System.DateTime> value);
    partial void OnLastReviewChanged();
    partial void OnReviewsChanging(string value);
    partial void OnReviewsChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCompanyChanging(System.Nullable<int> value);
    partial void OnCompanyChanged();
    partial void OnDepartmentChanging(System.Nullable<int> value);
    partial void OnDepartmentChanged();
    partial void OnAdministratorChanging(bool value);
    partial void OnAdministratorChanged();
    partial void OnBranchChanging(System.Nullable<byte> value);
    partial void OnBranchChanged();
    partial void OnEngineerChanging(System.Nullable<bool> value);
    partial void OnEngineerChanged();
    partial void OnAMChanging(System.Nullable<bool> value);
    partial void OnAMChanged();
    partial void OnRepChanging(System.Nullable<bool> value);
    partial void OnRepChanged();
    partial void OnLocationIDChanging(System.Nullable<int> value);
    partial void OnLocationIDChanged();
    partial void OnLastProdChanging(string value);
    partial void OnLastProdChanged();
    partial void OnSearchIncLocChanging(System.Nullable<bool> value);
    partial void OnSearchIncLocChanged();
    partial void OnStkSearchLocChanging(System.Nullable<int> value);
    partial void OnStkSearchLocChanged();
    partial void OnSearchIncMergedChanging(System.Nullable<bool> value);
    partial void OnSearchIncMergedChanged();
    partial void OnReportingStateChanging(string value);
    partial void OnReportingStateChanged();
    partial void OnActualStateChanging(string value);
    partial void OnActualStateChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnOfficePhoneChanging(string value);
    partial void OnOfficePhoneChanged();
    partial void OnHourlyRateChanging(System.Nullable<decimal> value);
    partial void OnHourlyRateChanged();
    partial void OnProjectAdministratorChanging(bool value);
    partial void OnProjectAdministratorChanged();
    partial void OnSearchIncNotInUseChanging(System.Nullable<bool> value);
    partial void OnSearchIncNotInUseChanged();
    partial void OnBSGTechnicalOwnerChanging(bool value);
    partial void OnBSGTechnicalOwnerChanged();
    partial void OnManagerChanging(bool value);
    partial void OnManagerChanged();
    partial void OnLogisticsChanging(bool value);
    partial void OnLogisticsChanged();
    partial void OnRepsSalesSupportChanging(string value);
    partial void OnRepsSalesSupportChanged();
    partial void OnRepsSalesTeamChanging(System.Nullable<int> value);
    partial void OnRepsSalesTeamChanged();
    partial void OnStateManagerChanging(bool value);
    partial void OnStateManagerChanged();
    partial void OnRepAdministratorChanging(bool value);
    partial void OnRepAdministratorChanged();
    partial void OnCommissionCapMonthChanging(System.Nullable<decimal> value);
    partial void OnCommissionCapMonthChanged();
    partial void OnCommissionCapYearChanging(System.Nullable<decimal> value);
    partial void OnCommissionCapYearChanged();
    partial void OnShelfLabelReportChanging(string value);
    partial void OnShelfLabelReportChanged();
    partial void OnStkSearchLocsChanging(string value);
    partial void OnStkSearchLocsChanged();
    partial void OnTechnicalAccountManagerChanging(bool value);
    partial void OnTechnicalAccountManagerChanged();
    partial void OnADUserNameChanging(string value);
    partial void OnADUserNameChanged();
    #endregion
		
		public EMPLOYEES()
		{
			this._COMPANY_APPROVALS = new EntitySet<COMPANY_APPROVALS>(new Action<COMPANY_APPROVALS>(this.attach_COMPANY_APPROVALS), new Action<COMPANY_APPROVALS>(this.detach_COMPANY_APPROVALS));
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			this._Employee = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_Employee), new Action<CTRAC_ITEM>(this.detach_Employee));
			this._CTRAC_ITEM_EMPLOYEES_SALESREP = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM_EMPLOYEES_SALESREP), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM_EMPLOYEES_SALESREP));
			this._CTRAC_ITEM_IMPORT = new EntitySet<CTRAC_ITEM_IMPORT>(new Action<CTRAC_ITEM_IMPORT>(this.attach_CTRAC_ITEM_IMPORT), new Action<CTRAC_ITEM_IMPORT>(this.detach_CTRAC_ITEM_IMPORT));
			this._DEBTORS_LOCATION_IMPORT = new EntitySet<DEBTORS_LOCATION_IMPORT>(new Action<DEBTORS_LOCATION_IMPORT>(this.attach_DEBTORS_LOCATION_IMPORT), new Action<DEBTORS_LOCATION_IMPORT>(this.detach_DEBTORS_LOCATION_IMPORT));
			this._EMPLOYEE_COMPANY = new EntitySet<EMPLOYEE_COMPANY>(new Action<EMPLOYEE_COMPANY>(this.attach_EMPLOYEE_COMPANY), new Action<EMPLOYEE_COMPANY>(this.detach_EMPLOYEE_COMPANY));
			this._INT_STOCK_TRANSFER_BATCH = new EntitySet<INT_STOCK_TRANSFER_BATCH>(new Action<INT_STOCK_TRANSFER_BATCH>(this.attach_INT_STOCK_TRANSFER_BATCH), new Action<INT_STOCK_TRANSFER_BATCH>(this.detach_INT_STOCK_TRANSFER_BATCH));
			OnCreated();
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="VarChar(25)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="VarChar(25)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(30)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[Column(Storage="_HireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HireDate
		{
			get
			{
				return this._HireDate;
			}
			set
			{
				if ((this._HireDate != value))
				{
					this.OnHireDateChanging(value);
					this.SendPropertyChanging();
					this._HireDate = value;
					this.SendPropertyChanged("HireDate");
					this.OnHireDateChanged();
				}
			}
		}
		
		[Column(Storage="_Departed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Departed
		{
			get
			{
				return this._Departed;
			}
			set
			{
				if ((this._Departed != value))
				{
					this.OnDepartedChanging(value);
					this.SendPropertyChanging();
					this._Departed = value;
					this.SendPropertyChanged("Departed");
					this.OnDepartedChanged();
				}
			}
		}
		
		[Column(Storage="_Terminated", DbType="Bit")]
		public System.Nullable<bool> Terminated
		{
			get
			{
				return this._Terminated;
			}
			set
			{
				if ((this._Terminated != value))
				{
					this.OnTerminatedChanging(value);
					this.SendPropertyChanging();
					this._Terminated = value;
					this.SendPropertyChanged("Terminated");
					this.OnTerminatedChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="VarChar(60)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(15)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[Column(Storage="_Region", DbType="VarChar(15)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[Column(Storage="_PostCode", DbType="VarChar(10)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(15)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[Column(Storage="_HomePhone", DbType="VarChar(24)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="VarChar(4)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[Column(Storage="_Notes", DbType="VarChar(512)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[Column(Storage="_Mobile", DbType="VarChar(20)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[Column(Storage="_Rate", DbType="Money")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[Column(Storage="_SickDaysLast", DbType="Int")]
		public System.Nullable<int> SickDaysLast
		{
			get
			{
				return this._SickDaysLast;
			}
			set
			{
				if ((this._SickDaysLast != value))
				{
					this.OnSickDaysLastChanging(value);
					this.SendPropertyChanging();
					this._SickDaysLast = value;
					this.SendPropertyChanged("SickDaysLast");
					this.OnSickDaysLastChanged();
				}
			}
		}
		
		[Column(Storage="_SickDays", DbType="Int")]
		public System.Nullable<int> SickDays
		{
			get
			{
				return this._SickDays;
			}
			set
			{
				if ((this._SickDays != value))
				{
					this.OnSickDaysChanging(value);
					this.SendPropertyChanging();
					this._SickDays = value;
					this.SendPropertyChanged("SickDays");
					this.OnSickDaysChanged();
				}
			}
		}
		
		[Column(Storage="_HolidaysLast", DbType="Int")]
		public System.Nullable<int> HolidaysLast
		{
			get
			{
				return this._HolidaysLast;
			}
			set
			{
				if ((this._HolidaysLast != value))
				{
					this.OnHolidaysLastChanging(value);
					this.SendPropertyChanging();
					this._HolidaysLast = value;
					this.SendPropertyChanged("HolidaysLast");
					this.OnHolidaysLastChanged();
				}
			}
		}
		
		[Column(Storage="_Holidays", DbType="Int")]
		public System.Nullable<int> Holidays
		{
			get
			{
				return this._Holidays;
			}
			set
			{
				if ((this._Holidays != value))
				{
					this.OnHolidaysChanging(value);
					this.SendPropertyChanging();
					this._Holidays = value;
					this.SendPropertyChanged("Holidays");
					this.OnHolidaysChanged();
				}
			}
		}
		
		[Column(Storage="_LastReview", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastReview
		{
			get
			{
				return this._LastReview;
			}
			set
			{
				if ((this._LastReview != value))
				{
					this.OnLastReviewChanging(value);
					this.SendPropertyChanging();
					this._LastReview = value;
					this.SendPropertyChanged("LastReview");
					this.OnLastReviewChanged();
				}
			}
		}
		
		[Column(Storage="_Reviews", DbType="VarChar(512)")]
		public string Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				if ((this._Reviews != value))
				{
					this.OnReviewsChanging(value);
					this.SendPropertyChanging();
					this._Reviews = value;
					this.SendPropertyChanged("Reviews");
					this.OnReviewsChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(15)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="Int")]
		public System.Nullable<int> Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_Department", DbType="Int")]
		public System.Nullable<int> Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[Column(Storage="_Administrator", DbType="Bit NOT NULL")]
		public bool Administrator
		{
			get
			{
				return this._Administrator;
			}
			set
			{
				if ((this._Administrator != value))
				{
					this.OnAdministratorChanging(value);
					this.SendPropertyChanging();
					this._Administrator = value;
					this.SendPropertyChanged("Administrator");
					this.OnAdministratorChanged();
				}
			}
		}
		
		[Column(Storage="_Branch", DbType="TinyInt")]
		public System.Nullable<byte> Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[Column(Storage="_Engineer", DbType="Bit")]
		public System.Nullable<bool> Engineer
		{
			get
			{
				return this._Engineer;
			}
			set
			{
				if ((this._Engineer != value))
				{
					this.OnEngineerChanging(value);
					this.SendPropertyChanging();
					this._Engineer = value;
					this.SendPropertyChanged("Engineer");
					this.OnEngineerChanged();
				}
			}
		}
		
		[Column(Storage="_AM", DbType="Bit")]
		public System.Nullable<bool> AM
		{
			get
			{
				return this._AM;
			}
			set
			{
				if ((this._AM != value))
				{
					this.OnAMChanging(value);
					this.SendPropertyChanging();
					this._AM = value;
					this.SendPropertyChanged("AM");
					this.OnAMChanged();
				}
			}
		}
		
		[Column(Storage="_Rep", DbType="Bit")]
		public System.Nullable<bool> Rep
		{
			get
			{
				return this._Rep;
			}
			set
			{
				if ((this._Rep != value))
				{
					this.OnRepChanging(value);
					this.SendPropertyChanging();
					this._Rep = value;
					this.SendPropertyChanged("Rep");
					this.OnRepChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int")]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_LastProd", DbType="VarChar(35)")]
		public string LastProd
		{
			get
			{
				return this._LastProd;
			}
			set
			{
				if ((this._LastProd != value))
				{
					this.OnLastProdChanging(value);
					this.SendPropertyChanging();
					this._LastProd = value;
					this.SendPropertyChanged("LastProd");
					this.OnLastProdChanged();
				}
			}
		}
		
		[Column(Storage="_SearchIncLoc", DbType="Bit")]
		public System.Nullable<bool> SearchIncLoc
		{
			get
			{
				return this._SearchIncLoc;
			}
			set
			{
				if ((this._SearchIncLoc != value))
				{
					this.OnSearchIncLocChanging(value);
					this.SendPropertyChanging();
					this._SearchIncLoc = value;
					this.SendPropertyChanged("SearchIncLoc");
					this.OnSearchIncLocChanged();
				}
			}
		}
		
		[Column(Storage="_StkSearchLoc", DbType="Int")]
		public System.Nullable<int> StkSearchLoc
		{
			get
			{
				return this._StkSearchLoc;
			}
			set
			{
				if ((this._StkSearchLoc != value))
				{
					this.OnStkSearchLocChanging(value);
					this.SendPropertyChanging();
					this._StkSearchLoc = value;
					this.SendPropertyChanged("StkSearchLoc");
					this.OnStkSearchLocChanged();
				}
			}
		}
		
		[Column(Storage="_SearchIncMerged", DbType="Bit")]
		public System.Nullable<bool> SearchIncMerged
		{
			get
			{
				return this._SearchIncMerged;
			}
			set
			{
				if ((this._SearchIncMerged != value))
				{
					this.OnSearchIncMergedChanging(value);
					this.SendPropertyChanging();
					this._SearchIncMerged = value;
					this.SendPropertyChanged("SearchIncMerged");
					this.OnSearchIncMergedChanged();
				}
			}
		}
		
		[Column(Storage="_ReportingState", DbType="VarChar(5)")]
		public string ReportingState
		{
			get
			{
				return this._ReportingState;
			}
			set
			{
				if ((this._ReportingState != value))
				{
					this.OnReportingStateChanging(value);
					this.SendPropertyChanging();
					this._ReportingState = value;
					this.SendPropertyChanged("ReportingState");
					this.OnReportingStateChanged();
				}
			}
		}
		
		[Column(Storage="_ActualState", DbType="VarChar(5)")]
		public string ActualState
		{
			get
			{
				return this._ActualState;
			}
			set
			{
				if ((this._ActualState != value))
				{
					this.OnActualStateChanging(value);
					this.SendPropertyChanging();
					this._ActualState = value;
					this.SendPropertyChanged("ActualState");
					this.OnActualStateChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddress", DbType="VarChar(100)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[Column(Storage="_OfficePhone", DbType="VarChar(24)")]
		public string OfficePhone
		{
			get
			{
				return this._OfficePhone;
			}
			set
			{
				if ((this._OfficePhone != value))
				{
					this.OnOfficePhoneChanging(value);
					this.SendPropertyChanging();
					this._OfficePhone = value;
					this.SendPropertyChanged("OfficePhone");
					this.OnOfficePhoneChanged();
				}
			}
		}
		
		[Column(Storage="_HourlyRate", DbType="Money")]
		public System.Nullable<decimal> HourlyRate
		{
			get
			{
				return this._HourlyRate;
			}
			set
			{
				if ((this._HourlyRate != value))
				{
					this.OnHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._HourlyRate = value;
					this.SendPropertyChanged("HourlyRate");
					this.OnHourlyRateChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectAdministrator", DbType="Bit NOT NULL")]
		public bool ProjectAdministrator
		{
			get
			{
				return this._ProjectAdministrator;
			}
			set
			{
				if ((this._ProjectAdministrator != value))
				{
					this.OnProjectAdministratorChanging(value);
					this.SendPropertyChanging();
					this._ProjectAdministrator = value;
					this.SendPropertyChanged("ProjectAdministrator");
					this.OnProjectAdministratorChanged();
				}
			}
		}
		
		[Column(Storage="_SearchIncNotInUse", DbType="Bit")]
		public System.Nullable<bool> SearchIncNotInUse
		{
			get
			{
				return this._SearchIncNotInUse;
			}
			set
			{
				if ((this._SearchIncNotInUse != value))
				{
					this.OnSearchIncNotInUseChanging(value);
					this.SendPropertyChanging();
					this._SearchIncNotInUse = value;
					this.SendPropertyChanged("SearchIncNotInUse");
					this.OnSearchIncNotInUseChanged();
				}
			}
		}
		
		[Column(Storage="_BSGTechnicalOwner", DbType="Bit NOT NULL")]
		public bool BSGTechnicalOwner
		{
			get
			{
				return this._BSGTechnicalOwner;
			}
			set
			{
				if ((this._BSGTechnicalOwner != value))
				{
					this.OnBSGTechnicalOwnerChanging(value);
					this.SendPropertyChanging();
					this._BSGTechnicalOwner = value;
					this.SendPropertyChanged("BSGTechnicalOwner");
					this.OnBSGTechnicalOwnerChanged();
				}
			}
		}
		
		[Column(Storage="_Manager", DbType="Bit NOT NULL")]
		public bool Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[Column(Storage="_Logistics", DbType="Bit NOT NULL")]
		public bool Logistics
		{
			get
			{
				return this._Logistics;
			}
			set
			{
				if ((this._Logistics != value))
				{
					this.OnLogisticsChanging(value);
					this.SendPropertyChanging();
					this._Logistics = value;
					this.SendPropertyChanged("Logistics");
					this.OnLogisticsChanged();
				}
			}
		}
		
		[Column(Storage="_RepsSalesSupport", DbType="VarChar(25)")]
		public string RepsSalesSupport
		{
			get
			{
				return this._RepsSalesSupport;
			}
			set
			{
				if ((this._RepsSalesSupport != value))
				{
					this.OnRepsSalesSupportChanging(value);
					this.SendPropertyChanging();
					this._RepsSalesSupport = value;
					this.SendPropertyChanged("RepsSalesSupport");
					this.OnRepsSalesSupportChanged();
				}
			}
		}
		
		[Column(Storage="_RepsSalesTeam", DbType="Int")]
		public System.Nullable<int> RepsSalesTeam
		{
			get
			{
				return this._RepsSalesTeam;
			}
			set
			{
				if ((this._RepsSalesTeam != value))
				{
					this.OnRepsSalesTeamChanging(value);
					this.SendPropertyChanging();
					this._RepsSalesTeam = value;
					this.SendPropertyChanged("RepsSalesTeam");
					this.OnRepsSalesTeamChanged();
				}
			}
		}
		
		[Column(Storage="_StateManager", DbType="Bit NOT NULL")]
		public bool StateManager
		{
			get
			{
				return this._StateManager;
			}
			set
			{
				if ((this._StateManager != value))
				{
					this.OnStateManagerChanging(value);
					this.SendPropertyChanging();
					this._StateManager = value;
					this.SendPropertyChanged("StateManager");
					this.OnStateManagerChanged();
				}
			}
		}
		
		[Column(Storage="_RepAdministrator", DbType="Bit NOT NULL")]
		public bool RepAdministrator
		{
			get
			{
				return this._RepAdministrator;
			}
			set
			{
				if ((this._RepAdministrator != value))
				{
					this.OnRepAdministratorChanging(value);
					this.SendPropertyChanging();
					this._RepAdministrator = value;
					this.SendPropertyChanged("RepAdministrator");
					this.OnRepAdministratorChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionCapMonth", DbType="Money")]
		public System.Nullable<decimal> CommissionCapMonth
		{
			get
			{
				return this._CommissionCapMonth;
			}
			set
			{
				if ((this._CommissionCapMonth != value))
				{
					this.OnCommissionCapMonthChanging(value);
					this.SendPropertyChanging();
					this._CommissionCapMonth = value;
					this.SendPropertyChanged("CommissionCapMonth");
					this.OnCommissionCapMonthChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionCapYear", DbType="Money")]
		public System.Nullable<decimal> CommissionCapYear
		{
			get
			{
				return this._CommissionCapYear;
			}
			set
			{
				if ((this._CommissionCapYear != value))
				{
					this.OnCommissionCapYearChanging(value);
					this.SendPropertyChanging();
					this._CommissionCapYear = value;
					this.SendPropertyChanged("CommissionCapYear");
					this.OnCommissionCapYearChanged();
				}
			}
		}
		
		[Column(Storage="_ShelfLabelReport", DbType="VarChar(100)")]
		public string ShelfLabelReport
		{
			get
			{
				return this._ShelfLabelReport;
			}
			set
			{
				if ((this._ShelfLabelReport != value))
				{
					this.OnShelfLabelReportChanging(value);
					this.SendPropertyChanging();
					this._ShelfLabelReport = value;
					this.SendPropertyChanged("ShelfLabelReport");
					this.OnShelfLabelReportChanged();
				}
			}
		}
		
		[Column(Storage="_StkSearchLocs", DbType="VarChar(500)")]
		public string StkSearchLocs
		{
			get
			{
				return this._StkSearchLocs;
			}
			set
			{
				if ((this._StkSearchLocs != value))
				{
					this.OnStkSearchLocsChanging(value);
					this.SendPropertyChanging();
					this._StkSearchLocs = value;
					this.SendPropertyChanged("StkSearchLocs");
					this.OnStkSearchLocsChanged();
				}
			}
		}
		
		[Column(Storage="_TechnicalAccountManager", DbType="Bit NOT NULL")]
		public bool TechnicalAccountManager
		{
			get
			{
				return this._TechnicalAccountManager;
			}
			set
			{
				if ((this._TechnicalAccountManager != value))
				{
					this.OnTechnicalAccountManagerChanging(value);
					this.SendPropertyChanging();
					this._TechnicalAccountManager = value;
					this.SendPropertyChanged("TechnicalAccountManager");
					this.OnTechnicalAccountManagerChanged();
				}
			}
		}
		
		[Column(Storage="_ADUserName", DbType="VarChar(200)")]
		public string ADUserName
		{
			get
			{
				return this._ADUserName;
			}
			set
			{
				if ((this._ADUserName != value))
				{
					this.OnADUserNameChanging(value);
					this.SendPropertyChanging();
					this._ADUserName = value;
					this.SendPropertyChanged("ADUserName");
					this.OnADUserNameChanged();
				}
			}
		}
		
		[Association(Name="FK_COMPANY_APPROVALS_USER", Storage="_COMPANY_APPROVALS", ThisKey="EmployeeID", OtherKey="UserID", DeleteRule="NO ACTION")]
		public EntitySet<COMPANY_APPROVALS> COMPANY_APPROVALS
		{
			get
			{
				return this._COMPANY_APPROVALS;
			}
			set
			{
				this._COMPANY_APPROVALS.Assign(value);
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_EMPLOYEES", Storage="_CTRAC_ITEM", ThisKey="EmployeeID", OtherKey="Engineer", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_EMPLOYEES_LEADSALESREP", Storage="_Employee", ThisKey="EmployeeID", OtherKey="LeadSalesRep", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				this._Employee.Assign(value);
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_EMPLOYEES_SALESREP", Storage="_CTRAC_ITEM_EMPLOYEES_SALESREP", ThisKey="EmployeeID", OtherKey="SalesRep", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM_EMPLOYEES_SALESREP
		{
			get
			{
				return this._CTRAC_ITEM_EMPLOYEES_SALESREP;
			}
			set
			{
				this._CTRAC_ITEM_EMPLOYEES_SALESREP.Assign(value);
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_IMPORT_EMPLOYEES", Storage="_CTRAC_ITEM_IMPORT", ThisKey="EmployeeID", OtherKey="ImportedBy", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM_IMPORT> CTRAC_ITEM_IMPORT
		{
			get
			{
				return this._CTRAC_ITEM_IMPORT;
			}
			set
			{
				this._CTRAC_ITEM_IMPORT.Assign(value);
			}
		}
		
		[Association(Name="FK_DEBTORS_LOCATION_IMPORT_EMPLOYEES", Storage="_DEBTORS_LOCATION_IMPORT", ThisKey="EmployeeID", OtherKey="ImportedBy", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_LOCATION_IMPORT> DEBTORS_LOCATION_IMPORT
		{
			get
			{
				return this._DEBTORS_LOCATION_IMPORT;
			}
			set
			{
				this._DEBTORS_LOCATION_IMPORT.Assign(value);
			}
		}
		
		[Association(Name="FK_EMP", Storage="_EMPLOYEE_COMPANY", ThisKey="EmployeeID", OtherKey="EmployeeID", DeleteRule="NO ACTION")]
		public EntitySet<EMPLOYEE_COMPANY> EMPLOYEE_COMPANY
		{
			get
			{
				return this._EMPLOYEE_COMPANY;
			}
			set
			{
				this._EMPLOYEE_COMPANY.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_TRANSFER_BATCH_USER", Storage="_INT_STOCK_TRANSFER_BATCH", ThisKey="EmployeeID", OtherKey="User", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_TRANSFER_BATCH> INT_STOCK_TRANSFER_BATCH
		{
			get
			{
				return this._INT_STOCK_TRANSFER_BATCH;
			}
			set
			{
				this._INT_STOCK_TRANSFER_BATCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_COMPANY_APPROVALS(COMPANY_APPROVALS entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = this;
		}
		
		private void detach_COMPANY_APPROVALS(COMPANY_APPROVALS entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = null;
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = null;
		}
		
		private void attach_Employee(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.LeadSalesRepEMPLOYEES = this;
		}
		
		private void detach_Employee(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.LeadSalesRepEMPLOYEES = null;
		}
		
		private void attach_CTRAC_ITEM_EMPLOYEES_SALESREP(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.SalesRepEMPLOYEES = this;
		}
		
		private void detach_CTRAC_ITEM_EMPLOYEES_SALESREP(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.SalesRepEMPLOYEES = null;
		}
		
		private void attach_CTRAC_ITEM_IMPORT(CTRAC_ITEM_IMPORT entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = this;
		}
		
		private void detach_CTRAC_ITEM_IMPORT(CTRAC_ITEM_IMPORT entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = null;
		}
		
		private void attach_DEBTORS_LOCATION_IMPORT(DEBTORS_LOCATION_IMPORT entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = this;
		}
		
		private void detach_DEBTORS_LOCATION_IMPORT(DEBTORS_LOCATION_IMPORT entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = null;
		}
		
		private void attach_EMPLOYEE_COMPANY(EMPLOYEE_COMPANY entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = this;
		}
		
		private void detach_EMPLOYEE_COMPANY(EMPLOYEE_COMPANY entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = null;
		}
		
		private void attach_INT_STOCK_TRANSFER_BATCH(INT_STOCK_TRANSFER_BATCH entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = this;
		}
		
		private void detach_INT_STOCK_TRANSFER_BATCH(INT_STOCK_TRANSFER_BATCH entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = null;
		}
	}
	
	[Table(Name="dbo.EMPLOYEES_APPROVALS")]
	public partial class EMPLOYEES_APPROVALS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Employee;
		
		private string _Approval;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeChanging(string value);
    partial void OnEmployeeChanged();
    partial void OnApprovalChanging(string value);
    partial void OnApprovalChanged();
    #endregion
		
		public EMPLOYEES_APPROVALS()
		{
			OnCreated();
		}
		
		[Column(Storage="_Employee", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				if ((this._Employee != value))
				{
					this.OnEmployeeChanging(value);
					this.SendPropertyChanging();
					this._Employee = value;
					this.SendPropertyChanged("Employee");
					this.OnEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_Approval", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Approval
		{
			get
			{
				return this._Approval;
			}
			set
			{
				if ((this._Approval != value))
				{
					this.OnApprovalChanging(value);
					this.SendPropertyChanging();
					this._Approval = value;
					this.SendPropertyChanged("Approval");
					this.OnApprovalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EMPLOYEES_APPROVALS_TMP")]
	public partial class EMPLOYEES_APPROVALS_TMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GUID;
		
		private string _Employee;
		
		private string _Approval;
		
		private EntitySet<COMPANY_APPROVALS_TMP> _COMPANY_APPROVALS_TMP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnEmployeeChanging(string value);
    partial void OnEmployeeChanged();
    partial void OnApprovalChanging(string value);
    partial void OnApprovalChanged();
    #endregion
		
		public EMPLOYEES_APPROVALS_TMP()
		{
			this._COMPANY_APPROVALS_TMP = new EntitySet<COMPANY_APPROVALS_TMP>(new Action<COMPANY_APPROVALS_TMP>(this.attach_COMPANY_APPROVALS_TMP), new Action<COMPANY_APPROVALS_TMP>(this.detach_COMPANY_APPROVALS_TMP));
			OnCreated();
		}
		
		[Column(Storage="_GUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[Column(Storage="_Employee", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				if ((this._Employee != value))
				{
					this.OnEmployeeChanging(value);
					this.SendPropertyChanging();
					this._Employee = value;
					this.SendPropertyChanged("Employee");
					this.OnEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_Approval", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Approval
		{
			get
			{
				return this._Approval;
			}
			set
			{
				if ((this._Approval != value))
				{
					this.OnApprovalChanging(value);
					this.SendPropertyChanging();
					this._Approval = value;
					this.SendPropertyChanged("Approval");
					this.OnApprovalChanged();
				}
			}
		}
		
		[Association(Name="FK_COMPANY_APPROVALS_APPROVAL_TMP", Storage="_COMPANY_APPROVALS_TMP", ThisKey="GUID,Employee,Approval", OtherKey="GUID,UserID,Approval", DeleteRule="CASCADE")]
		public EntitySet<COMPANY_APPROVALS_TMP> COMPANY_APPROVALS_TMP
		{
			get
			{
				return this._COMPANY_APPROVALS_TMP;
			}
			set
			{
				this._COMPANY_APPROVALS_TMP.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_COMPANY_APPROVALS_TMP(COMPANY_APPROVALS_TMP entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES_APPROVALS_TMP = this;
		}
		
		private void detach_COMPANY_APPROVALS_TMP(COMPANY_APPROVALS_TMP entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES_APPROVALS_TMP = null;
		}
	}
	
	[Table(Name="dbo.EMPLOYEES_STATE")]
	public partial class EMPLOYEES_STATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeID;
		
		private string _ReportingState;
		
		private string _ActualState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnReportingStateChanging(string value);
    partial void OnReportingStateChanged();
    partial void OnActualStateChanging(string value);
    partial void OnActualStateChanged();
    #endregion
		
		public EMPLOYEES_STATE()
		{
			OnCreated();
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReportingState", DbType="VarChar(5)")]
		public string ReportingState
		{
			get
			{
				return this._ReportingState;
			}
			set
			{
				if ((this._ReportingState != value))
				{
					this.OnReportingStateChanging(value);
					this.SendPropertyChanging();
					this._ReportingState = value;
					this.SendPropertyChanged("ReportingState");
					this.OnReportingStateChanged();
				}
			}
		}
		
		[Column(Storage="_ActualState", DbType="VarChar(5)")]
		public string ActualState
		{
			get
			{
				return this._ActualState;
			}
			set
			{
				if ((this._ActualState != value))
				{
					this.OnActualStateChanging(value);
					this.SendPropertyChanging();
					this._ActualState = value;
					this.SendPropertyChanged("ActualState");
					this.OnActualStateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EMPLOYEES_TMP")]
	public partial class EMPLOYEES_TMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GUID;
		
		private string _EmployeeID;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.Nullable<System.DateTime> _HireDate;
		
		private System.Nullable<System.DateTime> _Departed;
		
		private System.Nullable<bool> _Terminated;
		
		private string _Address;
		
		private string _City;
		
		private string _Region;
		
		private string _PostCode;
		
		private string _Country;
		
		private string _HomePhone;
		
		private string _Extension;
		
		private string _Notes;
		
		private string _Mobile;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<int> _SickDaysLast;
		
		private System.Nullable<int> _SickDays;
		
		private System.Nullable<int> _HolidaysLast;
		
		private System.Nullable<int> _Holidays;
		
		private System.Nullable<System.DateTime> _LastReview;
		
		private string _Reviews;
		
		private string _Password;
		
		private System.Nullable<int> _Company;
		
		private System.Nullable<int> _Department;
		
		private bool _Administrator;
		
		private System.Nullable<byte> _Branch;
		
		private System.Nullable<bool> _Engineer;
		
		private System.Nullable<bool> _AM;
		
		private System.Nullable<bool> _Rep;
		
		private System.Nullable<int> _LocationID;
		
		private string _LastProd;
		
		private System.Nullable<bool> _SearchIncLoc;
		
		private System.Nullable<int> _StkSearchLoc;
		
		private System.Nullable<bool> _SearchIncMerged;
		
		private string _ReportingState;
		
		private string _ActualState;
		
		private string _EmailAddress;
		
		private string _OfficePhone;
		
		private System.Nullable<decimal> _HourlyRate;
		
		private bool _ProjectAdministrator;
		
		private System.Nullable<bool> _SearchIncNotInUse;
		
		private bool _BSGTechnicalOwner;
		
		private bool _Manager;
		
		private bool _Logistics;
		
		private string _RepsSalesSupport;
		
		private System.Nullable<int> _RepsSalesTeam;
		
		private bool _StateManager;
		
		private bool _RepAdministrator;
		
		private System.Nullable<decimal> _CommissionCapMonth;
		
		private System.Nullable<decimal> _CommissionCapYear;
		
		private string _ShelfLabelReport;
		
		private string _StkSearchLocs;
		
		private bool _TechnicalAccountManager;
		
		private string _ADUserName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnHireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHireDateChanged();
    partial void OnDepartedChanging(System.Nullable<System.DateTime> value);
    partial void OnDepartedChanged();
    partial void OnTerminatedChanging(System.Nullable<bool> value);
    partial void OnTerminatedChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    partial void OnSickDaysLastChanging(System.Nullable<int> value);
    partial void OnSickDaysLastChanged();
    partial void OnSickDaysChanging(System.Nullable<int> value);
    partial void OnSickDaysChanged();
    partial void OnHolidaysLastChanging(System.Nullable<int> value);
    partial void OnHolidaysLastChanged();
    partial void OnHolidaysChanging(System.Nullable<int> value);
    partial void OnHolidaysChanged();
    partial void OnLastReviewChanging(System.Nullable<System.DateTime> value);
    partial void OnLastReviewChanged();
    partial void OnReviewsChanging(string value);
    partial void OnReviewsChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCompanyChanging(System.Nullable<int> value);
    partial void OnCompanyChanged();
    partial void OnDepartmentChanging(System.Nullable<int> value);
    partial void OnDepartmentChanged();
    partial void OnAdministratorChanging(bool value);
    partial void OnAdministratorChanged();
    partial void OnBranchChanging(System.Nullable<byte> value);
    partial void OnBranchChanged();
    partial void OnEngineerChanging(System.Nullable<bool> value);
    partial void OnEngineerChanged();
    partial void OnAMChanging(System.Nullable<bool> value);
    partial void OnAMChanged();
    partial void OnRepChanging(System.Nullable<bool> value);
    partial void OnRepChanged();
    partial void OnLocationIDChanging(System.Nullable<int> value);
    partial void OnLocationIDChanged();
    partial void OnLastProdChanging(string value);
    partial void OnLastProdChanged();
    partial void OnSearchIncLocChanging(System.Nullable<bool> value);
    partial void OnSearchIncLocChanged();
    partial void OnStkSearchLocChanging(System.Nullable<int> value);
    partial void OnStkSearchLocChanged();
    partial void OnSearchIncMergedChanging(System.Nullable<bool> value);
    partial void OnSearchIncMergedChanged();
    partial void OnReportingStateChanging(string value);
    partial void OnReportingStateChanged();
    partial void OnActualStateChanging(string value);
    partial void OnActualStateChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnOfficePhoneChanging(string value);
    partial void OnOfficePhoneChanged();
    partial void OnHourlyRateChanging(System.Nullable<decimal> value);
    partial void OnHourlyRateChanged();
    partial void OnProjectAdministratorChanging(bool value);
    partial void OnProjectAdministratorChanged();
    partial void OnSearchIncNotInUseChanging(System.Nullable<bool> value);
    partial void OnSearchIncNotInUseChanged();
    partial void OnBSGTechnicalOwnerChanging(bool value);
    partial void OnBSGTechnicalOwnerChanged();
    partial void OnManagerChanging(bool value);
    partial void OnManagerChanged();
    partial void OnLogisticsChanging(bool value);
    partial void OnLogisticsChanged();
    partial void OnRepsSalesSupportChanging(string value);
    partial void OnRepsSalesSupportChanged();
    partial void OnRepsSalesTeamChanging(System.Nullable<int> value);
    partial void OnRepsSalesTeamChanged();
    partial void OnStateManagerChanging(bool value);
    partial void OnStateManagerChanged();
    partial void OnRepAdministratorChanging(bool value);
    partial void OnRepAdministratorChanged();
    partial void OnCommissionCapMonthChanging(System.Nullable<decimal> value);
    partial void OnCommissionCapMonthChanged();
    partial void OnCommissionCapYearChanging(System.Nullable<decimal> value);
    partial void OnCommissionCapYearChanged();
    partial void OnShelfLabelReportChanging(string value);
    partial void OnShelfLabelReportChanged();
    partial void OnStkSearchLocsChanging(string value);
    partial void OnStkSearchLocsChanged();
    partial void OnTechnicalAccountManagerChanging(bool value);
    partial void OnTechnicalAccountManagerChanged();
    partial void OnADUserNameChanging(string value);
    partial void OnADUserNameChanged();
    #endregion
		
		public EMPLOYEES_TMP()
		{
			OnCreated();
		}
		
		[Column(Storage="_GUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="VarChar(25)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="VarChar(25)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(30)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[Column(Storage="_HireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HireDate
		{
			get
			{
				return this._HireDate;
			}
			set
			{
				if ((this._HireDate != value))
				{
					this.OnHireDateChanging(value);
					this.SendPropertyChanging();
					this._HireDate = value;
					this.SendPropertyChanged("HireDate");
					this.OnHireDateChanged();
				}
			}
		}
		
		[Column(Storage="_Departed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Departed
		{
			get
			{
				return this._Departed;
			}
			set
			{
				if ((this._Departed != value))
				{
					this.OnDepartedChanging(value);
					this.SendPropertyChanging();
					this._Departed = value;
					this.SendPropertyChanged("Departed");
					this.OnDepartedChanged();
				}
			}
		}
		
		[Column(Storage="_Terminated", DbType="Bit")]
		public System.Nullable<bool> Terminated
		{
			get
			{
				return this._Terminated;
			}
			set
			{
				if ((this._Terminated != value))
				{
					this.OnTerminatedChanging(value);
					this.SendPropertyChanging();
					this._Terminated = value;
					this.SendPropertyChanged("Terminated");
					this.OnTerminatedChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="VarChar(60)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(15)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[Column(Storage="_Region", DbType="VarChar(15)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[Column(Storage="_PostCode", DbType="VarChar(10)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(15)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[Column(Storage="_HomePhone", DbType="VarChar(24)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="VarChar(4)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[Column(Storage="_Notes", DbType="VarChar(512)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[Column(Storage="_Mobile", DbType="VarChar(20)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[Column(Storage="_Rate", DbType="Money")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[Column(Storage="_SickDaysLast", DbType="Int")]
		public System.Nullable<int> SickDaysLast
		{
			get
			{
				return this._SickDaysLast;
			}
			set
			{
				if ((this._SickDaysLast != value))
				{
					this.OnSickDaysLastChanging(value);
					this.SendPropertyChanging();
					this._SickDaysLast = value;
					this.SendPropertyChanged("SickDaysLast");
					this.OnSickDaysLastChanged();
				}
			}
		}
		
		[Column(Storage="_SickDays", DbType="Int")]
		public System.Nullable<int> SickDays
		{
			get
			{
				return this._SickDays;
			}
			set
			{
				if ((this._SickDays != value))
				{
					this.OnSickDaysChanging(value);
					this.SendPropertyChanging();
					this._SickDays = value;
					this.SendPropertyChanged("SickDays");
					this.OnSickDaysChanged();
				}
			}
		}
		
		[Column(Storage="_HolidaysLast", DbType="Int")]
		public System.Nullable<int> HolidaysLast
		{
			get
			{
				return this._HolidaysLast;
			}
			set
			{
				if ((this._HolidaysLast != value))
				{
					this.OnHolidaysLastChanging(value);
					this.SendPropertyChanging();
					this._HolidaysLast = value;
					this.SendPropertyChanged("HolidaysLast");
					this.OnHolidaysLastChanged();
				}
			}
		}
		
		[Column(Storage="_Holidays", DbType="Int")]
		public System.Nullable<int> Holidays
		{
			get
			{
				return this._Holidays;
			}
			set
			{
				if ((this._Holidays != value))
				{
					this.OnHolidaysChanging(value);
					this.SendPropertyChanging();
					this._Holidays = value;
					this.SendPropertyChanged("Holidays");
					this.OnHolidaysChanged();
				}
			}
		}
		
		[Column(Storage="_LastReview", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastReview
		{
			get
			{
				return this._LastReview;
			}
			set
			{
				if ((this._LastReview != value))
				{
					this.OnLastReviewChanging(value);
					this.SendPropertyChanging();
					this._LastReview = value;
					this.SendPropertyChanged("LastReview");
					this.OnLastReviewChanged();
				}
			}
		}
		
		[Column(Storage="_Reviews", DbType="VarChar(512)")]
		public string Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				if ((this._Reviews != value))
				{
					this.OnReviewsChanging(value);
					this.SendPropertyChanging();
					this._Reviews = value;
					this.SendPropertyChanged("Reviews");
					this.OnReviewsChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(15)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="Int")]
		public System.Nullable<int> Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_Department", DbType="Int")]
		public System.Nullable<int> Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[Column(Storage="_Administrator", DbType="Bit NOT NULL")]
		public bool Administrator
		{
			get
			{
				return this._Administrator;
			}
			set
			{
				if ((this._Administrator != value))
				{
					this.OnAdministratorChanging(value);
					this.SendPropertyChanging();
					this._Administrator = value;
					this.SendPropertyChanged("Administrator");
					this.OnAdministratorChanged();
				}
			}
		}
		
		[Column(Storage="_Branch", DbType="TinyInt")]
		public System.Nullable<byte> Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[Column(Storage="_Engineer", DbType="Bit")]
		public System.Nullable<bool> Engineer
		{
			get
			{
				return this._Engineer;
			}
			set
			{
				if ((this._Engineer != value))
				{
					this.OnEngineerChanging(value);
					this.SendPropertyChanging();
					this._Engineer = value;
					this.SendPropertyChanged("Engineer");
					this.OnEngineerChanged();
				}
			}
		}
		
		[Column(Storage="_AM", DbType="Bit")]
		public System.Nullable<bool> AM
		{
			get
			{
				return this._AM;
			}
			set
			{
				if ((this._AM != value))
				{
					this.OnAMChanging(value);
					this.SendPropertyChanging();
					this._AM = value;
					this.SendPropertyChanged("AM");
					this.OnAMChanged();
				}
			}
		}
		
		[Column(Storage="_Rep", DbType="Bit")]
		public System.Nullable<bool> Rep
		{
			get
			{
				return this._Rep;
			}
			set
			{
				if ((this._Rep != value))
				{
					this.OnRepChanging(value);
					this.SendPropertyChanging();
					this._Rep = value;
					this.SendPropertyChanged("Rep");
					this.OnRepChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int")]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_LastProd", DbType="VarChar(35)")]
		public string LastProd
		{
			get
			{
				return this._LastProd;
			}
			set
			{
				if ((this._LastProd != value))
				{
					this.OnLastProdChanging(value);
					this.SendPropertyChanging();
					this._LastProd = value;
					this.SendPropertyChanged("LastProd");
					this.OnLastProdChanged();
				}
			}
		}
		
		[Column(Storage="_SearchIncLoc", DbType="Bit")]
		public System.Nullable<bool> SearchIncLoc
		{
			get
			{
				return this._SearchIncLoc;
			}
			set
			{
				if ((this._SearchIncLoc != value))
				{
					this.OnSearchIncLocChanging(value);
					this.SendPropertyChanging();
					this._SearchIncLoc = value;
					this.SendPropertyChanged("SearchIncLoc");
					this.OnSearchIncLocChanged();
				}
			}
		}
		
		[Column(Storage="_StkSearchLoc", DbType="Int")]
		public System.Nullable<int> StkSearchLoc
		{
			get
			{
				return this._StkSearchLoc;
			}
			set
			{
				if ((this._StkSearchLoc != value))
				{
					this.OnStkSearchLocChanging(value);
					this.SendPropertyChanging();
					this._StkSearchLoc = value;
					this.SendPropertyChanged("StkSearchLoc");
					this.OnStkSearchLocChanged();
				}
			}
		}
		
		[Column(Storage="_SearchIncMerged", DbType="Bit")]
		public System.Nullable<bool> SearchIncMerged
		{
			get
			{
				return this._SearchIncMerged;
			}
			set
			{
				if ((this._SearchIncMerged != value))
				{
					this.OnSearchIncMergedChanging(value);
					this.SendPropertyChanging();
					this._SearchIncMerged = value;
					this.SendPropertyChanged("SearchIncMerged");
					this.OnSearchIncMergedChanged();
				}
			}
		}
		
		[Column(Storage="_ReportingState", DbType="VarChar(5)")]
		public string ReportingState
		{
			get
			{
				return this._ReportingState;
			}
			set
			{
				if ((this._ReportingState != value))
				{
					this.OnReportingStateChanging(value);
					this.SendPropertyChanging();
					this._ReportingState = value;
					this.SendPropertyChanged("ReportingState");
					this.OnReportingStateChanged();
				}
			}
		}
		
		[Column(Storage="_ActualState", DbType="VarChar(5)")]
		public string ActualState
		{
			get
			{
				return this._ActualState;
			}
			set
			{
				if ((this._ActualState != value))
				{
					this.OnActualStateChanging(value);
					this.SendPropertyChanging();
					this._ActualState = value;
					this.SendPropertyChanged("ActualState");
					this.OnActualStateChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddress", DbType="VarChar(100)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[Column(Storage="_OfficePhone", DbType="VarChar(24)")]
		public string OfficePhone
		{
			get
			{
				return this._OfficePhone;
			}
			set
			{
				if ((this._OfficePhone != value))
				{
					this.OnOfficePhoneChanging(value);
					this.SendPropertyChanging();
					this._OfficePhone = value;
					this.SendPropertyChanged("OfficePhone");
					this.OnOfficePhoneChanged();
				}
			}
		}
		
		[Column(Storage="_HourlyRate", DbType="Money")]
		public System.Nullable<decimal> HourlyRate
		{
			get
			{
				return this._HourlyRate;
			}
			set
			{
				if ((this._HourlyRate != value))
				{
					this.OnHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._HourlyRate = value;
					this.SendPropertyChanged("HourlyRate");
					this.OnHourlyRateChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectAdministrator", DbType="Bit NOT NULL")]
		public bool ProjectAdministrator
		{
			get
			{
				return this._ProjectAdministrator;
			}
			set
			{
				if ((this._ProjectAdministrator != value))
				{
					this.OnProjectAdministratorChanging(value);
					this.SendPropertyChanging();
					this._ProjectAdministrator = value;
					this.SendPropertyChanged("ProjectAdministrator");
					this.OnProjectAdministratorChanged();
				}
			}
		}
		
		[Column(Storage="_SearchIncNotInUse", DbType="Bit")]
		public System.Nullable<bool> SearchIncNotInUse
		{
			get
			{
				return this._SearchIncNotInUse;
			}
			set
			{
				if ((this._SearchIncNotInUse != value))
				{
					this.OnSearchIncNotInUseChanging(value);
					this.SendPropertyChanging();
					this._SearchIncNotInUse = value;
					this.SendPropertyChanged("SearchIncNotInUse");
					this.OnSearchIncNotInUseChanged();
				}
			}
		}
		
		[Column(Storage="_BSGTechnicalOwner", DbType="Bit NOT NULL")]
		public bool BSGTechnicalOwner
		{
			get
			{
				return this._BSGTechnicalOwner;
			}
			set
			{
				if ((this._BSGTechnicalOwner != value))
				{
					this.OnBSGTechnicalOwnerChanging(value);
					this.SendPropertyChanging();
					this._BSGTechnicalOwner = value;
					this.SendPropertyChanged("BSGTechnicalOwner");
					this.OnBSGTechnicalOwnerChanged();
				}
			}
		}
		
		[Column(Storage="_Manager", DbType="Bit NOT NULL")]
		public bool Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[Column(Storage="_Logistics", DbType="Bit NOT NULL")]
		public bool Logistics
		{
			get
			{
				return this._Logistics;
			}
			set
			{
				if ((this._Logistics != value))
				{
					this.OnLogisticsChanging(value);
					this.SendPropertyChanging();
					this._Logistics = value;
					this.SendPropertyChanged("Logistics");
					this.OnLogisticsChanged();
				}
			}
		}
		
		[Column(Storage="_RepsSalesSupport", DbType="VarChar(25)")]
		public string RepsSalesSupport
		{
			get
			{
				return this._RepsSalesSupport;
			}
			set
			{
				if ((this._RepsSalesSupport != value))
				{
					this.OnRepsSalesSupportChanging(value);
					this.SendPropertyChanging();
					this._RepsSalesSupport = value;
					this.SendPropertyChanged("RepsSalesSupport");
					this.OnRepsSalesSupportChanged();
				}
			}
		}
		
		[Column(Storage="_RepsSalesTeam", DbType="Int")]
		public System.Nullable<int> RepsSalesTeam
		{
			get
			{
				return this._RepsSalesTeam;
			}
			set
			{
				if ((this._RepsSalesTeam != value))
				{
					this.OnRepsSalesTeamChanging(value);
					this.SendPropertyChanging();
					this._RepsSalesTeam = value;
					this.SendPropertyChanged("RepsSalesTeam");
					this.OnRepsSalesTeamChanged();
				}
			}
		}
		
		[Column(Storage="_StateManager", DbType="Bit NOT NULL")]
		public bool StateManager
		{
			get
			{
				return this._StateManager;
			}
			set
			{
				if ((this._StateManager != value))
				{
					this.OnStateManagerChanging(value);
					this.SendPropertyChanging();
					this._StateManager = value;
					this.SendPropertyChanged("StateManager");
					this.OnStateManagerChanged();
				}
			}
		}
		
		[Column(Storage="_RepAdministrator", DbType="Bit NOT NULL")]
		public bool RepAdministrator
		{
			get
			{
				return this._RepAdministrator;
			}
			set
			{
				if ((this._RepAdministrator != value))
				{
					this.OnRepAdministratorChanging(value);
					this.SendPropertyChanging();
					this._RepAdministrator = value;
					this.SendPropertyChanged("RepAdministrator");
					this.OnRepAdministratorChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionCapMonth", DbType="Money")]
		public System.Nullable<decimal> CommissionCapMonth
		{
			get
			{
				return this._CommissionCapMonth;
			}
			set
			{
				if ((this._CommissionCapMonth != value))
				{
					this.OnCommissionCapMonthChanging(value);
					this.SendPropertyChanging();
					this._CommissionCapMonth = value;
					this.SendPropertyChanged("CommissionCapMonth");
					this.OnCommissionCapMonthChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionCapYear", DbType="Money")]
		public System.Nullable<decimal> CommissionCapYear
		{
			get
			{
				return this._CommissionCapYear;
			}
			set
			{
				if ((this._CommissionCapYear != value))
				{
					this.OnCommissionCapYearChanging(value);
					this.SendPropertyChanging();
					this._CommissionCapYear = value;
					this.SendPropertyChanged("CommissionCapYear");
					this.OnCommissionCapYearChanged();
				}
			}
		}
		
		[Column(Storage="_ShelfLabelReport", DbType="VarChar(100)")]
		public string ShelfLabelReport
		{
			get
			{
				return this._ShelfLabelReport;
			}
			set
			{
				if ((this._ShelfLabelReport != value))
				{
					this.OnShelfLabelReportChanging(value);
					this.SendPropertyChanging();
					this._ShelfLabelReport = value;
					this.SendPropertyChanged("ShelfLabelReport");
					this.OnShelfLabelReportChanged();
				}
			}
		}
		
		[Column(Storage="_StkSearchLocs", DbType="VarChar(500)")]
		public string StkSearchLocs
		{
			get
			{
				return this._StkSearchLocs;
			}
			set
			{
				if ((this._StkSearchLocs != value))
				{
					this.OnStkSearchLocsChanging(value);
					this.SendPropertyChanging();
					this._StkSearchLocs = value;
					this.SendPropertyChanged("StkSearchLocs");
					this.OnStkSearchLocsChanged();
				}
			}
		}
		
		[Column(Storage="_TechnicalAccountManager", DbType="Bit NOT NULL")]
		public bool TechnicalAccountManager
		{
			get
			{
				return this._TechnicalAccountManager;
			}
			set
			{
				if ((this._TechnicalAccountManager != value))
				{
					this.OnTechnicalAccountManagerChanging(value);
					this.SendPropertyChanging();
					this._TechnicalAccountManager = value;
					this.SendPropertyChanged("TechnicalAccountManager");
					this.OnTechnicalAccountManagerChanged();
				}
			}
		}
		
		[Column(Storage="_ADUserName", DbType="VarChar(200)")]
		public string ADUserName
		{
			get
			{
				return this._ADUserName;
			}
			set
			{
				if ((this._ADUserName != value))
				{
					this.OnADUserNameChanging(value);
					this.SendPropertyChanging();
					this._ADUserName = value;
					this.SendPropertyChanged("ADUserName");
					this.OnADUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ERRMSG")]
	public partial class ERRMSG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ErrNum;
		
		private string _ShortMsg;
		
		private string _LongMsg;
		
		private string _TechMsg;
		
		private string _Solution;
		
		private string _Form;
		
		private bool _Error;
		
		private int _HelpID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrNumChanging(int value);
    partial void OnErrNumChanged();
    partial void OnShortMsgChanging(string value);
    partial void OnShortMsgChanged();
    partial void OnLongMsgChanging(string value);
    partial void OnLongMsgChanged();
    partial void OnTechMsgChanging(string value);
    partial void OnTechMsgChanged();
    partial void OnSolutionChanging(string value);
    partial void OnSolutionChanged();
    partial void OnFormChanging(string value);
    partial void OnFormChanged();
    partial void OnErrorChanging(bool value);
    partial void OnErrorChanged();
    partial void OnHelpIDChanging(int value);
    partial void OnHelpIDChanged();
    #endregion
		
		public ERRMSG()
		{
			OnCreated();
		}
		
		[Column(Storage="_ErrNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ErrNum
		{
			get
			{
				return this._ErrNum;
			}
			set
			{
				if ((this._ErrNum != value))
				{
					this.OnErrNumChanging(value);
					this.SendPropertyChanging();
					this._ErrNum = value;
					this.SendPropertyChanged("ErrNum");
					this.OnErrNumChanged();
				}
			}
		}
		
		[Column(Storage="_ShortMsg", DbType="VarChar(50)")]
		public string ShortMsg
		{
			get
			{
				return this._ShortMsg;
			}
			set
			{
				if ((this._ShortMsg != value))
				{
					this.OnShortMsgChanging(value);
					this.SendPropertyChanging();
					this._ShortMsg = value;
					this.SendPropertyChanged("ShortMsg");
					this.OnShortMsgChanged();
				}
			}
		}
		
		[Column(Storage="_LongMsg", DbType="VarChar(150)")]
		public string LongMsg
		{
			get
			{
				return this._LongMsg;
			}
			set
			{
				if ((this._LongMsg != value))
				{
					this.OnLongMsgChanging(value);
					this.SendPropertyChanging();
					this._LongMsg = value;
					this.SendPropertyChanged("LongMsg");
					this.OnLongMsgChanged();
				}
			}
		}
		
		[Column(Storage="_TechMsg", DbType="VarChar(150)")]
		public string TechMsg
		{
			get
			{
				return this._TechMsg;
			}
			set
			{
				if ((this._TechMsg != value))
				{
					this.OnTechMsgChanging(value);
					this.SendPropertyChanging();
					this._TechMsg = value;
					this.SendPropertyChanged("TechMsg");
					this.OnTechMsgChanged();
				}
			}
		}
		
		[Column(Storage="_Solution", DbType="VarChar(150)")]
		public string Solution
		{
			get
			{
				return this._Solution;
			}
			set
			{
				if ((this._Solution != value))
				{
					this.OnSolutionChanging(value);
					this.SendPropertyChanging();
					this._Solution = value;
					this.SendPropertyChanged("Solution");
					this.OnSolutionChanged();
				}
			}
		}
		
		[Column(Storage="_Form", DbType="VarChar(20)")]
		public string Form
		{
			get
			{
				return this._Form;
			}
			set
			{
				if ((this._Form != value))
				{
					this.OnFormChanging(value);
					this.SendPropertyChanging();
					this._Form = value;
					this.SendPropertyChanged("Form");
					this.OnFormChanged();
				}
			}
		}
		
		[Column(Storage="_Error", DbType="Bit NOT NULL")]
		public bool Error
		{
			get
			{
				return this._Error;
			}
			set
			{
				if ((this._Error != value))
				{
					this.OnErrorChanging(value);
					this.SendPropertyChanging();
					this._Error = value;
					this.SendPropertyChanged("Error");
					this.OnErrorChanged();
				}
			}
		}
		
		[Column(Storage="_HelpID", DbType="Int NOT NULL")]
		public int HelpID
		{
			get
			{
				return this._HelpID;
			}
			set
			{
				if ((this._HelpID != value))
				{
					this.OnHelpIDChanging(value);
					this.SendPropertyChanging();
					this._HelpID = value;
					this.SendPropertyChanged("HelpID");
					this.OnHelpIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ERROR_LOG")]
	public partial class ERROR_LOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ErrorNum;
		
		private string _ErrMsg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorNumChanging(int value);
    partial void OnErrorNumChanged();
    partial void OnErrMsgChanging(string value);
    partial void OnErrMsgChanged();
    #endregion
		
		public ERROR_LOG()
		{
			OnCreated();
		}
		
		[Column(Storage="_ErrorNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ErrorNum
		{
			get
			{
				return this._ErrorNum;
			}
			set
			{
				if ((this._ErrorNum != value))
				{
					this.OnErrorNumChanging(value);
					this.SendPropertyChanging();
					this._ErrorNum = value;
					this.SendPropertyChanged("ErrorNum");
					this.OnErrorNumChanged();
				}
			}
		}
		
		[Column(Storage="_ErrMsg", DbType="VarChar(100)")]
		public string ErrMsg
		{
			get
			{
				return this._ErrMsg;
			}
			set
			{
				if ((this._ErrMsg != value))
				{
					this.OnErrMsgChanging(value);
					this.SendPropertyChanging();
					this._ErrMsg = value;
					this.SendPropertyChanged("ErrMsg");
					this.OnErrMsgChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FIX_NVS")]
	public partial class FIX_NVS
	{
		
		private string _CUSTID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Type;
		
		private string _Reference;
		
		private System.Nullable<double> _AmountBilled;
		
		private System.Nullable<double> _AmountOwing;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<int> _NewInvNum;
		
		public FIX_NVS()
		{
		}
		
		[Column(Name="CUST ID", Storage="_CUSTID", DbType="NVarChar(5)")]
		public string CUSTID
		{
			get
			{
				return this._CUSTID;
			}
			set
			{
				if ((this._CUSTID != value))
				{
					this._CUSTID = value;
				}
			}
		}
		
		[Column(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="NVarChar(1)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_Reference", DbType="NVarChar(5)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this._Reference = value;
				}
			}
		}
		
		[Column(Name="Amount Billed", Storage="_AmountBilled", DbType="Float")]
		public System.Nullable<double> AmountBilled
		{
			get
			{
				return this._AmountBilled;
			}
			set
			{
				if ((this._AmountBilled != value))
				{
					this._AmountBilled = value;
				}
			}
		}
		
		[Column(Name="Amount Owing", Storage="_AmountOwing", DbType="Float")]
		public System.Nullable<double> AmountOwing
		{
			get
			{
				return this._AmountOwing;
			}
			set
			{
				if ((this._AmountOwing != value))
				{
					this._AmountOwing = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_NewInvNum", DbType="Int")]
		public System.Nullable<int> NewInvNum
		{
			get
			{
				return this._NewInvNum;
			}
			set
			{
				if ((this._NewInvNum != value))
				{
					this._NewInvNum = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.GL_ACCOUNT_STATUS")]
	public partial class GL_ACCOUNT_STATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _CompanyNum;
		
		private string _Account;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<GL_ACCOUNTS> _GL_ACCOUNTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public GL_ACCOUNT_STATUS()
		{
			this._GL_ACCOUNTS = default(EntityRef<GL_ACCOUNTS>);
			OnCreated();
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					if (this._GL_ACCOUNTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Account", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					if (this._GL_ACCOUNTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_ACCOUNTS_GL_ACCOUNT_STATUS", Storage="_GL_ACCOUNTS", ThisKey="CompanyNum,Account", OtherKey="CompanyNum,Account", IsForeignKey=true, DeleteOnNull=true)]
		public GL_ACCOUNTS GL_ACCOUNTS
		{
			get
			{
				return this._GL_ACCOUNTS.Entity;
			}
			set
			{
				GL_ACCOUNTS previousValue = this._GL_ACCOUNTS.Entity;
				if (((previousValue != value) 
							|| (this._GL_ACCOUNTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_ACCOUNTS.Entity = null;
						previousValue.GL_ACCOUNT_STATUS = null;
					}
					this._GL_ACCOUNTS.Entity = value;
					if ((value != null))
					{
						value.GL_ACCOUNT_STATUS = this;
						this._CompanyNum = value.CompanyNum;
						this._Account = value.Account;
					}
					else
					{
						this._CompanyNum = default(byte);
						this._Account = default(string);
					}
					this.SendPropertyChanged("GL_ACCOUNTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_ACCOUNT_STATUS_TMP")]
	public partial class GL_ACCOUNT_STATUS_TMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GUID;
		
		private byte _CompanyNum;
		
		private string _Account;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<GL_ACCOUNTS_TMP> _GL_ACCOUNTS_TMP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public GL_ACCOUNT_STATUS_TMP()
		{
			this._GL_ACCOUNTS_TMP = default(EntityRef<GL_ACCOUNTS_TMP>);
			OnCreated();
		}
		
		[Column(Storage="_GUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					if (this._GL_ACCOUNTS_TMP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Account", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					if (this._GL_ACCOUNTS_TMP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_ACCOUNTS_GL_ACCOUNT_STATUS_TMP", Storage="_GL_ACCOUNTS_TMP", ThisKey="GUID,Account", OtherKey="GUID,Account", IsForeignKey=true, DeleteOnNull=true)]
		public GL_ACCOUNTS_TMP GL_ACCOUNTS_TMP
		{
			get
			{
				return this._GL_ACCOUNTS_TMP.Entity;
			}
			set
			{
				GL_ACCOUNTS_TMP previousValue = this._GL_ACCOUNTS_TMP.Entity;
				if (((previousValue != value) 
							|| (this._GL_ACCOUNTS_TMP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_ACCOUNTS_TMP.Entity = null;
						previousValue.GL_ACCOUNT_STATUS_TMP.Remove(this);
					}
					this._GL_ACCOUNTS_TMP.Entity = value;
					if ((value != null))
					{
						value.GL_ACCOUNT_STATUS_TMP.Add(this);
						this._GUID = value.GUID;
						this._Account = value.Account;
					}
					else
					{
						this._GUID = default(System.Guid);
						this._Account = default(string);
					}
					this.SendPropertyChanged("GL_ACCOUNTS_TMP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_ACCOUNTS")]
	public partial class GL_ACCOUNTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _CompanyNum;
		
		private string _Account;
		
		private string _AccountName;
		
		private string _Type;
		
		private string _ReportSign;
		
		private string _Grp;
		
		private string _SubGrp;
		
		private string _CostCentre;
		
		private decimal _OpenBal_TY;
		
		private decimal _Debit;
		
		private decimal _Credit;
		
		private decimal _JUL;
		
		private decimal _AUG;
		
		private decimal _SEP;
		
		private decimal _OCT;
		
		private decimal _NOV;
		
		private decimal _DEC;
		
		private decimal _JAN;
		
		private decimal _FEB;
		
		private decimal _MAR;
		
		private decimal _APR;
		
		private decimal _MAY;
		
		private decimal _JUN;
		
		private decimal _PeriodBudget;
		
		private System.Nullable<decimal> _Debit_YTD;
		
		private System.Nullable<decimal> _Credit_YTD;
		
		private System.Nullable<decimal> _OpenBal;
		
		private EntityRef<GL_ACCOUNT_STATUS> _GL_ACCOUNT_STATUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnReportSignChanging(string value);
    partial void OnReportSignChanged();
    partial void OnGrpChanging(string value);
    partial void OnGrpChanged();
    partial void OnSubGrpChanging(string value);
    partial void OnSubGrpChanged();
    partial void OnCostCentreChanging(string value);
    partial void OnCostCentreChanged();
    partial void OnOpenBal_TYChanging(decimal value);
    partial void OnOpenBal_TYChanged();
    partial void OnDebitChanging(decimal value);
    partial void OnDebitChanged();
    partial void OnCreditChanging(decimal value);
    partial void OnCreditChanged();
    partial void OnJULChanging(decimal value);
    partial void OnJULChanged();
    partial void OnAUGChanging(decimal value);
    partial void OnAUGChanged();
    partial void OnSEPChanging(decimal value);
    partial void OnSEPChanged();
    partial void OnOCTChanging(decimal value);
    partial void OnOCTChanged();
    partial void OnNOVChanging(decimal value);
    partial void OnNOVChanged();
    partial void OnDECChanging(decimal value);
    partial void OnDECChanged();
    partial void OnJANChanging(decimal value);
    partial void OnJANChanged();
    partial void OnFEBChanging(decimal value);
    partial void OnFEBChanged();
    partial void OnMARChanging(decimal value);
    partial void OnMARChanged();
    partial void OnAPRChanging(decimal value);
    partial void OnAPRChanged();
    partial void OnMAYChanging(decimal value);
    partial void OnMAYChanged();
    partial void OnJUNChanging(decimal value);
    partial void OnJUNChanged();
    partial void OnPeriodBudgetChanging(decimal value);
    partial void OnPeriodBudgetChanged();
    partial void OnDebit_YTDChanging(System.Nullable<decimal> value);
    partial void OnDebit_YTDChanged();
    partial void OnCredit_YTDChanging(System.Nullable<decimal> value);
    partial void OnCredit_YTDChanged();
    partial void OnOpenBalChanging(System.Nullable<decimal> value);
    partial void OnOpenBalChanged();
    #endregion
		
		public GL_ACCOUNTS()
		{
			this._GL_ACCOUNT_STATUS = default(EntityRef<GL_ACCOUNT_STATUS>);
			OnCreated();
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Account", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[Column(Storage="_AccountName", DbType="VarChar(50)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ReportSign", DbType="Char(1)")]
		public string ReportSign
		{
			get
			{
				return this._ReportSign;
			}
			set
			{
				if ((this._ReportSign != value))
				{
					this.OnReportSignChanging(value);
					this.SendPropertyChanging();
					this._ReportSign = value;
					this.SendPropertyChanged("ReportSign");
					this.OnReportSignChanged();
				}
			}
		}
		
		[Column(Storage="_Grp", DbType="Char(1)")]
		public string Grp
		{
			get
			{
				return this._Grp;
			}
			set
			{
				if ((this._Grp != value))
				{
					this.OnGrpChanging(value);
					this.SendPropertyChanging();
					this._Grp = value;
					this.SendPropertyChanged("Grp");
					this.OnGrpChanged();
				}
			}
		}
		
		[Column(Storage="_SubGrp", DbType="Char(3)")]
		public string SubGrp
		{
			get
			{
				return this._SubGrp;
			}
			set
			{
				if ((this._SubGrp != value))
				{
					this.OnSubGrpChanging(value);
					this.SendPropertyChanging();
					this._SubGrp = value;
					this.SendPropertyChanged("SubGrp");
					this.OnSubGrpChanged();
				}
			}
		}
		
		[Column(Storage="_CostCentre", DbType="Char(5)")]
		public string CostCentre
		{
			get
			{
				return this._CostCentre;
			}
			set
			{
				if ((this._CostCentre != value))
				{
					this.OnCostCentreChanging(value);
					this.SendPropertyChanging();
					this._CostCentre = value;
					this.SendPropertyChanged("CostCentre");
					this.OnCostCentreChanged();
				}
			}
		}
		
		[Column(Storage="_OpenBal_TY", DbType="Decimal(18,2) NOT NULL")]
		public decimal OpenBal_TY
		{
			get
			{
				return this._OpenBal_TY;
			}
			set
			{
				if ((this._OpenBal_TY != value))
				{
					this.OnOpenBal_TYChanging(value);
					this.SendPropertyChanging();
					this._OpenBal_TY = value;
					this.SendPropertyChanged("OpenBal_TY");
					this.OnOpenBal_TYChanged();
				}
			}
		}
		
		[Column(Storage="_Debit", DbType="Decimal(18,2) NOT NULL")]
		public decimal Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[Column(Storage="_Credit", DbType="Decimal(18,2) NOT NULL")]
		public decimal Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[Column(Storage="_JUL", DbType="Decimal(18,2) NOT NULL")]
		public decimal JUL
		{
			get
			{
				return this._JUL;
			}
			set
			{
				if ((this._JUL != value))
				{
					this.OnJULChanging(value);
					this.SendPropertyChanging();
					this._JUL = value;
					this.SendPropertyChanged("JUL");
					this.OnJULChanged();
				}
			}
		}
		
		[Column(Storage="_AUG", DbType="Decimal(18,2) NOT NULL")]
		public decimal AUG
		{
			get
			{
				return this._AUG;
			}
			set
			{
				if ((this._AUG != value))
				{
					this.OnAUGChanging(value);
					this.SendPropertyChanging();
					this._AUG = value;
					this.SendPropertyChanged("AUG");
					this.OnAUGChanged();
				}
			}
		}
		
		[Column(Storage="_SEP", DbType="Decimal(18,2) NOT NULL")]
		public decimal SEP
		{
			get
			{
				return this._SEP;
			}
			set
			{
				if ((this._SEP != value))
				{
					this.OnSEPChanging(value);
					this.SendPropertyChanging();
					this._SEP = value;
					this.SendPropertyChanged("SEP");
					this.OnSEPChanged();
				}
			}
		}
		
		[Column(Storage="_OCT", DbType="Decimal(18,2) NOT NULL")]
		public decimal OCT
		{
			get
			{
				return this._OCT;
			}
			set
			{
				if ((this._OCT != value))
				{
					this.OnOCTChanging(value);
					this.SendPropertyChanging();
					this._OCT = value;
					this.SendPropertyChanged("OCT");
					this.OnOCTChanged();
				}
			}
		}
		
		[Column(Storage="_NOV", DbType="Decimal(18,2) NOT NULL")]
		public decimal NOV
		{
			get
			{
				return this._NOV;
			}
			set
			{
				if ((this._NOV != value))
				{
					this.OnNOVChanging(value);
					this.SendPropertyChanging();
					this._NOV = value;
					this.SendPropertyChanged("NOV");
					this.OnNOVChanged();
				}
			}
		}
		
		[Column(Storage="_DEC", DbType="Decimal(18,2) NOT NULL")]
		public decimal DEC
		{
			get
			{
				return this._DEC;
			}
			set
			{
				if ((this._DEC != value))
				{
					this.OnDECChanging(value);
					this.SendPropertyChanging();
					this._DEC = value;
					this.SendPropertyChanged("DEC");
					this.OnDECChanged();
				}
			}
		}
		
		[Column(Storage="_JAN", DbType="Decimal(18,2) NOT NULL")]
		public decimal JAN
		{
			get
			{
				return this._JAN;
			}
			set
			{
				if ((this._JAN != value))
				{
					this.OnJANChanging(value);
					this.SendPropertyChanging();
					this._JAN = value;
					this.SendPropertyChanged("JAN");
					this.OnJANChanged();
				}
			}
		}
		
		[Column(Storage="_FEB", DbType="Decimal(18,2) NOT NULL")]
		public decimal FEB
		{
			get
			{
				return this._FEB;
			}
			set
			{
				if ((this._FEB != value))
				{
					this.OnFEBChanging(value);
					this.SendPropertyChanging();
					this._FEB = value;
					this.SendPropertyChanged("FEB");
					this.OnFEBChanged();
				}
			}
		}
		
		[Column(Storage="_MAR", DbType="Decimal(18,2) NOT NULL")]
		public decimal MAR
		{
			get
			{
				return this._MAR;
			}
			set
			{
				if ((this._MAR != value))
				{
					this.OnMARChanging(value);
					this.SendPropertyChanging();
					this._MAR = value;
					this.SendPropertyChanged("MAR");
					this.OnMARChanged();
				}
			}
		}
		
		[Column(Storage="_APR", DbType="Decimal(18,2) NOT NULL")]
		public decimal APR
		{
			get
			{
				return this._APR;
			}
			set
			{
				if ((this._APR != value))
				{
					this.OnAPRChanging(value);
					this.SendPropertyChanging();
					this._APR = value;
					this.SendPropertyChanged("APR");
					this.OnAPRChanged();
				}
			}
		}
		
		[Column(Storage="_MAY", DbType="Decimal(18,2) NOT NULL")]
		public decimal MAY
		{
			get
			{
				return this._MAY;
			}
			set
			{
				if ((this._MAY != value))
				{
					this.OnMAYChanging(value);
					this.SendPropertyChanging();
					this._MAY = value;
					this.SendPropertyChanged("MAY");
					this.OnMAYChanged();
				}
			}
		}
		
		[Column(Storage="_JUN", DbType="Decimal(18,2) NOT NULL")]
		public decimal JUN
		{
			get
			{
				return this._JUN;
			}
			set
			{
				if ((this._JUN != value))
				{
					this.OnJUNChanging(value);
					this.SendPropertyChanging();
					this._JUN = value;
					this.SendPropertyChanged("JUN");
					this.OnJUNChanged();
				}
			}
		}
		
		[Column(Storage="_PeriodBudget", DbType="Decimal(18,2) NOT NULL")]
		public decimal PeriodBudget
		{
			get
			{
				return this._PeriodBudget;
			}
			set
			{
				if ((this._PeriodBudget != value))
				{
					this.OnPeriodBudgetChanging(value);
					this.SendPropertyChanging();
					this._PeriodBudget = value;
					this.SendPropertyChanged("PeriodBudget");
					this.OnPeriodBudgetChanged();
				}
			}
		}
		
		[Column(Storage="_Debit_YTD", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Debit_YTD
		{
			get
			{
				return this._Debit_YTD;
			}
			set
			{
				if ((this._Debit_YTD != value))
				{
					this.OnDebit_YTDChanging(value);
					this.SendPropertyChanging();
					this._Debit_YTD = value;
					this.SendPropertyChanged("Debit_YTD");
					this.OnDebit_YTDChanged();
				}
			}
		}
		
		[Column(Storage="_Credit_YTD", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Credit_YTD
		{
			get
			{
				return this._Credit_YTD;
			}
			set
			{
				if ((this._Credit_YTD != value))
				{
					this.OnCredit_YTDChanging(value);
					this.SendPropertyChanging();
					this._Credit_YTD = value;
					this.SendPropertyChanged("Credit_YTD");
					this.OnCredit_YTDChanged();
				}
			}
		}
		
		[Column(Storage="_OpenBal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this.OnOpenBalChanging(value);
					this.SendPropertyChanging();
					this._OpenBal = value;
					this.SendPropertyChanged("OpenBal");
					this.OnOpenBalChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_ACCOUNTS_GL_ACCOUNT_STATUS", Storage="_GL_ACCOUNT_STATUS", ThisKey="CompanyNum,Account", OtherKey="CompanyNum,Account", IsUnique=true, IsForeignKey=false, DeleteRule="CASCADE")]
		public GL_ACCOUNT_STATUS GL_ACCOUNT_STATUS
		{
			get
			{
				return this._GL_ACCOUNT_STATUS.Entity;
			}
			set
			{
				GL_ACCOUNT_STATUS previousValue = this._GL_ACCOUNT_STATUS.Entity;
				if (((previousValue != value) 
							|| (this._GL_ACCOUNT_STATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_ACCOUNT_STATUS.Entity = null;
						previousValue.GL_ACCOUNTS = null;
					}
					this._GL_ACCOUNT_STATUS.Entity = value;
					if ((value != null))
					{
						value.GL_ACCOUNTS = this;
					}
					this.SendPropertyChanged("GL_ACCOUNT_STATUS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_ACCOUNTS_TMP")]
	public partial class GL_ACCOUNTS_TMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GUID;
		
		private string _Account;
		
		private string _AccountName;
		
		private string _Type;
		
		private string _ReportSign;
		
		private string _Grp;
		
		private string _SubGrp;
		
		private EntitySet<GL_ACCOUNT_STATUS_TMP> _GL_ACCOUNT_STATUS_TMP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnReportSignChanging(string value);
    partial void OnReportSignChanged();
    partial void OnGrpChanging(string value);
    partial void OnGrpChanged();
    partial void OnSubGrpChanging(string value);
    partial void OnSubGrpChanged();
    #endregion
		
		public GL_ACCOUNTS_TMP()
		{
			this._GL_ACCOUNT_STATUS_TMP = new EntitySet<GL_ACCOUNT_STATUS_TMP>(new Action<GL_ACCOUNT_STATUS_TMP>(this.attach_GL_ACCOUNT_STATUS_TMP), new Action<GL_ACCOUNT_STATUS_TMP>(this.detach_GL_ACCOUNT_STATUS_TMP));
			OnCreated();
		}
		
		[Column(Storage="_GUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[Column(Storage="_Account", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[Column(Storage="_AccountName", DbType="VarChar(50)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ReportSign", DbType="Char(1)")]
		public string ReportSign
		{
			get
			{
				return this._ReportSign;
			}
			set
			{
				if ((this._ReportSign != value))
				{
					this.OnReportSignChanging(value);
					this.SendPropertyChanging();
					this._ReportSign = value;
					this.SendPropertyChanged("ReportSign");
					this.OnReportSignChanged();
				}
			}
		}
		
		[Column(Storage="_Grp", DbType="Char(1)")]
		public string Grp
		{
			get
			{
				return this._Grp;
			}
			set
			{
				if ((this._Grp != value))
				{
					this.OnGrpChanging(value);
					this.SendPropertyChanging();
					this._Grp = value;
					this.SendPropertyChanged("Grp");
					this.OnGrpChanged();
				}
			}
		}
		
		[Column(Storage="_SubGrp", DbType="Char(3)")]
		public string SubGrp
		{
			get
			{
				return this._SubGrp;
			}
			set
			{
				if ((this._SubGrp != value))
				{
					this.OnSubGrpChanging(value);
					this.SendPropertyChanging();
					this._SubGrp = value;
					this.SendPropertyChanged("SubGrp");
					this.OnSubGrpChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_ACCOUNTS_GL_ACCOUNT_STATUS_TMP", Storage="_GL_ACCOUNT_STATUS_TMP", ThisKey="GUID,Account", OtherKey="GUID,Account", DeleteRule="CASCADE")]
		public EntitySet<GL_ACCOUNT_STATUS_TMP> GL_ACCOUNT_STATUS_TMP
		{
			get
			{
				return this._GL_ACCOUNT_STATUS_TMP;
			}
			set
			{
				this._GL_ACCOUNT_STATUS_TMP.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GL_ACCOUNT_STATUS_TMP(GL_ACCOUNT_STATUS_TMP entity)
		{
			this.SendPropertyChanging();
			entity.GL_ACCOUNTS_TMP = this;
		}
		
		private void detach_GL_ACCOUNT_STATUS_TMP(GL_ACCOUNT_STATUS_TMP entity)
		{
			this.SendPropertyChanging();
			entity.GL_ACCOUNTS_TMP = null;
		}
	}
	
	[Table(Name="dbo.GL_BANKS")]
	public partial class GL_BANKS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Account_;
		
		private string _Bank;
		
		private string _Branch;
		
		private string _AccountName;
		
		private string _BSB_;
		
		private byte _CompanyNum;
		
		private string _BankGL;
		
		private bool _DefaultBank;
		
		private decimal _StatementBal;
		
		private decimal _Balance;
		
		private string _UserNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccount_Changing(string value);
    partial void OnAccount_Changed();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnBSB_Changing(string value);
    partial void OnBSB_Changed();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnBankGLChanging(string value);
    partial void OnBankGLChanged();
    partial void OnDefaultBankChanging(bool value);
    partial void OnDefaultBankChanged();
    partial void OnStatementBalChanging(decimal value);
    partial void OnStatementBalChanged();
    partial void OnBalanceChanging(decimal value);
    partial void OnBalanceChanged();
    partial void OnUserNumChanging(string value);
    partial void OnUserNumChanged();
    #endregion
		
		public GL_BANKS()
		{
			OnCreated();
		}
		
		[Column(Name="Account#", Storage="_Account_", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Account_
		{
			get
			{
				return this._Account_;
			}
			set
			{
				if ((this._Account_ != value))
				{
					this.OnAccount_Changing(value);
					this.SendPropertyChanging();
					this._Account_ = value;
					this.SendPropertyChanged("Account_");
					this.OnAccount_Changed();
				}
			}
		}
		
		[Column(Storage="_Bank", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[Column(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[Column(Storage="_AccountName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[Column(Name="BSB#", Storage="_BSB_", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string BSB_
		{
			get
			{
				return this._BSB_;
			}
			set
			{
				if ((this._BSB_ != value))
				{
					this.OnBSB_Changing(value);
					this.SendPropertyChanging();
					this._BSB_ = value;
					this.SendPropertyChanged("BSB_");
					this.OnBSB_Changed();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_BankGL", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string BankGL
		{
			get
			{
				return this._BankGL;
			}
			set
			{
				if ((this._BankGL != value))
				{
					this.OnBankGLChanging(value);
					this.SendPropertyChanging();
					this._BankGL = value;
					this.SendPropertyChanged("BankGL");
					this.OnBankGLChanged();
				}
			}
		}
		
		[Column(Storage="_DefaultBank", DbType="Bit NOT NULL")]
		public bool DefaultBank
		{
			get
			{
				return this._DefaultBank;
			}
			set
			{
				if ((this._DefaultBank != value))
				{
					this.OnDefaultBankChanging(value);
					this.SendPropertyChanging();
					this._DefaultBank = value;
					this.SendPropertyChanged("DefaultBank");
					this.OnDefaultBankChanged();
				}
			}
		}
		
		[Column(Storage="_StatementBal", DbType="Money NOT NULL")]
		public decimal StatementBal
		{
			get
			{
				return this._StatementBal;
			}
			set
			{
				if ((this._StatementBal != value))
				{
					this.OnStatementBalChanging(value);
					this.SendPropertyChanging();
					this._StatementBal = value;
					this.SendPropertyChanged("StatementBal");
					this.OnStatementBalChanged();
				}
			}
		}
		
		[Column(Storage="_Balance", DbType="Money NOT NULL")]
		public decimal Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[Column(Storage="_UserNum", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string UserNum
		{
			get
			{
				return this._UserNum;
			}
			set
			{
				if ((this._UserNum != value))
				{
					this.OnUserNumChanging(value);
					this.SendPropertyChanging();
					this._UserNum = value;
					this.SendPropertyChanged("UserNum");
					this.OnUserNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_BAS_SUBS")]
	public partial class GL_BAS_SUBS
	{
		
		private string _Sub;
		
		private string _SubTitle;
		
		public GL_BAS_SUBS()
		{
		}
		
		[Column(Storage="_Sub", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string Sub
		{
			get
			{
				return this._Sub;
			}
			set
			{
				if ((this._Sub != value))
				{
					this._Sub = value;
				}
			}
		}
		
		[Column(Storage="_SubTitle", DbType="VarChar(50)")]
		public string SubTitle
		{
			get
			{
				return this._SubTitle;
			}
			set
			{
				if ((this._SubTitle != value))
				{
					this._SubTitle = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.GL_BUSINESS_UNITS")]
	public partial class GL_BUSINESS_UNITS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GLBusinessUnitID;
		
		private string _GLBusinessUnit;
		
		private string _BudgetGroup;
		
		private string _AllowedRequestorGroup;
		
		private string _DirectorGroup;
		
		private EntitySet<GL_BUSINESS_UNITS_ALLOWED> _GL_BUSINESS_UNITS_ALLOWED;
		
		private EntitySet<GL_CONTROLS_ALLOWED> _GL_CONTROLS_ALLOWED;
		
		private EntitySet<GL_OBJECTS_ALLOWED> _GL_OBJECTS_ALLOWED;
		
		private EntitySet<PROJECT> _PROJECT;
		
		private EntitySet<STKORD> _STKORD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGLBusinessUnitIDChanging(int value);
    partial void OnGLBusinessUnitIDChanged();
    partial void OnGLBusinessUnitChanging(string value);
    partial void OnGLBusinessUnitChanged();
    partial void OnBudgetGroupChanging(string value);
    partial void OnBudgetGroupChanged();
    partial void OnAllowedRequestorGroupChanging(string value);
    partial void OnAllowedRequestorGroupChanged();
    partial void OnDirectorGroupChanging(string value);
    partial void OnDirectorGroupChanged();
    #endregion
		
		public GL_BUSINESS_UNITS()
		{
			this._GL_BUSINESS_UNITS_ALLOWED = new EntitySet<GL_BUSINESS_UNITS_ALLOWED>(new Action<GL_BUSINESS_UNITS_ALLOWED>(this.attach_GL_BUSINESS_UNITS_ALLOWED), new Action<GL_BUSINESS_UNITS_ALLOWED>(this.detach_GL_BUSINESS_UNITS_ALLOWED));
			this._GL_CONTROLS_ALLOWED = new EntitySet<GL_CONTROLS_ALLOWED>(new Action<GL_CONTROLS_ALLOWED>(this.attach_GL_CONTROLS_ALLOWED), new Action<GL_CONTROLS_ALLOWED>(this.detach_GL_CONTROLS_ALLOWED));
			this._GL_OBJECTS_ALLOWED = new EntitySet<GL_OBJECTS_ALLOWED>(new Action<GL_OBJECTS_ALLOWED>(this.attach_GL_OBJECTS_ALLOWED), new Action<GL_OBJECTS_ALLOWED>(this.detach_GL_OBJECTS_ALLOWED));
			this._PROJECT = new EntitySet<PROJECT>(new Action<PROJECT>(this.attach_PROJECT), new Action<PROJECT>(this.detach_PROJECT));
			this._STKORD = new EntitySet<STKORD>(new Action<STKORD>(this.attach_STKORD), new Action<STKORD>(this.detach_STKORD));
			OnCreated();
		}
		
		[Column(Storage="_GLBusinessUnitID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLBusinessUnitID
		{
			get
			{
				return this._GLBusinessUnitID;
			}
			set
			{
				if ((this._GLBusinessUnitID != value))
				{
					this.OnGLBusinessUnitIDChanging(value);
					this.SendPropertyChanging();
					this._GLBusinessUnitID = value;
					this.SendPropertyChanged("GLBusinessUnitID");
					this.OnGLBusinessUnitIDChanged();
				}
			}
		}
		
		[Column(Storage="_GLBusinessUnit", DbType="VarChar(50)")]
		public string GLBusinessUnit
		{
			get
			{
				return this._GLBusinessUnit;
			}
			set
			{
				if ((this._GLBusinessUnit != value))
				{
					this.OnGLBusinessUnitChanging(value);
					this.SendPropertyChanging();
					this._GLBusinessUnit = value;
					this.SendPropertyChanged("GLBusinessUnit");
					this.OnGLBusinessUnitChanged();
				}
			}
		}
		
		[Column(Storage="_BudgetGroup", DbType="VarChar(200)")]
		public string BudgetGroup
		{
			get
			{
				return this._BudgetGroup;
			}
			set
			{
				if ((this._BudgetGroup != value))
				{
					this.OnBudgetGroupChanging(value);
					this.SendPropertyChanging();
					this._BudgetGroup = value;
					this.SendPropertyChanged("BudgetGroup");
					this.OnBudgetGroupChanged();
				}
			}
		}
		
		[Column(Storage="_AllowedRequestorGroup", DbType="VarChar(200)")]
		public string AllowedRequestorGroup
		{
			get
			{
				return this._AllowedRequestorGroup;
			}
			set
			{
				if ((this._AllowedRequestorGroup != value))
				{
					this.OnAllowedRequestorGroupChanging(value);
					this.SendPropertyChanging();
					this._AllowedRequestorGroup = value;
					this.SendPropertyChanged("AllowedRequestorGroup");
					this.OnAllowedRequestorGroupChanged();
				}
			}
		}
		
		[Column(Storage="_DirectorGroup", DbType="VarChar(200)")]
		public string DirectorGroup
		{
			get
			{
				return this._DirectorGroup;
			}
			set
			{
				if ((this._DirectorGroup != value))
				{
					this.OnDirectorGroupChanging(value);
					this.SendPropertyChanging();
					this._DirectorGroup = value;
					this.SendPropertyChanged("DirectorGroup");
					this.OnDirectorGroupChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_BUSINESS_UNITS_ALLOWED_GL_BUSINESS_UNITS", Storage="_GL_BUSINESS_UNITS_ALLOWED", ThisKey="GLBusinessUnitID", OtherKey="GLBusinessUnit", DeleteRule="NO ACTION")]
		public EntitySet<GL_BUSINESS_UNITS_ALLOWED> GL_BUSINESS_UNITS_ALLOWED
		{
			get
			{
				return this._GL_BUSINESS_UNITS_ALLOWED;
			}
			set
			{
				this._GL_BUSINESS_UNITS_ALLOWED.Assign(value);
			}
		}
		
		[Association(Name="FK_GL_CONTROLS_ALLOWED_GL_BUSINESS_UNITS", Storage="_GL_CONTROLS_ALLOWED", ThisKey="GLBusinessUnitID", OtherKey="GLBusinessUnit", DeleteRule="NO ACTION")]
		public EntitySet<GL_CONTROLS_ALLOWED> GL_CONTROLS_ALLOWED
		{
			get
			{
				return this._GL_CONTROLS_ALLOWED;
			}
			set
			{
				this._GL_CONTROLS_ALLOWED.Assign(value);
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_ALLOWED_GL_BUSINESS_UNITS", Storage="_GL_OBJECTS_ALLOWED", ThisKey="GLBusinessUnitID", OtherKey="GLBusinessUnit", DeleteRule="NO ACTION")]
		public EntitySet<GL_OBJECTS_ALLOWED> GL_OBJECTS_ALLOWED
		{
			get
			{
				return this._GL_OBJECTS_ALLOWED;
			}
			set
			{
				this._GL_OBJECTS_ALLOWED.Assign(value);
			}
		}
		
		[Association(Name="FK_PROJECT_GL_BUSINESS_UNITS", Storage="_PROJECT", ThisKey="GLBusinessUnitID", OtherKey="BusinessUnit", DeleteRule="NO ACTION")]
		public EntitySet<PROJECT> PROJECT
		{
			get
			{
				return this._PROJECT;
			}
			set
			{
				this._PROJECT.Assign(value);
			}
		}
		
		[Association(Name="FK_STKORD_GL_BUSINESS_UNITS", Storage="_STKORD", ThisKey="GLBusinessUnitID", OtherKey="GLBusinessUnit", DeleteRule="NO ACTION")]
		public EntitySet<STKORD> STKORD
		{
			get
			{
				return this._STKORD;
			}
			set
			{
				this._STKORD.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GL_BUSINESS_UNITS_ALLOWED(GL_BUSINESS_UNITS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_BUSINESS_UNITS = this;
		}
		
		private void detach_GL_BUSINESS_UNITS_ALLOWED(GL_BUSINESS_UNITS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_BUSINESS_UNITS = null;
		}
		
		private void attach_GL_CONTROLS_ALLOWED(GL_CONTROLS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_BUSINESS_UNITS = this;
		}
		
		private void detach_GL_CONTROLS_ALLOWED(GL_CONTROLS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_BUSINESS_UNITS = null;
		}
		
		private void attach_GL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_BUSINESS_UNITS = this;
		}
		
		private void detach_GL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_BUSINESS_UNITS = null;
		}
		
		private void attach_PROJECT(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.GL_BUSINESS_UNITS = this;
		}
		
		private void detach_PROJECT(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.GL_BUSINESS_UNITS = null;
		}
		
		private void attach_STKORD(STKORD entity)
		{
			this.SendPropertyChanging();
			entity.GL_BUSINESS_UNITS = this;
		}
		
		private void detach_STKORD(STKORD entity)
		{
			this.SendPropertyChanging();
			entity.GL_BUSINESS_UNITS = null;
		}
	}
	
	[Table(Name="dbo.GL_BUSINESS_UNITS_ALLOWED")]
	public partial class GL_BUSINESS_UNITS_ALLOWED : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderExpenditureType;
		
		private int _GLBusinessUnit;
		
		private bool _Allow;
		
		private EntityRef<GL_BUSINESS_UNITS> _GL_BUSINESS_UNITS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderExpenditureTypeChanging(int value);
    partial void OnOrderExpenditureTypeChanged();
    partial void OnGLBusinessUnitChanging(int value);
    partial void OnGLBusinessUnitChanged();
    partial void OnAllowChanging(bool value);
    partial void OnAllowChanged();
    #endregion
		
		public GL_BUSINESS_UNITS_ALLOWED()
		{
			this._GL_BUSINESS_UNITS = default(EntityRef<GL_BUSINESS_UNITS>);
			OnCreated();
		}
		
		[Column(Storage="_OrderExpenditureType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderExpenditureType
		{
			get
			{
				return this._OrderExpenditureType;
			}
			set
			{
				if ((this._OrderExpenditureType != value))
				{
					this.OnOrderExpenditureTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderExpenditureType = value;
					this.SendPropertyChanged("OrderExpenditureType");
					this.OnOrderExpenditureTypeChanged();
				}
			}
		}
		
		[Column(Storage="_GLBusinessUnit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLBusinessUnit
		{
			get
			{
				return this._GLBusinessUnit;
			}
			set
			{
				if ((this._GLBusinessUnit != value))
				{
					if (this._GL_BUSINESS_UNITS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLBusinessUnitChanging(value);
					this.SendPropertyChanging();
					this._GLBusinessUnit = value;
					this.SendPropertyChanged("GLBusinessUnit");
					this.OnGLBusinessUnitChanged();
				}
			}
		}
		
		[Column(Storage="_Allow", DbType="Bit NOT NULL")]
		public bool Allow
		{
			get
			{
				return this._Allow;
			}
			set
			{
				if ((this._Allow != value))
				{
					this.OnAllowChanging(value);
					this.SendPropertyChanging();
					this._Allow = value;
					this.SendPropertyChanged("Allow");
					this.OnAllowChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_BUSINESS_UNITS_ALLOWED_GL_BUSINESS_UNITS", Storage="_GL_BUSINESS_UNITS", ThisKey="GLBusinessUnit", OtherKey="GLBusinessUnitID", IsForeignKey=true)]
		public GL_BUSINESS_UNITS GL_BUSINESS_UNITS
		{
			get
			{
				return this._GL_BUSINESS_UNITS.Entity;
			}
			set
			{
				GL_BUSINESS_UNITS previousValue = this._GL_BUSINESS_UNITS.Entity;
				if (((previousValue != value) 
							|| (this._GL_BUSINESS_UNITS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_BUSINESS_UNITS.Entity = null;
						previousValue.GL_BUSINESS_UNITS_ALLOWED.Remove(this);
					}
					this._GL_BUSINESS_UNITS.Entity = value;
					if ((value != null))
					{
						value.GL_BUSINESS_UNITS_ALLOWED.Add(this);
						this._GLBusinessUnit = value.GLBusinessUnitID;
					}
					else
					{
						this._GLBusinessUnit = default(int);
					}
					this.SendPropertyChanged("GL_BUSINESS_UNITS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_CODES_OLDNEW")]
	public partial class GL_CODES_OLDNEW : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _GLCodeOld;
		
		private string _GLCodeNew;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGLCodeOldChanging(string value);
    partial void OnGLCodeOldChanged();
    partial void OnGLCodeNewChanging(string value);
    partial void OnGLCodeNewChanged();
    #endregion
		
		public GL_CODES_OLDNEW()
		{
			OnCreated();
		}
		
		[Column(Storage="_GLCodeOld", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GLCodeOld
		{
			get
			{
				return this._GLCodeOld;
			}
			set
			{
				if ((this._GLCodeOld != value))
				{
					this.OnGLCodeOldChanging(value);
					this.SendPropertyChanging();
					this._GLCodeOld = value;
					this.SendPropertyChanged("GLCodeOld");
					this.OnGLCodeOldChanged();
				}
			}
		}
		
		[Column(Storage="_GLCodeNew", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string GLCodeNew
		{
			get
			{
				return this._GLCodeNew;
			}
			set
			{
				if ((this._GLCodeNew != value))
				{
					this.OnGLCodeNewChanging(value);
					this.SendPropertyChanging();
					this._GLCodeNew = value;
					this.SendPropertyChanged("GLCodeNew");
					this.OnGLCodeNewChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_CODES_TYPES")]
	public partial class GL_CODES_TYPES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GLCodeTypeId;
		
		private string _GLCodeType;
		
		private EntitySet<GL_TO_ASSETCAT> _GL_TO_ASSETCAT;
		
		private EntitySet<REVCAT_TO_GL> _REVCAT_TO_GL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGLCodeTypeIdChanging(int value);
    partial void OnGLCodeTypeIdChanged();
    partial void OnGLCodeTypeChanging(string value);
    partial void OnGLCodeTypeChanged();
    #endregion
		
		public GL_CODES_TYPES()
		{
			this._GL_TO_ASSETCAT = new EntitySet<GL_TO_ASSETCAT>(new Action<GL_TO_ASSETCAT>(this.attach_GL_TO_ASSETCAT), new Action<GL_TO_ASSETCAT>(this.detach_GL_TO_ASSETCAT));
			this._REVCAT_TO_GL = new EntitySet<REVCAT_TO_GL>(new Action<REVCAT_TO_GL>(this.attach_REVCAT_TO_GL), new Action<REVCAT_TO_GL>(this.detach_REVCAT_TO_GL));
			OnCreated();
		}
		
		[Column(Storage="_GLCodeTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GLCodeTypeId
		{
			get
			{
				return this._GLCodeTypeId;
			}
			set
			{
				if ((this._GLCodeTypeId != value))
				{
					this.OnGLCodeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._GLCodeTypeId = value;
					this.SendPropertyChanged("GLCodeTypeId");
					this.OnGLCodeTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_GLCodeType", DbType="VarChar(50)")]
		public string GLCodeType
		{
			get
			{
				return this._GLCodeType;
			}
			set
			{
				if ((this._GLCodeType != value))
				{
					this.OnGLCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._GLCodeType = value;
					this.SendPropertyChanged("GLCodeType");
					this.OnGLCodeTypeChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_TO_ASSETCAT_GL_CODES_TYPES", Storage="_GL_TO_ASSETCAT", ThisKey="GLCodeTypeId", OtherKey="GLCodeType", DeleteRule="NO ACTION")]
		public EntitySet<GL_TO_ASSETCAT> GL_TO_ASSETCAT
		{
			get
			{
				return this._GL_TO_ASSETCAT;
			}
			set
			{
				this._GL_TO_ASSETCAT.Assign(value);
			}
		}
		
		[Association(Name="FK_REVCAT_TO_GL_GL_CODES_TYPES", Storage="_REVCAT_TO_GL", ThisKey="GLCodeTypeId", OtherKey="GLCodeType", DeleteRule="NO ACTION")]
		public EntitySet<REVCAT_TO_GL> REVCAT_TO_GL
		{
			get
			{
				return this._REVCAT_TO_GL;
			}
			set
			{
				this._REVCAT_TO_GL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GL_TO_ASSETCAT(GL_TO_ASSETCAT entity)
		{
			this.SendPropertyChanging();
			entity.GL_CODES_TYPES = this;
		}
		
		private void detach_GL_TO_ASSETCAT(GL_TO_ASSETCAT entity)
		{
			this.SendPropertyChanging();
			entity.GL_CODES_TYPES = null;
		}
		
		private void attach_REVCAT_TO_GL(REVCAT_TO_GL entity)
		{
			this.SendPropertyChanging();
			entity.GL_CODES_TYPES = this;
		}
		
		private void detach_REVCAT_TO_GL(REVCAT_TO_GL entity)
		{
			this.SendPropertyChanging();
			entity.GL_CODES_TYPES = null;
		}
	}
	
	[Table(Name="dbo.GL_CONTROLS")]
	public partial class GL_CONTROLS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GLControlID;
		
		private string _GLControl;
		
		private System.Nullable<int> _PartsType;
		
		private EntitySet<GL_CONTROLS_ALLOWED> _GL_CONTROLS_ALLOWED;
		
		private EntitySet<GL_OBJECTS_ALLOWED> _GL_OBJECTS_ALLOWED;
		
		private EntitySet<GL_OBJECTS> _GL_OBJECTS;
		
		private EntitySet<GL_OBJECTS_GROUPS> _GL_OBJECTS_GROUPS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGLControlIDChanging(int value);
    partial void OnGLControlIDChanged();
    partial void OnGLControlChanging(string value);
    partial void OnGLControlChanged();
    partial void OnPartsTypeChanging(System.Nullable<int> value);
    partial void OnPartsTypeChanged();
    #endregion
		
		public GL_CONTROLS()
		{
			this._GL_CONTROLS_ALLOWED = new EntitySet<GL_CONTROLS_ALLOWED>(new Action<GL_CONTROLS_ALLOWED>(this.attach_GL_CONTROLS_ALLOWED), new Action<GL_CONTROLS_ALLOWED>(this.detach_GL_CONTROLS_ALLOWED));
			this._GL_OBJECTS_ALLOWED = new EntitySet<GL_OBJECTS_ALLOWED>(new Action<GL_OBJECTS_ALLOWED>(this.attach_GL_OBJECTS_ALLOWED), new Action<GL_OBJECTS_ALLOWED>(this.detach_GL_OBJECTS_ALLOWED));
			this._GL_OBJECTS = new EntitySet<GL_OBJECTS>(new Action<GL_OBJECTS>(this.attach_GL_OBJECTS), new Action<GL_OBJECTS>(this.detach_GL_OBJECTS));
			this._GL_OBJECTS_GROUPS = new EntitySet<GL_OBJECTS_GROUPS>(new Action<GL_OBJECTS_GROUPS>(this.attach_GL_OBJECTS_GROUPS), new Action<GL_OBJECTS_GROUPS>(this.detach_GL_OBJECTS_GROUPS));
			OnCreated();
		}
		
		[Column(Storage="_GLControlID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLControlID
		{
			get
			{
				return this._GLControlID;
			}
			set
			{
				if ((this._GLControlID != value))
				{
					this.OnGLControlIDChanging(value);
					this.SendPropertyChanging();
					this._GLControlID = value;
					this.SendPropertyChanged("GLControlID");
					this.OnGLControlIDChanged();
				}
			}
		}
		
		[Column(Storage="_GLControl", DbType="VarChar(50)")]
		public string GLControl
		{
			get
			{
				return this._GLControl;
			}
			set
			{
				if ((this._GLControl != value))
				{
					this.OnGLControlChanging(value);
					this.SendPropertyChanging();
					this._GLControl = value;
					this.SendPropertyChanged("GLControl");
					this.OnGLControlChanged();
				}
			}
		}
		
		[Column(Storage="_PartsType", DbType="Int")]
		public System.Nullable<int> PartsType
		{
			get
			{
				return this._PartsType;
			}
			set
			{
				if ((this._PartsType != value))
				{
					this.OnPartsTypeChanging(value);
					this.SendPropertyChanging();
					this._PartsType = value;
					this.SendPropertyChanged("PartsType");
					this.OnPartsTypeChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_CONTROLS_ALLOWED_GL_CONTROLS", Storage="_GL_CONTROLS_ALLOWED", ThisKey="GLControlID", OtherKey="GLControl", DeleteRule="NO ACTION")]
		public EntitySet<GL_CONTROLS_ALLOWED> GL_CONTROLS_ALLOWED
		{
			get
			{
				return this._GL_CONTROLS_ALLOWED;
			}
			set
			{
				this._GL_CONTROLS_ALLOWED.Assign(value);
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_ALLOWED_GL_CONTROLS", Storage="_GL_OBJECTS_ALLOWED", ThisKey="GLControlID", OtherKey="GLControl", DeleteRule="NO ACTION")]
		public EntitySet<GL_OBJECTS_ALLOWED> GL_OBJECTS_ALLOWED
		{
			get
			{
				return this._GL_OBJECTS_ALLOWED;
			}
			set
			{
				this._GL_OBJECTS_ALLOWED.Assign(value);
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_GL_CONTROLS", Storage="_GL_OBJECTS", ThisKey="GLControlID", OtherKey="GLControl", DeleteRule="NO ACTION")]
		public EntitySet<GL_OBJECTS> GL_OBJECTS
		{
			get
			{
				return this._GL_OBJECTS;
			}
			set
			{
				this._GL_OBJECTS.Assign(value);
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_GROUPS_GL_CONTROLS", Storage="_GL_OBJECTS_GROUPS", ThisKey="GLControlID", OtherKey="GLControl", DeleteRule="NO ACTION")]
		public EntitySet<GL_OBJECTS_GROUPS> GL_OBJECTS_GROUPS
		{
			get
			{
				return this._GL_OBJECTS_GROUPS;
			}
			set
			{
				this._GL_OBJECTS_GROUPS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GL_CONTROLS_ALLOWED(GL_CONTROLS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_CONTROLS = this;
		}
		
		private void detach_GL_CONTROLS_ALLOWED(GL_CONTROLS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_CONTROLS = null;
		}
		
		private void attach_GL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_CONTROLS = this;
		}
		
		private void detach_GL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_CONTROLS = null;
		}
		
		private void attach_GL_OBJECTS(GL_OBJECTS entity)
		{
			this.SendPropertyChanging();
			entity.GL_CONTROLS = this;
		}
		
		private void detach_GL_OBJECTS(GL_OBJECTS entity)
		{
			this.SendPropertyChanging();
			entity.GL_CONTROLS = null;
		}
		
		private void attach_GL_OBJECTS_GROUPS(GL_OBJECTS_GROUPS entity)
		{
			this.SendPropertyChanging();
			entity.GL_CONTROLS = this;
		}
		
		private void detach_GL_OBJECTS_GROUPS(GL_OBJECTS_GROUPS entity)
		{
			this.SendPropertyChanging();
			entity.GL_CONTROLS = null;
		}
	}
	
	[Table(Name="dbo.GL_CONTROLS_ALLOWED")]
	public partial class GL_CONTROLS_ALLOWED : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderExpenditureType;
		
		private int _GLBusinessUnit;
		
		private int _GLControl;
		
		private bool _Allow;
		
		private EntityRef<GL_BUSINESS_UNITS> _GL_BUSINESS_UNITS;
		
		private EntityRef<GL_CONTROLS> _GL_CONTROLS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderExpenditureTypeChanging(int value);
    partial void OnOrderExpenditureTypeChanged();
    partial void OnGLBusinessUnitChanging(int value);
    partial void OnGLBusinessUnitChanged();
    partial void OnGLControlChanging(int value);
    partial void OnGLControlChanged();
    partial void OnAllowChanging(bool value);
    partial void OnAllowChanged();
    #endregion
		
		public GL_CONTROLS_ALLOWED()
		{
			this._GL_BUSINESS_UNITS = default(EntityRef<GL_BUSINESS_UNITS>);
			this._GL_CONTROLS = default(EntityRef<GL_CONTROLS>);
			OnCreated();
		}
		
		[Column(Storage="_OrderExpenditureType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderExpenditureType
		{
			get
			{
				return this._OrderExpenditureType;
			}
			set
			{
				if ((this._OrderExpenditureType != value))
				{
					this.OnOrderExpenditureTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderExpenditureType = value;
					this.SendPropertyChanged("OrderExpenditureType");
					this.OnOrderExpenditureTypeChanged();
				}
			}
		}
		
		[Column(Storage="_GLBusinessUnit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLBusinessUnit
		{
			get
			{
				return this._GLBusinessUnit;
			}
			set
			{
				if ((this._GLBusinessUnit != value))
				{
					if (this._GL_BUSINESS_UNITS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLBusinessUnitChanging(value);
					this.SendPropertyChanging();
					this._GLBusinessUnit = value;
					this.SendPropertyChanged("GLBusinessUnit");
					this.OnGLBusinessUnitChanged();
				}
			}
		}
		
		[Column(Storage="_GLControl", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLControl
		{
			get
			{
				return this._GLControl;
			}
			set
			{
				if ((this._GLControl != value))
				{
					if (this._GL_CONTROLS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLControlChanging(value);
					this.SendPropertyChanging();
					this._GLControl = value;
					this.SendPropertyChanged("GLControl");
					this.OnGLControlChanged();
				}
			}
		}
		
		[Column(Storage="_Allow", DbType="Bit NOT NULL")]
		public bool Allow
		{
			get
			{
				return this._Allow;
			}
			set
			{
				if ((this._Allow != value))
				{
					this.OnAllowChanging(value);
					this.SendPropertyChanging();
					this._Allow = value;
					this.SendPropertyChanged("Allow");
					this.OnAllowChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_CONTROLS_ALLOWED_GL_BUSINESS_UNITS", Storage="_GL_BUSINESS_UNITS", ThisKey="GLBusinessUnit", OtherKey="GLBusinessUnitID", IsForeignKey=true)]
		public GL_BUSINESS_UNITS GL_BUSINESS_UNITS
		{
			get
			{
				return this._GL_BUSINESS_UNITS.Entity;
			}
			set
			{
				GL_BUSINESS_UNITS previousValue = this._GL_BUSINESS_UNITS.Entity;
				if (((previousValue != value) 
							|| (this._GL_BUSINESS_UNITS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_BUSINESS_UNITS.Entity = null;
						previousValue.GL_CONTROLS_ALLOWED.Remove(this);
					}
					this._GL_BUSINESS_UNITS.Entity = value;
					if ((value != null))
					{
						value.GL_CONTROLS_ALLOWED.Add(this);
						this._GLBusinessUnit = value.GLBusinessUnitID;
					}
					else
					{
						this._GLBusinessUnit = default(int);
					}
					this.SendPropertyChanged("GL_BUSINESS_UNITS");
				}
			}
		}
		
		[Association(Name="FK_GL_CONTROLS_ALLOWED_GL_CONTROLS", Storage="_GL_CONTROLS", ThisKey="GLControl", OtherKey="GLControlID", IsForeignKey=true)]
		public GL_CONTROLS GL_CONTROLS
		{
			get
			{
				return this._GL_CONTROLS.Entity;
			}
			set
			{
				GL_CONTROLS previousValue = this._GL_CONTROLS.Entity;
				if (((previousValue != value) 
							|| (this._GL_CONTROLS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_CONTROLS.Entity = null;
						previousValue.GL_CONTROLS_ALLOWED.Remove(this);
					}
					this._GL_CONTROLS.Entity = value;
					if ((value != null))
					{
						value.GL_CONTROLS_ALLOWED.Add(this);
						this._GLControl = value.GLControlID;
					}
					else
					{
						this._GLControl = default(int);
					}
					this.SendPropertyChanged("GL_CONTROLS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_CURRENCY_EXCHANGE")]
	public partial class GL_CURRENCY_EXCHANGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _CE_Date;
		
		private string _CurrencyType;
		
		private decimal _ExchangeRate;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCE_DateChanging(System.DateTime value);
    partial void OnCE_DateChanged();
    partial void OnCurrencyTypeChanging(string value);
    partial void OnCurrencyTypeChanged();
    partial void OnExchangeRateChanging(decimal value);
    partial void OnExchangeRateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public GL_CURRENCY_EXCHANGE()
		{
			OnCreated();
		}
		
		[Column(Storage="_CE_Date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CE_Date
		{
			get
			{
				return this._CE_Date;
			}
			set
			{
				if ((this._CE_Date != value))
				{
					this.OnCE_DateChanging(value);
					this.SendPropertyChanging();
					this._CE_Date = value;
					this.SendPropertyChanged("CE_Date");
					this.OnCE_DateChanged();
				}
			}
		}
		
		[Column(Storage="_CurrencyType", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this.OnCurrencyTypeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyType = value;
					this.SendPropertyChanged("CurrencyType");
					this.OnCurrencyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ExchangeRate", DbType="Decimal(9,4) NOT NULL")]
		public decimal ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[Column(Storage="_Notes", DbType="VarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_DETAILS")]
	public partial class GL_DETAILS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Audit;
		
		private string _JournalCode;
		
		private string _Account;
		
		private System.Nullable<System.DateTime> _Date;
		
		private byte _Month;
		
		private short _Year;
		
		private string _Reference;
		
		private string _Ref2;
		
		private decimal _Debit;
		
		private decimal _Credit;
		
		private string _RefCode;
		
		private string _Details;
		
		private string _CostCentre;
		
		private System.Nullable<decimal> _TotalPayment;
		
		private System.Nullable<System.DateTime> _LastPaymentDate;
		
		private System.Nullable<bool> _FastPay;
		
		private byte _CompanyNum;
		
		private bool _BankTrans;
		
		private bool _BankRec;
		
		private string _BalanceToAcc;
		
		private System.Nullable<int> _TransAudit;
		
		private string _RefNo;
		
		private string _InsUser;
		
		private System.Nullable<System.DateTime> _InsDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuditChanging(int value);
    partial void OnAuditChanged();
    partial void OnJournalCodeChanging(string value);
    partial void OnJournalCodeChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnRef2Changing(string value);
    partial void OnRef2Changed();
    partial void OnDebitChanging(decimal value);
    partial void OnDebitChanged();
    partial void OnCreditChanging(decimal value);
    partial void OnCreditChanged();
    partial void OnRefCodeChanging(string value);
    partial void OnRefCodeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnCostCentreChanging(string value);
    partial void OnCostCentreChanged();
    partial void OnTotalPaymentChanging(System.Nullable<decimal> value);
    partial void OnTotalPaymentChanged();
    partial void OnLastPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPaymentDateChanged();
    partial void OnFastPayChanging(System.Nullable<bool> value);
    partial void OnFastPayChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnBankTransChanging(bool value);
    partial void OnBankTransChanged();
    partial void OnBankRecChanging(bool value);
    partial void OnBankRecChanged();
    partial void OnBalanceToAccChanging(string value);
    partial void OnBalanceToAccChanged();
    partial void OnTransAuditChanging(System.Nullable<int> value);
    partial void OnTransAuditChanged();
    partial void OnRefNoChanging(string value);
    partial void OnRefNoChanged();
    partial void OnInsUserChanging(string value);
    partial void OnInsUserChanged();
    partial void OnInsDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsDateChanged();
    #endregion
		
		public GL_DETAILS()
		{
			OnCreated();
		}
		
		[Column(Storage="_Audit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[Column(Storage="_JournalCode", DbType="VarChar(16)")]
		public string JournalCode
		{
			get
			{
				return this._JournalCode;
			}
			set
			{
				if ((this._JournalCode != value))
				{
					this.OnJournalCodeChanging(value);
					this.SendPropertyChanging();
					this._JournalCode = value;
					this.SendPropertyChanged("JournalCode");
					this.OnJournalCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Account", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Reference", DbType="VarChar(32)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[Column(Storage="_Ref2", DbType="VarChar(16)")]
		public string Ref2
		{
			get
			{
				return this._Ref2;
			}
			set
			{
				if ((this._Ref2 != value))
				{
					this.OnRef2Changing(value);
					this.SendPropertyChanging();
					this._Ref2 = value;
					this.SendPropertyChanged("Ref2");
					this.OnRef2Changed();
				}
			}
		}
		
		[Column(Storage="_Debit", DbType="Money NOT NULL")]
		public decimal Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[Column(Storage="_Credit", DbType="Money NOT NULL")]
		public decimal Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[Column(Storage="_RefCode", DbType="VarChar(12)")]
		public string RefCode
		{
			get
			{
				return this._RefCode;
			}
			set
			{
				if ((this._RefCode != value))
				{
					this.OnRefCodeChanging(value);
					this.SendPropertyChanging();
					this._RefCode = value;
					this.SendPropertyChanged("RefCode");
					this.OnRefCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Details", DbType="VarChar(50)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[Column(Storage="_CostCentre", DbType="VarChar(5)")]
		public string CostCentre
		{
			get
			{
				return this._CostCentre;
			}
			set
			{
				if ((this._CostCentre != value))
				{
					this.OnCostCentreChanging(value);
					this.SendPropertyChanging();
					this._CostCentre = value;
					this.SendPropertyChanged("CostCentre");
					this.OnCostCentreChanged();
				}
			}
		}
		
		[Column(Storage="_TotalPayment", DbType="Money")]
		public System.Nullable<decimal> TotalPayment
		{
			get
			{
				return this._TotalPayment;
			}
			set
			{
				if ((this._TotalPayment != value))
				{
					this.OnTotalPaymentChanging(value);
					this.SendPropertyChanging();
					this._TotalPayment = value;
					this.SendPropertyChanged("TotalPayment");
					this.OnTotalPaymentChanged();
				}
			}
		}
		
		[Column(Storage="_LastPaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPaymentDate
		{
			get
			{
				return this._LastPaymentDate;
			}
			set
			{
				if ((this._LastPaymentDate != value))
				{
					this.OnLastPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._LastPaymentDate = value;
					this.SendPropertyChanged("LastPaymentDate");
					this.OnLastPaymentDateChanged();
				}
			}
		}
		
		[Column(Storage="_FastPay", DbType="Bit")]
		public System.Nullable<bool> FastPay
		{
			get
			{
				return this._FastPay;
			}
			set
			{
				if ((this._FastPay != value))
				{
					this.OnFastPayChanging(value);
					this.SendPropertyChanging();
					this._FastPay = value;
					this.SendPropertyChanged("FastPay");
					this.OnFastPayChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_BankTrans", DbType="Bit NOT NULL")]
		public bool BankTrans
		{
			get
			{
				return this._BankTrans;
			}
			set
			{
				if ((this._BankTrans != value))
				{
					this.OnBankTransChanging(value);
					this.SendPropertyChanging();
					this._BankTrans = value;
					this.SendPropertyChanged("BankTrans");
					this.OnBankTransChanged();
				}
			}
		}
		
		[Column(Storage="_BankRec", DbType="Bit NOT NULL")]
		public bool BankRec
		{
			get
			{
				return this._BankRec;
			}
			set
			{
				if ((this._BankRec != value))
				{
					this.OnBankRecChanging(value);
					this.SendPropertyChanging();
					this._BankRec = value;
					this.SendPropertyChanged("BankRec");
					this.OnBankRecChanged();
				}
			}
		}
		
		[Column(Storage="_BalanceToAcc", DbType="VarChar(16)")]
		public string BalanceToAcc
		{
			get
			{
				return this._BalanceToAcc;
			}
			set
			{
				if ((this._BalanceToAcc != value))
				{
					this.OnBalanceToAccChanging(value);
					this.SendPropertyChanging();
					this._BalanceToAcc = value;
					this.SendPropertyChanged("BalanceToAcc");
					this.OnBalanceToAccChanged();
				}
			}
		}
		
		[Column(Storage="_TransAudit", DbType="Int")]
		public System.Nullable<int> TransAudit
		{
			get
			{
				return this._TransAudit;
			}
			set
			{
				if ((this._TransAudit != value))
				{
					this.OnTransAuditChanging(value);
					this.SendPropertyChanging();
					this._TransAudit = value;
					this.SendPropertyChanged("TransAudit");
					this.OnTransAuditChanged();
				}
			}
		}
		
		[Column(Storage="_RefNo", DbType="VarChar(16)")]
		public string RefNo
		{
			get
			{
				return this._RefNo;
			}
			set
			{
				if ((this._RefNo != value))
				{
					this.OnRefNoChanging(value);
					this.SendPropertyChanging();
					this._RefNo = value;
					this.SendPropertyChanged("RefNo");
					this.OnRefNoChanged();
				}
			}
		}
		
		[Column(Storage="_InsUser", DbType="VarChar(25)")]
		public string InsUser
		{
			get
			{
				return this._InsUser;
			}
			set
			{
				if ((this._InsUser != value))
				{
					this.OnInsUserChanging(value);
					this.SendPropertyChanging();
					this._InsUser = value;
					this.SendPropertyChanged("InsUser");
					this.OnInsUserChanged();
				}
			}
		}
		
		[Column(Storage="_InsDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsDate
		{
			get
			{
				return this._InsDate;
			}
			set
			{
				if ((this._InsDate != value))
				{
					this.OnInsDateChanging(value);
					this.SendPropertyChanging();
					this._InsDate = value;
					this.SendPropertyChanged("InsDate");
					this.OnInsDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_DIST_BAL_TY")]
	public partial class GL_DIST_BAL_TY
	{
		
		private string _Field3;
		
		private System.Nullable<decimal> _Field5;
		
		public GL_DIST_BAL_TY()
		{
		}
		
		[Column(Storage="_Field3", DbType="VarChar(50)")]
		public string Field3
		{
			get
			{
				return this._Field3;
			}
			set
			{
				if ((this._Field3 != value))
				{
					this._Field3 = value;
				}
			}
		}
		
		[Column(Storage="_Field5", DbType="Money")]
		public System.Nullable<decimal> Field5
		{
			get
			{
				return this._Field5;
			}
			set
			{
				if ((this._Field5 != value))
				{
					this._Field5 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.GL_EXPORT_CSV")]
	public partial class GL_EXPORT_CSV
	{
		
		private int _NKey;
		
		private string _Col1;
		
		private string _GL_Account;
		
		private System.Nullable<decimal> _Balance;
		
		public GL_EXPORT_CSV()
		{
		}
		
		[Column(Storage="_NKey", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int NKey
		{
			get
			{
				return this._NKey;
			}
			set
			{
				if ((this._NKey != value))
				{
					this._NKey = value;
				}
			}
		}
		
		[Column(Storage="_Col1", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Col1
		{
			get
			{
				return this._Col1;
			}
			set
			{
				if ((this._Col1 != value))
				{
					this._Col1 = value;
				}
			}
		}
		
		[Column(Storage="_GL_Account", DbType="VarChar(16)")]
		public string GL_Account
		{
			get
			{
				return this._GL_Account;
			}
			set
			{
				if ((this._GL_Account != value))
				{
					this._GL_Account = value;
				}
			}
		}
		
		[Column(Storage="_Balance", DbType="Decimal(11,2)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.GL_GROUPS")]
	public partial class GL_GROUPS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Grp;
		
		private string _GrpTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGrpChanging(string value);
    partial void OnGrpChanged();
    partial void OnGrpTitleChanging(string value);
    partial void OnGrpTitleChanged();
    #endregion
		
		public GL_GROUPS()
		{
			OnCreated();
		}
		
		[Column(Storage="_Grp", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Grp
		{
			get
			{
				return this._Grp;
			}
			set
			{
				if ((this._Grp != value))
				{
					this.OnGrpChanging(value);
					this.SendPropertyChanging();
					this._Grp = value;
					this.SendPropertyChanged("Grp");
					this.OnGrpChanged();
				}
			}
		}
		
		[Column(Storage="_GrpTitle", DbType="VarChar(50)")]
		public string GrpTitle
		{
			get
			{
				return this._GrpTitle;
			}
			set
			{
				if ((this._GrpTitle != value))
				{
					this.OnGrpTitleChanging(value);
					this.SendPropertyChanging();
					this._GrpTitle = value;
					this.SendPropertyChanged("GrpTitle");
					this.OnGrpTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_JOURNALS")]
	public partial class GL_JOURNALS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JournalCode;
		
		private byte _CompanyNum;
		
		private System.Nullable<System.DateTime> _JournalDate;
		
		private byte _Month;
		
		private short _Year;
		
		private string _Explanation;
		
		private System.Nullable<int> _LastRef;
		
		private string _CopyFrom;
		
		private System.Nullable<decimal> _VerifyTotal;
		
		private bool _Active;
		
		private bool _Viewable;
		
		private string _JournalType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalCodeChanging(string value);
    partial void OnJournalCodeChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnJournalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJournalDateChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    partial void OnLastRefChanging(System.Nullable<int> value);
    partial void OnLastRefChanged();
    partial void OnCopyFromChanging(string value);
    partial void OnCopyFromChanged();
    partial void OnVerifyTotalChanging(System.Nullable<decimal> value);
    partial void OnVerifyTotalChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnViewableChanging(bool value);
    partial void OnViewableChanged();
    partial void OnJournalTypeChanging(string value);
    partial void OnJournalTypeChanged();
    #endregion
		
		public GL_JOURNALS()
		{
			OnCreated();
		}
		
		[Column(Storage="_JournalCode", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JournalCode
		{
			get
			{
				return this._JournalCode;
			}
			set
			{
				if ((this._JournalCode != value))
				{
					this.OnJournalCodeChanging(value);
					this.SendPropertyChanging();
					this._JournalCode = value;
					this.SendPropertyChanged("JournalCode");
					this.OnJournalCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_JournalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this.OnJournalDateChanging(value);
					this.SendPropertyChanging();
					this._JournalDate = value;
					this.SendPropertyChanged("JournalDate");
					this.OnJournalDateChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Explanation", DbType="VarChar(50)")]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		[Column(Storage="_LastRef", DbType="Int")]
		public System.Nullable<int> LastRef
		{
			get
			{
				return this._LastRef;
			}
			set
			{
				if ((this._LastRef != value))
				{
					this.OnLastRefChanging(value);
					this.SendPropertyChanging();
					this._LastRef = value;
					this.SendPropertyChanged("LastRef");
					this.OnLastRefChanged();
				}
			}
		}
		
		[Column(Storage="_CopyFrom", DbType="VarChar(16)")]
		public string CopyFrom
		{
			get
			{
				return this._CopyFrom;
			}
			set
			{
				if ((this._CopyFrom != value))
				{
					this.OnCopyFromChanging(value);
					this.SendPropertyChanging();
					this._CopyFrom = value;
					this.SendPropertyChanged("CopyFrom");
					this.OnCopyFromChanged();
				}
			}
		}
		
		[Column(Storage="_VerifyTotal", DbType="Money")]
		public System.Nullable<decimal> VerifyTotal
		{
			get
			{
				return this._VerifyTotal;
			}
			set
			{
				if ((this._VerifyTotal != value))
				{
					this.OnVerifyTotalChanging(value);
					this.SendPropertyChanging();
					this._VerifyTotal = value;
					this.SendPropertyChanged("VerifyTotal");
					this.OnVerifyTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Column(Storage="_Viewable", DbType="Bit NOT NULL")]
		public bool Viewable
		{
			get
			{
				return this._Viewable;
			}
			set
			{
				if ((this._Viewable != value))
				{
					this.OnViewableChanging(value);
					this.SendPropertyChanging();
					this._Viewable = value;
					this.SendPropertyChanged("Viewable");
					this.OnViewableChanged();
				}
			}
		}
		
		[Column(Storage="_JournalType", DbType="VarChar(10)")]
		public string JournalType
		{
			get
			{
				return this._JournalType;
			}
			set
			{
				if ((this._JournalType != value))
				{
					this.OnJournalTypeChanging(value);
					this.SendPropertyChanging();
					this._JournalType = value;
					this.SendPropertyChanged("JournalType");
					this.OnJournalTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_OBJECTS")]
	public partial class GL_OBJECTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GLControl;
		
		private int _GLObjectGroup;
		
		private string _GLObjectID;
		
		private string _GLObject;
		
		private bool _IsDRRevCat;
		
		private string _Definition;
		
		private EntitySet<GL_OBJECTS_ALLOWED> _GL_OBJECTS_ALLOWED;
		
		private EntityRef<GL_CONTROLS> _GL_CONTROLS;
		
		private EntityRef<GL_OBJECTS_GROUPS> _GL_OBJECTS_GROUPS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGLControlChanging(int value);
    partial void OnGLControlChanged();
    partial void OnGLObjectGroupChanging(int value);
    partial void OnGLObjectGroupChanged();
    partial void OnGLObjectIDChanging(string value);
    partial void OnGLObjectIDChanged();
    partial void OnGLObjectChanging(string value);
    partial void OnGLObjectChanged();
    partial void OnIsDRRevCatChanging(bool value);
    partial void OnIsDRRevCatChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    #endregion
		
		public GL_OBJECTS()
		{
			this._GL_OBJECTS_ALLOWED = new EntitySet<GL_OBJECTS_ALLOWED>(new Action<GL_OBJECTS_ALLOWED>(this.attach_GL_OBJECTS_ALLOWED), new Action<GL_OBJECTS_ALLOWED>(this.detach_GL_OBJECTS_ALLOWED));
			this._GL_CONTROLS = default(EntityRef<GL_CONTROLS>);
			this._GL_OBJECTS_GROUPS = default(EntityRef<GL_OBJECTS_GROUPS>);
			OnCreated();
		}
		
		[Column(Storage="_GLControl", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLControl
		{
			get
			{
				return this._GLControl;
			}
			set
			{
				if ((this._GLControl != value))
				{
					if (this._GL_CONTROLS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLControlChanging(value);
					this.SendPropertyChanging();
					this._GLControl = value;
					this.SendPropertyChanged("GLControl");
					this.OnGLControlChanged();
				}
			}
		}
		
		[Column(Storage="_GLObjectGroup", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLObjectGroup
		{
			get
			{
				return this._GLObjectGroup;
			}
			set
			{
				if ((this._GLObjectGroup != value))
				{
					if (this._GL_OBJECTS_GROUPS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLObjectGroupChanging(value);
					this.SendPropertyChanging();
					this._GLObjectGroup = value;
					this.SendPropertyChanged("GLObjectGroup");
					this.OnGLObjectGroupChanged();
				}
			}
		}
		
		[Column(Storage="_GLObjectID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GLObjectID
		{
			get
			{
				return this._GLObjectID;
			}
			set
			{
				if ((this._GLObjectID != value))
				{
					this.OnGLObjectIDChanging(value);
					this.SendPropertyChanging();
					this._GLObjectID = value;
					this.SendPropertyChanged("GLObjectID");
					this.OnGLObjectIDChanged();
				}
			}
		}
		
		[Column(Storage="_GLObject", DbType="VarChar(50)")]
		public string GLObject
		{
			get
			{
				return this._GLObject;
			}
			set
			{
				if ((this._GLObject != value))
				{
					this.OnGLObjectChanging(value);
					this.SendPropertyChanging();
					this._GLObject = value;
					this.SendPropertyChanged("GLObject");
					this.OnGLObjectChanged();
				}
			}
		}
		
		[Column(Storage="_IsDRRevCat", DbType="Bit NOT NULL")]
		public bool IsDRRevCat
		{
			get
			{
				return this._IsDRRevCat;
			}
			set
			{
				if ((this._IsDRRevCat != value))
				{
					this.OnIsDRRevCatChanging(value);
					this.SendPropertyChanging();
					this._IsDRRevCat = value;
					this.SendPropertyChanged("IsDRRevCat");
					this.OnIsDRRevCatChanged();
				}
			}
		}
		
		[Column(Storage="_Definition", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_ALLOWED_GL_OBJECTS", Storage="_GL_OBJECTS_ALLOWED", ThisKey="GLControl,GLObjectGroup,GLObjectID", OtherKey="GLControl,GLObjectGroup,GLObject", DeleteRule="NO ACTION")]
		public EntitySet<GL_OBJECTS_ALLOWED> GL_OBJECTS_ALLOWED
		{
			get
			{
				return this._GL_OBJECTS_ALLOWED;
			}
			set
			{
				this._GL_OBJECTS_ALLOWED.Assign(value);
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_GL_CONTROLS", Storage="_GL_CONTROLS", ThisKey="GLControl", OtherKey="GLControlID", IsForeignKey=true)]
		public GL_CONTROLS GL_CONTROLS
		{
			get
			{
				return this._GL_CONTROLS.Entity;
			}
			set
			{
				GL_CONTROLS previousValue = this._GL_CONTROLS.Entity;
				if (((previousValue != value) 
							|| (this._GL_CONTROLS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_CONTROLS.Entity = null;
						previousValue.GL_OBJECTS.Remove(this);
					}
					this._GL_CONTROLS.Entity = value;
					if ((value != null))
					{
						value.GL_OBJECTS.Add(this);
						this._GLControl = value.GLControlID;
					}
					else
					{
						this._GLControl = default(int);
					}
					this.SendPropertyChanged("GL_CONTROLS");
				}
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_GL_OBJECTS_GROUPS", Storage="_GL_OBJECTS_GROUPS", ThisKey="GLControl,GLObjectGroup", OtherKey="GLControl,GLObjectGroupID", IsForeignKey=true)]
		public GL_OBJECTS_GROUPS GL_OBJECTS_GROUPS
		{
			get
			{
				return this._GL_OBJECTS_GROUPS.Entity;
			}
			set
			{
				GL_OBJECTS_GROUPS previousValue = this._GL_OBJECTS_GROUPS.Entity;
				if (((previousValue != value) 
							|| (this._GL_OBJECTS_GROUPS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_OBJECTS_GROUPS.Entity = null;
						previousValue.GL_OBJECTS.Remove(this);
					}
					this._GL_OBJECTS_GROUPS.Entity = value;
					if ((value != null))
					{
						value.GL_OBJECTS.Add(this);
						this._GLControl = value.GLControl;
						this._GLObjectGroup = value.GLObjectGroupID;
					}
					else
					{
						this._GLControl = default(int);
						this._GLObjectGroup = default(int);
					}
					this.SendPropertyChanged("GL_OBJECTS_GROUPS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_OBJECTS = this;
		}
		
		private void detach_GL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_OBJECTS = null;
		}
	}
	
	[Table(Name="dbo.GL_OBJECTS_ALLOWED")]
	public partial class GL_OBJECTS_ALLOWED : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GLControl;
		
		private int _GLObjectGroup;
		
		private string _GLObject;
		
		private int _GLBusinessUnit;
		
		private int _GLState;
		
		private bool _Allow;
		
		private EntityRef<GL_BUSINESS_UNITS> _GL_BUSINESS_UNITS;
		
		private EntityRef<GL_CONTROLS> _GL_CONTROLS;
		
		private EntityRef<GL_OBJECTS> _GL_OBJECTS;
		
		private EntityRef<GL_OBJECTS_GROUPS> _GL_OBJECTS_GROUPS;
		
		private EntityRef<GL_STATES> _GL_STATES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGLControlChanging(int value);
    partial void OnGLControlChanged();
    partial void OnGLObjectGroupChanging(int value);
    partial void OnGLObjectGroupChanged();
    partial void OnGLObjectChanging(string value);
    partial void OnGLObjectChanged();
    partial void OnGLBusinessUnitChanging(int value);
    partial void OnGLBusinessUnitChanged();
    partial void OnGLStateChanging(int value);
    partial void OnGLStateChanged();
    partial void OnAllowChanging(bool value);
    partial void OnAllowChanged();
    #endregion
		
		public GL_OBJECTS_ALLOWED()
		{
			this._GL_BUSINESS_UNITS = default(EntityRef<GL_BUSINESS_UNITS>);
			this._GL_CONTROLS = default(EntityRef<GL_CONTROLS>);
			this._GL_OBJECTS = default(EntityRef<GL_OBJECTS>);
			this._GL_OBJECTS_GROUPS = default(EntityRef<GL_OBJECTS_GROUPS>);
			this._GL_STATES = default(EntityRef<GL_STATES>);
			OnCreated();
		}
		
		[Column(Storage="_GLControl", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLControl
		{
			get
			{
				return this._GLControl;
			}
			set
			{
				if ((this._GLControl != value))
				{
					if (this._GL_CONTROLS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLControlChanging(value);
					this.SendPropertyChanging();
					this._GLControl = value;
					this.SendPropertyChanged("GLControl");
					this.OnGLControlChanged();
				}
			}
		}
		
		[Column(Storage="_GLObjectGroup", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLObjectGroup
		{
			get
			{
				return this._GLObjectGroup;
			}
			set
			{
				if ((this._GLObjectGroup != value))
				{
					if (this._GL_OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLObjectGroupChanging(value);
					this.SendPropertyChanging();
					this._GLObjectGroup = value;
					this.SendPropertyChanged("GLObjectGroup");
					this.OnGLObjectGroupChanged();
				}
			}
		}
		
		[Column(Storage="_GLObject", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GLObject
		{
			get
			{
				return this._GLObject;
			}
			set
			{
				if ((this._GLObject != value))
				{
					if (this._GL_OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLObjectChanging(value);
					this.SendPropertyChanging();
					this._GLObject = value;
					this.SendPropertyChanged("GLObject");
					this.OnGLObjectChanged();
				}
			}
		}
		
		[Column(Storage="_GLBusinessUnit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLBusinessUnit
		{
			get
			{
				return this._GLBusinessUnit;
			}
			set
			{
				if ((this._GLBusinessUnit != value))
				{
					if (this._GL_BUSINESS_UNITS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLBusinessUnitChanging(value);
					this.SendPropertyChanging();
					this._GLBusinessUnit = value;
					this.SendPropertyChanged("GLBusinessUnit");
					this.OnGLBusinessUnitChanged();
				}
			}
		}
		
		[Column(Storage="_GLState", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLState
		{
			get
			{
				return this._GLState;
			}
			set
			{
				if ((this._GLState != value))
				{
					if (this._GL_STATES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLStateChanging(value);
					this.SendPropertyChanging();
					this._GLState = value;
					this.SendPropertyChanged("GLState");
					this.OnGLStateChanged();
				}
			}
		}
		
		[Column(Storage="_Allow", DbType="Bit NOT NULL")]
		public bool Allow
		{
			get
			{
				return this._Allow;
			}
			set
			{
				if ((this._Allow != value))
				{
					this.OnAllowChanging(value);
					this.SendPropertyChanging();
					this._Allow = value;
					this.SendPropertyChanged("Allow");
					this.OnAllowChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_ALLOWED_GL_BUSINESS_UNITS", Storage="_GL_BUSINESS_UNITS", ThisKey="GLBusinessUnit", OtherKey="GLBusinessUnitID", IsForeignKey=true)]
		public GL_BUSINESS_UNITS GL_BUSINESS_UNITS
		{
			get
			{
				return this._GL_BUSINESS_UNITS.Entity;
			}
			set
			{
				GL_BUSINESS_UNITS previousValue = this._GL_BUSINESS_UNITS.Entity;
				if (((previousValue != value) 
							|| (this._GL_BUSINESS_UNITS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_BUSINESS_UNITS.Entity = null;
						previousValue.GL_OBJECTS_ALLOWED.Remove(this);
					}
					this._GL_BUSINESS_UNITS.Entity = value;
					if ((value != null))
					{
						value.GL_OBJECTS_ALLOWED.Add(this);
						this._GLBusinessUnit = value.GLBusinessUnitID;
					}
					else
					{
						this._GLBusinessUnit = default(int);
					}
					this.SendPropertyChanged("GL_BUSINESS_UNITS");
				}
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_ALLOWED_GL_CONTROLS", Storage="_GL_CONTROLS", ThisKey="GLControl", OtherKey="GLControlID", IsForeignKey=true)]
		public GL_CONTROLS GL_CONTROLS
		{
			get
			{
				return this._GL_CONTROLS.Entity;
			}
			set
			{
				GL_CONTROLS previousValue = this._GL_CONTROLS.Entity;
				if (((previousValue != value) 
							|| (this._GL_CONTROLS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_CONTROLS.Entity = null;
						previousValue.GL_OBJECTS_ALLOWED.Remove(this);
					}
					this._GL_CONTROLS.Entity = value;
					if ((value != null))
					{
						value.GL_OBJECTS_ALLOWED.Add(this);
						this._GLControl = value.GLControlID;
					}
					else
					{
						this._GLControl = default(int);
					}
					this.SendPropertyChanged("GL_CONTROLS");
				}
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_ALLOWED_GL_OBJECTS", Storage="_GL_OBJECTS", ThisKey="GLControl,GLObjectGroup,GLObject", OtherKey="GLControl,GLObjectGroup,GLObjectID", IsForeignKey=true)]
		public GL_OBJECTS GL_OBJECTS
		{
			get
			{
				return this._GL_OBJECTS.Entity;
			}
			set
			{
				GL_OBJECTS previousValue = this._GL_OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._GL_OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_OBJECTS.Entity = null;
						previousValue.GL_OBJECTS_ALLOWED.Remove(this);
					}
					this._GL_OBJECTS.Entity = value;
					if ((value != null))
					{
						value.GL_OBJECTS_ALLOWED.Add(this);
						this._GLControl = value.GLControl;
						this._GLObjectGroup = value.GLObjectGroup;
						this._GLObject = value.GLObjectID;
					}
					else
					{
						this._GLControl = default(int);
						this._GLObjectGroup = default(int);
						this._GLObject = default(string);
					}
					this.SendPropertyChanged("GL_OBJECTS");
				}
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_ALLOWED_GL_OBJECTS_GROUPS", Storage="_GL_OBJECTS_GROUPS", ThisKey="GLControl,GLObjectGroup", OtherKey="GLControl,GLObjectGroupID", IsForeignKey=true)]
		public GL_OBJECTS_GROUPS GL_OBJECTS_GROUPS
		{
			get
			{
				return this._GL_OBJECTS_GROUPS.Entity;
			}
			set
			{
				GL_OBJECTS_GROUPS previousValue = this._GL_OBJECTS_GROUPS.Entity;
				if (((previousValue != value) 
							|| (this._GL_OBJECTS_GROUPS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_OBJECTS_GROUPS.Entity = null;
						previousValue.GL_OBJECTS_ALLOWED.Remove(this);
					}
					this._GL_OBJECTS_GROUPS.Entity = value;
					if ((value != null))
					{
						value.GL_OBJECTS_ALLOWED.Add(this);
						this._GLControl = value.GLControl;
						this._GLObjectGroup = value.GLObjectGroupID;
					}
					else
					{
						this._GLControl = default(int);
						this._GLObjectGroup = default(int);
					}
					this.SendPropertyChanged("GL_OBJECTS_GROUPS");
				}
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_ALLOWED_GL_STATES", Storage="_GL_STATES", ThisKey="GLState", OtherKey="GLStateID", IsForeignKey=true)]
		public GL_STATES GL_STATES
		{
			get
			{
				return this._GL_STATES.Entity;
			}
			set
			{
				GL_STATES previousValue = this._GL_STATES.Entity;
				if (((previousValue != value) 
							|| (this._GL_STATES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_STATES.Entity = null;
						previousValue.GL_OBJECTS_ALLOWED.Remove(this);
					}
					this._GL_STATES.Entity = value;
					if ((value != null))
					{
						value.GL_OBJECTS_ALLOWED.Add(this);
						this._GLState = value.GLStateID;
					}
					else
					{
						this._GLState = default(int);
					}
					this.SendPropertyChanged("GL_STATES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_OBJECTS_GROUPS")]
	public partial class GL_OBJECTS_GROUPS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GLControl;
		
		private int _GLObjectGroupID;
		
		private string _GLObjectGroup;
		
		private bool _DisplayOnExpenseForm;
		
		private EntitySet<GL_OBJECTS_ALLOWED> _GL_OBJECTS_ALLOWED;
		
		private EntitySet<GL_OBJECTS> _GL_OBJECTS;
		
		private EntityRef<GL_CONTROLS> _GL_CONTROLS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGLControlChanging(int value);
    partial void OnGLControlChanged();
    partial void OnGLObjectGroupIDChanging(int value);
    partial void OnGLObjectGroupIDChanged();
    partial void OnGLObjectGroupChanging(string value);
    partial void OnGLObjectGroupChanged();
    partial void OnDisplayOnExpenseFormChanging(bool value);
    partial void OnDisplayOnExpenseFormChanged();
    #endregion
		
		public GL_OBJECTS_GROUPS()
		{
			this._GL_OBJECTS_ALLOWED = new EntitySet<GL_OBJECTS_ALLOWED>(new Action<GL_OBJECTS_ALLOWED>(this.attach_GL_OBJECTS_ALLOWED), new Action<GL_OBJECTS_ALLOWED>(this.detach_GL_OBJECTS_ALLOWED));
			this._GL_OBJECTS = new EntitySet<GL_OBJECTS>(new Action<GL_OBJECTS>(this.attach_GL_OBJECTS), new Action<GL_OBJECTS>(this.detach_GL_OBJECTS));
			this._GL_CONTROLS = default(EntityRef<GL_CONTROLS>);
			OnCreated();
		}
		
		[Column(Storage="_GLControl", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLControl
		{
			get
			{
				return this._GLControl;
			}
			set
			{
				if ((this._GLControl != value))
				{
					if (this._GL_CONTROLS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLControlChanging(value);
					this.SendPropertyChanging();
					this._GLControl = value;
					this.SendPropertyChanged("GLControl");
					this.OnGLControlChanged();
				}
			}
		}
		
		[Column(Storage="_GLObjectGroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLObjectGroupID
		{
			get
			{
				return this._GLObjectGroupID;
			}
			set
			{
				if ((this._GLObjectGroupID != value))
				{
					this.OnGLObjectGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GLObjectGroupID = value;
					this.SendPropertyChanged("GLObjectGroupID");
					this.OnGLObjectGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_GLObjectGroup", DbType="VarChar(50)")]
		public string GLObjectGroup
		{
			get
			{
				return this._GLObjectGroup;
			}
			set
			{
				if ((this._GLObjectGroup != value))
				{
					this.OnGLObjectGroupChanging(value);
					this.SendPropertyChanging();
					this._GLObjectGroup = value;
					this.SendPropertyChanged("GLObjectGroup");
					this.OnGLObjectGroupChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayOnExpenseForm", DbType="Bit NOT NULL")]
		public bool DisplayOnExpenseForm
		{
			get
			{
				return this._DisplayOnExpenseForm;
			}
			set
			{
				if ((this._DisplayOnExpenseForm != value))
				{
					this.OnDisplayOnExpenseFormChanging(value);
					this.SendPropertyChanging();
					this._DisplayOnExpenseForm = value;
					this.SendPropertyChanged("DisplayOnExpenseForm");
					this.OnDisplayOnExpenseFormChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_ALLOWED_GL_OBJECTS_GROUPS", Storage="_GL_OBJECTS_ALLOWED", ThisKey="GLControl,GLObjectGroupID", OtherKey="GLControl,GLObjectGroup", DeleteRule="NO ACTION")]
		public EntitySet<GL_OBJECTS_ALLOWED> GL_OBJECTS_ALLOWED
		{
			get
			{
				return this._GL_OBJECTS_ALLOWED;
			}
			set
			{
				this._GL_OBJECTS_ALLOWED.Assign(value);
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_GL_OBJECTS_GROUPS", Storage="_GL_OBJECTS", ThisKey="GLControl,GLObjectGroupID", OtherKey="GLControl,GLObjectGroup", DeleteRule="NO ACTION")]
		public EntitySet<GL_OBJECTS> GL_OBJECTS
		{
			get
			{
				return this._GL_OBJECTS;
			}
			set
			{
				this._GL_OBJECTS.Assign(value);
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_GROUPS_GL_CONTROLS", Storage="_GL_CONTROLS", ThisKey="GLControl", OtherKey="GLControlID", IsForeignKey=true)]
		public GL_CONTROLS GL_CONTROLS
		{
			get
			{
				return this._GL_CONTROLS.Entity;
			}
			set
			{
				GL_CONTROLS previousValue = this._GL_CONTROLS.Entity;
				if (((previousValue != value) 
							|| (this._GL_CONTROLS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_CONTROLS.Entity = null;
						previousValue.GL_OBJECTS_GROUPS.Remove(this);
					}
					this._GL_CONTROLS.Entity = value;
					if ((value != null))
					{
						value.GL_OBJECTS_GROUPS.Add(this);
						this._GLControl = value.GLControlID;
					}
					else
					{
						this._GLControl = default(int);
					}
					this.SendPropertyChanged("GL_CONTROLS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_OBJECTS_GROUPS = this;
		}
		
		private void detach_GL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_OBJECTS_GROUPS = null;
		}
		
		private void attach_GL_OBJECTS(GL_OBJECTS entity)
		{
			this.SendPropertyChanging();
			entity.GL_OBJECTS_GROUPS = this;
		}
		
		private void detach_GL_OBJECTS(GL_OBJECTS entity)
		{
			this.SendPropertyChanging();
			entity.GL_OBJECTS_GROUPS = null;
		}
	}
	
	[Table(Name="dbo.GL_SERVICES")]
	public partial class GL_SERVICES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GLServiceID;
		
		private string _GLService;
		
		private EntitySet<REVENUE_CATEGORIES> _REVENUE_CATEGORIES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGLServiceIDChanging(int value);
    partial void OnGLServiceIDChanged();
    partial void OnGLServiceChanging(string value);
    partial void OnGLServiceChanged();
    #endregion
		
		public GL_SERVICES()
		{
			this._REVENUE_CATEGORIES = new EntitySet<REVENUE_CATEGORIES>(new Action<REVENUE_CATEGORIES>(this.attach_REVENUE_CATEGORIES), new Action<REVENUE_CATEGORIES>(this.detach_REVENUE_CATEGORIES));
			OnCreated();
		}
		
		[Column(Storage="_GLServiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLServiceID
		{
			get
			{
				return this._GLServiceID;
			}
			set
			{
				if ((this._GLServiceID != value))
				{
					this.OnGLServiceIDChanging(value);
					this.SendPropertyChanging();
					this._GLServiceID = value;
					this.SendPropertyChanged("GLServiceID");
					this.OnGLServiceIDChanged();
				}
			}
		}
		
		[Column(Storage="_GLService", DbType="VarChar(50)")]
		public string GLService
		{
			get
			{
				return this._GLService;
			}
			set
			{
				if ((this._GLService != value))
				{
					this.OnGLServiceChanging(value);
					this.SendPropertyChanging();
					this._GLService = value;
					this.SendPropertyChanged("GLService");
					this.OnGLServiceChanged();
				}
			}
		}
		
		[Association(Name="FK_REVENUE_CATEGORIES_GL_SERVICES", Storage="_REVENUE_CATEGORIES", ThisKey="GLServiceID", OtherKey="GLService", DeleteRule="NO ACTION")]
		public EntitySet<REVENUE_CATEGORIES> REVENUE_CATEGORIES
		{
			get
			{
				return this._REVENUE_CATEGORIES;
			}
			set
			{
				this._REVENUE_CATEGORIES.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REVENUE_CATEGORIES(REVENUE_CATEGORIES entity)
		{
			this.SendPropertyChanging();
			entity.GL_SERVICES = this;
		}
		
		private void detach_REVENUE_CATEGORIES(REVENUE_CATEGORIES entity)
		{
			this.SendPropertyChanging();
			entity.GL_SERVICES = null;
		}
	}
	
	[Table(Name="dbo.GL_STATES")]
	public partial class GL_STATES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GLStateID;
		
		private string _GLState;
		
		private EntitySet<DEBTORS> _DEBTORS;
		
		private EntitySet<GL_OBJECTS_ALLOWED> _GL_OBJECTS_ALLOWED;
		
		private EntitySet<STKORDITEM> _STKORDITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGLStateIDChanging(int value);
    partial void OnGLStateIDChanged();
    partial void OnGLStateChanging(string value);
    partial void OnGLStateChanged();
    #endregion
		
		public GL_STATES()
		{
			this._DEBTORS = new EntitySet<DEBTORS>(new Action<DEBTORS>(this.attach_DEBTORS), new Action<DEBTORS>(this.detach_DEBTORS));
			this._GL_OBJECTS_ALLOWED = new EntitySet<GL_OBJECTS_ALLOWED>(new Action<GL_OBJECTS_ALLOWED>(this.attach_GL_OBJECTS_ALLOWED), new Action<GL_OBJECTS_ALLOWED>(this.detach_GL_OBJECTS_ALLOWED));
			this._STKORDITEM = new EntitySet<STKORDITEM>(new Action<STKORDITEM>(this.attach_STKORDITEM), new Action<STKORDITEM>(this.detach_STKORDITEM));
			OnCreated();
		}
		
		[Column(Storage="_GLStateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLStateID
		{
			get
			{
				return this._GLStateID;
			}
			set
			{
				if ((this._GLStateID != value))
				{
					this.OnGLStateIDChanging(value);
					this.SendPropertyChanging();
					this._GLStateID = value;
					this.SendPropertyChanged("GLStateID");
					this.OnGLStateIDChanged();
				}
			}
		}
		
		[Column(Storage="_GLState", DbType="VarChar(50)")]
		public string GLState
		{
			get
			{
				return this._GLState;
			}
			set
			{
				if ((this._GLState != value))
				{
					this.OnGLStateChanging(value);
					this.SendPropertyChanging();
					this._GLState = value;
					this.SendPropertyChanged("GLState");
					this.OnGLStateChanged();
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_GL_STATES", Storage="_DEBTORS", ThisKey="GLStateID", OtherKey="GLState", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS> DEBTORS
		{
			get
			{
				return this._DEBTORS;
			}
			set
			{
				this._DEBTORS.Assign(value);
			}
		}
		
		[Association(Name="FK_GL_OBJECTS_ALLOWED_GL_STATES", Storage="_GL_OBJECTS_ALLOWED", ThisKey="GLStateID", OtherKey="GLState", DeleteRule="NO ACTION")]
		public EntitySet<GL_OBJECTS_ALLOWED> GL_OBJECTS_ALLOWED
		{
			get
			{
				return this._GL_OBJECTS_ALLOWED;
			}
			set
			{
				this._GL_OBJECTS_ALLOWED.Assign(value);
			}
		}
		
		[Association(Name="FK_STKORDITEM_GL_STATES", Storage="_STKORDITEM", ThisKey="GLStateID", OtherKey="GLState", DeleteRule="NO ACTION")]
		public EntitySet<STKORDITEM> STKORDITEM
		{
			get
			{
				return this._STKORDITEM;
			}
			set
			{
				this._STKORDITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEBTORS(DEBTORS entity)
		{
			this.SendPropertyChanging();
			entity.GL_STATES = this;
		}
		
		private void detach_DEBTORS(DEBTORS entity)
		{
			this.SendPropertyChanging();
			entity.GL_STATES = null;
		}
		
		private void attach_GL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_STATES = this;
		}
		
		private void detach_GL_OBJECTS_ALLOWED(GL_OBJECTS_ALLOWED entity)
		{
			this.SendPropertyChanging();
			entity.GL_STATES = null;
		}
		
		private void attach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.GL_STATES = this;
		}
		
		private void detach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.GL_STATES = null;
		}
	}
	
	[Table(Name="dbo.GL_SUBS")]
	public partial class GL_SUBS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Sub;
		
		private string _SubTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubChanging(string value);
    partial void OnSubChanged();
    partial void OnSubTitleChanging(string value);
    partial void OnSubTitleChanged();
    #endregion
		
		public GL_SUBS()
		{
			OnCreated();
		}
		
		[Column(Storage="_Sub", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sub
		{
			get
			{
				return this._Sub;
			}
			set
			{
				if ((this._Sub != value))
				{
					this.OnSubChanging(value);
					this.SendPropertyChanging();
					this._Sub = value;
					this.SendPropertyChanged("Sub");
					this.OnSubChanged();
				}
			}
		}
		
		[Column(Storage="_SubTitle", DbType="VarChar(50)")]
		public string SubTitle
		{
			get
			{
				return this._SubTitle;
			}
			set
			{
				if ((this._SubTitle != value))
				{
					this.OnSubTitleChanging(value);
					this.SendPropertyChanging();
					this._SubTitle = value;
					this.SendPropertyChanged("SubTitle");
					this.OnSubTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GL_TO_ASSETCAT")]
	public partial class GL_TO_ASSETCAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GLCodeType;
		
		private int _AssetCategory;
		
		private EntityRef<ASSET_CATEGORIES> _ASSET_CATEGORIES;
		
		private EntityRef<GL_CODES_TYPES> _GL_CODES_TYPES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGLCodeTypeChanging(int value);
    partial void OnGLCodeTypeChanged();
    partial void OnAssetCategoryChanging(int value);
    partial void OnAssetCategoryChanged();
    #endregion
		
		public GL_TO_ASSETCAT()
		{
			this._ASSET_CATEGORIES = default(EntityRef<ASSET_CATEGORIES>);
			this._GL_CODES_TYPES = default(EntityRef<GL_CODES_TYPES>);
			OnCreated();
		}
		
		[Column(Storage="_GLCodeType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GLCodeType
		{
			get
			{
				return this._GLCodeType;
			}
			set
			{
				if ((this._GLCodeType != value))
				{
					if (this._GL_CODES_TYPES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._GLCodeType = value;
					this.SendPropertyChanged("GLCodeType");
					this.OnGLCodeTypeChanged();
				}
			}
		}
		
		[Column(Storage="_AssetCategory", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AssetCategory
		{
			get
			{
				return this._AssetCategory;
			}
			set
			{
				if ((this._AssetCategory != value))
				{
					if (this._ASSET_CATEGORIES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetCategoryChanging(value);
					this.SendPropertyChanging();
					this._AssetCategory = value;
					this.SendPropertyChanged("AssetCategory");
					this.OnAssetCategoryChanged();
				}
			}
		}
		
		[Association(Name="FK_GL_TO_ASSETCAT_ASSET_CATEGORIES", Storage="_ASSET_CATEGORIES", ThisKey="AssetCategory", OtherKey="AssetCategoryId", IsForeignKey=true)]
		public ASSET_CATEGORIES ASSET_CATEGORIES
		{
			get
			{
				return this._ASSET_CATEGORIES.Entity;
			}
			set
			{
				ASSET_CATEGORIES previousValue = this._ASSET_CATEGORIES.Entity;
				if (((previousValue != value) 
							|| (this._ASSET_CATEGORIES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ASSET_CATEGORIES.Entity = null;
						previousValue.GL_TO_ASSETCAT.Remove(this);
					}
					this._ASSET_CATEGORIES.Entity = value;
					if ((value != null))
					{
						value.GL_TO_ASSETCAT.Add(this);
						this._AssetCategory = value.AssetCategoryId;
					}
					else
					{
						this._AssetCategory = default(int);
					}
					this.SendPropertyChanged("ASSET_CATEGORIES");
				}
			}
		}
		
		[Association(Name="FK_GL_TO_ASSETCAT_GL_CODES_TYPES", Storage="_GL_CODES_TYPES", ThisKey="GLCodeType", OtherKey="GLCodeTypeId", IsForeignKey=true)]
		public GL_CODES_TYPES GL_CODES_TYPES
		{
			get
			{
				return this._GL_CODES_TYPES.Entity;
			}
			set
			{
				GL_CODES_TYPES previousValue = this._GL_CODES_TYPES.Entity;
				if (((previousValue != value) 
							|| (this._GL_CODES_TYPES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_CODES_TYPES.Entity = null;
						previousValue.GL_TO_ASSETCAT.Remove(this);
					}
					this._GL_CODES_TYPES.Entity = value;
					if ((value != null))
					{
						value.GL_TO_ASSETCAT.Add(this);
						this._GLCodeType = value.GLCodeTypeId;
					}
					else
					{
						this._GLCodeType = default(int);
					}
					this.SendPropertyChanged("GL_CODES_TYPES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.IMPORT_IMV_PARTS")]
	public partial class IMPORT_IMV_PARTS
	{
		
		private string _BRAND;
		
		private string _XRefCode;
		
		private string _FC;
		
		private string _DESCRIPTION;
		
		private string _ProdCode;
		
		private string _SN_;
		
		private string _Location;
		
		private string _Qty;
		
		private string _AltLoc;
		
		private string _AltQty;
		
		public IMPORT_IMV_PARTS()
		{
		}
		
		[Column(Storage="_BRAND", DbType="NVarChar(255)")]
		public string BRAND
		{
			get
			{
				return this._BRAND;
			}
			set
			{
				if ((this._BRAND != value))
				{
					this._BRAND = value;
				}
			}
		}
		
		[Column(Storage="_XRefCode", DbType="NVarChar(255)")]
		public string XRefCode
		{
			get
			{
				return this._XRefCode;
			}
			set
			{
				if ((this._XRefCode != value))
				{
					this._XRefCode = value;
				}
			}
		}
		
		[Column(Storage="_FC", DbType="NVarChar(255)")]
		public string FC
		{
			get
			{
				return this._FC;
			}
			set
			{
				if ((this._FC != value))
				{
					this._FC = value;
				}
			}
		}
		
		[Column(Storage="_DESCRIPTION", DbType="NVarChar(255)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this._DESCRIPTION = value;
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="NVarChar(255)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Name="SN#", Storage="_SN_", DbType="NVarChar(255)")]
		public string SN_
		{
			get
			{
				return this._SN_;
			}
			set
			{
				if ((this._SN_ != value))
				{
					this._SN_ = value;
				}
			}
		}
		
		[Column(Storage="_Location", DbType="NVarChar(255)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="NVarChar(255)")]
		public string Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this._Qty = value;
				}
			}
		}
		
		[Column(Name="Alt Loc", Storage="_AltLoc", DbType="NVarChar(255)")]
		public string AltLoc
		{
			get
			{
				return this._AltLoc;
			}
			set
			{
				if ((this._AltLoc != value))
				{
					this._AltLoc = value;
				}
			}
		}
		
		[Column(Name="Alt Qty", Storage="_AltQty", DbType="NVarChar(255)")]
		public string AltQty
		{
			get
			{
				return this._AltQty;
			}
			set
			{
				if ((this._AltQty != value))
				{
					this._AltQty = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.IMPORT_STOCK")]
	public partial class IMPORT_STOCK
	{
		
		private int _ID;
		
		private string _Brand;
		
		private string _Machine;
		
		private string _PartDescription;
		
		private string _PartNo;
		
		private string _ALIAS1;
		
		private string _SerialNumber;
		
		private string _Loc;
		
		private System.Nullable<int> _Qty;
		
		public IMPORT_STOCK()
		{
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="NVarChar(255)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[Column(Storage="_Machine", DbType="NVarChar(255)")]
		public string Machine
		{
			get
			{
				return this._Machine;
			}
			set
			{
				if ((this._Machine != value))
				{
					this._Machine = value;
				}
			}
		}
		
		[Column(Name="Part Description", Storage="_PartDescription", DbType="NVarChar(255)")]
		public string PartDescription
		{
			get
			{
				return this._PartDescription;
			}
			set
			{
				if ((this._PartDescription != value))
				{
					this._PartDescription = value;
				}
			}
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_ALIAS1", DbType="NVarChar(255)")]
		public string ALIAS1
		{
			get
			{
				return this._ALIAS1;
			}
			set
			{
				if ((this._ALIAS1 != value))
				{
					this._ALIAS1 = value;
				}
			}
		}
		
		[Column(Name="Serial Number", Storage="_SerialNumber", DbType="NVarChar(255)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[Column(Storage="_Loc", DbType="NVarChar(255)")]
		public string Loc
		{
			get
			{
				return this._Loc;
			}
			set
			{
				if ((this._Loc != value))
				{
					this._Loc = value;
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this._Qty = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.IMPORTS_COSTING")]
	public partial class IMPORTS_COSTING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FCNum;
		
		private System.Nullable<System.DateTime> _DateCosted;
		
		private string _Supplier;
		
		private string _Vessel;
		
		private string _Currency;
		
		private System.Nullable<decimal> _DefaultExchRate;
		
		private System.Nullable<decimal> _TotalDuty;
		
		private System.Nullable<decimal> _FXFreight;
		
		private System.Nullable<decimal> _FXOther;
		
		private System.Nullable<decimal> _AUDFreight;
		
		private System.Nullable<decimal> _AUDOther;
		
		private System.Nullable<decimal> _LocalFreight;
		
		private System.Nullable<decimal> _Sundry;
		
		private System.Nullable<decimal> _BRSAITF;
		
		private System.Nullable<decimal> _Clearance;
		
		private System.Nullable<int> _TotalItems;
		
		private string _Company;
		
		private string _FileNum;
		
		private bool _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFCNumChanging(int value);
    partial void OnFCNumChanged();
    partial void OnDateCostedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCostedChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnVesselChanging(string value);
    partial void OnVesselChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnDefaultExchRateChanging(System.Nullable<decimal> value);
    partial void OnDefaultExchRateChanged();
    partial void OnTotalDutyChanging(System.Nullable<decimal> value);
    partial void OnTotalDutyChanged();
    partial void OnFXFreightChanging(System.Nullable<decimal> value);
    partial void OnFXFreightChanged();
    partial void OnFXOtherChanging(System.Nullable<decimal> value);
    partial void OnFXOtherChanged();
    partial void OnAUDFreightChanging(System.Nullable<decimal> value);
    partial void OnAUDFreightChanged();
    partial void OnAUDOtherChanging(System.Nullable<decimal> value);
    partial void OnAUDOtherChanged();
    partial void OnLocalFreightChanging(System.Nullable<decimal> value);
    partial void OnLocalFreightChanged();
    partial void OnSundryChanging(System.Nullable<decimal> value);
    partial void OnSundryChanged();
    partial void OnBRSAITFChanging(System.Nullable<decimal> value);
    partial void OnBRSAITFChanged();
    partial void OnClearanceChanging(System.Nullable<decimal> value);
    partial void OnClearanceChanged();
    partial void OnTotalItemsChanging(System.Nullable<int> value);
    partial void OnTotalItemsChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnFileNumChanging(string value);
    partial void OnFileNumChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    #endregion
		
		public IMPORTS_COSTING()
		{
			OnCreated();
		}
		
		[Column(Storage="_FCNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FCNum
		{
			get
			{
				return this._FCNum;
			}
			set
			{
				if ((this._FCNum != value))
				{
					this.OnFCNumChanging(value);
					this.SendPropertyChanging();
					this._FCNum = value;
					this.SendPropertyChanged("FCNum");
					this.OnFCNumChanged();
				}
			}
		}
		
		[Column(Storage="_DateCosted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCosted
		{
			get
			{
				return this._DateCosted;
			}
			set
			{
				if ((this._DateCosted != value))
				{
					this.OnDateCostedChanging(value);
					this.SendPropertyChanging();
					this._DateCosted = value;
					this.SendPropertyChanged("DateCosted");
					this.OnDateCostedChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(50)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Vessel", DbType="VarChar(50)")]
		public string Vessel
		{
			get
			{
				return this._Vessel;
			}
			set
			{
				if ((this._Vessel != value))
				{
					this.OnVesselChanging(value);
					this.SendPropertyChanging();
					this._Vessel = value;
					this.SendPropertyChanged("Vessel");
					this.OnVesselChanged();
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(8)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_DefaultExchRate", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> DefaultExchRate
		{
			get
			{
				return this._DefaultExchRate;
			}
			set
			{
				if ((this._DefaultExchRate != value))
				{
					this.OnDefaultExchRateChanging(value);
					this.SendPropertyChanging();
					this._DefaultExchRate = value;
					this.SendPropertyChanged("DefaultExchRate");
					this.OnDefaultExchRateChanged();
				}
			}
		}
		
		[Column(Storage="_TotalDuty", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> TotalDuty
		{
			get
			{
				return this._TotalDuty;
			}
			set
			{
				if ((this._TotalDuty != value))
				{
					this.OnTotalDutyChanging(value);
					this.SendPropertyChanging();
					this._TotalDuty = value;
					this.SendPropertyChanged("TotalDuty");
					this.OnTotalDutyChanged();
				}
			}
		}
		
		[Column(Storage="_FXFreight", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> FXFreight
		{
			get
			{
				return this._FXFreight;
			}
			set
			{
				if ((this._FXFreight != value))
				{
					this.OnFXFreightChanging(value);
					this.SendPropertyChanging();
					this._FXFreight = value;
					this.SendPropertyChanged("FXFreight");
					this.OnFXFreightChanged();
				}
			}
		}
		
		[Column(Storage="_FXOther", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> FXOther
		{
			get
			{
				return this._FXOther;
			}
			set
			{
				if ((this._FXOther != value))
				{
					this.OnFXOtherChanging(value);
					this.SendPropertyChanging();
					this._FXOther = value;
					this.SendPropertyChanged("FXOther");
					this.OnFXOtherChanged();
				}
			}
		}
		
		[Column(Storage="_AUDFreight", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> AUDFreight
		{
			get
			{
				return this._AUDFreight;
			}
			set
			{
				if ((this._AUDFreight != value))
				{
					this.OnAUDFreightChanging(value);
					this.SendPropertyChanging();
					this._AUDFreight = value;
					this.SendPropertyChanged("AUDFreight");
					this.OnAUDFreightChanged();
				}
			}
		}
		
		[Column(Storage="_AUDOther", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> AUDOther
		{
			get
			{
				return this._AUDOther;
			}
			set
			{
				if ((this._AUDOther != value))
				{
					this.OnAUDOtherChanging(value);
					this.SendPropertyChanging();
					this._AUDOther = value;
					this.SendPropertyChanged("AUDOther");
					this.OnAUDOtherChanged();
				}
			}
		}
		
		[Column(Storage="_LocalFreight", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> LocalFreight
		{
			get
			{
				return this._LocalFreight;
			}
			set
			{
				if ((this._LocalFreight != value))
				{
					this.OnLocalFreightChanging(value);
					this.SendPropertyChanging();
					this._LocalFreight = value;
					this.SendPropertyChanged("LocalFreight");
					this.OnLocalFreightChanged();
				}
			}
		}
		
		[Column(Storage="_Sundry", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Sundry
		{
			get
			{
				return this._Sundry;
			}
			set
			{
				if ((this._Sundry != value))
				{
					this.OnSundryChanging(value);
					this.SendPropertyChanging();
					this._Sundry = value;
					this.SendPropertyChanged("Sundry");
					this.OnSundryChanged();
				}
			}
		}
		
		[Column(Storage="_BRSAITF", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> BRSAITF
		{
			get
			{
				return this._BRSAITF;
			}
			set
			{
				if ((this._BRSAITF != value))
				{
					this.OnBRSAITFChanging(value);
					this.SendPropertyChanging();
					this._BRSAITF = value;
					this.SendPropertyChanged("BRSAITF");
					this.OnBRSAITFChanged();
				}
			}
		}
		
		[Column(Storage="_Clearance", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Clearance
		{
			get
			{
				return this._Clearance;
			}
			set
			{
				if ((this._Clearance != value))
				{
					this.OnClearanceChanging(value);
					this.SendPropertyChanging();
					this._Clearance = value;
					this.SendPropertyChanged("Clearance");
					this.OnClearanceChanged();
				}
			}
		}
		
		[Column(Storage="_TotalItems", DbType="Int")]
		public System.Nullable<int> TotalItems
		{
			get
			{
				return this._TotalItems;
			}
			set
			{
				if ((this._TotalItems != value))
				{
					this.OnTotalItemsChanging(value);
					this.SendPropertyChanging();
					this._TotalItems = value;
					this.SendPropertyChanged("TotalItems");
					this.OnTotalItemsChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_FileNum", DbType="VarChar(20)")]
		public string FileNum
		{
			get
			{
				return this._FileNum;
			}
			set
			{
				if ((this._FileNum != value))
				{
					this.OnFileNumChanging(value);
					this.SendPropertyChanging();
					this._FileNum = value;
					this.SendPropertyChanged("FileNum");
					this.OnFileNumChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_ACTUAL_INVOICES")]
	public partial class INT_ACTUAL_INVOICES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _BatchID;
		
		private int _AccountID;
		
		private int _InvFreq;
		
		private int _OrdNum;
		
		private decimal _InvNet;
		
		private decimal _InvTax;
		
		private bool _RunSeparately;
		
		private System.Nullable<int> _SeparateBatchID;
		
		private System.Nullable<int> _ContractID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnBatchIDChanging(int value);
    partial void OnBatchIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnInvFreqChanging(int value);
    partial void OnInvFreqChanged();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnInvNetChanging(decimal value);
    partial void OnInvNetChanged();
    partial void OnInvTaxChanging(decimal value);
    partial void OnInvTaxChanged();
    partial void OnRunSeparatelyChanging(bool value);
    partial void OnRunSeparatelyChanged();
    partial void OnSeparateBatchIDChanging(System.Nullable<int> value);
    partial void OnSeparateBatchIDChanged();
    partial void OnContractIDChanging(System.Nullable<int> value);
    partial void OnContractIDChanged();
    #endregion
		
		public INT_ACTUAL_INVOICES()
		{
			OnCreated();
		}
		
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_BatchID", DbType="Int NOT NULL")]
		public int BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int NOT NULL")]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_InvFreq", DbType="Int NOT NULL")]
		public int InvFreq
		{
			get
			{
				return this._InvFreq;
			}
			set
			{
				if ((this._InvFreq != value))
				{
					this.OnInvFreqChanging(value);
					this.SendPropertyChanging();
					this._InvFreq = value;
					this.SendPropertyChanged("InvFreq");
					this.OnInvFreqChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int NOT NULL")]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_InvNet", DbType="Money NOT NULL")]
		public decimal InvNet
		{
			get
			{
				return this._InvNet;
			}
			set
			{
				if ((this._InvNet != value))
				{
					this.OnInvNetChanging(value);
					this.SendPropertyChanging();
					this._InvNet = value;
					this.SendPropertyChanged("InvNet");
					this.OnInvNetChanged();
				}
			}
		}
		
		[Column(Storage="_InvTax", DbType="Money NOT NULL")]
		public decimal InvTax
		{
			get
			{
				return this._InvTax;
			}
			set
			{
				if ((this._InvTax != value))
				{
					this.OnInvTaxChanging(value);
					this.SendPropertyChanging();
					this._InvTax = value;
					this.SendPropertyChanged("InvTax");
					this.OnInvTaxChanged();
				}
			}
		}
		
		[Column(Storage="_RunSeparately", DbType="Bit NOT NULL")]
		public bool RunSeparately
		{
			get
			{
				return this._RunSeparately;
			}
			set
			{
				if ((this._RunSeparately != value))
				{
					this.OnRunSeparatelyChanging(value);
					this.SendPropertyChanging();
					this._RunSeparately = value;
					this.SendPropertyChanged("RunSeparately");
					this.OnRunSeparatelyChanged();
				}
			}
		}
		
		[Column(Storage="_SeparateBatchID", DbType="Int")]
		public System.Nullable<int> SeparateBatchID
		{
			get
			{
				return this._SeparateBatchID;
			}
			set
			{
				if ((this._SeparateBatchID != value))
				{
					this.OnSeparateBatchIDChanging(value);
					this.SendPropertyChanging();
					this._SeparateBatchID = value;
					this.SendPropertyChanged("SeparateBatchID");
					this.OnSeparateBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_BACKUP_3P_DEVICES_BEFORE_UPDATE")]
	public partial class INT_BACKUP_3P_DEVICES_BEFORE_UPDATE
	{
		
		private int _AccountID;
		
		private int _ContractItemID;
		
		private int _ContractID;
		
		private string _ProdCode;
		
		private short _Quantity;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private System.Nullable<int> _ServiceID;
		
		private System.Nullable<byte> _ServiceLevelID;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Engineer;
		
		private string _SerialNo;
		
		private System.Nullable<byte> _ResponseTime;
		
		private string _CoverageLimits;
		
		private System.Nullable<decimal> _OtherPrice;
		
		private System.Nullable<bool> _Variation;
		
		private System.Nullable<System.DateTime> _LastInvToDate;
		
		private string _DisplayCode;
		
		private System.Nullable<decimal> _TPPercent;
		
		private string _CustCode;
		
		private string _DeviceName;
		
		private bool _Merged;
		
		private System.Nullable<byte> _FromCompanyNum;
		
		private System.Nullable<int> _RevenueCategory;
		
		private System.Nullable<int> _OldContractID;
		
		private System.Nullable<System.DateTime> _OriginalStartDate;
		
		private bool _ExtraMerge;
		
		private string @__3PSpecialConsiderations;
		
		private string _SalesRep;
		
		private System.Nullable<decimal> _CommissionSet;
		
		private System.Nullable<decimal> _CommissionPaid;
		
		private System.Nullable<int> _LastChangeType;
		
		private int _ClaimableCommission;
		
		private System.Nullable<decimal> _CommissionCancelled;
		
		private string _LeadSalesRep;
		
		private int _BSGAligned;
		
		private System.Nullable<int> _Import;
		
		private int _ConsignmentStock;
		
		private System.Nullable<int> _SpaID;
		
		public INT_BACKUP_3P_DEVICES_BEFORE_UPDATE()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Int NOT NULL")]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_ContractItemID", DbType="Int NOT NULL")]
		public int ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this._ContractItemID = value;
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int NOT NULL")]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this._ContractID = value;
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Storage="_Quantity", DbType="SmallInt NOT NULL")]
		public short Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_ExpiryDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this._ExpiryDate = value;
				}
			}
		}
		
		[Column(Storage="_ServiceID", DbType="Int")]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this._ServiceID = value;
				}
			}
		}
		
		[Column(Storage="_ServiceLevelID", DbType="TinyInt")]
		public System.Nullable<byte> ServiceLevelID
		{
			get
			{
				return this._ServiceLevelID;
			}
			set
			{
				if ((this._ServiceLevelID != value))
				{
					this._ServiceLevelID = value;
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Storage="_Engineer", DbType="VarChar(25)")]
		public string Engineer
		{
			get
			{
				return this._Engineer;
			}
			set
			{
				if ((this._Engineer != value))
				{
					this._Engineer = value;
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="VarChar(64)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this._SerialNo = value;
				}
			}
		}
		
		[Column(Storage="_ResponseTime", DbType="TinyInt")]
		public System.Nullable<byte> ResponseTime
		{
			get
			{
				return this._ResponseTime;
			}
			set
			{
				if ((this._ResponseTime != value))
				{
					this._ResponseTime = value;
				}
			}
		}
		
		[Column(Storage="_CoverageLimits", DbType="VarChar(32)")]
		public string CoverageLimits
		{
			get
			{
				return this._CoverageLimits;
			}
			set
			{
				if ((this._CoverageLimits != value))
				{
					this._CoverageLimits = value;
				}
			}
		}
		
		[Column(Storage="_OtherPrice", DbType="Money")]
		public System.Nullable<decimal> OtherPrice
		{
			get
			{
				return this._OtherPrice;
			}
			set
			{
				if ((this._OtherPrice != value))
				{
					this._OtherPrice = value;
				}
			}
		}
		
		[Column(Storage="_Variation", DbType="Bit")]
		public System.Nullable<bool> Variation
		{
			get
			{
				return this._Variation;
			}
			set
			{
				if ((this._Variation != value))
				{
					this._Variation = value;
				}
			}
		}
		
		[Column(Storage="_LastInvToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastInvToDate
		{
			get
			{
				return this._LastInvToDate;
			}
			set
			{
				if ((this._LastInvToDate != value))
				{
					this._LastInvToDate = value;
				}
			}
		}
		
		[Column(Storage="_DisplayCode", DbType="VarChar(35)")]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this._DisplayCode = value;
				}
			}
		}
		
		[Column(Storage="_TPPercent", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> TPPercent
		{
			get
			{
				return this._TPPercent;
			}
			set
			{
				if ((this._TPPercent != value))
				{
					this._TPPercent = value;
				}
			}
		}
		
		[Column(Storage="_CustCode", DbType="VarChar(50)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					this._CustCode = value;
				}
			}
		}
		
		[Column(Storage="_DeviceName", DbType="VarChar(40)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this._DeviceName = value;
				}
			}
		}
		
		[Column(Storage="_Merged", DbType="Bit NOT NULL")]
		public bool Merged
		{
			get
			{
				return this._Merged;
			}
			set
			{
				if ((this._Merged != value))
				{
					this._Merged = value;
				}
			}
		}
		
		[Column(Storage="_FromCompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> FromCompanyNum
		{
			get
			{
				return this._FromCompanyNum;
			}
			set
			{
				if ((this._FromCompanyNum != value))
				{
					this._FromCompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this._RevenueCategory = value;
				}
			}
		}
		
		[Column(Storage="_OldContractID", DbType="Int")]
		public System.Nullable<int> OldContractID
		{
			get
			{
				return this._OldContractID;
			}
			set
			{
				if ((this._OldContractID != value))
				{
					this._OldContractID = value;
				}
			}
		}
		
		[Column(Storage="_OriginalStartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OriginalStartDate
		{
			get
			{
				return this._OriginalStartDate;
			}
			set
			{
				if ((this._OriginalStartDate != value))
				{
					this._OriginalStartDate = value;
				}
			}
		}
		
		[Column(Storage="_ExtraMerge", DbType="Bit NOT NULL")]
		public bool ExtraMerge
		{
			get
			{
				return this._ExtraMerge;
			}
			set
			{
				if ((this._ExtraMerge != value))
				{
					this._ExtraMerge = value;
				}
			}
		}
		
		[Column(Name="3PSpecialConsiderations", Storage="__3PSpecialConsiderations", DbType="VarChar(300)")]
		public string _3PSpecialConsiderations
		{
			get
			{
				return this.@__3PSpecialConsiderations;
			}
			set
			{
				if ((this.@__3PSpecialConsiderations != value))
				{
					this.@__3PSpecialConsiderations = value;
				}
			}
		}
		
		[Column(Storage="_SalesRep", DbType="VarChar(25)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					this._SalesRep = value;
				}
			}
		}
		
		[Column(Storage="_CommissionSet", DbType="Money")]
		public System.Nullable<decimal> CommissionSet
		{
			get
			{
				return this._CommissionSet;
			}
			set
			{
				if ((this._CommissionSet != value))
				{
					this._CommissionSet = value;
				}
			}
		}
		
		[Column(Storage="_CommissionPaid", DbType="Money")]
		public System.Nullable<decimal> CommissionPaid
		{
			get
			{
				return this._CommissionPaid;
			}
			set
			{
				if ((this._CommissionPaid != value))
				{
					this._CommissionPaid = value;
				}
			}
		}
		
		[Column(Storage="_LastChangeType", DbType="Int")]
		public System.Nullable<int> LastChangeType
		{
			get
			{
				return this._LastChangeType;
			}
			set
			{
				if ((this._LastChangeType != value))
				{
					this._LastChangeType = value;
				}
			}
		}
		
		[Column(Storage="_ClaimableCommission", DbType="Int NOT NULL")]
		public int ClaimableCommission
		{
			get
			{
				return this._ClaimableCommission;
			}
			set
			{
				if ((this._ClaimableCommission != value))
				{
					this._ClaimableCommission = value;
				}
			}
		}
		
		[Column(Storage="_CommissionCancelled", DbType="Money")]
		public System.Nullable<decimal> CommissionCancelled
		{
			get
			{
				return this._CommissionCancelled;
			}
			set
			{
				if ((this._CommissionCancelled != value))
				{
					this._CommissionCancelled = value;
				}
			}
		}
		
		[Column(Storage="_LeadSalesRep", DbType="VarChar(25)")]
		public string LeadSalesRep
		{
			get
			{
				return this._LeadSalesRep;
			}
			set
			{
				if ((this._LeadSalesRep != value))
				{
					this._LeadSalesRep = value;
				}
			}
		}
		
		[Column(Storage="_BSGAligned", DbType="Int NOT NULL")]
		public int BSGAligned
		{
			get
			{
				return this._BSGAligned;
			}
			set
			{
				if ((this._BSGAligned != value))
				{
					this._BSGAligned = value;
				}
			}
		}
		
		[Column(Storage="_Import", DbType="Int")]
		public System.Nullable<int> Import
		{
			get
			{
				return this._Import;
			}
			set
			{
				if ((this._Import != value))
				{
					this._Import = value;
				}
			}
		}
		
		[Column(Storage="_ConsignmentStock", DbType="Int NOT NULL")]
		public int ConsignmentStock
		{
			get
			{
				return this._ConsignmentStock;
			}
			set
			{
				if ((this._ConsignmentStock != value))
				{
					this._ConsignmentStock = value;
				}
			}
		}
		
		[Column(Storage="_SpaID", DbType="Int")]
		public System.Nullable<int> SpaID
		{
			get
			{
				return this._SpaID;
			}
			set
			{
				if ((this._SpaID != value))
				{
					this._SpaID = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.INT_BUSINESS_UNIT_TARGETS")]
	public partial class INT_BUSINESS_UNIT_TARGETS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BusinessUnitGroup;
		
		private short _Year;
		
		private decimal _Target;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessUnitGroupChanging(string value);
    partial void OnBusinessUnitGroupChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnTargetChanging(decimal value);
    partial void OnTargetChanged();
    #endregion
		
		public INT_BUSINESS_UNIT_TARGETS()
		{
			OnCreated();
		}
		
		[Column(Storage="_BusinessUnitGroup", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BusinessUnitGroup
		{
			get
			{
				return this._BusinessUnitGroup;
			}
			set
			{
				if ((this._BusinessUnitGroup != value))
				{
					this.OnBusinessUnitGroupChanging(value);
					this.SendPropertyChanging();
					this._BusinessUnitGroup = value;
					this.SendPropertyChanged("BusinessUnitGroup");
					this.OnBusinessUnitGroupChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Target", DbType="Money NOT NULL")]
		public decimal Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_BUSINESS_UNITS")]
	public partial class INT_BUSINESS_UNITS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BusinessUnit;
		
		private string _BusinessUnitGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessUnitChanging(string value);
    partial void OnBusinessUnitChanged();
    partial void OnBusinessUnitGroupChanging(string value);
    partial void OnBusinessUnitGroupChanged();
    #endregion
		
		public INT_BUSINESS_UNITS()
		{
			OnCreated();
		}
		
		[Column(Storage="_BusinessUnit", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BusinessUnit
		{
			get
			{
				return this._BusinessUnit;
			}
			set
			{
				if ((this._BusinessUnit != value))
				{
					this.OnBusinessUnitChanging(value);
					this.SendPropertyChanging();
					this._BusinessUnit = value;
					this.SendPropertyChanged("BusinessUnit");
					this.OnBusinessUnitChanged();
				}
			}
		}
		
		[Column(Storage="_BusinessUnitGroup", DbType="VarChar(5)")]
		public string BusinessUnitGroup
		{
			get
			{
				return this._BusinessUnitGroup;
			}
			set
			{
				if ((this._BusinessUnitGroup != value))
				{
					this.OnBusinessUnitGroupChanging(value);
					this.SendPropertyChanging();
					this._BusinessUnitGroup = value;
					this.SendPropertyChanged("BusinessUnitGroup");
					this.OnBusinessUnitGroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_COMPANY_GROUP")]
	public partial class INT_COMPANY_GROUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _CompanyGroupID;
		
		private string _CompanyGroup;
		
		private EntitySet<SETUP> _SETUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyGroupIDChanging(byte value);
    partial void OnCompanyGroupIDChanged();
    partial void OnCompanyGroupChanging(string value);
    partial void OnCompanyGroupChanged();
    #endregion
		
		public INT_COMPANY_GROUP()
		{
			this._SETUP = new EntitySet<SETUP>(new Action<SETUP>(this.attach_SETUP), new Action<SETUP>(this.detach_SETUP));
			OnCreated();
		}
		
		[Column(Storage="_CompanyGroupID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyGroupID
		{
			get
			{
				return this._CompanyGroupID;
			}
			set
			{
				if ((this._CompanyGroupID != value))
				{
					this.OnCompanyGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyGroupID = value;
					this.SendPropertyChanged("CompanyGroupID");
					this.OnCompanyGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyGroup", DbType="VarChar(6)")]
		public string CompanyGroup
		{
			get
			{
				return this._CompanyGroup;
			}
			set
			{
				if ((this._CompanyGroup != value))
				{
					this.OnCompanyGroupChanging(value);
					this.SendPropertyChanging();
					this._CompanyGroup = value;
					this.SendPropertyChanged("CompanyGroup");
					this.OnCompanyGroupChanged();
				}
			}
		}
		
		[Association(Name="FK_SETUP_COMPANYGROUP", Storage="_SETUP", ThisKey="CompanyGroupID", OtherKey="CompanyGroup", DeleteRule="NO ACTION")]
		public EntitySet<SETUP> SETUP
		{
			get
			{
				return this._SETUP;
			}
			set
			{
				this._SETUP.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SETUP(SETUP entity)
		{
			this.SendPropertyChanging();
			entity.INT_COMPANY_GROUP = this;
		}
		
		private void detach_SETUP(SETUP entity)
		{
			this.SendPropertyChanging();
			entity.INT_COMPANY_GROUP = null;
		}
	}
	
	[Table(Name="dbo.INT_COMPANY_TARGETS")]
	public partial class INT_COMPANY_TARGETS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _CompanyNum;
		
		private short _Year;
		
		private decimal _Target;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnTargetChanging(decimal value);
    partial void OnTargetChanged();
    #endregion
		
		public INT_COMPANY_TARGETS()
		{
			OnCreated();
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Target", DbType="Money NOT NULL")]
		public decimal Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_CTRAC_HEADER_HISTORY")]
	public partial class INT_CTRAC_HEADER_HISTORY
	{
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private System.Nullable<int> _InvFreqBefore;
		
		private System.Nullable<int> _InvFreqAfter;
		
		private System.Nullable<int> _ContractID;
		
		private string _ChangedBy;
		
		public INT_CTRAC_HEADER_HISTORY()
		{
		}
		
		[Column(Storage="_ChangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this._ChangeDate = value;
				}
			}
		}
		
		[Column(Storage="_InvFreqBefore", DbType="Int")]
		public System.Nullable<int> InvFreqBefore
		{
			get
			{
				return this._InvFreqBefore;
			}
			set
			{
				if ((this._InvFreqBefore != value))
				{
					this._InvFreqBefore = value;
				}
			}
		}
		
		[Column(Storage="_InvFreqAfter", DbType="Int")]
		public System.Nullable<int> InvFreqAfter
		{
			get
			{
				return this._InvFreqAfter;
			}
			set
			{
				if ((this._InvFreqAfter != value))
				{
					this._InvFreqAfter = value;
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this._ContractID = value;
				}
			}
		}
		
		[Column(Storage="_ChangedBy", DbType="VarChar(50)")]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this._ChangedBy = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.INT_CTRAC_HISTORY")]
	public partial class INT_CTRAC_HISTORY
	{
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private string _Comment;
		
		private System.Nullable<decimal> _ItemCredit;
		
		private System.Nullable<decimal> _ItemDebit;
		
		private System.Nullable<int> _QTY;
		
		private System.Nullable<int> _ContractItemID;
		
		private string _ChangedBy;
		
		private System.Nullable<int> _ChangeType;
		
		private System.Nullable<int> _BSGDeliveryStatus;
		
		public INT_CTRAC_HISTORY()
		{
		}
		
		[Column(Storage="_ChangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this._ChangeDate = value;
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="VarChar(1028)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[Column(Storage="_ItemCredit", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> ItemCredit
		{
			get
			{
				return this._ItemCredit;
			}
			set
			{
				if ((this._ItemCredit != value))
				{
					this._ItemCredit = value;
				}
			}
		}
		
		[Column(Storage="_ItemDebit", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> ItemDebit
		{
			get
			{
				return this._ItemDebit;
			}
			set
			{
				if ((this._ItemDebit != value))
				{
					this._ItemDebit = value;
				}
			}
		}
		
		[Column(Storage="_QTY", DbType="Int")]
		public System.Nullable<int> QTY
		{
			get
			{
				return this._QTY;
			}
			set
			{
				if ((this._QTY != value))
				{
					this._QTY = value;
				}
			}
		}
		
		[Column(Storage="_ContractItemID", DbType="Int")]
		public System.Nullable<int> ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this._ContractItemID = value;
				}
			}
		}
		
		[Column(Storage="_ChangedBy", DbType="VarChar(50)")]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this._ChangedBy = value;
				}
			}
		}
		
		[Column(Storage="_ChangeType", DbType="Int")]
		public System.Nullable<int> ChangeType
		{
			get
			{
				return this._ChangeType;
			}
			set
			{
				if ((this._ChangeType != value))
				{
					this._ChangeType = value;
				}
			}
		}
		
		[Column(Storage="_BSGDeliveryStatus", DbType="Int")]
		public System.Nullable<int> BSGDeliveryStatus
		{
			get
			{
				return this._BSGDeliveryStatus;
			}
			set
			{
				if ((this._BSGDeliveryStatus != value))
				{
					this._BSGDeliveryStatus = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.INT_CTRAC_TEXT")]
	public partial class INT_CTRAC_TEXT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TextID;
		
		private string _Narrative;
		
		private string _NarrativeType;
		
		private EntitySet<CTRAC_HEADER> _CTRAC_HEADER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTextIDChanging(int value);
    partial void OnTextIDChanged();
    partial void OnNarrativeChanging(string value);
    partial void OnNarrativeChanged();
    partial void OnNarrativeTypeChanging(string value);
    partial void OnNarrativeTypeChanged();
    #endregion
		
		public INT_CTRAC_TEXT()
		{
			this._CTRAC_HEADER = new EntitySet<CTRAC_HEADER>(new Action<CTRAC_HEADER>(this.attach_CTRAC_HEADER), new Action<CTRAC_HEADER>(this.detach_CTRAC_HEADER));
			OnCreated();
		}
		
		[Column(Storage="_TextID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TextID
		{
			get
			{
				return this._TextID;
			}
			set
			{
				if ((this._TextID != value))
				{
					this.OnTextIDChanging(value);
					this.SendPropertyChanging();
					this._TextID = value;
					this.SendPropertyChanged("TextID");
					this.OnTextIDChanged();
				}
			}
		}
		
		[Column(Storage="_Narrative", DbType="VarChar(255)")]
		public string Narrative
		{
			get
			{
				return this._Narrative;
			}
			set
			{
				if ((this._Narrative != value))
				{
					this.OnNarrativeChanging(value);
					this.SendPropertyChanging();
					this._Narrative = value;
					this.SendPropertyChanged("Narrative");
					this.OnNarrativeChanged();
				}
			}
		}
		
		[Column(Storage="_NarrativeType", DbType="VarChar(255)")]
		public string NarrativeType
		{
			get
			{
				return this._NarrativeType;
			}
			set
			{
				if ((this._NarrativeType != value))
				{
					this.OnNarrativeTypeChanging(value);
					this.SendPropertyChanging();
					this._NarrativeType = value;
					this.SendPropertyChanged("NarrativeType");
					this.OnNarrativeTypeChanged();
				}
			}
		}
		
		[Association(Name="FK_CTRAC_HEADER_INT_CTRAC_TEXT", Storage="_CTRAC_HEADER", ThisKey="TextID", OtherKey="SpecialTextId", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_HEADER> CTRAC_HEADER
		{
			get
			{
				return this._CTRAC_HEADER;
			}
			set
			{
				this._CTRAC_HEADER.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_HEADER(CTRAC_HEADER entity)
		{
			this.SendPropertyChanging();
			entity.INT_CTRAC_TEXT = this;
		}
		
		private void detach_CTRAC_HEADER(CTRAC_HEADER entity)
		{
			this.SendPropertyChanging();
			entity.INT_CTRAC_TEXT = null;
		}
	}
	
	[Table(Name="dbo.INT_DAILYAUDIT_YTD_CREDITS")]
	public partial class INT_DAILYAUDIT_YTD_CREDITS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportItemID;
		
		private string _EmployeeID;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<int> _Month;
		
		private string _CreditedInvType;
		
		private System.Nullable<decimal> _SumPeriod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportItemIDChanging(int value);
    partial void OnReportItemIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnCreditedInvTypeChanging(string value);
    partial void OnCreditedInvTypeChanged();
    partial void OnSumPeriodChanging(System.Nullable<decimal> value);
    partial void OnSumPeriodChanged();
    #endregion
		
		public INT_DAILYAUDIT_YTD_CREDITS()
		{
			OnCreated();
		}
		
		[Column(Storage="_ReportItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportItemID
		{
			get
			{
				return this._ReportItemID;
			}
			set
			{
				if ((this._ReportItemID != value))
				{
					this.OnReportItemIDChanging(value);
					this.SendPropertyChanging();
					this._ReportItemID = value;
					this.SendPropertyChanged("ReportItemID");
					this.OnReportItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_CreditedInvType", DbType="VarChar(25)")]
		public string CreditedInvType
		{
			get
			{
				return this._CreditedInvType;
			}
			set
			{
				if ((this._CreditedInvType != value))
				{
					this.OnCreditedInvTypeChanging(value);
					this.SendPropertyChanging();
					this._CreditedInvType = value;
					this.SendPropertyChanged("CreditedInvType");
					this.OnCreditedInvTypeChanged();
				}
			}
		}
		
		[Column(Storage="_SumPeriod", DbType="Money")]
		public System.Nullable<decimal> SumPeriod
		{
			get
			{
				return this._SumPeriod;
			}
			set
			{
				if ((this._SumPeriod != value))
				{
					this.OnSumPeriodChanging(value);
					this.SendPropertyChanging();
					this._SumPeriod = value;
					this.SendPropertyChanged("SumPeriod");
					this.OnSumPeriodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_DAILYAUDIT_YTD_INVFROMOTHERPERIODS")]
	public partial class INT_DAILYAUDIT_YTD_INVFROMOTHERPERIODS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportItemID;
		
		private string _EmployeeID;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<decimal> _SumPeriod;
		
		private System.Nullable<decimal> _SumFuture;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportItemIDChanging(int value);
    partial void OnReportItemIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnSumPeriodChanging(System.Nullable<decimal> value);
    partial void OnSumPeriodChanged();
    partial void OnSumFutureChanging(System.Nullable<decimal> value);
    partial void OnSumFutureChanged();
    #endregion
		
		public INT_DAILYAUDIT_YTD_INVFROMOTHERPERIODS()
		{
			OnCreated();
		}
		
		[Column(Storage="_ReportItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportItemID
		{
			get
			{
				return this._ReportItemID;
			}
			set
			{
				if ((this._ReportItemID != value))
				{
					this.OnReportItemIDChanging(value);
					this.SendPropertyChanging();
					this._ReportItemID = value;
					this.SendPropertyChanged("ReportItemID");
					this.OnReportItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_SumPeriod", DbType="Money")]
		public System.Nullable<decimal> SumPeriod
		{
			get
			{
				return this._SumPeriod;
			}
			set
			{
				if ((this._SumPeriod != value))
				{
					this.OnSumPeriodChanging(value);
					this.SendPropertyChanging();
					this._SumPeriod = value;
					this.SendPropertyChanged("SumPeriod");
					this.OnSumPeriodChanged();
				}
			}
		}
		
		[Column(Storage="_SumFuture", DbType="Money")]
		public System.Nullable<decimal> SumFuture
		{
			get
			{
				return this._SumFuture;
			}
			set
			{
				if ((this._SumFuture != value))
				{
					this.OnSumFutureChanging(value);
					this.SendPropertyChanging();
					this._SumFuture = value;
					this.SendPropertyChanged("SumFuture");
					this.OnSumFutureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_DAILYAUDIT_YTD_INVOICES")]
	public partial class INT_DAILYAUDIT_YTD_INVOICES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportItemID;
		
		private string _EmployeeID;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<decimal> _SumPast;
		
		private System.Nullable<decimal> _SumPeriod;
		
		private System.Nullable<decimal> _SumFuture;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportItemIDChanging(int value);
    partial void OnReportItemIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnSumPastChanging(System.Nullable<decimal> value);
    partial void OnSumPastChanged();
    partial void OnSumPeriodChanging(System.Nullable<decimal> value);
    partial void OnSumPeriodChanged();
    partial void OnSumFutureChanging(System.Nullable<decimal> value);
    partial void OnSumFutureChanged();
    #endregion
		
		public INT_DAILYAUDIT_YTD_INVOICES()
		{
			OnCreated();
		}
		
		[Column(Storage="_ReportItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportItemID
		{
			get
			{
				return this._ReportItemID;
			}
			set
			{
				if ((this._ReportItemID != value))
				{
					this.OnReportItemIDChanging(value);
					this.SendPropertyChanging();
					this._ReportItemID = value;
					this.SendPropertyChanged("ReportItemID");
					this.OnReportItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_SumPast", DbType="Money")]
		public System.Nullable<decimal> SumPast
		{
			get
			{
				return this._SumPast;
			}
			set
			{
				if ((this._SumPast != value))
				{
					this.OnSumPastChanging(value);
					this.SendPropertyChanging();
					this._SumPast = value;
					this.SendPropertyChanged("SumPast");
					this.OnSumPastChanged();
				}
			}
		}
		
		[Column(Storage="_SumPeriod", DbType="Money")]
		public System.Nullable<decimal> SumPeriod
		{
			get
			{
				return this._SumPeriod;
			}
			set
			{
				if ((this._SumPeriod != value))
				{
					this.OnSumPeriodChanging(value);
					this.SendPropertyChanging();
					this._SumPeriod = value;
					this.SendPropertyChanged("SumPeriod");
					this.OnSumPeriodChanged();
				}
			}
		}
		
		[Column(Storage="_SumFuture", DbType="Money")]
		public System.Nullable<decimal> SumFuture
		{
			get
			{
				return this._SumFuture;
			}
			set
			{
				if ((this._SumFuture != value))
				{
					this.OnSumFutureChanging(value);
					this.SendPropertyChanging();
					this._SumFuture = value;
					this.SendPropertyChanged("SumFuture");
					this.OnSumFutureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_ENGINEERS_COMMISSION_REPORT")]
	public partial class INT_ENGINEERS_COMMISSION_REPORT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportItemId;
		
		private System.Nullable<int> _SnapShotId;
		
		private string _State;
		
		private string _Engineer;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<decimal> _StateRevenue;
		
		private System.Nullable<int> _EngineerCount;
		
		private System.Nullable<decimal> _CommissionPercent;
		
		private System.Nullable<decimal> _Commission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportItemIdChanging(int value);
    partial void OnReportItemIdChanged();
    partial void OnSnapShotIdChanging(System.Nullable<int> value);
    partial void OnSnapShotIdChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnEngineerChanging(string value);
    partial void OnEngineerChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnStateRevenueChanging(System.Nullable<decimal> value);
    partial void OnStateRevenueChanged();
    partial void OnEngineerCountChanging(System.Nullable<int> value);
    partial void OnEngineerCountChanged();
    partial void OnCommissionPercentChanging(System.Nullable<decimal> value);
    partial void OnCommissionPercentChanged();
    partial void OnCommissionChanging(System.Nullable<decimal> value);
    partial void OnCommissionChanged();
    #endregion
		
		public INT_ENGINEERS_COMMISSION_REPORT()
		{
			OnCreated();
		}
		
		[Column(Storage="_ReportItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportItemId
		{
			get
			{
				return this._ReportItemId;
			}
			set
			{
				if ((this._ReportItemId != value))
				{
					this.OnReportItemIdChanging(value);
					this.SendPropertyChanging();
					this._ReportItemId = value;
					this.SendPropertyChanged("ReportItemId");
					this.OnReportItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_SnapShotId", DbType="Int")]
		public System.Nullable<int> SnapShotId
		{
			get
			{
				return this._SnapShotId;
			}
			set
			{
				if ((this._SnapShotId != value))
				{
					this.OnSnapShotIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotId = value;
					this.SendPropertyChanged("SnapShotId");
					this.OnSnapShotIdChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_Engineer", DbType="VarChar(55)")]
		public string Engineer
		{
			get
			{
				return this._Engineer;
			}
			set
			{
				if ((this._Engineer != value))
				{
					this.OnEngineerChanging(value);
					this.SendPropertyChanging();
					this._Engineer = value;
					this.SendPropertyChanged("Engineer");
					this.OnEngineerChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_StateRevenue", DbType="Money")]
		public System.Nullable<decimal> StateRevenue
		{
			get
			{
				return this._StateRevenue;
			}
			set
			{
				if ((this._StateRevenue != value))
				{
					this.OnStateRevenueChanging(value);
					this.SendPropertyChanging();
					this._StateRevenue = value;
					this.SendPropertyChanged("StateRevenue");
					this.OnStateRevenueChanged();
				}
			}
		}
		
		[Column(Storage="_EngineerCount", DbType="Int")]
		public System.Nullable<int> EngineerCount
		{
			get
			{
				return this._EngineerCount;
			}
			set
			{
				if ((this._EngineerCount != value))
				{
					this.OnEngineerCountChanging(value);
					this.SendPropertyChanging();
					this._EngineerCount = value;
					this.SendPropertyChanged("EngineerCount");
					this.OnEngineerCountChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionPercent", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> CommissionPercent
		{
			get
			{
				return this._CommissionPercent;
			}
			set
			{
				if ((this._CommissionPercent != value))
				{
					this.OnCommissionPercentChanging(value);
					this.SendPropertyChanging();
					this._CommissionPercent = value;
					this.SendPropertyChanged("CommissionPercent");
					this.OnCommissionPercentChanged();
				}
			}
		}
		
		[Column(Storage="_Commission", DbType="Money")]
		public System.Nullable<decimal> Commission
		{
			get
			{
				return this._Commission;
			}
			set
			{
				if ((this._Commission != value))
				{
					this.OnCommissionChanging(value);
					this.SendPropertyChanging();
					this._Commission = value;
					this.SendPropertyChanged("Commission");
					this.OnCommissionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_EXPECTED_INVOICES")]
	public partial class INT_EXPECTED_INVOICES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _BatchID;
		
		private int _AccountID;
		
		private int _InvFreq;
		
		private System.DateTime _NextInvDate;
		
		private decimal _InvNet;
		
		private decimal _InvTax;
		
		private int _SeparateBatchPrint;
		
		private bool _Cancelled;
		
		private System.Nullable<int> _ContractID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnBatchIDChanging(int value);
    partial void OnBatchIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnInvFreqChanging(int value);
    partial void OnInvFreqChanged();
    partial void OnNextInvDateChanging(System.DateTime value);
    partial void OnNextInvDateChanged();
    partial void OnInvNetChanging(decimal value);
    partial void OnInvNetChanged();
    partial void OnInvTaxChanging(decimal value);
    partial void OnInvTaxChanged();
    partial void OnSeparateBatchPrintChanging(int value);
    partial void OnSeparateBatchPrintChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnContractIDChanging(System.Nullable<int> value);
    partial void OnContractIDChanged();
    #endregion
		
		public INT_EXPECTED_INVOICES()
		{
			OnCreated();
		}
		
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_BatchID", DbType="Int NOT NULL")]
		public int BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int NOT NULL")]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_InvFreq", DbType="Int NOT NULL")]
		public int InvFreq
		{
			get
			{
				return this._InvFreq;
			}
			set
			{
				if ((this._InvFreq != value))
				{
					this.OnInvFreqChanging(value);
					this.SendPropertyChanging();
					this._InvFreq = value;
					this.SendPropertyChanged("InvFreq");
					this.OnInvFreqChanged();
				}
			}
		}
		
		[Column(Storage="_NextInvDate", DbType="DateTime NOT NULL")]
		public System.DateTime NextInvDate
		{
			get
			{
				return this._NextInvDate;
			}
			set
			{
				if ((this._NextInvDate != value))
				{
					this.OnNextInvDateChanging(value);
					this.SendPropertyChanging();
					this._NextInvDate = value;
					this.SendPropertyChanged("NextInvDate");
					this.OnNextInvDateChanged();
				}
			}
		}
		
		[Column(Storage="_InvNet", DbType="Money NOT NULL")]
		public decimal InvNet
		{
			get
			{
				return this._InvNet;
			}
			set
			{
				if ((this._InvNet != value))
				{
					this.OnInvNetChanging(value);
					this.SendPropertyChanging();
					this._InvNet = value;
					this.SendPropertyChanged("InvNet");
					this.OnInvNetChanged();
				}
			}
		}
		
		[Column(Storage="_InvTax", DbType="Money NOT NULL")]
		public decimal InvTax
		{
			get
			{
				return this._InvTax;
			}
			set
			{
				if ((this._InvTax != value))
				{
					this.OnInvTaxChanging(value);
					this.SendPropertyChanging();
					this._InvTax = value;
					this.SendPropertyChanged("InvTax");
					this.OnInvTaxChanged();
				}
			}
		}
		
		[Column(Storage="_SeparateBatchPrint", DbType="Int NOT NULL")]
		public int SeparateBatchPrint
		{
			get
			{
				return this._SeparateBatchPrint;
			}
			set
			{
				if ((this._SeparateBatchPrint != value))
				{
					this.OnSeparateBatchPrintChanging(value);
					this.SendPropertyChanging();
					this._SeparateBatchPrint = value;
					this.SendPropertyChanged("SeparateBatchPrint");
					this.OnSeparateBatchPrintChanged();
				}
			}
		}
		
		[Column(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_INV_BATCH_CONTROL")]
	public partial class INT_INV_BATCH_CONTROL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BatchID;
		
		private int _ContractID;
		
		private System.Nullable<int> _CustAccountid;
		
		private System.Nullable<int> _LocAccountid;
		
		private int _ContractItemID;
		
		private System.Nullable<System.DateTime> _InvFrom;
		
		private System.Nullable<System.DateTime> _InvTo;
		
		private System.Nullable<decimal> _NetPrice;
		
		private System.Nullable<decimal> _NetCost;
		
		private System.Nullable<bool> _IsVariation;
		
		private string _VariationText;
		
		private System.Nullable<int> _InvAccountID;
		
		private int _BatchItemID;
		
		private string _AM;
		
		private EntityRef<CTRAC_HEADER> _CTRAC_HEADER;
		
		private EntityRef<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
		private EntityRef<DEBTORS> _LocAccount;
		
		private EntityRef<INT_INV_BATCH_HEADER> _INT_INV_BATCH_HEADER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBatchIDChanging(int value);
    partial void OnBatchIDChanged();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnCustAccountidChanging(System.Nullable<int> value);
    partial void OnCustAccountidChanged();
    partial void OnLocAccountidChanging(System.Nullable<int> value);
    partial void OnLocAccountidChanged();
    partial void OnContractItemIDChanging(int value);
    partial void OnContractItemIDChanged();
    partial void OnInvFromChanging(System.Nullable<System.DateTime> value);
    partial void OnInvFromChanged();
    partial void OnInvToChanging(System.Nullable<System.DateTime> value);
    partial void OnInvToChanged();
    partial void OnNetPriceChanging(System.Nullable<decimal> value);
    partial void OnNetPriceChanged();
    partial void OnNetCostChanging(System.Nullable<decimal> value);
    partial void OnNetCostChanged();
    partial void OnIsVariationChanging(System.Nullable<bool> value);
    partial void OnIsVariationChanged();
    partial void OnVariationTextChanging(string value);
    partial void OnVariationTextChanged();
    partial void OnInvAccountIDChanging(System.Nullable<int> value);
    partial void OnInvAccountIDChanged();
    partial void OnBatchItemIDChanging(int value);
    partial void OnBatchItemIDChanged();
    partial void OnAMChanging(string value);
    partial void OnAMChanged();
    #endregion
		
		public INT_INV_BATCH_CONTROL()
		{
			this._CTRAC_HEADER = default(EntityRef<CTRAC_HEADER>);
			this._CTRAC_ITEM = default(EntityRef<CTRAC_ITEM>);
			this._DEBTORS = default(EntityRef<DEBTORS>);
			this._LocAccount = default(EntityRef<DEBTORS>);
			this._INT_INV_BATCH_HEADER = default(EntityRef<INT_INV_BATCH_HEADER>);
			OnCreated();
		}
		
		[Column(Storage="_BatchID", DbType="Int NOT NULL")]
		public int BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					if (this._INT_INV_BATCH_HEADER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int NOT NULL")]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._CTRAC_HEADER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_CustAccountid", DbType="Int")]
		public System.Nullable<int> CustAccountid
		{
			get
			{
				return this._CustAccountid;
			}
			set
			{
				if ((this._CustAccountid != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustAccountidChanging(value);
					this.SendPropertyChanging();
					this._CustAccountid = value;
					this.SendPropertyChanged("CustAccountid");
					this.OnCustAccountidChanged();
				}
			}
		}
		
		[Column(Storage="_LocAccountid", DbType="Int")]
		public System.Nullable<int> LocAccountid
		{
			get
			{
				return this._LocAccountid;
			}
			set
			{
				if ((this._LocAccountid != value))
				{
					if (this._LocAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocAccountidChanging(value);
					this.SendPropertyChanging();
					this._LocAccountid = value;
					this.SendPropertyChanged("LocAccountid");
					this.OnLocAccountidChanged();
				}
			}
		}
		
		[Column(Storage="_ContractItemID", DbType="Int NOT NULL")]
		public int ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					if (this._CTRAC_ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContractItemID = value;
					this.SendPropertyChanged("ContractItemID");
					this.OnContractItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_InvFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvFrom
		{
			get
			{
				return this._InvFrom;
			}
			set
			{
				if ((this._InvFrom != value))
				{
					this.OnInvFromChanging(value);
					this.SendPropertyChanging();
					this._InvFrom = value;
					this.SendPropertyChanged("InvFrom");
					this.OnInvFromChanged();
				}
			}
		}
		
		[Column(Storage="_InvTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvTo
		{
			get
			{
				return this._InvTo;
			}
			set
			{
				if ((this._InvTo != value))
				{
					this.OnInvToChanging(value);
					this.SendPropertyChanging();
					this._InvTo = value;
					this.SendPropertyChanged("InvTo");
					this.OnInvToChanged();
				}
			}
		}
		
		[Column(Storage="_NetPrice", DbType="Money")]
		public System.Nullable<decimal> NetPrice
		{
			get
			{
				return this._NetPrice;
			}
			set
			{
				if ((this._NetPrice != value))
				{
					this.OnNetPriceChanging(value);
					this.SendPropertyChanging();
					this._NetPrice = value;
					this.SendPropertyChanged("NetPrice");
					this.OnNetPriceChanged();
				}
			}
		}
		
		[Column(Storage="_NetCost", DbType="Money")]
		public System.Nullable<decimal> NetCost
		{
			get
			{
				return this._NetCost;
			}
			set
			{
				if ((this._NetCost != value))
				{
					this.OnNetCostChanging(value);
					this.SendPropertyChanging();
					this._NetCost = value;
					this.SendPropertyChanged("NetCost");
					this.OnNetCostChanged();
				}
			}
		}
		
		[Column(Storage="_IsVariation", DbType="Bit")]
		public System.Nullable<bool> IsVariation
		{
			get
			{
				return this._IsVariation;
			}
			set
			{
				if ((this._IsVariation != value))
				{
					this.OnIsVariationChanging(value);
					this.SendPropertyChanging();
					this._IsVariation = value;
					this.SendPropertyChanged("IsVariation");
					this.OnIsVariationChanged();
				}
			}
		}
		
		[Column(Storage="_VariationText", DbType="VarChar(256)")]
		public string VariationText
		{
			get
			{
				return this._VariationText;
			}
			set
			{
				if ((this._VariationText != value))
				{
					this.OnVariationTextChanging(value);
					this.SendPropertyChanging();
					this._VariationText = value;
					this.SendPropertyChanged("VariationText");
					this.OnVariationTextChanged();
				}
			}
		}
		
		[Column(Storage="_InvAccountID", DbType="Int")]
		public System.Nullable<int> InvAccountID
		{
			get
			{
				return this._InvAccountID;
			}
			set
			{
				if ((this._InvAccountID != value))
				{
					this.OnInvAccountIDChanging(value);
					this.SendPropertyChanging();
					this._InvAccountID = value;
					this.SendPropertyChanged("InvAccountID");
					this.OnInvAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_BatchItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BatchItemID
		{
			get
			{
				return this._BatchItemID;
			}
			set
			{
				if ((this._BatchItemID != value))
				{
					this.OnBatchItemIDChanging(value);
					this.SendPropertyChanging();
					this._BatchItemID = value;
					this.SendPropertyChanged("BatchItemID");
					this.OnBatchItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_AM", DbType="VarChar(50)")]
		public string AM
		{
			get
			{
				return this._AM;
			}
			set
			{
				if ((this._AM != value))
				{
					this.OnAMChanging(value);
					this.SendPropertyChanging();
					this._AM = value;
					this.SendPropertyChanged("AM");
					this.OnAMChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_CONTROL_CONTRACT", Storage="_CTRAC_HEADER", ThisKey="ContractID", OtherKey="ContractId", IsForeignKey=true)]
		public CTRAC_HEADER CTRAC_HEADER
		{
			get
			{
				return this._CTRAC_HEADER.Entity;
			}
			set
			{
				CTRAC_HEADER previousValue = this._CTRAC_HEADER.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_HEADER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_HEADER.Entity = null;
						previousValue.INT_INV_BATCH_CONTROL.Remove(this);
					}
					this._CTRAC_HEADER.Entity = value;
					if ((value != null))
					{
						value.INT_INV_BATCH_CONTROL.Add(this);
						this._ContractID = value.ContractId;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("CTRAC_HEADER");
				}
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_CONTROL_CTRAC_ITEM", Storage="_CTRAC_ITEM", ThisKey="ContractItemID", OtherKey="ContractItemID", IsForeignKey=true)]
		public CTRAC_ITEM CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM.Entity;
			}
			set
			{
				CTRAC_ITEM previousValue = this._CTRAC_ITEM.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_ITEM.Entity = null;
						previousValue.INT_INV_BATCH_CONTROL.Remove(this);
					}
					this._CTRAC_ITEM.Entity = value;
					if ((value != null))
					{
						value.INT_INV_BATCH_CONTROL.Add(this);
						this._ContractItemID = value.ContractItemID;
					}
					else
					{
						this._ContractItemID = default(int);
					}
					this.SendPropertyChanged("CTRAC_ITEM");
				}
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_CONTROL_DEBTOR", Storage="_DEBTORS", ThisKey="CustAccountid", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.INT_INV_BATCH_CONTROL.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.INT_INV_BATCH_CONTROL.Add(this);
						this._CustAccountid = value.AccountID;
					}
					else
					{
						this._CustAccountid = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_CONTROL_DEBTORS1", Storage="_LocAccount", ThisKey="LocAccountid", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS LocAccount
		{
			get
			{
				return this._LocAccount.Entity;
			}
			set
			{
				DEBTORS previousValue = this._LocAccount.Entity;
				if (((previousValue != value) 
							|| (this._LocAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LocAccount.Entity = null;
						previousValue.Account.Remove(this);
					}
					this._LocAccount.Entity = value;
					if ((value != null))
					{
						value.Account.Add(this);
						this._LocAccountid = value.AccountID;
					}
					else
					{
						this._LocAccountid = default(Nullable<int>);
					}
					this.SendPropertyChanged("LocAccount");
				}
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_CONTROL_INT_INV_BATCH_HEADER", Storage="_INT_INV_BATCH_HEADER", ThisKey="BatchID", OtherKey="BatchID", IsForeignKey=true)]
		public INT_INV_BATCH_HEADER INT_INV_BATCH_HEADER
		{
			get
			{
				return this._INT_INV_BATCH_HEADER.Entity;
			}
			set
			{
				INT_INV_BATCH_HEADER previousValue = this._INT_INV_BATCH_HEADER.Entity;
				if (((previousValue != value) 
							|| (this._INT_INV_BATCH_HEADER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_INV_BATCH_HEADER.Entity = null;
						previousValue.INT_INV_BATCH_CONTROL.Remove(this);
					}
					this._INT_INV_BATCH_HEADER.Entity = value;
					if ((value != null))
					{
						value.INT_INV_BATCH_CONTROL.Add(this);
						this._BatchID = value.BatchID;
					}
					else
					{
						this._BatchID = default(int);
					}
					this.SendPropertyChanged("INT_INV_BATCH_HEADER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_INV_BATCH_CONTROL_DRAFT")]
	public partial class INT_INV_BATCH_CONTROL_DRAFT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BatchID;
		
		private int _ContractID;
		
		private System.Nullable<int> _CustAccountid;
		
		private System.Nullable<int> _LocAccountid;
		
		private int _ContractItemID;
		
		private System.Nullable<System.DateTime> _InvFrom;
		
		private System.Nullable<System.DateTime> _InvTo;
		
		private System.Nullable<decimal> _NetPrice;
		
		private System.Nullable<decimal> _NetCost;
		
		private System.Nullable<bool> _IsVariation;
		
		private string _VariationText;
		
		private System.Nullable<int> _InvAccountID;
		
		private int _BatchItemID;
		
		private string _AM;
		
		private EntityRef<INT_INV_BATCH_HEADER_DRAFT> _INT_INV_BATCH_HEADER_DRAFT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBatchIDChanging(int value);
    partial void OnBatchIDChanged();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnCustAccountidChanging(System.Nullable<int> value);
    partial void OnCustAccountidChanged();
    partial void OnLocAccountidChanging(System.Nullable<int> value);
    partial void OnLocAccountidChanged();
    partial void OnContractItemIDChanging(int value);
    partial void OnContractItemIDChanged();
    partial void OnInvFromChanging(System.Nullable<System.DateTime> value);
    partial void OnInvFromChanged();
    partial void OnInvToChanging(System.Nullable<System.DateTime> value);
    partial void OnInvToChanged();
    partial void OnNetPriceChanging(System.Nullable<decimal> value);
    partial void OnNetPriceChanged();
    partial void OnNetCostChanging(System.Nullable<decimal> value);
    partial void OnNetCostChanged();
    partial void OnIsVariationChanging(System.Nullable<bool> value);
    partial void OnIsVariationChanged();
    partial void OnVariationTextChanging(string value);
    partial void OnVariationTextChanged();
    partial void OnInvAccountIDChanging(System.Nullable<int> value);
    partial void OnInvAccountIDChanged();
    partial void OnBatchItemIDChanging(int value);
    partial void OnBatchItemIDChanged();
    partial void OnAMChanging(string value);
    partial void OnAMChanged();
    #endregion
		
		public INT_INV_BATCH_CONTROL_DRAFT()
		{
			this._INT_INV_BATCH_HEADER_DRAFT = default(EntityRef<INT_INV_BATCH_HEADER_DRAFT>);
			OnCreated();
		}
		
		[Column(Storage="_BatchID", DbType="Int NOT NULL")]
		public int BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					if (this._INT_INV_BATCH_HEADER_DRAFT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int NOT NULL")]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_CustAccountid", DbType="Int")]
		public System.Nullable<int> CustAccountid
		{
			get
			{
				return this._CustAccountid;
			}
			set
			{
				if ((this._CustAccountid != value))
				{
					this.OnCustAccountidChanging(value);
					this.SendPropertyChanging();
					this._CustAccountid = value;
					this.SendPropertyChanged("CustAccountid");
					this.OnCustAccountidChanged();
				}
			}
		}
		
		[Column(Storage="_LocAccountid", DbType="Int")]
		public System.Nullable<int> LocAccountid
		{
			get
			{
				return this._LocAccountid;
			}
			set
			{
				if ((this._LocAccountid != value))
				{
					this.OnLocAccountidChanging(value);
					this.SendPropertyChanging();
					this._LocAccountid = value;
					this.SendPropertyChanged("LocAccountid");
					this.OnLocAccountidChanged();
				}
			}
		}
		
		[Column(Storage="_ContractItemID", DbType="Int NOT NULL")]
		public int ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this.OnContractItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContractItemID = value;
					this.SendPropertyChanged("ContractItemID");
					this.OnContractItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_InvFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvFrom
		{
			get
			{
				return this._InvFrom;
			}
			set
			{
				if ((this._InvFrom != value))
				{
					this.OnInvFromChanging(value);
					this.SendPropertyChanging();
					this._InvFrom = value;
					this.SendPropertyChanged("InvFrom");
					this.OnInvFromChanged();
				}
			}
		}
		
		[Column(Storage="_InvTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvTo
		{
			get
			{
				return this._InvTo;
			}
			set
			{
				if ((this._InvTo != value))
				{
					this.OnInvToChanging(value);
					this.SendPropertyChanging();
					this._InvTo = value;
					this.SendPropertyChanged("InvTo");
					this.OnInvToChanged();
				}
			}
		}
		
		[Column(Storage="_NetPrice", DbType="Money")]
		public System.Nullable<decimal> NetPrice
		{
			get
			{
				return this._NetPrice;
			}
			set
			{
				if ((this._NetPrice != value))
				{
					this.OnNetPriceChanging(value);
					this.SendPropertyChanging();
					this._NetPrice = value;
					this.SendPropertyChanged("NetPrice");
					this.OnNetPriceChanged();
				}
			}
		}
		
		[Column(Storage="_NetCost", DbType="Money")]
		public System.Nullable<decimal> NetCost
		{
			get
			{
				return this._NetCost;
			}
			set
			{
				if ((this._NetCost != value))
				{
					this.OnNetCostChanging(value);
					this.SendPropertyChanging();
					this._NetCost = value;
					this.SendPropertyChanged("NetCost");
					this.OnNetCostChanged();
				}
			}
		}
		
		[Column(Storage="_IsVariation", DbType="Bit")]
		public System.Nullable<bool> IsVariation
		{
			get
			{
				return this._IsVariation;
			}
			set
			{
				if ((this._IsVariation != value))
				{
					this.OnIsVariationChanging(value);
					this.SendPropertyChanging();
					this._IsVariation = value;
					this.SendPropertyChanged("IsVariation");
					this.OnIsVariationChanged();
				}
			}
		}
		
		[Column(Storage="_VariationText", DbType="VarChar(256)")]
		public string VariationText
		{
			get
			{
				return this._VariationText;
			}
			set
			{
				if ((this._VariationText != value))
				{
					this.OnVariationTextChanging(value);
					this.SendPropertyChanging();
					this._VariationText = value;
					this.SendPropertyChanged("VariationText");
					this.OnVariationTextChanged();
				}
			}
		}
		
		[Column(Storage="_InvAccountID", DbType="Int")]
		public System.Nullable<int> InvAccountID
		{
			get
			{
				return this._InvAccountID;
			}
			set
			{
				if ((this._InvAccountID != value))
				{
					this.OnInvAccountIDChanging(value);
					this.SendPropertyChanging();
					this._InvAccountID = value;
					this.SendPropertyChanged("InvAccountID");
					this.OnInvAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_BatchItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BatchItemID
		{
			get
			{
				return this._BatchItemID;
			}
			set
			{
				if ((this._BatchItemID != value))
				{
					this.OnBatchItemIDChanging(value);
					this.SendPropertyChanging();
					this._BatchItemID = value;
					this.SendPropertyChanged("BatchItemID");
					this.OnBatchItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_AM", DbType="VarChar(50)")]
		public string AM
		{
			get
			{
				return this._AM;
			}
			set
			{
				if ((this._AM != value))
				{
					this.OnAMChanging(value);
					this.SendPropertyChanging();
					this._AM = value;
					this.SendPropertyChanged("AM");
					this.OnAMChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_CONTROL_DRAFT_INT_INV_BATCH_HEADER_DRAFT", Storage="_INT_INV_BATCH_HEADER_DRAFT", ThisKey="BatchID", OtherKey="BatchID", IsForeignKey=true)]
		public INT_INV_BATCH_HEADER_DRAFT INT_INV_BATCH_HEADER_DRAFT
		{
			get
			{
				return this._INT_INV_BATCH_HEADER_DRAFT.Entity;
			}
			set
			{
				INT_INV_BATCH_HEADER_DRAFT previousValue = this._INT_INV_BATCH_HEADER_DRAFT.Entity;
				if (((previousValue != value) 
							|| (this._INT_INV_BATCH_HEADER_DRAFT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_INV_BATCH_HEADER_DRAFT.Entity = null;
						previousValue.INT_INV_BATCH_CONTROL_DRAFT.Remove(this);
					}
					this._INT_INV_BATCH_HEADER_DRAFT.Entity = value;
					if ((value != null))
					{
						value.INT_INV_BATCH_CONTROL_DRAFT.Add(this);
						this._BatchID = value.BatchID;
					}
					else
					{
						this._BatchID = default(int);
					}
					this.SendPropertyChanged("INT_INV_BATCH_HEADER_DRAFT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_INV_BATCH_HEADER")]
	public partial class INT_INV_BATCH_HEADER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BatchID;
		
		private byte _CompanyNum;
		
		private System.DateTime _InvBatchDate;
		
		private string _BatchType;
		
		private System.Nullable<System.DateTime> _RunDate;
		
		private string _ContractLocation;
		
		private EntitySet<INT_INV_BATCH_CONTROL> _INT_INV_BATCH_CONTROL;
		
		private EntityRef<SETUP> _SETUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBatchIDChanging(int value);
    partial void OnBatchIDChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnInvBatchDateChanging(System.DateTime value);
    partial void OnInvBatchDateChanged();
    partial void OnBatchTypeChanging(string value);
    partial void OnBatchTypeChanged();
    partial void OnRunDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRunDateChanged();
    partial void OnContractLocationChanging(string value);
    partial void OnContractLocationChanged();
    #endregion
		
		public INT_INV_BATCH_HEADER()
		{
			this._INT_INV_BATCH_CONTROL = new EntitySet<INT_INV_BATCH_CONTROL>(new Action<INT_INV_BATCH_CONTROL>(this.attach_INT_INV_BATCH_CONTROL), new Action<INT_INV_BATCH_CONTROL>(this.detach_INT_INV_BATCH_CONTROL));
			this._SETUP = default(EntityRef<SETUP>);
			OnCreated();
		}
		
		[Column(Storage="_BatchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					if (this._SETUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_InvBatchDate", DbType="DateTime NOT NULL")]
		public System.DateTime InvBatchDate
		{
			get
			{
				return this._InvBatchDate;
			}
			set
			{
				if ((this._InvBatchDate != value))
				{
					this.OnInvBatchDateChanging(value);
					this.SendPropertyChanging();
					this._InvBatchDate = value;
					this.SendPropertyChanged("InvBatchDate");
					this.OnInvBatchDateChanged();
				}
			}
		}
		
		[Column(Storage="_BatchType", DbType="Char(20)")]
		public string BatchType
		{
			get
			{
				return this._BatchType;
			}
			set
			{
				if ((this._BatchType != value))
				{
					this.OnBatchTypeChanging(value);
					this.SendPropertyChanging();
					this._BatchType = value;
					this.SendPropertyChanged("BatchType");
					this.OnBatchTypeChanged();
				}
			}
		}
		
		[Column(Storage="_RunDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this.OnRunDateChanging(value);
					this.SendPropertyChanging();
					this._RunDate = value;
					this.SendPropertyChanged("RunDate");
					this.OnRunDateChanged();
				}
			}
		}
		
		[Column(Storage="_ContractLocation", DbType="VarChar(5)")]
		public string ContractLocation
		{
			get
			{
				return this._ContractLocation;
			}
			set
			{
				if ((this._ContractLocation != value))
				{
					this.OnContractLocationChanging(value);
					this.SendPropertyChanging();
					this._ContractLocation = value;
					this.SendPropertyChanged("ContractLocation");
					this.OnContractLocationChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_CONTROL_INT_INV_BATCH_HEADER", Storage="_INT_INV_BATCH_CONTROL", ThisKey="BatchID", OtherKey="BatchID", DeleteRule="NO ACTION")]
		public EntitySet<INT_INV_BATCH_CONTROL> INT_INV_BATCH_CONTROL
		{
			get
			{
				return this._INT_INV_BATCH_CONTROL;
			}
			set
			{
				this._INT_INV_BATCH_CONTROL.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_HEADER_SETUP", Storage="_SETUP", ThisKey="CompanyNum", OtherKey="CompanyNum", IsForeignKey=true)]
		public SETUP SETUP
		{
			get
			{
				return this._SETUP.Entity;
			}
			set
			{
				SETUP previousValue = this._SETUP.Entity;
				if (((previousValue != value) 
							|| (this._SETUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SETUP.Entity = null;
						previousValue.INT_INV_BATCH_HEADER.Remove(this);
					}
					this._SETUP.Entity = value;
					if ((value != null))
					{
						value.INT_INV_BATCH_HEADER.Add(this);
						this._CompanyNum = value.CompanyNum;
					}
					else
					{
						this._CompanyNum = default(byte);
					}
					this.SendPropertyChanged("SETUP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INT_INV_BATCH_CONTROL(INT_INV_BATCH_CONTROL entity)
		{
			this.SendPropertyChanging();
			entity.INT_INV_BATCH_HEADER = this;
		}
		
		private void detach_INT_INV_BATCH_CONTROL(INT_INV_BATCH_CONTROL entity)
		{
			this.SendPropertyChanging();
			entity.INT_INV_BATCH_HEADER = null;
		}
	}
	
	[Table(Name="dbo.INT_INV_BATCH_HEADER_DRAFT")]
	public partial class INT_INV_BATCH_HEADER_DRAFT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BatchID;
		
		private byte _CompanyNum;
		
		private System.DateTime _InvBatchDate;
		
		private string _BatchType;
		
		private System.Nullable<System.DateTime> _RunDate;
		
		private string _ContractLocation;
		
		private EntitySet<INT_INV_BATCH_CONTROL_DRAFT> _INT_INV_BATCH_CONTROL_DRAFT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBatchIDChanging(int value);
    partial void OnBatchIDChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnInvBatchDateChanging(System.DateTime value);
    partial void OnInvBatchDateChanged();
    partial void OnBatchTypeChanging(string value);
    partial void OnBatchTypeChanged();
    partial void OnRunDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRunDateChanged();
    partial void OnContractLocationChanging(string value);
    partial void OnContractLocationChanged();
    #endregion
		
		public INT_INV_BATCH_HEADER_DRAFT()
		{
			this._INT_INV_BATCH_CONTROL_DRAFT = new EntitySet<INT_INV_BATCH_CONTROL_DRAFT>(new Action<INT_INV_BATCH_CONTROL_DRAFT>(this.attach_INT_INV_BATCH_CONTROL_DRAFT), new Action<INT_INV_BATCH_CONTROL_DRAFT>(this.detach_INT_INV_BATCH_CONTROL_DRAFT));
			OnCreated();
		}
		
		[Column(Storage="_BatchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_InvBatchDate", DbType="DateTime NOT NULL")]
		public System.DateTime InvBatchDate
		{
			get
			{
				return this._InvBatchDate;
			}
			set
			{
				if ((this._InvBatchDate != value))
				{
					this.OnInvBatchDateChanging(value);
					this.SendPropertyChanging();
					this._InvBatchDate = value;
					this.SendPropertyChanged("InvBatchDate");
					this.OnInvBatchDateChanged();
				}
			}
		}
		
		[Column(Storage="_BatchType", DbType="Char(20)")]
		public string BatchType
		{
			get
			{
				return this._BatchType;
			}
			set
			{
				if ((this._BatchType != value))
				{
					this.OnBatchTypeChanging(value);
					this.SendPropertyChanging();
					this._BatchType = value;
					this.SendPropertyChanged("BatchType");
					this.OnBatchTypeChanged();
				}
			}
		}
		
		[Column(Storage="_RunDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this.OnRunDateChanging(value);
					this.SendPropertyChanging();
					this._RunDate = value;
					this.SendPropertyChanged("RunDate");
					this.OnRunDateChanged();
				}
			}
		}
		
		[Column(Storage="_ContractLocation", DbType="VarChar(5)")]
		public string ContractLocation
		{
			get
			{
				return this._ContractLocation;
			}
			set
			{
				if ((this._ContractLocation != value))
				{
					this.OnContractLocationChanging(value);
					this.SendPropertyChanging();
					this._ContractLocation = value;
					this.SendPropertyChanged("ContractLocation");
					this.OnContractLocationChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_CONTROL_DRAFT_INT_INV_BATCH_HEADER_DRAFT", Storage="_INT_INV_BATCH_CONTROL_DRAFT", ThisKey="BatchID", OtherKey="BatchID", DeleteRule="NO ACTION")]
		public EntitySet<INT_INV_BATCH_CONTROL_DRAFT> INT_INV_BATCH_CONTROL_DRAFT
		{
			get
			{
				return this._INT_INV_BATCH_CONTROL_DRAFT;
			}
			set
			{
				this._INT_INV_BATCH_CONTROL_DRAFT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INT_INV_BATCH_CONTROL_DRAFT(INT_INV_BATCH_CONTROL_DRAFT entity)
		{
			this.SendPropertyChanging();
			entity.INT_INV_BATCH_HEADER_DRAFT = this;
		}
		
		private void detach_INT_INV_BATCH_CONTROL_DRAFT(INT_INV_BATCH_CONTROL_DRAFT entity)
		{
			this.SendPropertyChanging();
			entity.INT_INV_BATCH_HEADER_DRAFT = null;
		}
	}
	
	[Table(Name="dbo.INT_INV_CHECK_TMP")]
	public partial class INT_INV_CHECK_TMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrdNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    #endregion
		
		public INT_INV_CHECK_TMP()
		{
			OnCreated();
		}
		
		[Column(Storage="_OrdNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_INV_LINE_TEXT")]
	public partial class INT_INV_LINE_TEXT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrdNum;
		
		private int _ContractID;
		
		private string _LineText;
		
		private EntityRef<CTRAC_HEADER> _CTRAC_HEADER;
		
		private EntityRef<SALESORD> _SALESORD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnLineTextChanging(string value);
    partial void OnLineTextChanged();
    #endregion
		
		public INT_INV_LINE_TEXT()
		{
			this._CTRAC_HEADER = default(EntityRef<CTRAC_HEADER>);
			this._SALESORD = default(EntityRef<SALESORD>);
			OnCreated();
		}
		
		[Column(Storage="_OrdNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					if (this._SALESORD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._CTRAC_HEADER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_LineText", DbType="VarChar(255)")]
		public string LineText
		{
			get
			{
				return this._LineText;
			}
			set
			{
				if ((this._LineText != value))
				{
					this.OnLineTextChanging(value);
					this.SendPropertyChanging();
					this._LineText = value;
					this.SendPropertyChanged("LineText");
					this.OnLineTextChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_INV_LINE_TEXT_CONTRACT", Storage="_CTRAC_HEADER", ThisKey="ContractID", OtherKey="ContractId", IsForeignKey=true)]
		public CTRAC_HEADER CTRAC_HEADER
		{
			get
			{
				return this._CTRAC_HEADER.Entity;
			}
			set
			{
				CTRAC_HEADER previousValue = this._CTRAC_HEADER.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_HEADER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_HEADER.Entity = null;
						previousValue.INT_INV_LINE_TEXT.Remove(this);
					}
					this._CTRAC_HEADER.Entity = value;
					if ((value != null))
					{
						value.INT_INV_LINE_TEXT.Add(this);
						this._ContractID = value.ContractId;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("CTRAC_HEADER");
				}
			}
		}
		
		[Association(Name="FK_INT_INV_LINE_TEXT_ORDNUM", Storage="_SALESORD", ThisKey="OrdNum", OtherKey="OrdNum", IsForeignKey=true)]
		public SALESORD SALESORD
		{
			get
			{
				return this._SALESORD.Entity;
			}
			set
			{
				SALESORD previousValue = this._SALESORD.Entity;
				if (((previousValue != value) 
							|| (this._SALESORD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALESORD.Entity = null;
						previousValue.INT_INV_LINE_TEXT.Remove(this);
					}
					this._SALESORD.Entity = value;
					if ((value != null))
					{
						value.INT_INV_LINE_TEXT.Add(this);
						this._OrdNum = value.OrdNum;
					}
					else
					{
						this._OrdNum = default(int);
					}
					this.SendPropertyChanged("SALESORD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_INV_LINE_TEXT_DRAFT")]
	public partial class INT_INV_LINE_TEXT_DRAFT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrdNum;
		
		private int _ContractID;
		
		private string _LineText;
		
		private EntityRef<SALESORD_DRAFT> _SALESORD_DRAFT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnLineTextChanging(string value);
    partial void OnLineTextChanged();
    #endregion
		
		public INT_INV_LINE_TEXT_DRAFT()
		{
			this._SALESORD_DRAFT = default(EntityRef<SALESORD_DRAFT>);
			OnCreated();
		}
		
		[Column(Storage="_OrdNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					if (this._SALESORD_DRAFT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_LineText", DbType="VarChar(255)")]
		public string LineText
		{
			get
			{
				return this._LineText;
			}
			set
			{
				if ((this._LineText != value))
				{
					this.OnLineTextChanging(value);
					this.SendPropertyChanging();
					this._LineText = value;
					this.SendPropertyChanged("LineText");
					this.OnLineTextChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_INV_LINE_TEXT_DRAFT_ORDNUM", Storage="_SALESORD_DRAFT", ThisKey="OrdNum", OtherKey="OrdNum", IsForeignKey=true)]
		public SALESORD_DRAFT SALESORD_DRAFT
		{
			get
			{
				return this._SALESORD_DRAFT.Entity;
			}
			set
			{
				SALESORD_DRAFT previousValue = this._SALESORD_DRAFT.Entity;
				if (((previousValue != value) 
							|| (this._SALESORD_DRAFT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALESORD_DRAFT.Entity = null;
						previousValue.INT_INV_LINE_TEXT_DRAFT.Remove(this);
					}
					this._SALESORD_DRAFT.Entity = value;
					if ((value != null))
					{
						value.INT_INV_LINE_TEXT_DRAFT.Add(this);
						this._OrdNum = value.OrdNum;
					}
					else
					{
						this._OrdNum = default(int);
					}
					this.SendPropertyChanged("SALESORD_DRAFT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_INVOICE_STYLE")]
	public partial class INT_INVOICE_STYLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _InvoiceStyleId;
		
		private string _InvoiceStyle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceStyleIdChanging(byte value);
    partial void OnInvoiceStyleIdChanged();
    partial void OnInvoiceStyleChanging(string value);
    partial void OnInvoiceStyleChanged();
    #endregion
		
		public INT_INVOICE_STYLE()
		{
			OnCreated();
		}
		
		[Column(Storage="_InvoiceStyleId", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte InvoiceStyleId
		{
			get
			{
				return this._InvoiceStyleId;
			}
			set
			{
				if ((this._InvoiceStyleId != value))
				{
					this.OnInvoiceStyleIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceStyleId = value;
					this.SendPropertyChanged("InvoiceStyleId");
					this.OnInvoiceStyleIdChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceStyle", DbType="VarChar(32)")]
		public string InvoiceStyle
		{
			get
			{
				return this._InvoiceStyle;
			}
			set
			{
				if ((this._InvoiceStyle != value))
				{
					this.OnInvoiceStyleChanging(value);
					this.SendPropertyChanging();
					this._InvoiceStyle = value;
					this.SendPropertyChanged("InvoiceStyle");
					this.OnInvoiceStyleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_PLATFORM")]
	public partial class INT_PLATFORM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlatformID;
		
		private string _Platform;
		
		private EntitySet<STKORDITEM> _STKORDITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlatformIDChanging(int value);
    partial void OnPlatformIDChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    #endregion
		
		public INT_PLATFORM()
		{
			this._STKORDITEM = new EntitySet<STKORDITEM>(new Action<STKORDITEM>(this.attach_STKORDITEM), new Action<STKORDITEM>(this.detach_STKORDITEM));
			OnCreated();
		}
		
		[Column(Storage="_PlatformID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PlatformID
		{
			get
			{
				return this._PlatformID;
			}
			set
			{
				if ((this._PlatformID != value))
				{
					this.OnPlatformIDChanging(value);
					this.SendPropertyChanging();
					this._PlatformID = value;
					this.SendPropertyChanged("PlatformID");
					this.OnPlatformIDChanged();
				}
			}
		}
		
		[Column(Storage="_Platform", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this.OnPlatformChanging(value);
					this.SendPropertyChanging();
					this._Platform = value;
					this.SendPropertyChanged("Platform");
					this.OnPlatformChanged();
				}
			}
		}
		
		[Association(Name="FK_STKORDITEM_INT_PLATFORM", Storage="_STKORDITEM", ThisKey="PlatformID", OtherKey="Platform", DeleteRule="NO ACTION")]
		public EntitySet<STKORDITEM> STKORDITEM
		{
			get
			{
				return this._STKORDITEM;
			}
			set
			{
				this._STKORDITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.INT_PLATFORM = this;
		}
		
		private void detach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.INT_PLATFORM = null;
		}
	}
	
	[Table(Name="dbo.INT_PM_HISTORY")]
	public partial class INT_PM_HISTORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Int_pm_history_id;
		
		private int _AccountId;
		
		private System.Nullable<System.DateTime> _PM_Date;
		
		private string _PM_Engineer;
		
		private string _Note;
		
		private string _Parent_AccountId;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInt_pm_history_idChanging(int value);
    partial void OnInt_pm_history_idChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnPM_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnPM_DateChanged();
    partial void OnPM_EngineerChanging(string value);
    partial void OnPM_EngineerChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnParent_AccountIdChanging(string value);
    partial void OnParent_AccountIdChanged();
    #endregion
		
		public INT_PM_HISTORY()
		{
			this._DEBTORS = default(EntityRef<DEBTORS>);
			OnCreated();
		}
		
		[Column(Storage="_Int_pm_history_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Int_pm_history_id
		{
			get
			{
				return this._Int_pm_history_id;
			}
			set
			{
				if ((this._Int_pm_history_id != value))
				{
					this.OnInt_pm_history_idChanging(value);
					this.SendPropertyChanging();
					this._Int_pm_history_id = value;
					this.SendPropertyChanged("Int_pm_history_id");
					this.OnInt_pm_history_idChanged();
				}
			}
		}
		
		[Column(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Storage="_PM_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> PM_Date
		{
			get
			{
				return this._PM_Date;
			}
			set
			{
				if ((this._PM_Date != value))
				{
					this.OnPM_DateChanging(value);
					this.SendPropertyChanging();
					this._PM_Date = value;
					this.SendPropertyChanged("PM_Date");
					this.OnPM_DateChanged();
				}
			}
		}
		
		[Column(Storage="_PM_Engineer", DbType="VarChar(50)")]
		public string PM_Engineer
		{
			get
			{
				return this._PM_Engineer;
			}
			set
			{
				if ((this._PM_Engineer != value))
				{
					this.OnPM_EngineerChanging(value);
					this.SendPropertyChanging();
					this._PM_Engineer = value;
					this.SendPropertyChanged("PM_Engineer");
					this.OnPM_EngineerChanged();
				}
			}
		}
		
		[Column(Storage="_Note", DbType="VarChar(128)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[Column(Storage="_Parent_AccountId", DbType="VarChar(35)")]
		public string Parent_AccountId
		{
			get
			{
				return this._Parent_AccountId;
			}
			set
			{
				if ((this._Parent_AccountId != value))
				{
					this.OnParent_AccountIdChanging(value);
					this.SendPropertyChanging();
					this._Parent_AccountId = value;
					this.SendPropertyChanged("Parent_AccountId");
					this.OnParent_AccountIdChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_PM_HISTORY_ACCOUNT", Storage="_DEBTORS", ThisKey="AccountId", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.INT_PM_HISTORY.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.INT_PM_HISTORY.Add(this);
						this._AccountId = value.AccountID;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_PO_HISTORY")]
	public partial class INT_PO_HISTORY
	{
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private string _TableName;
		
		private string _FieldName;
		
		private System.Nullable<System.DateTime> _DateBefore;
		
		private System.Nullable<System.DateTime> _DateAfter;
		
		private System.Nullable<int> _PrimaryKey;
		
		private string _ChangedBy;
		
		private System.Nullable<int> _PONumber;
		
		private System.Nullable<int> _IntBefore;
		
		private System.Nullable<int> _IntAfter;
		
		public INT_PO_HISTORY()
		{
		}
		
		[Column(Storage="_ChangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this._ChangeDate = value;
				}
			}
		}
		
		[Column(Storage="_TableName", DbType="VarChar(100)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[Column(Storage="_FieldName", DbType="VarChar(100)")]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this._FieldName = value;
				}
			}
		}
		
		[Column(Storage="_DateBefore", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBefore
		{
			get
			{
				return this._DateBefore;
			}
			set
			{
				if ((this._DateBefore != value))
				{
					this._DateBefore = value;
				}
			}
		}
		
		[Column(Storage="_DateAfter", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAfter
		{
			get
			{
				return this._DateAfter;
			}
			set
			{
				if ((this._DateAfter != value))
				{
					this._DateAfter = value;
				}
			}
		}
		
		[Column(Storage="_PrimaryKey", DbType="Int")]
		public System.Nullable<int> PrimaryKey
		{
			get
			{
				return this._PrimaryKey;
			}
			set
			{
				if ((this._PrimaryKey != value))
				{
					this._PrimaryKey = value;
				}
			}
		}
		
		[Column(Storage="_ChangedBy", DbType="VarChar(50)")]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this._ChangedBy = value;
				}
			}
		}
		
		[Column(Storage="_PONumber", DbType="Int")]
		public System.Nullable<int> PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this._PONumber = value;
				}
			}
		}
		
		[Column(Storage="_IntBefore", DbType="Int")]
		public System.Nullable<int> IntBefore
		{
			get
			{
				return this._IntBefore;
			}
			set
			{
				if ((this._IntBefore != value))
				{
					this._IntBefore = value;
				}
			}
		}
		
		[Column(Storage="_IntAfter", DbType="Int")]
		public System.Nullable<int> IntAfter
		{
			get
			{
				return this._IntAfter;
			}
			set
			{
				if ((this._IntAfter != value))
				{
					this._IntAfter = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.INT_PURCH_RPT")]
	public partial class INT_PURCH_RPT
	{
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		public INT_PURCH_RPT()
		{
		}
		
		[Column(Storage="_FromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this._FromDate = value;
				}
			}
		}
		
		[Column(Storage="_ToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this._ToDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.INT_REPORTING_GROUPS")]
	public partial class INT_REPORTING_GROUPS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportingGroupID;
		
		private string _ReportingGroupName;
		
		private EntitySet<DEBTORS> _DEBTORS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportingGroupIDChanging(int value);
    partial void OnReportingGroupIDChanged();
    partial void OnReportingGroupNameChanging(string value);
    partial void OnReportingGroupNameChanged();
    #endregion
		
		public INT_REPORTING_GROUPS()
		{
			this._DEBTORS = new EntitySet<DEBTORS>(new Action<DEBTORS>(this.attach_DEBTORS), new Action<DEBTORS>(this.detach_DEBTORS));
			OnCreated();
		}
		
		[Column(Storage="_ReportingGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportingGroupID
		{
			get
			{
				return this._ReportingGroupID;
			}
			set
			{
				if ((this._ReportingGroupID != value))
				{
					this.OnReportingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ReportingGroupID = value;
					this.SendPropertyChanged("ReportingGroupID");
					this.OnReportingGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReportingGroupName", DbType="VarChar(80)")]
		public string ReportingGroupName
		{
			get
			{
				return this._ReportingGroupName;
			}
			set
			{
				if ((this._ReportingGroupName != value))
				{
					this.OnReportingGroupNameChanging(value);
					this.SendPropertyChanging();
					this._ReportingGroupName = value;
					this.SendPropertyChanged("ReportingGroupName");
					this.OnReportingGroupNameChanged();
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_INT_REPORTING_GROUPS", Storage="_DEBTORS", ThisKey="ReportingGroupID", OtherKey="ReportingGroupID", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS> DEBTORS
		{
			get
			{
				return this._DEBTORS;
			}
			set
			{
				this._DEBTORS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEBTORS(DEBTORS entity)
		{
			this.SendPropertyChanging();
			entity.INT_REPORTING_GROUPS = this;
		}
		
		private void detach_DEBTORS(DEBTORS entity)
		{
			this.SendPropertyChanging();
			entity.INT_REPORTING_GROUPS = null;
		}
	}
	
	[Table(Name="dbo.INT_RESPONSE_TIME")]
	public partial class INT_RESPONSE_TIME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ResponseTimeId;
		
		private string _ResponseTimeDescription;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResponseTimeIdChanging(byte value);
    partial void OnResponseTimeIdChanged();
    partial void OnResponseTimeDescriptionChanging(string value);
    partial void OnResponseTimeDescriptionChanged();
    #endregion
		
		public INT_RESPONSE_TIME()
		{
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			OnCreated();
		}
		
		[Column(Storage="_ResponseTimeId", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ResponseTimeId
		{
			get
			{
				return this._ResponseTimeId;
			}
			set
			{
				if ((this._ResponseTimeId != value))
				{
					this.OnResponseTimeIdChanging(value);
					this.SendPropertyChanging();
					this._ResponseTimeId = value;
					this.SendPropertyChanged("ResponseTimeId");
					this.OnResponseTimeIdChanged();
				}
			}
		}
		
		[Column(Storage="_ResponseTimeDescription", DbType="VarChar(32)")]
		public string ResponseTimeDescription
		{
			get
			{
				return this._ResponseTimeDescription;
			}
			set
			{
				if ((this._ResponseTimeDescription != value))
				{
					this.OnResponseTimeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ResponseTimeDescription = value;
					this.SendPropertyChanged("ResponseTimeDescription");
					this.OnResponseTimeDescriptionChanged();
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_INT_RESPONSE_TIME", Storage="_CTRAC_ITEM", ThisKey="ResponseTimeId", OtherKey="ResponseTime", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.INT_RESPONSE_TIME = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.INT_RESPONSE_TIME = null;
		}
	}
	
	[Table(Name="dbo.INT_SERVICE_ID")]
	public partial class INT_SERVICE_ID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceId;
		
		private string _ServiceDescription;
		
		private string _FullName;
		
		private string _PhoneNo;
		
		private string _Address;
		
		private System.Nullable<int> _Creditor;
		
		private bool _NotInUse;
		
		private bool _ThirdPartyAgent;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntityRef<CREDITORS> _CREDITORS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceIdChanging(int value);
    partial void OnServiceIdChanged();
    partial void OnServiceDescriptionChanging(string value);
    partial void OnServiceDescriptionChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCreditorChanging(System.Nullable<int> value);
    partial void OnCreditorChanged();
    partial void OnNotInUseChanging(bool value);
    partial void OnNotInUseChanged();
    partial void OnThirdPartyAgentChanging(bool value);
    partial void OnThirdPartyAgentChanged();
    #endregion
		
		public INT_SERVICE_ID()
		{
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			this._CREDITORS = default(EntityRef<CREDITORS>);
			OnCreated();
		}
		
		[Column(Storage="_ServiceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					this.OnServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceId = value;
					this.SendPropertyChanged("ServiceId");
					this.OnServiceIdChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceDescription", DbType="VarChar(32)")]
		public string ServiceDescription
		{
			get
			{
				return this._ServiceDescription;
			}
			set
			{
				if ((this._ServiceDescription != value))
				{
					this.OnServiceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ServiceDescription = value;
					this.SendPropertyChanged("ServiceDescription");
					this.OnServiceDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="VarChar(255)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[Column(Storage="_PhoneNo", DbType="VarChar(20)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="VarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Creditor", DbType="Int")]
		public System.Nullable<int> Creditor
		{
			get
			{
				return this._Creditor;
			}
			set
			{
				if ((this._Creditor != value))
				{
					if (this._CREDITORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreditorChanging(value);
					this.SendPropertyChanging();
					this._Creditor = value;
					this.SendPropertyChanged("Creditor");
					this.OnCreditorChanged();
				}
			}
		}
		
		[Column(Storage="_NotInUse", DbType="Bit NOT NULL")]
		public bool NotInUse
		{
			get
			{
				return this._NotInUse;
			}
			set
			{
				if ((this._NotInUse != value))
				{
					this.OnNotInUseChanging(value);
					this.SendPropertyChanging();
					this._NotInUse = value;
					this.SendPropertyChanged("NotInUse");
					this.OnNotInUseChanged();
				}
			}
		}
		
		[Column(Storage="_ThirdPartyAgent", DbType="Bit NOT NULL")]
		public bool ThirdPartyAgent
		{
			get
			{
				return this._ThirdPartyAgent;
			}
			set
			{
				if ((this._ThirdPartyAgent != value))
				{
					this.OnThirdPartyAgentChanging(value);
					this.SendPropertyChanging();
					this._ThirdPartyAgent = value;
					this.SendPropertyChanged("ThirdPartyAgent");
					this.OnThirdPartyAgentChanged();
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_INT_SERVICE_ID", Storage="_CTRAC_ITEM", ThisKey="ServiceId", OtherKey="ServiceID", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_SERVICE_ID_CREDITORS", Storage="_CREDITORS", ThisKey="Creditor", OtherKey="AccountID", IsForeignKey=true)]
		public CREDITORS CREDITORS
		{
			get
			{
				return this._CREDITORS.Entity;
			}
			set
			{
				CREDITORS previousValue = this._CREDITORS.Entity;
				if (((previousValue != value) 
							|| (this._CREDITORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CREDITORS.Entity = null;
						previousValue.INT_SERVICE_ID.Remove(this);
					}
					this._CREDITORS.Entity = value;
					if ((value != null))
					{
						value.INT_SERVICE_ID.Add(this);
						this._Creditor = value.AccountID;
					}
					else
					{
						this._Creditor = default(Nullable<int>);
					}
					this.SendPropertyChanged("CREDITORS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.INT_SERVICE_ID = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.INT_SERVICE_ID = null;
		}
	}
	
	[Table(Name="dbo.INT_SERVICE_LEVEL")]
	public partial class INT_SERVICE_LEVEL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ServiceLevelId;
		
		private string _ServiceLevelDescription;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceLevelIdChanging(byte value);
    partial void OnServiceLevelIdChanged();
    partial void OnServiceLevelDescriptionChanging(string value);
    partial void OnServiceLevelDescriptionChanged();
    #endregion
		
		public INT_SERVICE_LEVEL()
		{
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			OnCreated();
		}
		
		[Column(Storage="_ServiceLevelId", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ServiceLevelId
		{
			get
			{
				return this._ServiceLevelId;
			}
			set
			{
				if ((this._ServiceLevelId != value))
				{
					this.OnServiceLevelIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceLevelId = value;
					this.SendPropertyChanged("ServiceLevelId");
					this.OnServiceLevelIdChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceLevelDescription", DbType="VarChar(12)")]
		public string ServiceLevelDescription
		{
			get
			{
				return this._ServiceLevelDescription;
			}
			set
			{
				if ((this._ServiceLevelDescription != value))
				{
					this.OnServiceLevelDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ServiceLevelDescription = value;
					this.SendPropertyChanged("ServiceLevelDescription");
					this.OnServiceLevelDescriptionChanged();
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_INT_SERVICE_LEVEL", Storage="_CTRAC_ITEM", ThisKey="ServiceLevelId", OtherKey="ServiceLevelID", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.INT_SERVICE_LEVEL = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.INT_SERVICE_LEVEL = null;
		}
	}
	
	[Table(Name="dbo.INT_ServiceIDChangeLog")]
	public partial class INT_ServiceIDChangeLog
	{
		
		private int _ContractItemID;
		
		private int _Old_ServiceID;
		
		private System.Nullable<byte> _Old_ServiceLevelID;
		
		private System.Nullable<byte> _Old_ResponseTime;
		
		private string _Old_CoverageLimits;
		
		private int _New_ServiceID;
		
		private System.Nullable<byte> _New_Service_levelID;
		
		private System.Nullable<byte> _New_ResponseTime;
		
		private string _New_CoverageLimts;
		
		public INT_ServiceIDChangeLog()
		{
		}
		
		[Column(Storage="_ContractItemID", DbType="Int NOT NULL")]
		public int ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this._ContractItemID = value;
				}
			}
		}
		
		[Column(Storage="_Old_ServiceID", DbType="Int NOT NULL")]
		public int Old_ServiceID
		{
			get
			{
				return this._Old_ServiceID;
			}
			set
			{
				if ((this._Old_ServiceID != value))
				{
					this._Old_ServiceID = value;
				}
			}
		}
		
		[Column(Storage="_Old_ServiceLevelID", DbType="TinyInt")]
		public System.Nullable<byte> Old_ServiceLevelID
		{
			get
			{
				return this._Old_ServiceLevelID;
			}
			set
			{
				if ((this._Old_ServiceLevelID != value))
				{
					this._Old_ServiceLevelID = value;
				}
			}
		}
		
		[Column(Storage="_Old_ResponseTime", DbType="TinyInt")]
		public System.Nullable<byte> Old_ResponseTime
		{
			get
			{
				return this._Old_ResponseTime;
			}
			set
			{
				if ((this._Old_ResponseTime != value))
				{
					this._Old_ResponseTime = value;
				}
			}
		}
		
		[Column(Storage="_Old_CoverageLimits", DbType="VarChar(32)")]
		public string Old_CoverageLimits
		{
			get
			{
				return this._Old_CoverageLimits;
			}
			set
			{
				if ((this._Old_CoverageLimits != value))
				{
					this._Old_CoverageLimits = value;
				}
			}
		}
		
		[Column(Storage="_New_ServiceID", DbType="Int NOT NULL")]
		public int New_ServiceID
		{
			get
			{
				return this._New_ServiceID;
			}
			set
			{
				if ((this._New_ServiceID != value))
				{
					this._New_ServiceID = value;
				}
			}
		}
		
		[Column(Storage="_New_Service_levelID", DbType="TinyInt")]
		public System.Nullable<byte> New_Service_levelID
		{
			get
			{
				return this._New_Service_levelID;
			}
			set
			{
				if ((this._New_Service_levelID != value))
				{
					this._New_Service_levelID = value;
				}
			}
		}
		
		[Column(Storage="_New_ResponseTime", DbType="TinyInt")]
		public System.Nullable<byte> New_ResponseTime
		{
			get
			{
				return this._New_ResponseTime;
			}
			set
			{
				if ((this._New_ResponseTime != value))
				{
					this._New_ResponseTime = value;
				}
			}
		}
		
		[Column(Storage="_New_CoverageLimts", DbType="VarChar(32)")]
		public string New_CoverageLimts
		{
			get
			{
				return this._New_CoverageLimts;
			}
			set
			{
				if ((this._New_CoverageLimts != value))
				{
					this._New_CoverageLimts = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.INT_ServiceIDChangeLog#1")]
	public partial class INT_ServiceIDChangeLog_1
	{
		
		private int _ContractItemID;
		
		private int _Old_ServiceID;
		
		private System.Nullable<byte> _Old_ServiceLevelID;
		
		private System.Nullable<byte> _Old_ResponseTime;
		
		private string _Old_CoverageLimits;
		
		private int _New_ServiceID;
		
		private System.Nullable<byte> _New_Service_levelID;
		
		private System.Nullable<byte> _New_ResponseTime;
		
		private string _New_CoverageLimts;
		
		public INT_ServiceIDChangeLog_1()
		{
		}
		
		[Column(Storage="_ContractItemID", DbType="Int NOT NULL")]
		public int ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this._ContractItemID = value;
				}
			}
		}
		
		[Column(Storage="_Old_ServiceID", DbType="Int NOT NULL")]
		public int Old_ServiceID
		{
			get
			{
				return this._Old_ServiceID;
			}
			set
			{
				if ((this._Old_ServiceID != value))
				{
					this._Old_ServiceID = value;
				}
			}
		}
		
		[Column(Storage="_Old_ServiceLevelID", DbType="TinyInt")]
		public System.Nullable<byte> Old_ServiceLevelID
		{
			get
			{
				return this._Old_ServiceLevelID;
			}
			set
			{
				if ((this._Old_ServiceLevelID != value))
				{
					this._Old_ServiceLevelID = value;
				}
			}
		}
		
		[Column(Storage="_Old_ResponseTime", DbType="TinyInt")]
		public System.Nullable<byte> Old_ResponseTime
		{
			get
			{
				return this._Old_ResponseTime;
			}
			set
			{
				if ((this._Old_ResponseTime != value))
				{
					this._Old_ResponseTime = value;
				}
			}
		}
		
		[Column(Storage="_Old_CoverageLimits", DbType="VarChar(32)")]
		public string Old_CoverageLimits
		{
			get
			{
				return this._Old_CoverageLimits;
			}
			set
			{
				if ((this._Old_CoverageLimits != value))
				{
					this._Old_CoverageLimits = value;
				}
			}
		}
		
		[Column(Storage="_New_ServiceID", DbType="Int NOT NULL")]
		public int New_ServiceID
		{
			get
			{
				return this._New_ServiceID;
			}
			set
			{
				if ((this._New_ServiceID != value))
				{
					this._New_ServiceID = value;
				}
			}
		}
		
		[Column(Storage="_New_Service_levelID", DbType="TinyInt")]
		public System.Nullable<byte> New_Service_levelID
		{
			get
			{
				return this._New_Service_levelID;
			}
			set
			{
				if ((this._New_Service_levelID != value))
				{
					this._New_Service_levelID = value;
				}
			}
		}
		
		[Column(Storage="_New_ResponseTime", DbType="TinyInt")]
		public System.Nullable<byte> New_ResponseTime
		{
			get
			{
				return this._New_ResponseTime;
			}
			set
			{
				if ((this._New_ResponseTime != value))
				{
					this._New_ResponseTime = value;
				}
			}
		}
		
		[Column(Storage="_New_CoverageLimts", DbType="VarChar(32)")]
		public string New_CoverageLimts
		{
			get
			{
				return this._New_CoverageLimts;
			}
			set
			{
				if ((this._New_CoverageLimts != value))
				{
					this._New_CoverageLimts = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.INT_ServiceIDTranslationTable")]
	public partial class INT_ServiceIDTranslationTable
	{
		
		private int _Old_ServiceID;
		
		private System.Nullable<int> _New_ServiceID;
		
		private System.Nullable<byte> _New_ServiceLevelID;
		
		private System.Nullable<byte> _New_ResponseTime;
		
		private string _New_CoverageLimits;
		
		public INT_ServiceIDTranslationTable()
		{
		}
		
		[Column(Storage="_Old_ServiceID", DbType="Int NOT NULL")]
		public int Old_ServiceID
		{
			get
			{
				return this._Old_ServiceID;
			}
			set
			{
				if ((this._Old_ServiceID != value))
				{
					this._Old_ServiceID = value;
				}
			}
		}
		
		[Column(Storage="_New_ServiceID", DbType="Int")]
		public System.Nullable<int> New_ServiceID
		{
			get
			{
				return this._New_ServiceID;
			}
			set
			{
				if ((this._New_ServiceID != value))
				{
					this._New_ServiceID = value;
				}
			}
		}
		
		[Column(Storage="_New_ServiceLevelID", DbType="TinyInt")]
		public System.Nullable<byte> New_ServiceLevelID
		{
			get
			{
				return this._New_ServiceLevelID;
			}
			set
			{
				if ((this._New_ServiceLevelID != value))
				{
					this._New_ServiceLevelID = value;
				}
			}
		}
		
		[Column(Storage="_New_ResponseTime", DbType="TinyInt")]
		public System.Nullable<byte> New_ResponseTime
		{
			get
			{
				return this._New_ResponseTime;
			}
			set
			{
				if ((this._New_ResponseTime != value))
				{
					this._New_ResponseTime = value;
				}
			}
		}
		
		[Column(Storage="_New_CoverageLimits", DbType="VarChar(32)")]
		public string New_CoverageLimits
		{
			get
			{
				return this._New_CoverageLimits;
			}
			set
			{
				if ((this._New_CoverageLimits != value))
				{
					this._New_CoverageLimits = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.INT_SNAPSHOT_FORECAST_DELAYED_ITEM")]
	public partial class INT_SNAPSHOT_FORECAST_DELAYED_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SnapShotForecastDelayedItemId;
		
		private int _SnapShotId;
		
		private System.Nullable<byte> _CompanyNum;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<int> _MonthsLag;
		
		private System.Nullable<decimal> _Billed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSnapShotForecastDelayedItemIdChanging(int value);
    partial void OnSnapShotForecastDelayedItemIdChanged();
    partial void OnSnapShotIdChanging(int value);
    partial void OnSnapShotIdChanged();
    partial void OnCompanyNumChanging(System.Nullable<byte> value);
    partial void OnCompanyNumChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnMonthsLagChanging(System.Nullable<int> value);
    partial void OnMonthsLagChanged();
    partial void OnBilledChanging(System.Nullable<decimal> value);
    partial void OnBilledChanged();
    #endregion
		
		public INT_SNAPSHOT_FORECAST_DELAYED_ITEM()
		{
			OnCreated();
		}
		
		[Column(Storage="_SnapShotForecastDelayedItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SnapShotForecastDelayedItemId
		{
			get
			{
				return this._SnapShotForecastDelayedItemId;
			}
			set
			{
				if ((this._SnapShotForecastDelayedItemId != value))
				{
					this.OnSnapShotForecastDelayedItemIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotForecastDelayedItemId = value;
					this.SendPropertyChanged("SnapShotForecastDelayedItemId");
					this.OnSnapShotForecastDelayedItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_SnapShotId", DbType="Int NOT NULL")]
		public int SnapShotId
		{
			get
			{
				return this._SnapShotId;
			}
			set
			{
				if ((this._SnapShotId != value))
				{
					this.OnSnapShotIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotId = value;
					this.SendPropertyChanged("SnapShotId");
					this.OnSnapShotIdChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_MonthsLag", DbType="Int")]
		public System.Nullable<int> MonthsLag
		{
			get
			{
				return this._MonthsLag;
			}
			set
			{
				if ((this._MonthsLag != value))
				{
					this.OnMonthsLagChanging(value);
					this.SendPropertyChanging();
					this._MonthsLag = value;
					this.SendPropertyChanged("MonthsLag");
					this.OnMonthsLagChanged();
				}
			}
		}
		
		[Column(Storage="_Billed", DbType="Money")]
		public System.Nullable<decimal> Billed
		{
			get
			{
				return this._Billed;
			}
			set
			{
				if ((this._Billed != value))
				{
					this.OnBilledChanging(value);
					this.SendPropertyChanging();
					this._Billed = value;
					this.SendPropertyChanged("Billed");
					this.OnBilledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_SNAPSHOT_FORECAST_ITEM")]
	public partial class INT_SNAPSHOT_FORECAST_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SnapShotForecastItemId;
		
		private int _SnapShotId;
		
		private System.Nullable<byte> _CompanyNum;
		
		private System.Nullable<System.DateTime> _BatchDate;
		
		private System.Nullable<int> _InvFreq;
		
		private System.Nullable<decimal> _Billed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSnapShotForecastItemIdChanging(int value);
    partial void OnSnapShotForecastItemIdChanged();
    partial void OnSnapShotIdChanging(int value);
    partial void OnSnapShotIdChanged();
    partial void OnCompanyNumChanging(System.Nullable<byte> value);
    partial void OnCompanyNumChanged();
    partial void OnBatchDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBatchDateChanged();
    partial void OnInvFreqChanging(System.Nullable<int> value);
    partial void OnInvFreqChanged();
    partial void OnBilledChanging(System.Nullable<decimal> value);
    partial void OnBilledChanged();
    #endregion
		
		public INT_SNAPSHOT_FORECAST_ITEM()
		{
			OnCreated();
		}
		
		[Column(Storage="_SnapShotForecastItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SnapShotForecastItemId
		{
			get
			{
				return this._SnapShotForecastItemId;
			}
			set
			{
				if ((this._SnapShotForecastItemId != value))
				{
					this.OnSnapShotForecastItemIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotForecastItemId = value;
					this.SendPropertyChanged("SnapShotForecastItemId");
					this.OnSnapShotForecastItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_SnapShotId", DbType="Int NOT NULL")]
		public int SnapShotId
		{
			get
			{
				return this._SnapShotId;
			}
			set
			{
				if ((this._SnapShotId != value))
				{
					this.OnSnapShotIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotId = value;
					this.SendPropertyChanged("SnapShotId");
					this.OnSnapShotIdChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_BatchDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BatchDate
		{
			get
			{
				return this._BatchDate;
			}
			set
			{
				if ((this._BatchDate != value))
				{
					this.OnBatchDateChanging(value);
					this.SendPropertyChanging();
					this._BatchDate = value;
					this.SendPropertyChanged("BatchDate");
					this.OnBatchDateChanged();
				}
			}
		}
		
		[Column(Storage="_InvFreq", DbType="Int")]
		public System.Nullable<int> InvFreq
		{
			get
			{
				return this._InvFreq;
			}
			set
			{
				if ((this._InvFreq != value))
				{
					this.OnInvFreqChanging(value);
					this.SendPropertyChanging();
					this._InvFreq = value;
					this.SendPropertyChanged("InvFreq");
					this.OnInvFreqChanged();
				}
			}
		}
		
		[Column(Storage="_Billed", DbType="Money")]
		public System.Nullable<decimal> Billed
		{
			get
			{
				return this._Billed;
			}
			set
			{
				if ((this._Billed != value))
				{
					this.OnBilledChanging(value);
					this.SendPropertyChanging();
					this._Billed = value;
					this.SendPropertyChanged("Billed");
					this.OnBilledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_SNAPSHOT_FORECAST_UNDELAYED_ITEM")]
	public partial class INT_SNAPSHOT_FORECAST_UNDELAYED_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SnapShotForecastUndelayedItemId;
		
		private int _SnapShotId;
		
		private System.Nullable<byte> _CompanyNum;
		
		private System.Nullable<System.DateTime> _BatchDate;
		
		private System.Nullable<int> _InvFreq;
		
		private System.Nullable<decimal> _Billed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSnapShotForecastUndelayedItemIdChanging(int value);
    partial void OnSnapShotForecastUndelayedItemIdChanged();
    partial void OnSnapShotIdChanging(int value);
    partial void OnSnapShotIdChanged();
    partial void OnCompanyNumChanging(System.Nullable<byte> value);
    partial void OnCompanyNumChanged();
    partial void OnBatchDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBatchDateChanged();
    partial void OnInvFreqChanging(System.Nullable<int> value);
    partial void OnInvFreqChanged();
    partial void OnBilledChanging(System.Nullable<decimal> value);
    partial void OnBilledChanged();
    #endregion
		
		public INT_SNAPSHOT_FORECAST_UNDELAYED_ITEM()
		{
			OnCreated();
		}
		
		[Column(Storage="_SnapShotForecastUndelayedItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SnapShotForecastUndelayedItemId
		{
			get
			{
				return this._SnapShotForecastUndelayedItemId;
			}
			set
			{
				if ((this._SnapShotForecastUndelayedItemId != value))
				{
					this.OnSnapShotForecastUndelayedItemIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotForecastUndelayedItemId = value;
					this.SendPropertyChanged("SnapShotForecastUndelayedItemId");
					this.OnSnapShotForecastUndelayedItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_SnapShotId", DbType="Int NOT NULL")]
		public int SnapShotId
		{
			get
			{
				return this._SnapShotId;
			}
			set
			{
				if ((this._SnapShotId != value))
				{
					this.OnSnapShotIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotId = value;
					this.SendPropertyChanged("SnapShotId");
					this.OnSnapShotIdChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_BatchDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BatchDate
		{
			get
			{
				return this._BatchDate;
			}
			set
			{
				if ((this._BatchDate != value))
				{
					this.OnBatchDateChanging(value);
					this.SendPropertyChanging();
					this._BatchDate = value;
					this.SendPropertyChanged("BatchDate");
					this.OnBatchDateChanged();
				}
			}
		}
		
		[Column(Storage="_InvFreq", DbType="Int")]
		public System.Nullable<int> InvFreq
		{
			get
			{
				return this._InvFreq;
			}
			set
			{
				if ((this._InvFreq != value))
				{
					this.OnInvFreqChanging(value);
					this.SendPropertyChanging();
					this._InvFreq = value;
					this.SendPropertyChanged("InvFreq");
					this.OnInvFreqChanged();
				}
			}
		}
		
		[Column(Storage="_Billed", DbType="Money")]
		public System.Nullable<decimal> Billed
		{
			get
			{
				return this._Billed;
			}
			set
			{
				if ((this._Billed != value))
				{
					this.OnBilledChanging(value);
					this.SendPropertyChanging();
					this._Billed = value;
					this.SendPropertyChanged("Billed");
					this.OnBilledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_SNAPSHOT_HEADER")]
	public partial class INT_SNAPSHOT_HEADER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SnapShotId;
		
		private System.Nullable<System.DateTime> _SnapShotDate;
		
		private string _EmployeeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSnapShotIdChanging(int value);
    partial void OnSnapShotIdChanged();
    partial void OnSnapShotDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSnapShotDateChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    #endregion
		
		public INT_SNAPSHOT_HEADER()
		{
			OnCreated();
		}
		
		[Column(Storage="_SnapShotId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SnapShotId
		{
			get
			{
				return this._SnapShotId;
			}
			set
			{
				if ((this._SnapShotId != value))
				{
					this.OnSnapShotIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotId = value;
					this.SendPropertyChanged("SnapShotId");
					this.OnSnapShotIdChanged();
				}
			}
		}
		
		[Column(Storage="_SnapShotDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SnapShotDate
		{
			get
			{
				return this._SnapShotDate;
			}
			set
			{
				if ((this._SnapShotDate != value))
				{
					this.OnSnapShotDateChanging(value);
					this.SendPropertyChanging();
					this._SnapShotDate = value;
					this.SendPropertyChanged("SnapShotDate");
					this.OnSnapShotDateChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_SNAPSHOT_ITEM")]
	public partial class INT_SNAPSHOT_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SnapShotItemId;
		
		private int _SnapShotId;
		
		private System.Nullable<byte> _CompanyNum;
		
		private System.Nullable<int> _Parent;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<int> _ContractID;
		
		private System.Nullable<int> _ContractItemID;
		
		private string _ProdCode;
		
		private System.Nullable<decimal> _Qty;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _SalesTeam;
		
		private string _SalesRep;
		
		private string _RM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSnapShotItemIdChanging(int value);
    partial void OnSnapShotItemIdChanged();
    partial void OnSnapShotIdChanging(int value);
    partial void OnSnapShotIdChanged();
    partial void OnCompanyNumChanging(System.Nullable<byte> value);
    partial void OnCompanyNumChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnContractIDChanging(System.Nullable<int> value);
    partial void OnContractIDChanged();
    partial void OnContractItemIDChanging(System.Nullable<int> value);
    partial void OnContractItemIDChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnSalesTeamChanging(System.Nullable<int> value);
    partial void OnSalesTeamChanged();
    partial void OnSalesRepChanging(string value);
    partial void OnSalesRepChanged();
    partial void OnRMChanging(string value);
    partial void OnRMChanged();
    #endregion
		
		public INT_SNAPSHOT_ITEM()
		{
			OnCreated();
		}
		
		[Column(Storage="_SnapShotItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SnapShotItemId
		{
			get
			{
				return this._SnapShotItemId;
			}
			set
			{
				if ((this._SnapShotItemId != value))
				{
					this.OnSnapShotItemIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotItemId = value;
					this.SendPropertyChanged("SnapShotItemId");
					this.OnSnapShotItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_SnapShotId", DbType="Int NOT NULL")]
		public int SnapShotId
		{
			get
			{
				return this._SnapShotId;
			}
			set
			{
				if ((this._SnapShotId != value))
				{
					this.OnSnapShotIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotId = value;
					this.SendPropertyChanged("SnapShotId");
					this.OnSnapShotIdChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractItemID", DbType="Int")]
		public System.Nullable<int> ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this.OnContractItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContractItemID = value;
					this.SendPropertyChanged("ContractItemID");
					this.OnContractItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_SalesTeam", DbType="Int")]
		public System.Nullable<int> SalesTeam
		{
			get
			{
				return this._SalesTeam;
			}
			set
			{
				if ((this._SalesTeam != value))
				{
					this.OnSalesTeamChanging(value);
					this.SendPropertyChanging();
					this._SalesTeam = value;
					this.SendPropertyChanged("SalesTeam");
					this.OnSalesTeamChanged();
				}
			}
		}
		
		[Column(Storage="_SalesRep", DbType="VarChar(25)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					this.OnSalesRepChanging(value);
					this.SendPropertyChanging();
					this._SalesRep = value;
					this.SendPropertyChanged("SalesRep");
					this.OnSalesRepChanged();
				}
			}
		}
		
		[Column(Storage="_RM", DbType="VarChar(25)")]
		public string RM
		{
			get
			{
				return this._RM;
			}
			set
			{
				if ((this._RM != value))
				{
					this.OnRMChanging(value);
					this.SendPropertyChanging();
					this._RM = value;
					this.SendPropertyChanged("RM");
					this.OnRMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_SNAPSHOT_ITEM_DELETED_DEVICES")]
	public partial class INT_SNAPSHOT_ITEM_DELETED_DEVICES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SnapShotItemId;
		
		private int _SnapShotId;
		
		private System.Nullable<byte> _CompanyNum;
		
		private System.Nullable<int> _Parent;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<int> _ContractID;
		
		private System.Nullable<int> _ContractItemID;
		
		private string _ProdCode;
		
		private System.Nullable<decimal> _Qty;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSnapShotItemIdChanging(int value);
    partial void OnSnapShotItemIdChanged();
    partial void OnSnapShotIdChanging(int value);
    partial void OnSnapShotIdChanged();
    partial void OnCompanyNumChanging(System.Nullable<byte> value);
    partial void OnCompanyNumChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnContractIDChanging(System.Nullable<int> value);
    partial void OnContractIDChanged();
    partial void OnContractItemIDChanging(System.Nullable<int> value);
    partial void OnContractItemIDChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public INT_SNAPSHOT_ITEM_DELETED_DEVICES()
		{
			OnCreated();
		}
		
		[Column(Storage="_SnapShotItemId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SnapShotItemId
		{
			get
			{
				return this._SnapShotItemId;
			}
			set
			{
				if ((this._SnapShotItemId != value))
				{
					this.OnSnapShotItemIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotItemId = value;
					this.SendPropertyChanged("SnapShotItemId");
					this.OnSnapShotItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_SnapShotId", DbType="Int NOT NULL")]
		public int SnapShotId
		{
			get
			{
				return this._SnapShotId;
			}
			set
			{
				if ((this._SnapShotId != value))
				{
					this.OnSnapShotIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotId = value;
					this.SendPropertyChanged("SnapShotId");
					this.OnSnapShotIdChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractItemID", DbType="Int")]
		public System.Nullable<int> ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this.OnContractItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContractItemID = value;
					this.SendPropertyChanged("ContractItemID");
					this.OnContractItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_SNAPSHOT_ITEM_IMPORT")]
	public partial class INT_SNAPSHOT_ITEM_IMPORT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SnapShotItemId;
		
		private System.Nullable<int> _SnapShotId;
		
		private System.Nullable<byte> _CompanyNum;
		
		private System.Nullable<int> _Parent;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<int> _ContractID;
		
		private System.Nullable<int> _ContractItemID;
		
		private string _ProdCode;
		
		private System.Nullable<decimal> _Qty;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSnapShotItemIdChanging(int value);
    partial void OnSnapShotItemIdChanged();
    partial void OnSnapShotIdChanging(System.Nullable<int> value);
    partial void OnSnapShotIdChanged();
    partial void OnCompanyNumChanging(System.Nullable<byte> value);
    partial void OnCompanyNumChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnContractIDChanging(System.Nullable<int> value);
    partial void OnContractIDChanged();
    partial void OnContractItemIDChanging(System.Nullable<int> value);
    partial void OnContractItemIDChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public INT_SNAPSHOT_ITEM_IMPORT()
		{
			OnCreated();
		}
		
		[Column(Storage="_SnapShotItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SnapShotItemId
		{
			get
			{
				return this._SnapShotItemId;
			}
			set
			{
				if ((this._SnapShotItemId != value))
				{
					this.OnSnapShotItemIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotItemId = value;
					this.SendPropertyChanged("SnapShotItemId");
					this.OnSnapShotItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_SnapShotId", DbType="Int")]
		public System.Nullable<int> SnapShotId
		{
			get
			{
				return this._SnapShotId;
			}
			set
			{
				if ((this._SnapShotId != value))
				{
					this.OnSnapShotIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotId = value;
					this.SendPropertyChanged("SnapShotId");
					this.OnSnapShotIdChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractItemID", DbType="Int")]
		public System.Nullable<int> ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this.OnContractItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContractItemID = value;
					this.SendPropertyChanged("ContractItemID");
					this.OnContractItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_SNAPSHOT_ITEM_TEMP")]
	public partial class INT_SNAPSHOT_ITEM_TEMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SnapShotItemId;
		
		private int _SnapShotId;
		
		private System.Nullable<int> _ContractItemID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSnapShotItemIdChanging(int value);
    partial void OnSnapShotItemIdChanged();
    partial void OnSnapShotIdChanging(int value);
    partial void OnSnapShotIdChanged();
    partial void OnContractItemIDChanging(System.Nullable<int> value);
    partial void OnContractItemIDChanged();
    #endregion
		
		public INT_SNAPSHOT_ITEM_TEMP()
		{
			OnCreated();
		}
		
		[Column(Storage="_SnapShotItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SnapShotItemId
		{
			get
			{
				return this._SnapShotItemId;
			}
			set
			{
				if ((this._SnapShotItemId != value))
				{
					this.OnSnapShotItemIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotItemId = value;
					this.SendPropertyChanged("SnapShotItemId");
					this.OnSnapShotItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_SnapShotId", DbType="Int NOT NULL")]
		public int SnapShotId
		{
			get
			{
				return this._SnapShotId;
			}
			set
			{
				if ((this._SnapShotId != value))
				{
					this.OnSnapShotIdChanging(value);
					this.SendPropertyChanging();
					this._SnapShotId = value;
					this.SendPropertyChanged("SnapShotId");
					this.OnSnapShotIdChanged();
				}
			}
		}
		
		[Column(Storage="_ContractItemID", DbType="Int")]
		public System.Nullable<int> ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this.OnContractItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContractItemID = value;
					this.SendPropertyChanged("ContractItemID");
					this.OnContractItemIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_SNAPSHOT_REPORT")]
	public partial class INT_SNAPSHOT_REPORT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyItemID;
		
		private string _EmployeeID;
		
		private System.Nullable<byte> _CompanyNum;
		
		private string _CompanyID;
		
		private string _State;
		
		private System.Nullable<System.DateTime> _CurrentDate;
		
		private System.Nullable<decimal> _ThisMonth;
		
		private System.Nullable<System.DateTime> _ComparisonDate;
		
		private System.Nullable<decimal> _LastMonth;
		
		private System.Nullable<decimal> _BusinessIncreaseMTD;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<decimal> _FirstMonth;
		
		private System.Nullable<decimal> _BusinessIncreaseYTD;
		
		private System.Nullable<decimal> _AnnualisedBilling;
		
		private System.Nullable<decimal> _Target;
		
		private System.Nullable<decimal> _ToMeetTarget;
		
		private System.Nullable<decimal> _ThisMonthExIntCo;
		
		private string _BusinessUnitGroup;
		
		private System.Nullable<int> _RevenueCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyItemIDChanging(int value);
    partial void OnCompanyItemIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnCompanyNumChanging(System.Nullable<byte> value);
    partial void OnCompanyNumChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCurrentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCurrentDateChanged();
    partial void OnThisMonthChanging(System.Nullable<decimal> value);
    partial void OnThisMonthChanged();
    partial void OnComparisonDateChanging(System.Nullable<System.DateTime> value);
    partial void OnComparisonDateChanged();
    partial void OnLastMonthChanging(System.Nullable<decimal> value);
    partial void OnLastMonthChanged();
    partial void OnBusinessIncreaseMTDChanging(System.Nullable<decimal> value);
    partial void OnBusinessIncreaseMTDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnFirstMonthChanging(System.Nullable<decimal> value);
    partial void OnFirstMonthChanged();
    partial void OnBusinessIncreaseYTDChanging(System.Nullable<decimal> value);
    partial void OnBusinessIncreaseYTDChanged();
    partial void OnAnnualisedBillingChanging(System.Nullable<decimal> value);
    partial void OnAnnualisedBillingChanged();
    partial void OnTargetChanging(System.Nullable<decimal> value);
    partial void OnTargetChanged();
    partial void OnToMeetTargetChanging(System.Nullable<decimal> value);
    partial void OnToMeetTargetChanged();
    partial void OnThisMonthExIntCoChanging(System.Nullable<decimal> value);
    partial void OnThisMonthExIntCoChanged();
    partial void OnBusinessUnitGroupChanging(string value);
    partial void OnBusinessUnitGroupChanged();
    partial void OnRevenueCategoryChanging(System.Nullable<int> value);
    partial void OnRevenueCategoryChanged();
    #endregion
		
		public INT_SNAPSHOT_REPORT()
		{
			OnCreated();
		}
		
		[Column(Storage="_CompanyItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyItemID
		{
			get
			{
				return this._CompanyItemID;
			}
			set
			{
				if ((this._CompanyItemID != value))
				{
					this.OnCompanyItemIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyItemID = value;
					this.SendPropertyChanged("CompanyItemID");
					this.OnCompanyItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyID", DbType="VarChar(5)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CurrentDate
		{
			get
			{
				return this._CurrentDate;
			}
			set
			{
				if ((this._CurrentDate != value))
				{
					this.OnCurrentDateChanging(value);
					this.SendPropertyChanging();
					this._CurrentDate = value;
					this.SendPropertyChanged("CurrentDate");
					this.OnCurrentDateChanged();
				}
			}
		}
		
		[Column(Storage="_ThisMonth", DbType="Money")]
		public System.Nullable<decimal> ThisMonth
		{
			get
			{
				return this._ThisMonth;
			}
			set
			{
				if ((this._ThisMonth != value))
				{
					this.OnThisMonthChanging(value);
					this.SendPropertyChanging();
					this._ThisMonth = value;
					this.SendPropertyChanged("ThisMonth");
					this.OnThisMonthChanged();
				}
			}
		}
		
		[Column(Storage="_ComparisonDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ComparisonDate
		{
			get
			{
				return this._ComparisonDate;
			}
			set
			{
				if ((this._ComparisonDate != value))
				{
					this.OnComparisonDateChanging(value);
					this.SendPropertyChanging();
					this._ComparisonDate = value;
					this.SendPropertyChanged("ComparisonDate");
					this.OnComparisonDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastMonth", DbType="Money")]
		public System.Nullable<decimal> LastMonth
		{
			get
			{
				return this._LastMonth;
			}
			set
			{
				if ((this._LastMonth != value))
				{
					this.OnLastMonthChanging(value);
					this.SendPropertyChanging();
					this._LastMonth = value;
					this.SendPropertyChanged("LastMonth");
					this.OnLastMonthChanged();
				}
			}
		}
		
		[Column(Storage="_BusinessIncreaseMTD", DbType="Money")]
		public System.Nullable<decimal> BusinessIncreaseMTD
		{
			get
			{
				return this._BusinessIncreaseMTD;
			}
			set
			{
				if ((this._BusinessIncreaseMTD != value))
				{
					this.OnBusinessIncreaseMTDChanging(value);
					this.SendPropertyChanging();
					this._BusinessIncreaseMTD = value;
					this.SendPropertyChanged("BusinessIncreaseMTD");
					this.OnBusinessIncreaseMTDChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_FirstMonth", DbType="Money")]
		public System.Nullable<decimal> FirstMonth
		{
			get
			{
				return this._FirstMonth;
			}
			set
			{
				if ((this._FirstMonth != value))
				{
					this.OnFirstMonthChanging(value);
					this.SendPropertyChanging();
					this._FirstMonth = value;
					this.SendPropertyChanged("FirstMonth");
					this.OnFirstMonthChanged();
				}
			}
		}
		
		[Column(Storage="_BusinessIncreaseYTD", DbType="Money")]
		public System.Nullable<decimal> BusinessIncreaseYTD
		{
			get
			{
				return this._BusinessIncreaseYTD;
			}
			set
			{
				if ((this._BusinessIncreaseYTD != value))
				{
					this.OnBusinessIncreaseYTDChanging(value);
					this.SendPropertyChanging();
					this._BusinessIncreaseYTD = value;
					this.SendPropertyChanged("BusinessIncreaseYTD");
					this.OnBusinessIncreaseYTDChanged();
				}
			}
		}
		
		[Column(Storage="_AnnualisedBilling", DbType="Money")]
		public System.Nullable<decimal> AnnualisedBilling
		{
			get
			{
				return this._AnnualisedBilling;
			}
			set
			{
				if ((this._AnnualisedBilling != value))
				{
					this.OnAnnualisedBillingChanging(value);
					this.SendPropertyChanging();
					this._AnnualisedBilling = value;
					this.SendPropertyChanged("AnnualisedBilling");
					this.OnAnnualisedBillingChanged();
				}
			}
		}
		
		[Column(Storage="_Target", DbType="Money")]
		public System.Nullable<decimal> Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[Column(Storage="_ToMeetTarget", DbType="Money")]
		public System.Nullable<decimal> ToMeetTarget
		{
			get
			{
				return this._ToMeetTarget;
			}
			set
			{
				if ((this._ToMeetTarget != value))
				{
					this.OnToMeetTargetChanging(value);
					this.SendPropertyChanging();
					this._ToMeetTarget = value;
					this.SendPropertyChanged("ToMeetTarget");
					this.OnToMeetTargetChanged();
				}
			}
		}
		
		[Column(Storage="_ThisMonthExIntCo", DbType="Money")]
		public System.Nullable<decimal> ThisMonthExIntCo
		{
			get
			{
				return this._ThisMonthExIntCo;
			}
			set
			{
				if ((this._ThisMonthExIntCo != value))
				{
					this.OnThisMonthExIntCoChanging(value);
					this.SendPropertyChanging();
					this._ThisMonthExIntCo = value;
					this.SendPropertyChanged("ThisMonthExIntCo");
					this.OnThisMonthExIntCoChanged();
				}
			}
		}
		
		[Column(Storage="_BusinessUnitGroup", DbType="VarChar(5)")]
		public string BusinessUnitGroup
		{
			get
			{
				return this._BusinessUnitGroup;
			}
			set
			{
				if ((this._BusinessUnitGroup != value))
				{
					this.OnBusinessUnitGroupChanging(value);
					this.SendPropertyChanging();
					this._BusinessUnitGroup = value;
					this.SendPropertyChanged("BusinessUnitGroup");
					this.OnBusinessUnitGroupChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this.OnRevenueCategoryChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategory = value;
					this.SendPropertyChanged("RevenueCategory");
					this.OnRevenueCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_STKORD_INVOICE_FREQUENCIES")]
	public partial class INT_STKORD_INVOICE_FREQUENCIES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FreqId;
		
		private string _FreqDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFreqIdChanging(int value);
    partial void OnFreqIdChanged();
    partial void OnFreqDescriptionChanging(string value);
    partial void OnFreqDescriptionChanged();
    #endregion
		
		public INT_STKORD_INVOICE_FREQUENCIES()
		{
			OnCreated();
		}
		
		[Column(Storage="_FreqId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FreqId
		{
			get
			{
				return this._FreqId;
			}
			set
			{
				if ((this._FreqId != value))
				{
					this.OnFreqIdChanging(value);
					this.SendPropertyChanging();
					this._FreqId = value;
					this.SendPropertyChanged("FreqId");
					this.OnFreqIdChanged();
				}
			}
		}
		
		[Column(Storage="_FreqDescription", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FreqDescription
		{
			get
			{
				return this._FreqDescription;
			}
			set
			{
				if ((this._FreqDescription != value))
				{
					this.OnFreqDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FreqDescription = value;
					this.SendPropertyChanged("FreqDescription");
					this.OnFreqDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_STKORD_REASON")]
	public partial class INT_STKORD_REASON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ReasonID;
		
		private string _ReasonDesc;
		
		private System.Nullable<int> _ReasonType;
		
		private System.Nullable<int> _GLPurchaseType;
		
		private EntityRef<INT_STKORD_REASON_TYPES> _INT_STKORD_REASON_TYPES;
		
		private EntitySet<STKORD> _STKORD;
		
		private EntitySet<STKORDITEM> _STKORDITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReasonIDChanging(short value);
    partial void OnReasonIDChanged();
    partial void OnReasonDescChanging(string value);
    partial void OnReasonDescChanged();
    partial void OnReasonTypeChanging(System.Nullable<int> value);
    partial void OnReasonTypeChanged();
    partial void OnGLPurchaseTypeChanging(System.Nullable<int> value);
    partial void OnGLPurchaseTypeChanged();
    #endregion
		
		public INT_STKORD_REASON()
		{
			this._INT_STKORD_REASON_TYPES = default(EntityRef<INT_STKORD_REASON_TYPES>);
			this._STKORD = new EntitySet<STKORD>(new Action<STKORD>(this.attach_STKORD), new Action<STKORD>(this.detach_STKORD));
			this._STKORDITEM = new EntitySet<STKORDITEM>(new Action<STKORDITEM>(this.attach_STKORDITEM), new Action<STKORDITEM>(this.detach_STKORDITEM));
			OnCreated();
		}
		
		[Column(Storage="_ReasonID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ReasonID
		{
			get
			{
				return this._ReasonID;
			}
			set
			{
				if ((this._ReasonID != value))
				{
					this.OnReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonID = value;
					this.SendPropertyChanged("ReasonID");
					this.OnReasonIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReasonDesc", DbType="VarChar(50)")]
		public string ReasonDesc
		{
			get
			{
				return this._ReasonDesc;
			}
			set
			{
				if ((this._ReasonDesc != value))
				{
					this.OnReasonDescChanging(value);
					this.SendPropertyChanging();
					this._ReasonDesc = value;
					this.SendPropertyChanged("ReasonDesc");
					this.OnReasonDescChanged();
				}
			}
		}
		
		[Column(Storage="_ReasonType", DbType="Int")]
		public System.Nullable<int> ReasonType
		{
			get
			{
				return this._ReasonType;
			}
			set
			{
				if ((this._ReasonType != value))
				{
					if (this._INT_STKORD_REASON_TYPES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReasonTypeChanging(value);
					this.SendPropertyChanging();
					this._ReasonType = value;
					this.SendPropertyChanged("ReasonType");
					this.OnReasonTypeChanged();
				}
			}
		}
		
		[Column(Storage="_GLPurchaseType", DbType="Int")]
		public System.Nullable<int> GLPurchaseType
		{
			get
			{
				return this._GLPurchaseType;
			}
			set
			{
				if ((this._GLPurchaseType != value))
				{
					this.OnGLPurchaseTypeChanging(value);
					this.SendPropertyChanging();
					this._GLPurchaseType = value;
					this.SendPropertyChanged("GLPurchaseType");
					this.OnGLPurchaseTypeChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_STKORD_REASON_INT_STKORD_REASON_TYPES", Storage="_INT_STKORD_REASON_TYPES", ThisKey="ReasonType", OtherKey="ReasonTypeID", IsForeignKey=true)]
		public INT_STKORD_REASON_TYPES INT_STKORD_REASON_TYPES
		{
			get
			{
				return this._INT_STKORD_REASON_TYPES.Entity;
			}
			set
			{
				INT_STKORD_REASON_TYPES previousValue = this._INT_STKORD_REASON_TYPES.Entity;
				if (((previousValue != value) 
							|| (this._INT_STKORD_REASON_TYPES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_STKORD_REASON_TYPES.Entity = null;
						previousValue.INT_STKORD_REASON.Remove(this);
					}
					this._INT_STKORD_REASON_TYPES.Entity = value;
					if ((value != null))
					{
						value.INT_STKORD_REASON.Add(this);
						this._ReasonType = value.ReasonTypeID;
					}
					else
					{
						this._ReasonType = default(Nullable<int>);
					}
					this.SendPropertyChanged("INT_STKORD_REASON_TYPES");
				}
			}
		}
		
		[Association(Name="FK_STKORD_INT_STKORD_REASON", Storage="_STKORD", ThisKey="ReasonID", OtherKey="STKORD_Reason", DeleteRule="NO ACTION")]
		public EntitySet<STKORD> STKORD
		{
			get
			{
				return this._STKORD;
			}
			set
			{
				this._STKORD.Assign(value);
			}
		}
		
		[Association(Name="FK_STKORDITEM_INT_STKORD_REASON", Storage="_STKORDITEM", ThisKey="ReasonID", OtherKey="STKORD_Reason", DeleteRule="NO ACTION")]
		public EntitySet<STKORDITEM> STKORDITEM
		{
			get
			{
				return this._STKORDITEM;
			}
			set
			{
				this._STKORDITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STKORD(STKORD entity)
		{
			this.SendPropertyChanging();
			entity.INT_STKORD_REASON = this;
		}
		
		private void detach_STKORD(STKORD entity)
		{
			this.SendPropertyChanging();
			entity.INT_STKORD_REASON = null;
		}
		
		private void attach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.INT_STKORD_REASON = this;
		}
		
		private void detach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.INT_STKORD_REASON = null;
		}
	}
	
	[Table(Name="dbo.INT_STKORD_REASON_TYPES")]
	public partial class INT_STKORD_REASON_TYPES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReasonTypeID;
		
		private string _ReasonType;
		
		private EntitySet<INT_STKORD_REASON> _INT_STKORD_REASON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReasonTypeIDChanging(int value);
    partial void OnReasonTypeIDChanged();
    partial void OnReasonTypeChanging(string value);
    partial void OnReasonTypeChanged();
    #endregion
		
		public INT_STKORD_REASON_TYPES()
		{
			this._INT_STKORD_REASON = new EntitySet<INT_STKORD_REASON>(new Action<INT_STKORD_REASON>(this.attach_INT_STKORD_REASON), new Action<INT_STKORD_REASON>(this.detach_INT_STKORD_REASON));
			OnCreated();
		}
		
		[Column(Storage="_ReasonTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReasonTypeID
		{
			get
			{
				return this._ReasonTypeID;
			}
			set
			{
				if ((this._ReasonTypeID != value))
				{
					this.OnReasonTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonTypeID = value;
					this.SendPropertyChanged("ReasonTypeID");
					this.OnReasonTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReasonType", DbType="VarChar(50)")]
		public string ReasonType
		{
			get
			{
				return this._ReasonType;
			}
			set
			{
				if ((this._ReasonType != value))
				{
					this.OnReasonTypeChanging(value);
					this.SendPropertyChanging();
					this._ReasonType = value;
					this.SendPropertyChanged("ReasonType");
					this.OnReasonTypeChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_STKORD_REASON_INT_STKORD_REASON_TYPES", Storage="_INT_STKORD_REASON", ThisKey="ReasonTypeID", OtherKey="ReasonType", DeleteRule="NO ACTION")]
		public EntitySet<INT_STKORD_REASON> INT_STKORD_REASON
		{
			get
			{
				return this._INT_STKORD_REASON;
			}
			set
			{
				this._INT_STKORD_REASON.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INT_STKORD_REASON(INT_STKORD_REASON entity)
		{
			this.SendPropertyChanging();
			entity.INT_STKORD_REASON_TYPES = this;
		}
		
		private void detach_INT_STKORD_REASON(INT_STKORD_REASON entity)
		{
			this.SendPropertyChanging();
			entity.INT_STKORD_REASON_TYPES = null;
		}
	}
	
	[Table(Name="dbo.INT_STOCK_ALIAS")]
	public partial class INT_STOCK_ALIAS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProdCode;
		
		private string _AliasProdCode;
		
		private string _Note;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnAliasProdCodeChanging(string value);
    partial void OnAliasProdCodeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public INT_STOCK_ALIAS()
		{
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_AliasProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AliasProdCode
		{
			get
			{
				return this._AliasProdCode;
			}
			set
			{
				if ((this._AliasProdCode != value))
				{
					this.OnAliasProdCodeChanging(value);
					this.SendPropertyChanging();
					this._AliasProdCode = value;
					this.SendPropertyChanged("AliasProdCode");
					this.OnAliasProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Note", DbType="VarChar(256)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[Association(Name="FK_ALIAS_PRODCODE", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.INT_STOCK_ALIAS.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_ALIAS.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_STOCK_BM")]
	public partial class INT_STOCK_BM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProdCode;
		
		private string _BM_ProdCode;
		
		private int _QTY;
		
		private string _Note;
		
		private EntityRef<STOCK> _STOCK;
		
		private EntityRef<STOCK> _BM_ProdCodeSTOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnBM_ProdCodeChanging(string value);
    partial void OnBM_ProdCodeChanged();
    partial void OnQTYChanging(int value);
    partial void OnQTYChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public INT_STOCK_BM()
		{
			this._STOCK = default(EntityRef<STOCK>);
			this._BM_ProdCodeSTOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BM_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BM_ProdCode
		{
			get
			{
				return this._BM_ProdCode;
			}
			set
			{
				if ((this._BM_ProdCode != value))
				{
					if (this._BM_ProdCodeSTOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBM_ProdCodeChanging(value);
					this.SendPropertyChanging();
					this._BM_ProdCode = value;
					this.SendPropertyChanged("BM_ProdCode");
					this.OnBM_ProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_QTY", DbType="Int NOT NULL")]
		public int QTY
		{
			get
			{
				return this._QTY;
			}
			set
			{
				if ((this._QTY != value))
				{
					this.OnQTYChanging(value);
					this.SendPropertyChanging();
					this._QTY = value;
					this.SendPropertyChanged("QTY");
					this.OnQTYChanged();
				}
			}
		}
		
		[Column(Storage="_Note", DbType="VarChar(256)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_BM_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.INT_STOCK_BM.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_BM.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_BM_STOCK1", Storage="_BM_ProdCodeSTOCK", ThisKey="BM_ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK BM_ProdCodeSTOCK
		{
			get
			{
				return this._BM_ProdCodeSTOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._BM_ProdCodeSTOCK.Entity;
				if (((previousValue != value) 
							|| (this._BM_ProdCodeSTOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BM_ProdCodeSTOCK.Entity = null;
						previousValue.ProdCodeINT_STOCK_BM.Remove(this);
					}
					this._BM_ProdCodeSTOCK.Entity = value;
					if ((value != null))
					{
						value.ProdCodeINT_STOCK_BM.Add(this);
						this._BM_ProdCode = value.ProdCode;
					}
					else
					{
						this._BM_ProdCode = default(string);
					}
					this.SendPropertyChanged("BM_ProdCodeSTOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_STOCK_COMPATIBILITY")]
	public partial class INT_STOCK_COMPATIBILITY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProdCode;
		
		private string _CompatProdCode;
		
		private string _Note;
		
		private EntityRef<STOCK> _STOCK;
		
		private EntityRef<STOCK> _CompatProdCodeSTOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnCompatProdCodeChanging(string value);
    partial void OnCompatProdCodeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public INT_STOCK_COMPATIBILITY()
		{
			this._STOCK = default(EntityRef<STOCK>);
			this._CompatProdCodeSTOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CompatProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatProdCode
		{
			get
			{
				return this._CompatProdCode;
			}
			set
			{
				if ((this._CompatProdCode != value))
				{
					if (this._CompatProdCodeSTOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompatProdCodeChanging(value);
					this.SendPropertyChanging();
					this._CompatProdCode = value;
					this.SendPropertyChanged("CompatProdCode");
					this.OnCompatProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Note", DbType="VarChar(256)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[Association(Name="FK_COMPATIBILITY_PRODCODE", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.INT_STOCK_COMPATIBILITY.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_COMPATIBILITY.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_COMPATIBILITY_STOCK", Storage="_CompatProdCodeSTOCK", ThisKey="CompatProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK CompatProdCodeSTOCK
		{
			get
			{
				return this._CompatProdCodeSTOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._CompatProdCodeSTOCK.Entity;
				if (((previousValue != value) 
							|| (this._CompatProdCodeSTOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompatProdCodeSTOCK.Entity = null;
						previousValue.ProdCodeINT_STOCK_COMPATIBILITY.Remove(this);
					}
					this._CompatProdCodeSTOCK.Entity = value;
					if ((value != null))
					{
						value.ProdCodeINT_STOCK_COMPATIBILITY.Add(this);
						this._CompatProdCode = value.ProdCode;
					}
					else
					{
						this._CompatProdCode = default(string);
					}
					this.SendPropertyChanged("CompatProdCodeSTOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_STOCK_LOC_SPECIFIC")]
	public partial class INT_STOCK_LOC_SPECIFIC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProdCode;
		
		private int _LocationID;
		
		private System.Nullable<int> _Min;
		
		private System.Nullable<int> _Max;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<bool> _Discontinued;
		
		private System.Nullable<System.DateTime> _DateDiscontinued;
		
		private System.Nullable<int> _LastShelf;
		
		private EntityRef<LOCATIONS> _LOCATIONS;
		
		private EntityRef<LOCATIONS_SHELF> _LOCATIONS_SHELF;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnMinChanging(System.Nullable<int> value);
    partial void OnMinChanged();
    partial void OnMaxChanging(System.Nullable<int> value);
    partial void OnMaxChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnDiscontinuedChanging(System.Nullable<bool> value);
    partial void OnDiscontinuedChanged();
    partial void OnDateDiscontinuedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDiscontinuedChanged();
    partial void OnLastShelfChanging(System.Nullable<int> value);
    partial void OnLastShelfChanged();
    #endregion
		
		public INT_STOCK_LOC_SPECIFIC()
		{
			this._LOCATIONS = default(EntityRef<LOCATIONS>);
			this._LOCATIONS_SHELF = default(EntityRef<LOCATIONS_SHELF>);
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._LOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_Min", DbType="Int")]
		public System.Nullable<int> Min
		{
			get
			{
				return this._Min;
			}
			set
			{
				if ((this._Min != value))
				{
					this.OnMinChanging(value);
					this.SendPropertyChanging();
					this._Min = value;
					this.SendPropertyChanged("Min");
					this.OnMinChanged();
				}
			}
		}
		
		[Column(Storage="_Max", DbType="Int")]
		public System.Nullable<int> Max
		{
			get
			{
				return this._Max;
			}
			set
			{
				if ((this._Max != value))
				{
					this.OnMaxChanging(value);
					this.SendPropertyChanging();
					this._Max = value;
					this.SendPropertyChanged("Max");
					this.OnMaxChanged();
				}
			}
		}
		
		[Column(Storage="_DateUpdated", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_Discontinued", DbType="Bit")]
		public System.Nullable<bool> Discontinued
		{
			get
			{
				return this._Discontinued;
			}
			set
			{
				if ((this._Discontinued != value))
				{
					this.OnDiscontinuedChanging(value);
					this.SendPropertyChanging();
					this._Discontinued = value;
					this.SendPropertyChanged("Discontinued");
					this.OnDiscontinuedChanged();
				}
			}
		}
		
		[Column(Storage="_DateDiscontinued", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateDiscontinued
		{
			get
			{
				return this._DateDiscontinued;
			}
			set
			{
				if ((this._DateDiscontinued != value))
				{
					this.OnDateDiscontinuedChanging(value);
					this.SendPropertyChanging();
					this._DateDiscontinued = value;
					this.SendPropertyChanged("DateDiscontinued");
					this.OnDateDiscontinuedChanged();
				}
			}
		}
		
		[Column(Storage="_LastShelf", DbType="Int")]
		public System.Nullable<int> LastShelf
		{
			get
			{
				return this._LastShelf;
			}
			set
			{
				if ((this._LastShelf != value))
				{
					if (this._LOCATIONS_SHELF.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastShelfChanging(value);
					this.SendPropertyChanging();
					this._LastShelf = value;
					this.SendPropertyChanged("LastShelf");
					this.OnLastShelfChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_LOC_SPECIFIC_LOCATIONS", Storage="_LOCATIONS", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true, DeleteOnNull=true)]
		public LOCATIONS LOCATIONS
		{
			get
			{
				return this._LOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS.Entity = null;
						previousValue.INT_STOCK_LOC_SPECIFIC.Remove(this);
					}
					this._LOCATIONS.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_LOC_SPECIFIC.Add(this);
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(int);
					}
					this.SendPropertyChanged("LOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_LOC_SPECIFIC_SHELF", Storage="_LOCATIONS_SHELF", ThisKey="LastShelf", OtherKey="ShelfLocationID", IsForeignKey=true)]
		public LOCATIONS_SHELF LOCATIONS_SHELF
		{
			get
			{
				return this._LOCATIONS_SHELF.Entity;
			}
			set
			{
				LOCATIONS_SHELF previousValue = this._LOCATIONS_SHELF.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS_SHELF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS_SHELF.Entity = null;
						previousValue.INT_STOCK_LOC_SPECIFIC.Remove(this);
					}
					this._LOCATIONS_SHELF.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_LOC_SPECIFIC.Add(this);
						this._LastShelf = value.ShelfLocationID;
					}
					else
					{
						this._LastShelf = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATIONS_SHELF");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_LOC_SPECIFIC_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true, DeleteOnNull=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.INT_STOCK_LOC_SPECIFIC.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_LOC_SPECIFIC.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_STOCK_OUTAGE")]
	public partial class INT_STOCK_OUTAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OutageID;
		
		private string _ProdCode;
		
		private string _ProdDescription;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _LocationID;
		
		private System.Nullable<int> _DebtorID;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
		private EntityRef<LOCATIONS> _LOCATIONS;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOutageIDChanging(int value);
    partial void OnOutageIDChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnProdDescriptionChanging(string value);
    partial void OnProdDescriptionChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnLocationIDChanging(System.Nullable<int> value);
    partial void OnLocationIDChanged();
    partial void OnDebtorIDChanging(System.Nullable<int> value);
    partial void OnDebtorIDChanged();
    #endregion
		
		public INT_STOCK_OUTAGE()
		{
			this._DEBTORS = default(EntityRef<DEBTORS>);
			this._LOCATIONS = default(EntityRef<LOCATIONS>);
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_OutageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OutageID
		{
			get
			{
				return this._OutageID;
			}
			set
			{
				if ((this._OutageID != value))
				{
					this.OnOutageIDChanging(value);
					this.SendPropertyChanging();
					this._OutageID = value;
					this.SendPropertyChanged("OutageID");
					this.OnOutageIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ProdDescription", DbType="VarChar(128)")]
		public string ProdDescription
		{
			get
			{
				return this._ProdDescription;
			}
			set
			{
				if ((this._ProdDescription != value))
				{
					this.OnProdDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProdDescription = value;
					this.SendPropertyChanged("ProdDescription");
					this.OnProdDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="VarChar(512)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int")]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._LOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_DebtorID", DbType="Int")]
		public System.Nullable<int> DebtorID
		{
			get
			{
				return this._DebtorID;
			}
			set
			{
				if ((this._DebtorID != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDebtorIDChanging(value);
					this.SendPropertyChanging();
					this._DebtorID = value;
					this.SendPropertyChanged("DebtorID");
					this.OnDebtorIDChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_OUTAGE_DEBTOR", Storage="_DEBTORS", ThisKey="DebtorID", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.INT_STOCK_OUTAGE.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_OUTAGE.Add(this);
						this._DebtorID = value.AccountID;
					}
					else
					{
						this._DebtorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_OUTAGE_LOCATION", Storage="_LOCATIONS", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LOCATIONS
		{
			get
			{
				return this._LOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS.Entity = null;
						previousValue.INT_STOCK_OUTAGE.Remove(this);
					}
					this._LOCATIONS.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_OUTAGE.Add(this);
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_OUTAGE_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.INT_STOCK_OUTAGE.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_OUTAGE.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_STOCK_TRANSFER_BATCH")]
	public partial class INT_STOCK_TRANSFER_BATCH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransferBatchID;
		
		private System.Nullable<System.DateTime> _BatchDate;
		
		private System.Nullable<int> _LocFrom;
		
		private System.Nullable<int> _LocTo;
		
		private string _User;
		
		private string _Comment;
		
		private System.Nullable<int> _OrdNum;
		
		private EntityRef<LOCATIONS> _LOCATIONS;
		
		private EntityRef<LOCATIONS> _LocToLOCATIONS;
		
		private EntityRef<STKORD> _STKORD;
		
		private EntityRef<EMPLOYEES> _EMPLOYEES;
		
		private EntitySet<INT_STOCKTRANSIT> _INT_STOCKTRANSIT;
		
		private EntitySet<STOCK_TRANSFER> _STOCK_TRANSFER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransferBatchIDChanging(int value);
    partial void OnTransferBatchIDChanged();
    partial void OnBatchDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBatchDateChanged();
    partial void OnLocFromChanging(System.Nullable<int> value);
    partial void OnLocFromChanged();
    partial void OnLocToChanging(System.Nullable<int> value);
    partial void OnLocToChanged();
    partial void OnUserChanging(string value);
    partial void OnUserChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnOrdNumChanging(System.Nullable<int> value);
    partial void OnOrdNumChanged();
    #endregion
		
		public INT_STOCK_TRANSFER_BATCH()
		{
			this._LOCATIONS = default(EntityRef<LOCATIONS>);
			this._LocToLOCATIONS = default(EntityRef<LOCATIONS>);
			this._STKORD = default(EntityRef<STKORD>);
			this._EMPLOYEES = default(EntityRef<EMPLOYEES>);
			this._INT_STOCKTRANSIT = new EntitySet<INT_STOCKTRANSIT>(new Action<INT_STOCKTRANSIT>(this.attach_INT_STOCKTRANSIT), new Action<INT_STOCKTRANSIT>(this.detach_INT_STOCKTRANSIT));
			this._STOCK_TRANSFER = new EntitySet<STOCK_TRANSFER>(new Action<STOCK_TRANSFER>(this.attach_STOCK_TRANSFER), new Action<STOCK_TRANSFER>(this.detach_STOCK_TRANSFER));
			OnCreated();
		}
		
		[Column(Storage="_TransferBatchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransferBatchID
		{
			get
			{
				return this._TransferBatchID;
			}
			set
			{
				if ((this._TransferBatchID != value))
				{
					this.OnTransferBatchIDChanging(value);
					this.SendPropertyChanging();
					this._TransferBatchID = value;
					this.SendPropertyChanged("TransferBatchID");
					this.OnTransferBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_BatchDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> BatchDate
		{
			get
			{
				return this._BatchDate;
			}
			set
			{
				if ((this._BatchDate != value))
				{
					this.OnBatchDateChanging(value);
					this.SendPropertyChanging();
					this._BatchDate = value;
					this.SendPropertyChanged("BatchDate");
					this.OnBatchDateChanged();
				}
			}
		}
		
		[Column(Storage="_LocFrom", DbType="Int")]
		public System.Nullable<int> LocFrom
		{
			get
			{
				return this._LocFrom;
			}
			set
			{
				if ((this._LocFrom != value))
				{
					if (this._LOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocFromChanging(value);
					this.SendPropertyChanging();
					this._LocFrom = value;
					this.SendPropertyChanged("LocFrom");
					this.OnLocFromChanged();
				}
			}
		}
		
		[Column(Storage="_LocTo", DbType="Int")]
		public System.Nullable<int> LocTo
		{
			get
			{
				return this._LocTo;
			}
			set
			{
				if ((this._LocTo != value))
				{
					if (this._LocToLOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocToChanging(value);
					this.SendPropertyChanging();
					this._LocTo = value;
					this.SendPropertyChanged("LocTo");
					this.OnLocToChanged();
				}
			}
		}
		
		[Column(Storage="_User", DbType="VarChar(25)")]
		public string User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					if (this._EMPLOYEES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserChanging(value);
					this.SendPropertyChanging();
					this._User = value;
					this.SendPropertyChanged("User");
					this.OnUserChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="VarChar(1028)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					if (this._STKORD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_TRANSFER_BATCH_LOCFROM", Storage="_LOCATIONS", ThisKey="LocFrom", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LOCATIONS
		{
			get
			{
				return this._LOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS.Entity = null;
						previousValue.INT_STOCK_TRANSFER_BATCH.Remove(this);
					}
					this._LOCATIONS.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_TRANSFER_BATCH.Add(this);
						this._LocFrom = value.LocationID;
					}
					else
					{
						this._LocFrom = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_TRANSFER_BATCH_LOCTO", Storage="_LocToLOCATIONS", ThisKey="LocTo", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LocToLOCATIONS
		{
			get
			{
				return this._LocToLOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LocToLOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LocToLOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LocToLOCATIONS.Entity = null;
						previousValue.Location.Remove(this);
					}
					this._LocToLOCATIONS.Entity = value;
					if ((value != null))
					{
						value.Location.Add(this);
						this._LocTo = value.LocationID;
					}
					else
					{
						this._LocTo = default(Nullable<int>);
					}
					this.SendPropertyChanged("LocToLOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_TRANSFER_BATCH_ORDNUM", Storage="_STKORD", ThisKey="OrdNum", OtherKey="OrdNum", IsForeignKey=true)]
		public STKORD STKORD
		{
			get
			{
				return this._STKORD.Entity;
			}
			set
			{
				STKORD previousValue = this._STKORD.Entity;
				if (((previousValue != value) 
							|| (this._STKORD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STKORD.Entity = null;
						previousValue.INT_STOCK_TRANSFER_BATCH.Remove(this);
					}
					this._STKORD.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_TRANSFER_BATCH.Add(this);
						this._OrdNum = value.OrdNum;
					}
					else
					{
						this._OrdNum = default(Nullable<int>);
					}
					this.SendPropertyChanged("STKORD");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_TRANSFER_BATCH_USER", Storage="_EMPLOYEES", ThisKey="User", OtherKey="EmployeeID", IsForeignKey=true)]
		public EMPLOYEES EMPLOYEES
		{
			get
			{
				return this._EMPLOYEES.Entity;
			}
			set
			{
				EMPLOYEES previousValue = this._EMPLOYEES.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEES.Entity = null;
						previousValue.INT_STOCK_TRANSFER_BATCH.Remove(this);
					}
					this._EMPLOYEES.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_TRANSFER_BATCH.Add(this);
						this._User = value.EmployeeID;
					}
					else
					{
						this._User = default(string);
					}
					this.SendPropertyChanged("EMPLOYEES");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCKTRANSIT_BATCH", Storage="_INT_STOCKTRANSIT", ThisKey="TransferBatchID", OtherKey="TransferBatchID", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCKTRANSIT> INT_STOCKTRANSIT
		{
			get
			{
				return this._INT_STOCKTRANSIT;
			}
			set
			{
				this._INT_STOCKTRANSIT.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_TRANSFER_BATCH", Storage="_STOCK_TRANSFER", ThisKey="TransferBatchID", OtherKey="TransferBatchID", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_TRANSFER> STOCK_TRANSFER
		{
			get
			{
				return this._STOCK_TRANSFER;
			}
			set
			{
				this._STOCK_TRANSFER.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INT_STOCKTRANSIT(INT_STOCKTRANSIT entity)
		{
			this.SendPropertyChanging();
			entity.INT_STOCK_TRANSFER_BATCH = this;
		}
		
		private void detach_INT_STOCKTRANSIT(INT_STOCKTRANSIT entity)
		{
			this.SendPropertyChanging();
			entity.INT_STOCK_TRANSFER_BATCH = null;
		}
		
		private void attach_STOCK_TRANSFER(STOCK_TRANSFER entity)
		{
			this.SendPropertyChanging();
			entity.INT_STOCK_TRANSFER_BATCH = this;
		}
		
		private void detach_STOCK_TRANSFER(STOCK_TRANSFER entity)
		{
			this.SendPropertyChanging();
			entity.INT_STOCK_TRANSFER_BATCH = null;
		}
	}
	
	[Table(Name="dbo.INT_STOCK_TRANSFER_STATUS")]
	public partial class INT_STOCK_TRANSFER_STATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _StatusID;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(byte value);
    partial void OnStatusIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public INT_STOCK_TRANSFER_STATUS()
		{
			OnCreated();
		}
		
		[Column(Storage="_StatusID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(28)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_STOCK_USAGE")]
	public partial class INT_STOCK_USAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UsageID;
		
		private string _ProdCode;
		
		private int _LocationID;
		
		private string _Engineer;
		
		private System.Nullable<System.DateTime> _DateOut;
		
		private System.Nullable<System.DateTime> _ReturnBy;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<System.DateTime> _ReturnedDate;
		
		private System.Nullable<bool> _NoReturn;
		
		private System.Nullable<decimal> _Qty;
		
		private System.Nullable<decimal> _RetGood;
		
		private System.Nullable<decimal> _RetBad;
		
		private System.Nullable<int> _BatchID;
		
		private System.Nullable<bool> _IsEng;
		
		private string _Comment;
		
		private System.Nullable<bool> _Rebuild;
		
		private System.Nullable<bool> _Audit;
		
		private System.Nullable<bool> _Test;
		
		private System.Nullable<bool> _Strip;
		
		private string _SerialNo;
		
		private System.Nullable<bool> _IsRepair;
		
		private string _Repairer;
		
		private string _Fault;
		
		private string _RepairerRef;
		
		private string _RetSerialoNo;
		
		private System.Nullable<decimal> _Cost;
		
		private string _InvoiceNum;
		
		private string _RetSerialNo;
		
		private string _CustomerName;
		
		private System.Nullable<bool> _Extended;
		
		private string _ExtendedNotes;
		
		private System.Nullable<decimal> _RetScrap;
		
		private string _FootprintsRef;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
		private EntityRef<LOCATIONS> _LOCATIONS;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsageIDChanging(int value);
    partial void OnUsageIDChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnEngineerChanging(string value);
    partial void OnEngineerChanged();
    partial void OnDateOutChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOutChanged();
    partial void OnReturnByChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnByChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnReturnedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnedDateChanged();
    partial void OnNoReturnChanging(System.Nullable<bool> value);
    partial void OnNoReturnChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnRetGoodChanging(System.Nullable<decimal> value);
    partial void OnRetGoodChanged();
    partial void OnRetBadChanging(System.Nullable<decimal> value);
    partial void OnRetBadChanged();
    partial void OnBatchIDChanging(System.Nullable<int> value);
    partial void OnBatchIDChanged();
    partial void OnIsEngChanging(System.Nullable<bool> value);
    partial void OnIsEngChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnRebuildChanging(System.Nullable<bool> value);
    partial void OnRebuildChanged();
    partial void OnAuditChanging(System.Nullable<bool> value);
    partial void OnAuditChanged();
    partial void OnTestChanging(System.Nullable<bool> value);
    partial void OnTestChanged();
    partial void OnStripChanging(System.Nullable<bool> value);
    partial void OnStripChanged();
    partial void OnSerialNoChanging(string value);
    partial void OnSerialNoChanged();
    partial void OnIsRepairChanging(System.Nullable<bool> value);
    partial void OnIsRepairChanged();
    partial void OnRepairerChanging(string value);
    partial void OnRepairerChanged();
    partial void OnFaultChanging(string value);
    partial void OnFaultChanged();
    partial void OnRepairerRefChanging(string value);
    partial void OnRepairerRefChanged();
    partial void OnRetSerialoNoChanging(string value);
    partial void OnRetSerialoNoChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnInvoiceNumChanging(string value);
    partial void OnInvoiceNumChanged();
    partial void OnRetSerialNoChanging(string value);
    partial void OnRetSerialNoChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnExtendedChanging(System.Nullable<bool> value);
    partial void OnExtendedChanged();
    partial void OnExtendedNotesChanging(string value);
    partial void OnExtendedNotesChanged();
    partial void OnRetScrapChanging(System.Nullable<decimal> value);
    partial void OnRetScrapChanged();
    partial void OnFootprintsRefChanging(string value);
    partial void OnFootprintsRefChanged();
    #endregion
		
		public INT_STOCK_USAGE()
		{
			this._DEBTORS = default(EntityRef<DEBTORS>);
			this._LOCATIONS = default(EntityRef<LOCATIONS>);
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_UsageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UsageID
		{
			get
			{
				return this._UsageID;
			}
			set
			{
				if ((this._UsageID != value))
				{
					this.OnUsageIDChanging(value);
					this.SendPropertyChanging();
					this._UsageID = value;
					this.SendPropertyChanged("UsageID");
					this.OnUsageIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._LOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_Engineer", DbType="VarChar(25)")]
		public string Engineer
		{
			get
			{
				return this._Engineer;
			}
			set
			{
				if ((this._Engineer != value))
				{
					this.OnEngineerChanging(value);
					this.SendPropertyChanging();
					this._Engineer = value;
					this.SendPropertyChanged("Engineer");
					this.OnEngineerChanged();
				}
			}
		}
		
		[Column(Storage="_DateOut", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateOut
		{
			get
			{
				return this._DateOut;
			}
			set
			{
				if ((this._DateOut != value))
				{
					this.OnDateOutChanging(value);
					this.SendPropertyChanging();
					this._DateOut = value;
					this.SendPropertyChanged("DateOut");
					this.OnDateOutChanged();
				}
			}
		}
		
		[Column(Storage="_ReturnBy", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ReturnBy
		{
			get
			{
				return this._ReturnBy;
			}
			set
			{
				if ((this._ReturnBy != value))
				{
					this.OnReturnByChanging(value);
					this.SendPropertyChanging();
					this._ReturnBy = value;
					this.SendPropertyChanged("ReturnBy");
					this.OnReturnByChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReturnedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ReturnedDate
		{
			get
			{
				return this._ReturnedDate;
			}
			set
			{
				if ((this._ReturnedDate != value))
				{
					this.OnReturnedDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnedDate = value;
					this.SendPropertyChanged("ReturnedDate");
					this.OnReturnedDateChanged();
				}
			}
		}
		
		[Column(Storage="_NoReturn", DbType="Bit")]
		public System.Nullable<bool> NoReturn
		{
			get
			{
				return this._NoReturn;
			}
			set
			{
				if ((this._NoReturn != value))
				{
					this.OnNoReturnChanging(value);
					this.SendPropertyChanging();
					this._NoReturn = value;
					this.SendPropertyChanged("NoReturn");
					this.OnNoReturnChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_RetGood", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> RetGood
		{
			get
			{
				return this._RetGood;
			}
			set
			{
				if ((this._RetGood != value))
				{
					this.OnRetGoodChanging(value);
					this.SendPropertyChanging();
					this._RetGood = value;
					this.SendPropertyChanged("RetGood");
					this.OnRetGoodChanged();
				}
			}
		}
		
		[Column(Storage="_RetBad", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> RetBad
		{
			get
			{
				return this._RetBad;
			}
			set
			{
				if ((this._RetBad != value))
				{
					this.OnRetBadChanging(value);
					this.SendPropertyChanging();
					this._RetBad = value;
					this.SendPropertyChanged("RetBad");
					this.OnRetBadChanged();
				}
			}
		}
		
		[Column(Storage="_BatchID", DbType="Int")]
		public System.Nullable<int> BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_IsEng", DbType="Bit")]
		public System.Nullable<bool> IsEng
		{
			get
			{
				return this._IsEng;
			}
			set
			{
				if ((this._IsEng != value))
				{
					this.OnIsEngChanging(value);
					this.SendPropertyChanging();
					this._IsEng = value;
					this.SendPropertyChanged("IsEng");
					this.OnIsEngChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="VarChar(2056)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Column(Storage="_Rebuild", DbType="Bit")]
		public System.Nullable<bool> Rebuild
		{
			get
			{
				return this._Rebuild;
			}
			set
			{
				if ((this._Rebuild != value))
				{
					this.OnRebuildChanging(value);
					this.SendPropertyChanging();
					this._Rebuild = value;
					this.SendPropertyChanged("Rebuild");
					this.OnRebuildChanged();
				}
			}
		}
		
		[Column(Storage="_Audit", DbType="Bit")]
		public System.Nullable<bool> Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[Column(Storage="_Test", DbType="Bit")]
		public System.Nullable<bool> Test
		{
			get
			{
				return this._Test;
			}
			set
			{
				if ((this._Test != value))
				{
					this.OnTestChanging(value);
					this.SendPropertyChanging();
					this._Test = value;
					this.SendPropertyChanged("Test");
					this.OnTestChanged();
				}
			}
		}
		
		[Column(Storage="_Strip", DbType="Bit")]
		public System.Nullable<bool> Strip
		{
			get
			{
				return this._Strip;
			}
			set
			{
				if ((this._Strip != value))
				{
					this.OnStripChanging(value);
					this.SendPropertyChanging();
					this._Strip = value;
					this.SendPropertyChanged("Strip");
					this.OnStripChanged();
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="VarChar(50)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[Column(Storage="_IsRepair", DbType="Bit")]
		public System.Nullable<bool> IsRepair
		{
			get
			{
				return this._IsRepair;
			}
			set
			{
				if ((this._IsRepair != value))
				{
					this.OnIsRepairChanging(value);
					this.SendPropertyChanging();
					this._IsRepair = value;
					this.SendPropertyChanged("IsRepair");
					this.OnIsRepairChanged();
				}
			}
		}
		
		[Column(Storage="_Repairer", DbType="VarChar(50)")]
		public string Repairer
		{
			get
			{
				return this._Repairer;
			}
			set
			{
				if ((this._Repairer != value))
				{
					this.OnRepairerChanging(value);
					this.SendPropertyChanging();
					this._Repairer = value;
					this.SendPropertyChanged("Repairer");
					this.OnRepairerChanged();
				}
			}
		}
		
		[Column(Storage="_Fault", DbType="VarChar(400)")]
		public string Fault
		{
			get
			{
				return this._Fault;
			}
			set
			{
				if ((this._Fault != value))
				{
					this.OnFaultChanging(value);
					this.SendPropertyChanging();
					this._Fault = value;
					this.SendPropertyChanged("Fault");
					this.OnFaultChanged();
				}
			}
		}
		
		[Column(Storage="_RepairerRef", DbType="VarChar(50)")]
		public string RepairerRef
		{
			get
			{
				return this._RepairerRef;
			}
			set
			{
				if ((this._RepairerRef != value))
				{
					this.OnRepairerRefChanging(value);
					this.SendPropertyChanging();
					this._RepairerRef = value;
					this.SendPropertyChanged("RepairerRef");
					this.OnRepairerRefChanged();
				}
			}
		}
		
		[Column(Storage="_RetSerialoNo", DbType="VarChar(50)")]
		public string RetSerialoNo
		{
			get
			{
				return this._RetSerialoNo;
			}
			set
			{
				if ((this._RetSerialoNo != value))
				{
					this.OnRetSerialoNoChanging(value);
					this.SendPropertyChanging();
					this._RetSerialoNo = value;
					this.SendPropertyChanged("RetSerialoNo");
					this.OnRetSerialoNoChanged();
				}
			}
		}
		
		[Column(Storage="_Cost", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceNum", DbType="VarChar(50)")]
		public string InvoiceNum
		{
			get
			{
				return this._InvoiceNum;
			}
			set
			{
				if ((this._InvoiceNum != value))
				{
					this.OnInvoiceNumChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNum = value;
					this.SendPropertyChanged("InvoiceNum");
					this.OnInvoiceNumChanged();
				}
			}
		}
		
		[Column(Storage="_RetSerialNo", DbType="VarChar(50)")]
		public string RetSerialNo
		{
			get
			{
				return this._RetSerialNo;
			}
			set
			{
				if ((this._RetSerialNo != value))
				{
					this.OnRetSerialNoChanging(value);
					this.SendPropertyChanging();
					this._RetSerialNo = value;
					this.SendPropertyChanged("RetSerialNo");
					this.OnRetSerialNoChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerName", DbType="VarChar(255)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[Column(Storage="_Extended", DbType="Bit")]
		public System.Nullable<bool> Extended
		{
			get
			{
				return this._Extended;
			}
			set
			{
				if ((this._Extended != value))
				{
					this.OnExtendedChanging(value);
					this.SendPropertyChanging();
					this._Extended = value;
					this.SendPropertyChanged("Extended");
					this.OnExtendedChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedNotes", DbType="VarChar(255)")]
		public string ExtendedNotes
		{
			get
			{
				return this._ExtendedNotes;
			}
			set
			{
				if ((this._ExtendedNotes != value))
				{
					this.OnExtendedNotesChanging(value);
					this.SendPropertyChanging();
					this._ExtendedNotes = value;
					this.SendPropertyChanged("ExtendedNotes");
					this.OnExtendedNotesChanged();
				}
			}
		}
		
		[Column(Storage="_RetScrap", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> RetScrap
		{
			get
			{
				return this._RetScrap;
			}
			set
			{
				if ((this._RetScrap != value))
				{
					this.OnRetScrapChanging(value);
					this.SendPropertyChanging();
					this._RetScrap = value;
					this.SendPropertyChanged("RetScrap");
					this.OnRetScrapChanged();
				}
			}
		}
		
		[Column(Storage="_FootprintsRef", DbType="VarChar(20)")]
		public string FootprintsRef
		{
			get
			{
				return this._FootprintsRef;
			}
			set
			{
				if ((this._FootprintsRef != value))
				{
					this.OnFootprintsRefChanging(value);
					this.SendPropertyChanging();
					this._FootprintsRef = value;
					this.SendPropertyChanged("FootprintsRef");
					this.OnFootprintsRefChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_USAGE_DEBTORS", Storage="_DEBTORS", ThisKey="CustomerID", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.INT_STOCK_USAGE.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_USAGE.Add(this);
						this._CustomerID = value.AccountID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_USAGE_LOCATION", Storage="_LOCATIONS", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LOCATIONS
		{
			get
			{
				return this._LOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS.Entity = null;
						previousValue.INT_STOCK_USAGE.Remove(this);
					}
					this._LOCATIONS.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_USAGE.Add(this);
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(int);
					}
					this.SendPropertyChanged("LOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_USAGE_PRODCODE", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.INT_STOCK_USAGE.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.INT_STOCK_USAGE.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_STOCKTRANSIT")]
	public partial class INT_STOCKTRANSIT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransferBatchID;
		
		private string _ProdCode;
		
		private System.Nullable<int> _LocFrom;
		
		private System.Nullable<int> _LocTo;
		
		private System.Nullable<decimal> _QTY;
		
		private System.Nullable<int> _OrdNum;
		
		private System.Nullable<decimal> _QTY_REC;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private EntityRef<INT_STOCK_TRANSFER_BATCH> _INT_STOCK_TRANSFER_BATCH;
		
		private EntityRef<LOCATIONS> _LOCATIONS;
		
		private EntityRef<STKORD> _STKORD;
		
		private EntityRef<STOCK> _STOCK;
		
		private EntityRef<LOCATIONS> _LocToLOCATIONS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransferBatchIDChanging(int value);
    partial void OnTransferBatchIDChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnLocFromChanging(System.Nullable<int> value);
    partial void OnLocFromChanged();
    partial void OnLocToChanging(System.Nullable<int> value);
    partial void OnLocToChanged();
    partial void OnQTYChanging(System.Nullable<decimal> value);
    partial void OnQTYChanged();
    partial void OnOrdNumChanging(System.Nullable<int> value);
    partial void OnOrdNumChanged();
    partial void OnQTY_RECChanging(System.Nullable<decimal> value);
    partial void OnQTY_RECChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    #endregion
		
		public INT_STOCKTRANSIT()
		{
			this._INT_STOCK_TRANSFER_BATCH = default(EntityRef<INT_STOCK_TRANSFER_BATCH>);
			this._LOCATIONS = default(EntityRef<LOCATIONS>);
			this._STKORD = default(EntityRef<STKORD>);
			this._STOCK = default(EntityRef<STOCK>);
			this._LocToLOCATIONS = default(EntityRef<LOCATIONS>);
			OnCreated();
		}
		
		[Column(Storage="_TransferBatchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransferBatchID
		{
			get
			{
				return this._TransferBatchID;
			}
			set
			{
				if ((this._TransferBatchID != value))
				{
					if (this._INT_STOCK_TRANSFER_BATCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransferBatchIDChanging(value);
					this.SendPropertyChanging();
					this._TransferBatchID = value;
					this.SendPropertyChanged("TransferBatchID");
					this.OnTransferBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LocFrom", DbType="Int")]
		public System.Nullable<int> LocFrom
		{
			get
			{
				return this._LocFrom;
			}
			set
			{
				if ((this._LocFrom != value))
				{
					if (this._LOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocFromChanging(value);
					this.SendPropertyChanging();
					this._LocFrom = value;
					this.SendPropertyChanged("LocFrom");
					this.OnLocFromChanged();
				}
			}
		}
		
		[Column(Storage="_LocTo", DbType="Int")]
		public System.Nullable<int> LocTo
		{
			get
			{
				return this._LocTo;
			}
			set
			{
				if ((this._LocTo != value))
				{
					if (this._LocToLOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocToChanging(value);
					this.SendPropertyChanging();
					this._LocTo = value;
					this.SendPropertyChanged("LocTo");
					this.OnLocToChanged();
				}
			}
		}
		
		[Column(Storage="_QTY", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> QTY
		{
			get
			{
				return this._QTY;
			}
			set
			{
				if ((this._QTY != value))
				{
					this.OnQTYChanging(value);
					this.SendPropertyChanging();
					this._QTY = value;
					this.SendPropertyChanged("QTY");
					this.OnQTYChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					if (this._STKORD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_QTY_REC", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> QTY_REC
		{
			get
			{
				return this._QTY_REC;
			}
			set
			{
				if ((this._QTY_REC != value))
				{
					this.OnQTY_RECChanging(value);
					this.SendPropertyChanging();
					this._QTY_REC = value;
					this.SendPropertyChanged("QTY_REC");
					this.OnQTY_RECChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_STOCKTRANSIT_BATCH", Storage="_INT_STOCK_TRANSFER_BATCH", ThisKey="TransferBatchID", OtherKey="TransferBatchID", IsForeignKey=true)]
		public INT_STOCK_TRANSFER_BATCH INT_STOCK_TRANSFER_BATCH
		{
			get
			{
				return this._INT_STOCK_TRANSFER_BATCH.Entity;
			}
			set
			{
				INT_STOCK_TRANSFER_BATCH previousValue = this._INT_STOCK_TRANSFER_BATCH.Entity;
				if (((previousValue != value) 
							|| (this._INT_STOCK_TRANSFER_BATCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_STOCK_TRANSFER_BATCH.Entity = null;
						previousValue.INT_STOCKTRANSIT.Remove(this);
					}
					this._INT_STOCK_TRANSFER_BATCH.Entity = value;
					if ((value != null))
					{
						value.INT_STOCKTRANSIT.Add(this);
						this._TransferBatchID = value.TransferBatchID;
					}
					else
					{
						this._TransferBatchID = default(int);
					}
					this.SendPropertyChanged("INT_STOCK_TRANSFER_BATCH");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCKTRANSIT_FROM", Storage="_LOCATIONS", ThisKey="LocFrom", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LOCATIONS
		{
			get
			{
				return this._LOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS.Entity = null;
						previousValue.INT_STOCKTRANSIT.Remove(this);
					}
					this._LOCATIONS.Entity = value;
					if ((value != null))
					{
						value.INT_STOCKTRANSIT.Add(this);
						this._LocFrom = value.LocationID;
					}
					else
					{
						this._LocFrom = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCKTRANSIT_PO", Storage="_STKORD", ThisKey="OrdNum", OtherKey="OrdNum", IsForeignKey=true)]
		public STKORD STKORD
		{
			get
			{
				return this._STKORD.Entity;
			}
			set
			{
				STKORD previousValue = this._STKORD.Entity;
				if (((previousValue != value) 
							|| (this._STKORD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STKORD.Entity = null;
						previousValue.INT_STOCKTRANSIT.Remove(this);
					}
					this._STKORD.Entity = value;
					if ((value != null))
					{
						value.INT_STOCKTRANSIT.Add(this);
						this._OrdNum = value.OrdNum;
					}
					else
					{
						this._OrdNum = default(Nullable<int>);
					}
					this.SendPropertyChanged("STKORD");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCKTRANSIT_PROD", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.INT_STOCKTRANSIT.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.INT_STOCKTRANSIT.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		[Association(Name="FK_INT_STOCKTRANSIT_TO", Storage="_LocToLOCATIONS", ThisKey="LocTo", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LocToLOCATIONS
		{
			get
			{
				return this._LocToLOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LocToLOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LocToLOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LocToLOCATIONS.Entity = null;
						previousValue.INT_STOCKTRANSIT_TO.Remove(this);
					}
					this._LocToLOCATIONS.Entity = value;
					if ((value != null))
					{
						value.INT_STOCKTRANSIT_TO.Add(this);
						this._LocTo = value.LocationID;
					}
					else
					{
						this._LocTo = default(Nullable<int>);
					}
					this.SendPropertyChanged("LocToLOCATIONS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_TM_INVOICE_COMMISSION_RUNS")]
	public partial class INT_TM_INVOICE_COMMISSION_RUNS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RunID;
		
		private System.Nullable<System.DateTime> _RunDate;
		
		private string _RunBy;
		
		private EntitySet<INT_TM_INVOICE_COMMISSIONS> _INT_TM_INVOICE_COMMISSIONS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRunIDChanging(int value);
    partial void OnRunIDChanged();
    partial void OnRunDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRunDateChanged();
    partial void OnRunByChanging(string value);
    partial void OnRunByChanged();
    #endregion
		
		public INT_TM_INVOICE_COMMISSION_RUNS()
		{
			this._INT_TM_INVOICE_COMMISSIONS = new EntitySet<INT_TM_INVOICE_COMMISSIONS>(new Action<INT_TM_INVOICE_COMMISSIONS>(this.attach_INT_TM_INVOICE_COMMISSIONS), new Action<INT_TM_INVOICE_COMMISSIONS>(this.detach_INT_TM_INVOICE_COMMISSIONS));
			OnCreated();
		}
		
		[Column(Storage="_RunID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RunID
		{
			get
			{
				return this._RunID;
			}
			set
			{
				if ((this._RunID != value))
				{
					this.OnRunIDChanging(value);
					this.SendPropertyChanging();
					this._RunID = value;
					this.SendPropertyChanged("RunID");
					this.OnRunIDChanged();
				}
			}
		}
		
		[Column(Storage="_RunDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this.OnRunDateChanging(value);
					this.SendPropertyChanging();
					this._RunDate = value;
					this.SendPropertyChanged("RunDate");
					this.OnRunDateChanged();
				}
			}
		}
		
		[Column(Storage="_RunBy", DbType="VarChar(25)")]
		public string RunBy
		{
			get
			{
				return this._RunBy;
			}
			set
			{
				if ((this._RunBy != value))
				{
					this.OnRunByChanging(value);
					this.SendPropertyChanging();
					this._RunBy = value;
					this.SendPropertyChanged("RunBy");
					this.OnRunByChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_TM_INVOICE_COMMISSIONS_INT_TM_INVOICE_COMMISSION_RUNS", Storage="_INT_TM_INVOICE_COMMISSIONS", ThisKey="RunID", OtherKey="CommissionRun", DeleteRule="NO ACTION")]
		public EntitySet<INT_TM_INVOICE_COMMISSIONS> INT_TM_INVOICE_COMMISSIONS
		{
			get
			{
				return this._INT_TM_INVOICE_COMMISSIONS;
			}
			set
			{
				this._INT_TM_INVOICE_COMMISSIONS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INT_TM_INVOICE_COMMISSIONS(INT_TM_INVOICE_COMMISSIONS entity)
		{
			this.SendPropertyChanging();
			entity.INT_TM_INVOICE_COMMISSION_RUNS = this;
		}
		
		private void detach_INT_TM_INVOICE_COMMISSIONS(INT_TM_INVOICE_COMMISSIONS entity)
		{
			this.SendPropertyChanging();
			entity.INT_TM_INVOICE_COMMISSION_RUNS = null;
		}
	}
	
	[Table(Name="dbo.INT_TM_INVOICE_COMMISSIONS")]
	public partial class INT_TM_INVOICE_COMMISSIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExpenseID;
		
		private int _OrdNum;
		
		private string _Engineer;
		
		private System.Nullable<int> _ReadyToPay;
		
		private System.Nullable<decimal> _Commission;
		
		private System.Nullable<bool> _Paid;
		
		private System.Nullable<int> _ItemNum;
		
		private System.Nullable<int> _CommissionRun;
		
		private EntityRef<INT_TM_INVOICE_COMMISSION_RUNS> _INT_TM_INVOICE_COMMISSION_RUNS;
		
		private EntityRef<SALESORD> _SALESORD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpenseIDChanging(int value);
    partial void OnExpenseIDChanged();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnEngineerChanging(string value);
    partial void OnEngineerChanged();
    partial void OnReadyToPayChanging(System.Nullable<int> value);
    partial void OnReadyToPayChanged();
    partial void OnCommissionChanging(System.Nullable<decimal> value);
    partial void OnCommissionChanged();
    partial void OnPaidChanging(System.Nullable<bool> value);
    partial void OnPaidChanged();
    partial void OnItemNumChanging(System.Nullable<int> value);
    partial void OnItemNumChanged();
    partial void OnCommissionRunChanging(System.Nullable<int> value);
    partial void OnCommissionRunChanged();
    #endregion
		
		public INT_TM_INVOICE_COMMISSIONS()
		{
			this._INT_TM_INVOICE_COMMISSION_RUNS = default(EntityRef<INT_TM_INVOICE_COMMISSION_RUNS>);
			this._SALESORD = default(EntityRef<SALESORD>);
			OnCreated();
		}
		
		[Column(Storage="_ExpenseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExpenseID
		{
			get
			{
				return this._ExpenseID;
			}
			set
			{
				if ((this._ExpenseID != value))
				{
					this.OnExpenseIDChanging(value);
					this.SendPropertyChanging();
					this._ExpenseID = value;
					this.SendPropertyChanged("ExpenseID");
					this.OnExpenseIDChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int NOT NULL")]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					if (this._SALESORD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_Engineer", DbType="VarChar(25)")]
		public string Engineer
		{
			get
			{
				return this._Engineer;
			}
			set
			{
				if ((this._Engineer != value))
				{
					this.OnEngineerChanging(value);
					this.SendPropertyChanging();
					this._Engineer = value;
					this.SendPropertyChanged("Engineer");
					this.OnEngineerChanged();
				}
			}
		}
		
		[Column(Storage="_ReadyToPay", DbType="Int")]
		public System.Nullable<int> ReadyToPay
		{
			get
			{
				return this._ReadyToPay;
			}
			set
			{
				if ((this._ReadyToPay != value))
				{
					this.OnReadyToPayChanging(value);
					this.SendPropertyChanging();
					this._ReadyToPay = value;
					this.SendPropertyChanged("ReadyToPay");
					this.OnReadyToPayChanged();
				}
			}
		}
		
		[Column(Storage="_Commission", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Commission
		{
			get
			{
				return this._Commission;
			}
			set
			{
				if ((this._Commission != value))
				{
					this.OnCommissionChanging(value);
					this.SendPropertyChanging();
					this._Commission = value;
					this.SendPropertyChanged("Commission");
					this.OnCommissionChanged();
				}
			}
		}
		
		[Column(Storage="_Paid", DbType="Bit")]
		public System.Nullable<bool> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[Column(Storage="_ItemNum", DbType="Int")]
		public System.Nullable<int> ItemNum
		{
			get
			{
				return this._ItemNum;
			}
			set
			{
				if ((this._ItemNum != value))
				{
					this.OnItemNumChanging(value);
					this.SendPropertyChanging();
					this._ItemNum = value;
					this.SendPropertyChanged("ItemNum");
					this.OnItemNumChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionRun", DbType="Int")]
		public System.Nullable<int> CommissionRun
		{
			get
			{
				return this._CommissionRun;
			}
			set
			{
				if ((this._CommissionRun != value))
				{
					if (this._INT_TM_INVOICE_COMMISSION_RUNS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommissionRunChanging(value);
					this.SendPropertyChanging();
					this._CommissionRun = value;
					this.SendPropertyChanged("CommissionRun");
					this.OnCommissionRunChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_TM_INVOICE_COMMISSIONS_INT_TM_INVOICE_COMMISSION_RUNS", Storage="_INT_TM_INVOICE_COMMISSION_RUNS", ThisKey="CommissionRun", OtherKey="RunID", IsForeignKey=true)]
		public INT_TM_INVOICE_COMMISSION_RUNS INT_TM_INVOICE_COMMISSION_RUNS
		{
			get
			{
				return this._INT_TM_INVOICE_COMMISSION_RUNS.Entity;
			}
			set
			{
				INT_TM_INVOICE_COMMISSION_RUNS previousValue = this._INT_TM_INVOICE_COMMISSION_RUNS.Entity;
				if (((previousValue != value) 
							|| (this._INT_TM_INVOICE_COMMISSION_RUNS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_TM_INVOICE_COMMISSION_RUNS.Entity = null;
						previousValue.INT_TM_INVOICE_COMMISSIONS.Remove(this);
					}
					this._INT_TM_INVOICE_COMMISSION_RUNS.Entity = value;
					if ((value != null))
					{
						value.INT_TM_INVOICE_COMMISSIONS.Add(this);
						this._CommissionRun = value.RunID;
					}
					else
					{
						this._CommissionRun = default(Nullable<int>);
					}
					this.SendPropertyChanged("INT_TM_INVOICE_COMMISSION_RUNS");
				}
			}
		}
		
		[Association(Name="FK_INT_TM_INVOICE_COMMISSIONS_ORDNUM", Storage="_SALESORD", ThisKey="OrdNum", OtherKey="OrdNum", IsForeignKey=true)]
		public SALESORD SALESORD
		{
			get
			{
				return this._SALESORD.Entity;
			}
			set
			{
				SALESORD previousValue = this._SALESORD.Entity;
				if (((previousValue != value) 
							|| (this._SALESORD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALESORD.Entity = null;
						previousValue.INT_TM_INVOICE_COMMISSIONS.Remove(this);
					}
					this._SALESORD.Entity = value;
					if ((value != null))
					{
						value.INT_TM_INVOICE_COMMISSIONS.Add(this);
						this._OrdNum = value.OrdNum;
					}
					else
					{
						this._OrdNum = default(int);
					}
					this.SendPropertyChanged("SALESORD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_TM_INVOICE_EXPENSEITEMS")]
	public partial class INT_TM_INVOICE_EXPENSEITEMS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExpenseID;
		
		private int _OrdNum;
		
		private string _Description;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<int> _ItemNum;
		
		private EntityRef<SALESORD> _SALESORD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpenseIDChanging(int value);
    partial void OnExpenseIDChanged();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnItemNumChanging(System.Nullable<int> value);
    partial void OnItemNumChanged();
    #endregion
		
		public INT_TM_INVOICE_EXPENSEITEMS()
		{
			this._SALESORD = default(EntityRef<SALESORD>);
			OnCreated();
		}
		
		[Column(Storage="_ExpenseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExpenseID
		{
			get
			{
				return this._ExpenseID;
			}
			set
			{
				if ((this._ExpenseID != value))
				{
					this.OnExpenseIDChanging(value);
					this.SendPropertyChanging();
					this._ExpenseID = value;
					this.SendPropertyChanged("ExpenseID");
					this.OnExpenseIDChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int NOT NULL")]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					if (this._SALESORD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Cost", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[Column(Storage="_ItemNum", DbType="Int")]
		public System.Nullable<int> ItemNum
		{
			get
			{
				return this._ItemNum;
			}
			set
			{
				if ((this._ItemNum != value))
				{
					this.OnItemNumChanging(value);
					this.SendPropertyChanging();
					this._ItemNum = value;
					this.SendPropertyChanged("ItemNum");
					this.OnItemNumChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_TM_INVOICE_EXPENSEITEMS_ORDNUM", Storage="_SALESORD", ThisKey="OrdNum", OtherKey="OrdNum", IsForeignKey=true)]
		public SALESORD SALESORD
		{
			get
			{
				return this._SALESORD.Entity;
			}
			set
			{
				SALESORD previousValue = this._SALESORD.Entity;
				if (((previousValue != value) 
							|| (this._SALESORD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALESORD.Entity = null;
						previousValue.INT_TM_INVOICE_EXPENSEITEMS.Remove(this);
					}
					this._SALESORD.Entity = value;
					if ((value != null))
					{
						value.INT_TM_INVOICE_EXPENSEITEMS.Add(this);
						this._OrdNum = value.OrdNum;
					}
					else
					{
						this._OrdNum = default(int);
					}
					this.SendPropertyChanged("SALESORD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.INT_TM_INVOICEITEMS")]
	public partial class INT_TM_INVOICEITEMS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _OrdNum;
		
		private System.Nullable<System.DateTime> _JobDate;
		
		private string _JobRef;
		
		private string _Description;
		
		private System.Nullable<decimal> _Price;
		
		private string _Eng;
		
		private EntityRef<SALESORD> _SALESORD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnJobDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJobDateChanged();
    partial void OnJobRefChanging(string value);
    partial void OnJobRefChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnEngChanging(string value);
    partial void OnEngChanged();
    #endregion
		
		public INT_TM_INVOICEITEMS()
		{
			this._SALESORD = default(EntityRef<SALESORD>);
			OnCreated();
		}
		
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int NOT NULL")]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					if (this._SALESORD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_JobDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobDate
		{
			get
			{
				return this._JobDate;
			}
			set
			{
				if ((this._JobDate != value))
				{
					this.OnJobDateChanging(value);
					this.SendPropertyChanging();
					this._JobDate = value;
					this.SendPropertyChanged("JobDate");
					this.OnJobDateChanged();
				}
			}
		}
		
		[Column(Storage="_JobRef", DbType="VarChar(32)")]
		public string JobRef
		{
			get
			{
				return this._JobRef;
			}
			set
			{
				if ((this._JobRef != value))
				{
					this.OnJobRefChanging(value);
					this.SendPropertyChanging();
					this._JobRef = value;
					this.SendPropertyChanged("JobRef");
					this.OnJobRefChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Eng", DbType="VarChar(25)")]
		public string Eng
		{
			get
			{
				return this._Eng;
			}
			set
			{
				if ((this._Eng != value))
				{
					this.OnEngChanging(value);
					this.SendPropertyChanging();
					this._Eng = value;
					this.SendPropertyChanged("Eng");
					this.OnEngChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_TM_INVOICEITEMS_ORDNUM", Storage="_SALESORD", ThisKey="OrdNum", OtherKey="OrdNum", IsForeignKey=true)]
		public SALESORD SALESORD
		{
			get
			{
				return this._SALESORD.Entity;
			}
			set
			{
				SALESORD previousValue = this._SALESORD.Entity;
				if (((previousValue != value) 
							|| (this._SALESORD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALESORD.Entity = null;
						previousValue.INT_TM_INVOICEITEMS.Remove(this);
					}
					this._SALESORD.Entity = value;
					if ((value != null))
					{
						value.INT_TM_INVOICEITEMS.Add(this);
						this._OrdNum = value.OrdNum;
					}
					else
					{
						this._OrdNum = default(int);
					}
					this.SendPropertyChanged("SALESORD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Internal_DRContractUpdate")]
	public partial class Internal_DRContractUpdate
	{
		
		private System.Nullable<int> _BillingId;
		
		private System.Nullable<int> _LocationId;
		
		private string _State;
		
		private System.Nullable<int> _ContractItemId;
		
		private string _DeviceCode;
		
		private string _NewDeviceCode;
		
		public Internal_DRContractUpdate()
		{
		}
		
		[Column(Name="Billing Id", Storage="_BillingId", DbType="Int")]
		public System.Nullable<int> BillingId
		{
			get
			{
				return this._BillingId;
			}
			set
			{
				if ((this._BillingId != value))
				{
					this._BillingId = value;
				}
			}
		}
		
		[Column(Name="Location Id", Storage="_LocationId", DbType="Int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this._LocationId = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="NVarChar(255)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_ContractItemId", DbType="Int")]
		public System.Nullable<int> ContractItemId
		{
			get
			{
				return this._ContractItemId;
			}
			set
			{
				if ((this._ContractItemId != value))
				{
					this._ContractItemId = value;
				}
			}
		}
		
		[Column(Name="Device Code", Storage="_DeviceCode", DbType="NVarChar(255)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
		
		[Column(Name="New Device Code", Storage="_NewDeviceCode", DbType="NVarChar(255)")]
		public string NewDeviceCode
		{
			get
			{
				return this._NewDeviceCode;
			}
			set
			{
				if ((this._NewDeviceCode != value))
				{
					this._NewDeviceCode = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.INTERNAL_MonthName_Mapping")]
	public partial class INTERNAL_MonthName_Mapping
	{
		
		private System.Nullable<int> _MonthNumber;
		
		private string _MonthName;
		
		public INTERNAL_MonthName_Mapping()
		{
		}
		
		[Column(Name="monthNumber", Storage="_MonthNumber", DbType="Int")]
		public System.Nullable<int> MonthNumber
		{
			get
			{
				return this._MonthNumber;
			}
			set
			{
				if ((this._MonthNumber != value))
				{
					this._MonthNumber = value;
				}
			}
		}
		
		[Column(Name="monthName", Storage="_MonthName", DbType="VarChar(10)")]
		public string MonthName
		{
			get
			{
				return this._MonthName;
			}
			set
			{
				if ((this._MonthName != value))
				{
					this._MonthName = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Internal_NewCodesRevCat")]
	public partial class Internal_NewCodesRevCat
	{
		
		private string _Prodcode;
		
		private string _DeviceCode;
		
		private System.Nullable<int> _RevCat;
		
		public Internal_NewCodesRevCat()
		{
		}
		
		[Column(Storage="_Prodcode", DbType="NVarChar(255)")]
		public string Prodcode
		{
			get
			{
				return this._Prodcode;
			}
			set
			{
				if ((this._Prodcode != value))
				{
					this._Prodcode = value;
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="NVarChar(255)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
		
		[Column(Storage="_RevCat", DbType="Int")]
		public System.Nullable<int> RevCat
		{
			get
			{
				return this._RevCat;
			}
			set
			{
				if ((this._RevCat != value))
				{
					this._RevCat = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Internal_NewDRDevices")]
	public partial class Internal_NewDRDevices
	{
		
		private System.Nullable<int> _BillingId;
		
		private System.Nullable<int> _LocationId;
		
		private System.Nullable<int> _ContractItemId;
		
		private string _DeviceCode;
		
		private string _NewDeviceCode;
		
		private System.Nullable<int> _RevCat;
		
		public Internal_NewDRDevices()
		{
		}
		
		[Column(Name="Billing Id", Storage="_BillingId", DbType="Int")]
		public System.Nullable<int> BillingId
		{
			get
			{
				return this._BillingId;
			}
			set
			{
				if ((this._BillingId != value))
				{
					this._BillingId = value;
				}
			}
		}
		
		[Column(Name="Location Id", Storage="_LocationId", DbType="Int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this._LocationId = value;
				}
			}
		}
		
		[Column(Storage="_ContractItemId", DbType="Int")]
		public System.Nullable<int> ContractItemId
		{
			get
			{
				return this._ContractItemId;
			}
			set
			{
				if ((this._ContractItemId != value))
				{
					this._ContractItemId = value;
				}
			}
		}
		
		[Column(Name="Device Code", Storage="_DeviceCode", DbType="NVarChar(255)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
		
		[Column(Name="New Device Code", Storage="_NewDeviceCode", DbType="NVarChar(255)")]
		public string NewDeviceCode
		{
			get
			{
				return this._NewDeviceCode;
			}
			set
			{
				if ((this._NewDeviceCode != value))
				{
					this._NewDeviceCode = value;
				}
			}
		}
		
		[Column(Storage="_RevCat", DbType="Int")]
		public System.Nullable<int> RevCat
		{
			get
			{
				return this._RevCat;
			}
			set
			{
				if ((this._RevCat != value))
				{
					this._RevCat = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.INTERNAL_UserNameTranslation")]
	public partial class INTERNAL_UserNameTranslation
	{
		
		private string _Logon_Name;
		
		private string _Full_Name;
		
		public INTERNAL_UserNameTranslation()
		{
		}
		
		[Column(Storage="_Logon_Name", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Logon_Name
		{
			get
			{
				return this._Logon_Name;
			}
			set
			{
				if ((this._Logon_Name != value))
				{
					this._Logon_Name = value;
				}
			}
		}
		
		[Column(Storage="_Full_Name", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Full_Name
		{
			get
			{
				return this._Full_Name;
			}
			set
			{
				if ((this._Full_Name != value))
				{
					this._Full_Name = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.INVOICE_DATES")]
	public partial class INVOICE_DATES
	{
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _SC_INVNUM;
		
		public INVOICE_DATES()
		{
		}
		
		[Column(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_SC_INVNUM", DbType="Int")]
		public System.Nullable<int> SC_INVNUM
		{
			get
			{
				return this._SC_INVNUM;
			}
			set
			{
				if ((this._SC_INVNUM != value))
				{
					this._SC_INVNUM = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.IP_CE")]
	public partial class IP_CE
	{
		
		private string _CEID;
		
		private System.Nullable<int> _SC_LocAccountID;
		
		private string _SC_CE;
		
		public IP_CE()
		{
		}
		
		[Column(Name="CE ID", Storage="_CEID", DbType="NVarChar(255)")]
		public string CEID
		{
			get
			{
				return this._CEID;
			}
			set
			{
				if ((this._CEID != value))
				{
					this._CEID = value;
				}
			}
		}
		
		[Column(Storage="_SC_LocAccountID", DbType="Int")]
		public System.Nullable<int> SC_LocAccountID
		{
			get
			{
				return this._SC_LocAccountID;
			}
			set
			{
				if ((this._SC_LocAccountID != value))
				{
					this._SC_LocAccountID = value;
				}
			}
		}
		
		[Column(Storage="_SC_CE", DbType="NVarChar(50)")]
		public string SC_CE
		{
			get
			{
				return this._SC_CE;
			}
			set
			{
				if ((this._SC_CE != value))
				{
					this._SC_CE = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.IP_OLD_INVS")]
	public partial class IP_OLD_INVS
	{
		
		private string _CUSTID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Type;
		
		private string _Reference;
		
		private System.Nullable<double> _AmountBilled;
		
		private System.Nullable<double> _AmountOwing;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<int> _NewInvNum;
		
		public IP_OLD_INVS()
		{
		}
		
		[Column(Name="CUST ID", Storage="_CUSTID", DbType="NVarChar(5)")]
		public string CUSTID
		{
			get
			{
				return this._CUSTID;
			}
			set
			{
				if ((this._CUSTID != value))
				{
					this._CUSTID = value;
				}
			}
		}
		
		[Column(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="NVarChar(1)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_Reference", DbType="NVarChar(5)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this._Reference = value;
				}
			}
		}
		
		[Column(Name="Amount Billed", Storage="_AmountBilled", DbType="Float")]
		public System.Nullable<double> AmountBilled
		{
			get
			{
				return this._AmountBilled;
			}
			set
			{
				if ((this._AmountBilled != value))
				{
					this._AmountBilled = value;
				}
			}
		}
		
		[Column(Name="Amount Owing", Storage="_AmountOwing", DbType="Float")]
		public System.Nullable<double> AmountOwing
		{
			get
			{
				return this._AmountOwing;
			}
			set
			{
				if ((this._AmountOwing != value))
				{
					this._AmountOwing = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_NewInvNum", DbType="Int")]
		public System.Nullable<int> NewInvNum
		{
			get
			{
				return this._NewInvNum;
			}
			set
			{
				if ((this._NewInvNum != value))
				{
					this._NewInvNum = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.IPNSW_OLD_INVS")]
	public partial class IPNSW_OLD_INVS
	{
		
		private string _CUSTID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Type;
		
		private string _Reference;
		
		private System.Nullable<double> _AmountBilled;
		
		private System.Nullable<double> _AmountOwing;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<int> _NewInvNum;
		
		public IPNSW_OLD_INVS()
		{
		}
		
		[Column(Name="CUST ID", Storage="_CUSTID", DbType="NVarChar(5)")]
		public string CUSTID
		{
			get
			{
				return this._CUSTID;
			}
			set
			{
				if ((this._CUSTID != value))
				{
					this._CUSTID = value;
				}
			}
		}
		
		[Column(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="NVarChar(1)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_Reference", DbType="NVarChar(5)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this._Reference = value;
				}
			}
		}
		
		[Column(Name="Amount Billed", Storage="_AmountBilled", DbType="Float")]
		public System.Nullable<double> AmountBilled
		{
			get
			{
				return this._AmountBilled;
			}
			set
			{
				if ((this._AmountBilled != value))
				{
					this._AmountBilled = value;
				}
			}
		}
		
		[Column(Name="Amount Owing", Storage="_AmountOwing", DbType="Float")]
		public System.Nullable<double> AmountOwing
		{
			get
			{
				return this._AmountOwing;
			}
			set
			{
				if ((this._AmountOwing != value))
				{
					this._AmountOwing = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_NewInvNum", DbType="Int")]
		public System.Nullable<int> NewInvNum
		{
			get
			{
				return this._NewInvNum;
			}
			set
			{
				if ((this._NewInvNum != value))
				{
					this._NewInvNum = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.LABELHEADINGS")]
	public partial class LABELHEADINGS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NKey;
		
		private string _LabelHead;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNKeyChanging(int value);
    partial void OnNKeyChanged();
    partial void OnLabelHeadChanging(string value);
    partial void OnLabelHeadChanged();
    #endregion
		
		public LABELHEADINGS()
		{
			OnCreated();
		}
		
		[Column(Storage="_NKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NKey
		{
			get
			{
				return this._NKey;
			}
			set
			{
				if ((this._NKey != value))
				{
					this.OnNKeyChanging(value);
					this.SendPropertyChanging();
					this._NKey = value;
					this.SendPropertyChanged("NKey");
					this.OnNKeyChanged();
				}
			}
		}
		
		[Column(Storage="_LabelHead", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LabelHead
		{
			get
			{
				return this._LabelHead;
			}
			set
			{
				if ((this._LabelHead != value))
				{
					this.OnLabelHeadChanging(value);
					this.SendPropertyChanging();
					this._LabelHead = value;
					this.SendPropertyChanged("LabelHead");
					this.OnLabelHeadChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LOCATIONS")]
	public partial class LOCATIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationID;
		
		private string _Name;
		
		private System.Nullable<bool> _MarkAsAllocated;
		
		private System.Nullable<bool> _IgnoreInTotals;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Address4;
		
		private string _City;
		
		private string _State;
		
		private string _PrimaryContact;
		
		private System.Nullable<byte> _CompanyNum;
		
		private System.Nullable<int> _LocGroupID;
		
		private string _PostCode;
		
		private string _Phone;
		
		private string _POApprovalState;
		
		private System.Nullable<int> _LocTypeID;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntitySet<DEBTORS> _DEBTORS;
		
		private EntitySet<INT_STOCK_LOC_SPECIFIC> _INT_STOCK_LOC_SPECIFIC;
		
		private EntitySet<INT_STOCK_OUTAGE> _INT_STOCK_OUTAGE;
		
		private EntitySet<INT_STOCK_TRANSFER_BATCH> _INT_STOCK_TRANSFER_BATCH;
		
		private EntitySet<INT_STOCK_TRANSFER_BATCH> _Location;
		
		private EntitySet<INT_STOCK_USAGE> _INT_STOCK_USAGE;
		
		private EntitySet<INT_STOCKTRANSIT> _INT_STOCKTRANSIT;
		
		private EntitySet<INT_STOCKTRANSIT> _INT_STOCKTRANSIT_TO;
		
		private EntityRef<LOCATIONS_GROUP> _LOCATIONS_GROUP;
		
		private EntityRef<LOCATIONS_TYPE> _LOCATIONS_TYPE;
		
		private EntitySet<LOCATIONS_SHELF> _LOCATIONS_SHELF;
		
		private EntitySet<STKORD> _STKORD;
		
		private EntitySet<STOCK_RECEIVED> _STOCK_RECEIVED;
		
		private EntitySet<STOCK_RECEIVED_TMP> _STOCK_RECEIVED_TMP;
		
		private EntitySet<STOCK_TRANSFER> _STOCK_TRANSFER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMarkAsAllocatedChanging(System.Nullable<bool> value);
    partial void OnMarkAsAllocatedChanged();
    partial void OnIgnoreInTotalsChanging(System.Nullable<bool> value);
    partial void OnIgnoreInTotalsChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnAddress4Changing(string value);
    partial void OnAddress4Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPrimaryContactChanging(string value);
    partial void OnPrimaryContactChanged();
    partial void OnCompanyNumChanging(System.Nullable<byte> value);
    partial void OnCompanyNumChanged();
    partial void OnLocGroupIDChanging(System.Nullable<int> value);
    partial void OnLocGroupIDChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPOApprovalStateChanging(string value);
    partial void OnPOApprovalStateChanged();
    partial void OnLocTypeIDChanging(System.Nullable<int> value);
    partial void OnLocTypeIDChanged();
    #endregion
		
		public LOCATIONS()
		{
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			this._DEBTORS = new EntitySet<DEBTORS>(new Action<DEBTORS>(this.attach_DEBTORS), new Action<DEBTORS>(this.detach_DEBTORS));
			this._INT_STOCK_LOC_SPECIFIC = new EntitySet<INT_STOCK_LOC_SPECIFIC>(new Action<INT_STOCK_LOC_SPECIFIC>(this.attach_INT_STOCK_LOC_SPECIFIC), new Action<INT_STOCK_LOC_SPECIFIC>(this.detach_INT_STOCK_LOC_SPECIFIC));
			this._INT_STOCK_OUTAGE = new EntitySet<INT_STOCK_OUTAGE>(new Action<INT_STOCK_OUTAGE>(this.attach_INT_STOCK_OUTAGE), new Action<INT_STOCK_OUTAGE>(this.detach_INT_STOCK_OUTAGE));
			this._INT_STOCK_TRANSFER_BATCH = new EntitySet<INT_STOCK_TRANSFER_BATCH>(new Action<INT_STOCK_TRANSFER_BATCH>(this.attach_INT_STOCK_TRANSFER_BATCH), new Action<INT_STOCK_TRANSFER_BATCH>(this.detach_INT_STOCK_TRANSFER_BATCH));
			this._Location = new EntitySet<INT_STOCK_TRANSFER_BATCH>(new Action<INT_STOCK_TRANSFER_BATCH>(this.attach_Location), new Action<INT_STOCK_TRANSFER_BATCH>(this.detach_Location));
			this._INT_STOCK_USAGE = new EntitySet<INT_STOCK_USAGE>(new Action<INT_STOCK_USAGE>(this.attach_INT_STOCK_USAGE), new Action<INT_STOCK_USAGE>(this.detach_INT_STOCK_USAGE));
			this._INT_STOCKTRANSIT = new EntitySet<INT_STOCKTRANSIT>(new Action<INT_STOCKTRANSIT>(this.attach_INT_STOCKTRANSIT), new Action<INT_STOCKTRANSIT>(this.detach_INT_STOCKTRANSIT));
			this._INT_STOCKTRANSIT_TO = new EntitySet<INT_STOCKTRANSIT>(new Action<INT_STOCKTRANSIT>(this.attach_INT_STOCKTRANSIT_TO), new Action<INT_STOCKTRANSIT>(this.detach_INT_STOCKTRANSIT_TO));
			this._LOCATIONS_GROUP = default(EntityRef<LOCATIONS_GROUP>);
			this._LOCATIONS_TYPE = default(EntityRef<LOCATIONS_TYPE>);
			this._LOCATIONS_SHELF = new EntitySet<LOCATIONS_SHELF>(new Action<LOCATIONS_SHELF>(this.attach_LOCATIONS_SHELF), new Action<LOCATIONS_SHELF>(this.detach_LOCATIONS_SHELF));
			this._STKORD = new EntitySet<STKORD>(new Action<STKORD>(this.attach_STKORD), new Action<STKORD>(this.detach_STKORD));
			this._STOCK_RECEIVED = new EntitySet<STOCK_RECEIVED>(new Action<STOCK_RECEIVED>(this.attach_STOCK_RECEIVED), new Action<STOCK_RECEIVED>(this.detach_STOCK_RECEIVED));
			this._STOCK_RECEIVED_TMP = new EntitySet<STOCK_RECEIVED_TMP>(new Action<STOCK_RECEIVED_TMP>(this.attach_STOCK_RECEIVED_TMP), new Action<STOCK_RECEIVED_TMP>(this.detach_STOCK_RECEIVED_TMP));
			this._STOCK_TRANSFER = new EntitySet<STOCK_TRANSFER>(new Action<STOCK_TRANSFER>(this.attach_STOCK_TRANSFER), new Action<STOCK_TRANSFER>(this.detach_STOCK_TRANSFER));
			OnCreated();
		}
		
		[Column(Storage="_LocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_MarkAsAllocated", DbType="Bit")]
		public System.Nullable<bool> MarkAsAllocated
		{
			get
			{
				return this._MarkAsAllocated;
			}
			set
			{
				if ((this._MarkAsAllocated != value))
				{
					this.OnMarkAsAllocatedChanging(value);
					this.SendPropertyChanging();
					this._MarkAsAllocated = value;
					this.SendPropertyChanged("MarkAsAllocated");
					this.OnMarkAsAllocatedChanged();
				}
			}
		}
		
		[Column(Storage="_IgnoreInTotals", DbType="Bit")]
		public System.Nullable<bool> IgnoreInTotals
		{
			get
			{
				return this._IgnoreInTotals;
			}
			set
			{
				if ((this._IgnoreInTotals != value))
				{
					this.OnIgnoreInTotalsChanging(value);
					this.SendPropertyChanging();
					this._IgnoreInTotals = value;
					this.SendPropertyChanged("IgnoreInTotals");
					this.OnIgnoreInTotalsChanged();
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[Column(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[Column(Storage="_Address4", DbType="VarChar(50)")]
		public string Address4
		{
			get
			{
				return this._Address4;
			}
			set
			{
				if ((this._Address4 != value))
				{
					this.OnAddress4Changing(value);
					this.SendPropertyChanging();
					this._Address4 = value;
					this.SendPropertyChanged("Address4");
					this.OnAddress4Changed();
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(25)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_PrimaryContact", DbType="VarChar(15)")]
		public string PrimaryContact
		{
			get
			{
				return this._PrimaryContact;
			}
			set
			{
				if ((this._PrimaryContact != value))
				{
					this.OnPrimaryContactChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContact = value;
					this.SendPropertyChanged("PrimaryContact");
					this.OnPrimaryContactChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_LocGroupID", DbType="Int")]
		public System.Nullable<int> LocGroupID
		{
			get
			{
				return this._LocGroupID;
			}
			set
			{
				if ((this._LocGroupID != value))
				{
					if (this._LOCATIONS_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocGroupIDChanging(value);
					this.SendPropertyChanging();
					this._LocGroupID = value;
					this.SendPropertyChanged("LocGroupID");
					this.OnLocGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_PostCode", DbType="Char(4)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_POApprovalState", DbType="VarChar(5)")]
		public string POApprovalState
		{
			get
			{
				return this._POApprovalState;
			}
			set
			{
				if ((this._POApprovalState != value))
				{
					this.OnPOApprovalStateChanging(value);
					this.SendPropertyChanging();
					this._POApprovalState = value;
					this.SendPropertyChanged("POApprovalState");
					this.OnPOApprovalStateChanged();
				}
			}
		}
		
		[Column(Storage="_LocTypeID", DbType="Int")]
		public System.Nullable<int> LocTypeID
		{
			get
			{
				return this._LocTypeID;
			}
			set
			{
				if ((this._LocTypeID != value))
				{
					if (this._LOCATIONS_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocTypeIDChanging(value);
					this.SendPropertyChanging();
					this._LocTypeID = value;
					this.SendPropertyChanged("LocTypeID");
					this.OnLocTypeIDChanged();
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_PARTS_SHARE_LOCATIONS", Storage="_CTRAC_ITEM", ThisKey="LocationID", OtherKey="PartsShareLocation", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_DEBTORS_LOCATIONS", Storage="_DEBTORS", ThisKey="LocationID", OtherKey="StockLocation", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS> DEBTORS
		{
			get
			{
				return this._DEBTORS;
			}
			set
			{
				this._DEBTORS.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_LOC_SPECIFIC_LOCATIONS", Storage="_INT_STOCK_LOC_SPECIFIC", ThisKey="LocationID", OtherKey="LocationID", DeleteRule="CASCADE")]
		public EntitySet<INT_STOCK_LOC_SPECIFIC> INT_STOCK_LOC_SPECIFIC
		{
			get
			{
				return this._INT_STOCK_LOC_SPECIFIC;
			}
			set
			{
				this._INT_STOCK_LOC_SPECIFIC.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_OUTAGE_LOCATION", Storage="_INT_STOCK_OUTAGE", ThisKey="LocationID", OtherKey="LocationID", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_OUTAGE> INT_STOCK_OUTAGE
		{
			get
			{
				return this._INT_STOCK_OUTAGE;
			}
			set
			{
				this._INT_STOCK_OUTAGE.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_TRANSFER_BATCH_LOCFROM", Storage="_INT_STOCK_TRANSFER_BATCH", ThisKey="LocationID", OtherKey="LocFrom", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_TRANSFER_BATCH> INT_STOCK_TRANSFER_BATCH
		{
			get
			{
				return this._INT_STOCK_TRANSFER_BATCH;
			}
			set
			{
				this._INT_STOCK_TRANSFER_BATCH.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_TRANSFER_BATCH_LOCTO", Storage="_Location", ThisKey="LocationID", OtherKey="LocTo", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_TRANSFER_BATCH> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				this._Location.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_USAGE_LOCATION", Storage="_INT_STOCK_USAGE", ThisKey="LocationID", OtherKey="LocationID", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_USAGE> INT_STOCK_USAGE
		{
			get
			{
				return this._INT_STOCK_USAGE;
			}
			set
			{
				this._INT_STOCK_USAGE.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCKTRANSIT_FROM", Storage="_INT_STOCKTRANSIT", ThisKey="LocationID", OtherKey="LocFrom", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCKTRANSIT> INT_STOCKTRANSIT
		{
			get
			{
				return this._INT_STOCKTRANSIT;
			}
			set
			{
				this._INT_STOCKTRANSIT.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCKTRANSIT_TO", Storage="_INT_STOCKTRANSIT_TO", ThisKey="LocationID", OtherKey="LocTo", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCKTRANSIT> INT_STOCKTRANSIT_TO
		{
			get
			{
				return this._INT_STOCKTRANSIT_TO;
			}
			set
			{
				this._INT_STOCKTRANSIT_TO.Assign(value);
			}
		}
		
		[Association(Name="FK_LOCATIONS_LOCATIONS_GROUP", Storage="_LOCATIONS_GROUP", ThisKey="LocGroupID", OtherKey="LocGroupID", IsForeignKey=true)]
		public LOCATIONS_GROUP LOCATIONS_GROUP
		{
			get
			{
				return this._LOCATIONS_GROUP.Entity;
			}
			set
			{
				LOCATIONS_GROUP previousValue = this._LOCATIONS_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS_GROUP.Entity = null;
						previousValue.LOCATIONS.Remove(this);
					}
					this._LOCATIONS_GROUP.Entity = value;
					if ((value != null))
					{
						value.LOCATIONS.Add(this);
						this._LocGroupID = value.LocGroupID;
					}
					else
					{
						this._LocGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATIONS_GROUP");
				}
			}
		}
		
		[Association(Name="FK_LOCATIONS_LOCATIONS_TYPE", Storage="_LOCATIONS_TYPE", ThisKey="LocTypeID", OtherKey="LocTypeID", IsForeignKey=true)]
		public LOCATIONS_TYPE LOCATIONS_TYPE
		{
			get
			{
				return this._LOCATIONS_TYPE.Entity;
			}
			set
			{
				LOCATIONS_TYPE previousValue = this._LOCATIONS_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS_TYPE.Entity = null;
						previousValue.LOCATIONS.Remove(this);
					}
					this._LOCATIONS_TYPE.Entity = value;
					if ((value != null))
					{
						value.LOCATIONS.Add(this);
						this._LocTypeID = value.LocTypeID;
					}
					else
					{
						this._LocTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATIONS_TYPE");
				}
			}
		}
		
		[Association(Name="FK_LOCATIONS_SHELF_LOCATIONS", Storage="_LOCATIONS_SHELF", ThisKey="LocationID", OtherKey="LocationID", DeleteRule="NO ACTION")]
		public EntitySet<LOCATIONS_SHELF> LOCATIONS_SHELF
		{
			get
			{
				return this._LOCATIONS_SHELF;
			}
			set
			{
				this._LOCATIONS_SHELF.Assign(value);
			}
		}
		
		[Association(Name="FK_STKORD_SENDTOLOCATION", Storage="_STKORD", ThisKey="LocationID", OtherKey="SendToLocation", DeleteRule="NO ACTION")]
		public EntitySet<STKORD> STKORD
		{
			get
			{
				return this._STKORD;
			}
			set
			{
				this._STKORD.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_LOCATIONS", Storage="_STOCK_RECEIVED", ThisKey="LocationID", OtherKey="LocationID", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_RECEIVED> STOCK_RECEIVED
		{
			get
			{
				return this._STOCK_RECEIVED;
			}
			set
			{
				this._STOCK_RECEIVED.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_LOCATIONS_TMP", Storage="_STOCK_RECEIVED_TMP", ThisKey="LocationID", OtherKey="LocationID", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_RECEIVED_TMP> STOCK_RECEIVED_TMP
		{
			get
			{
				return this._STOCK_RECEIVED_TMP;
			}
			set
			{
				this._STOCK_RECEIVED_TMP.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_TRANSFER_LOCATIONS_TO", Storage="_STOCK_TRANSFER", ThisKey="LocationID", OtherKey="ToLoc", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_TRANSFER> STOCK_TRANSFER
		{
			get
			{
				return this._STOCK_TRANSFER;
			}
			set
			{
				this._STOCK_TRANSFER.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = null;
		}
		
		private void attach_DEBTORS(DEBTORS entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = this;
		}
		
		private void detach_DEBTORS(DEBTORS entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = null;
		}
		
		private void attach_INT_STOCK_LOC_SPECIFIC(INT_STOCK_LOC_SPECIFIC entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = this;
		}
		
		private void detach_INT_STOCK_LOC_SPECIFIC(INT_STOCK_LOC_SPECIFIC entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = null;
		}
		
		private void attach_INT_STOCK_OUTAGE(INT_STOCK_OUTAGE entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = this;
		}
		
		private void detach_INT_STOCK_OUTAGE(INT_STOCK_OUTAGE entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = null;
		}
		
		private void attach_INT_STOCK_TRANSFER_BATCH(INT_STOCK_TRANSFER_BATCH entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = this;
		}
		
		private void detach_INT_STOCK_TRANSFER_BATCH(INT_STOCK_TRANSFER_BATCH entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = null;
		}
		
		private void attach_Location(INT_STOCK_TRANSFER_BATCH entity)
		{
			this.SendPropertyChanging();
			entity.LocToLOCATIONS = this;
		}
		
		private void detach_Location(INT_STOCK_TRANSFER_BATCH entity)
		{
			this.SendPropertyChanging();
			entity.LocToLOCATIONS = null;
		}
		
		private void attach_INT_STOCK_USAGE(INT_STOCK_USAGE entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = this;
		}
		
		private void detach_INT_STOCK_USAGE(INT_STOCK_USAGE entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = null;
		}
		
		private void attach_INT_STOCKTRANSIT(INT_STOCKTRANSIT entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = this;
		}
		
		private void detach_INT_STOCKTRANSIT(INT_STOCKTRANSIT entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = null;
		}
		
		private void attach_INT_STOCKTRANSIT_TO(INT_STOCKTRANSIT entity)
		{
			this.SendPropertyChanging();
			entity.LocToLOCATIONS = this;
		}
		
		private void detach_INT_STOCKTRANSIT_TO(INT_STOCKTRANSIT entity)
		{
			this.SendPropertyChanging();
			entity.LocToLOCATIONS = null;
		}
		
		private void attach_LOCATIONS_SHELF(LOCATIONS_SHELF entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = this;
		}
		
		private void detach_LOCATIONS_SHELF(LOCATIONS_SHELF entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = null;
		}
		
		private void attach_STKORD(STKORD entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = this;
		}
		
		private void detach_STKORD(STKORD entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = null;
		}
		
		private void attach_STOCK_RECEIVED(STOCK_RECEIVED entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = this;
		}
		
		private void detach_STOCK_RECEIVED(STOCK_RECEIVED entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = null;
		}
		
		private void attach_STOCK_RECEIVED_TMP(STOCK_RECEIVED_TMP entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = this;
		}
		
		private void detach_STOCK_RECEIVED_TMP(STOCK_RECEIVED_TMP entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = null;
		}
		
		private void attach_STOCK_TRANSFER(STOCK_TRANSFER entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = this;
		}
		
		private void detach_STOCK_TRANSFER(STOCK_TRANSFER entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS = null;
		}
	}
	
	[Table(Name="dbo.LOCATIONS_GROUP")]
	public partial class LOCATIONS_GROUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocGroupID;
		
		private string _LocGroupDesc;
		
		private EntitySet<LOCATIONS> _LOCATIONS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocGroupIDChanging(int value);
    partial void OnLocGroupIDChanged();
    partial void OnLocGroupDescChanging(string value);
    partial void OnLocGroupDescChanged();
    #endregion
		
		public LOCATIONS_GROUP()
		{
			this._LOCATIONS = new EntitySet<LOCATIONS>(new Action<LOCATIONS>(this.attach_LOCATIONS), new Action<LOCATIONS>(this.detach_LOCATIONS));
			OnCreated();
		}
		
		[Column(Storage="_LocGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LocGroupID
		{
			get
			{
				return this._LocGroupID;
			}
			set
			{
				if ((this._LocGroupID != value))
				{
					this.OnLocGroupIDChanging(value);
					this.SendPropertyChanging();
					this._LocGroupID = value;
					this.SendPropertyChanged("LocGroupID");
					this.OnLocGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_LocGroupDesc", DbType="VarChar(50)")]
		public string LocGroupDesc
		{
			get
			{
				return this._LocGroupDesc;
			}
			set
			{
				if ((this._LocGroupDesc != value))
				{
					this.OnLocGroupDescChanging(value);
					this.SendPropertyChanging();
					this._LocGroupDesc = value;
					this.SendPropertyChanged("LocGroupDesc");
					this.OnLocGroupDescChanged();
				}
			}
		}
		
		[Association(Name="FK_LOCATIONS_LOCATIONS_GROUP", Storage="_LOCATIONS", ThisKey="LocGroupID", OtherKey="LocGroupID", DeleteRule="NO ACTION")]
		public EntitySet<LOCATIONS> LOCATIONS
		{
			get
			{
				return this._LOCATIONS;
			}
			set
			{
				this._LOCATIONS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOCATIONS(LOCATIONS entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS_GROUP = this;
		}
		
		private void detach_LOCATIONS(LOCATIONS entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS_GROUP = null;
		}
	}
	
	[Table(Name="dbo.LOCATIONS_SHELF")]
	public partial class LOCATIONS_SHELF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShelfLocationID;
		
		private int _LocationID;
		
		private string _ShelfDesc;
		
		private string _BinDesc;
		
		private string _SerialNo;
		
		private bool _IsTransferTarget;
		
		private bool _IsDespatch;
		
		private System.Nullable<bool> _IsRetBadTarget;
		
		private EntitySet<INT_STOCK_LOC_SPECIFIC> _INT_STOCK_LOC_SPECIFIC;
		
		private EntityRef<LOCATIONS> _LOCATIONS;
		
		private EntitySet<STOCK_SHELF_LOCATIONS> _STOCK_SHELF_LOCATIONS;
		
		private EntitySet<STOCK_SHELF_LOCATIONS_POVALUES> _STOCK_SHELF_LOCATIONS_POVALUES;
		
		private EntitySet<STOCK_TRANSFER> _STOCK_TRANSFER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShelfLocationIDChanging(int value);
    partial void OnShelfLocationIDChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnShelfDescChanging(string value);
    partial void OnShelfDescChanged();
    partial void OnBinDescChanging(string value);
    partial void OnBinDescChanged();
    partial void OnSerialNoChanging(string value);
    partial void OnSerialNoChanged();
    partial void OnIsTransferTargetChanging(bool value);
    partial void OnIsTransferTargetChanged();
    partial void OnIsDespatchChanging(bool value);
    partial void OnIsDespatchChanged();
    partial void OnIsRetBadTargetChanging(System.Nullable<bool> value);
    partial void OnIsRetBadTargetChanged();
    #endregion
		
		public LOCATIONS_SHELF()
		{
			this._INT_STOCK_LOC_SPECIFIC = new EntitySet<INT_STOCK_LOC_SPECIFIC>(new Action<INT_STOCK_LOC_SPECIFIC>(this.attach_INT_STOCK_LOC_SPECIFIC), new Action<INT_STOCK_LOC_SPECIFIC>(this.detach_INT_STOCK_LOC_SPECIFIC));
			this._LOCATIONS = default(EntityRef<LOCATIONS>);
			this._STOCK_SHELF_LOCATIONS = new EntitySet<STOCK_SHELF_LOCATIONS>(new Action<STOCK_SHELF_LOCATIONS>(this.attach_STOCK_SHELF_LOCATIONS), new Action<STOCK_SHELF_LOCATIONS>(this.detach_STOCK_SHELF_LOCATIONS));
			this._STOCK_SHELF_LOCATIONS_POVALUES = new EntitySet<STOCK_SHELF_LOCATIONS_POVALUES>(new Action<STOCK_SHELF_LOCATIONS_POVALUES>(this.attach_STOCK_SHELF_LOCATIONS_POVALUES), new Action<STOCK_SHELF_LOCATIONS_POVALUES>(this.detach_STOCK_SHELF_LOCATIONS_POVALUES));
			this._STOCK_TRANSFER = new EntitySet<STOCK_TRANSFER>(new Action<STOCK_TRANSFER>(this.attach_STOCK_TRANSFER), new Action<STOCK_TRANSFER>(this.detach_STOCK_TRANSFER));
			OnCreated();
		}
		
		[Column(Storage="_ShelfLocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShelfLocationID
		{
			get
			{
				return this._ShelfLocationID;
			}
			set
			{
				if ((this._ShelfLocationID != value))
				{
					this.OnShelfLocationIDChanging(value);
					this.SendPropertyChanging();
					this._ShelfLocationID = value;
					this.SendPropertyChanged("ShelfLocationID");
					this.OnShelfLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._LOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_ShelfDesc", DbType="VarChar(40)")]
		public string ShelfDesc
		{
			get
			{
				return this._ShelfDesc;
			}
			set
			{
				if ((this._ShelfDesc != value))
				{
					this.OnShelfDescChanging(value);
					this.SendPropertyChanging();
					this._ShelfDesc = value;
					this.SendPropertyChanged("ShelfDesc");
					this.OnShelfDescChanged();
				}
			}
		}
		
		[Column(Storage="_BinDesc", DbType="VarChar(28)")]
		public string BinDesc
		{
			get
			{
				return this._BinDesc;
			}
			set
			{
				if ((this._BinDesc != value))
				{
					this.OnBinDescChanging(value);
					this.SendPropertyChanging();
					this._BinDesc = value;
					this.SendPropertyChanged("BinDesc");
					this.OnBinDescChanged();
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="VarChar(28)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[Column(Storage="_IsTransferTarget", DbType="Bit NOT NULL")]
		public bool IsTransferTarget
		{
			get
			{
				return this._IsTransferTarget;
			}
			set
			{
				if ((this._IsTransferTarget != value))
				{
					this.OnIsTransferTargetChanging(value);
					this.SendPropertyChanging();
					this._IsTransferTarget = value;
					this.SendPropertyChanged("IsTransferTarget");
					this.OnIsTransferTargetChanged();
				}
			}
		}
		
		[Column(Storage="_IsDespatch", DbType="Bit NOT NULL")]
		public bool IsDespatch
		{
			get
			{
				return this._IsDespatch;
			}
			set
			{
				if ((this._IsDespatch != value))
				{
					this.OnIsDespatchChanging(value);
					this.SendPropertyChanging();
					this._IsDespatch = value;
					this.SendPropertyChanged("IsDespatch");
					this.OnIsDespatchChanged();
				}
			}
		}
		
		[Column(Storage="_IsRetBadTarget", DbType="Bit")]
		public System.Nullable<bool> IsRetBadTarget
		{
			get
			{
				return this._IsRetBadTarget;
			}
			set
			{
				if ((this._IsRetBadTarget != value))
				{
					this.OnIsRetBadTargetChanging(value);
					this.SendPropertyChanging();
					this._IsRetBadTarget = value;
					this.SendPropertyChanged("IsRetBadTarget");
					this.OnIsRetBadTargetChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_LOC_SPECIFIC_SHELF", Storage="_INT_STOCK_LOC_SPECIFIC", ThisKey="ShelfLocationID", OtherKey="LastShelf", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_LOC_SPECIFIC> INT_STOCK_LOC_SPECIFIC
		{
			get
			{
				return this._INT_STOCK_LOC_SPECIFIC;
			}
			set
			{
				this._INT_STOCK_LOC_SPECIFIC.Assign(value);
			}
		}
		
		[Association(Name="FK_LOCATIONS_SHELF_LOCATIONS", Storage="_LOCATIONS", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LOCATIONS
		{
			get
			{
				return this._LOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS.Entity = null;
						previousValue.LOCATIONS_SHELF.Remove(this);
					}
					this._LOCATIONS.Entity = value;
					if ((value != null))
					{
						value.LOCATIONS_SHELF.Add(this);
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(int);
					}
					this.SendPropertyChanged("LOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_STOCK_SHELF_LOCATIONS_LOCATIONS_SHELF", Storage="_STOCK_SHELF_LOCATIONS", ThisKey="ShelfLocationID", OtherKey="ShelfLocationId", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_SHELF_LOCATIONS> STOCK_SHELF_LOCATIONS
		{
			get
			{
				return this._STOCK_SHELF_LOCATIONS;
			}
			set
			{
				this._STOCK_SHELF_LOCATIONS.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_SHELF_LOCATIONS_POVALUES_LOCATIONS_SHELF", Storage="_STOCK_SHELF_LOCATIONS_POVALUES", ThisKey="ShelfLocationID", OtherKey="ShelfLocationId", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_SHELF_LOCATIONS_POVALUES> STOCK_SHELF_LOCATIONS_POVALUES
		{
			get
			{
				return this._STOCK_SHELF_LOCATIONS_POVALUES;
			}
			set
			{
				this._STOCK_SHELF_LOCATIONS_POVALUES.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_TRANSFER_SHELFLOCATION_FROM", Storage="_STOCK_TRANSFER", ThisKey="ShelfLocationID", OtherKey="FromShelfLoc", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_TRANSFER> STOCK_TRANSFER
		{
			get
			{
				return this._STOCK_TRANSFER;
			}
			set
			{
				this._STOCK_TRANSFER.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INT_STOCK_LOC_SPECIFIC(INT_STOCK_LOC_SPECIFIC entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS_SHELF = this;
		}
		
		private void detach_INT_STOCK_LOC_SPECIFIC(INT_STOCK_LOC_SPECIFIC entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS_SHELF = null;
		}
		
		private void attach_STOCK_SHELF_LOCATIONS(STOCK_SHELF_LOCATIONS entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS_SHELF = this;
		}
		
		private void detach_STOCK_SHELF_LOCATIONS(STOCK_SHELF_LOCATIONS entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS_SHELF = null;
		}
		
		private void attach_STOCK_SHELF_LOCATIONS_POVALUES(STOCK_SHELF_LOCATIONS_POVALUES entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS_SHELF = this;
		}
		
		private void detach_STOCK_SHELF_LOCATIONS_POVALUES(STOCK_SHELF_LOCATIONS_POVALUES entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS_SHELF = null;
		}
		
		private void attach_STOCK_TRANSFER(STOCK_TRANSFER entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS_SHELF = this;
		}
		
		private void detach_STOCK_TRANSFER(STOCK_TRANSFER entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS_SHELF = null;
		}
	}
	
	[Table(Name="dbo.LOCATIONS_TYPE")]
	public partial class LOCATIONS_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocTypeID;
		
		private string _LocTypeDesc;
		
		private EntitySet<LOCATIONS> _LOCATIONS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocTypeIDChanging(int value);
    partial void OnLocTypeIDChanged();
    partial void OnLocTypeDescChanging(string value);
    partial void OnLocTypeDescChanged();
    #endregion
		
		public LOCATIONS_TYPE()
		{
			this._LOCATIONS = new EntitySet<LOCATIONS>(new Action<LOCATIONS>(this.attach_LOCATIONS), new Action<LOCATIONS>(this.detach_LOCATIONS));
			OnCreated();
		}
		
		[Column(Storage="_LocTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LocTypeID
		{
			get
			{
				return this._LocTypeID;
			}
			set
			{
				if ((this._LocTypeID != value))
				{
					this.OnLocTypeIDChanging(value);
					this.SendPropertyChanging();
					this._LocTypeID = value;
					this.SendPropertyChanged("LocTypeID");
					this.OnLocTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_LocTypeDesc", DbType="VarChar(50)")]
		public string LocTypeDesc
		{
			get
			{
				return this._LocTypeDesc;
			}
			set
			{
				if ((this._LocTypeDesc != value))
				{
					this.OnLocTypeDescChanging(value);
					this.SendPropertyChanging();
					this._LocTypeDesc = value;
					this.SendPropertyChanged("LocTypeDesc");
					this.OnLocTypeDescChanged();
				}
			}
		}
		
		[Association(Name="FK_LOCATIONS_LOCATIONS_TYPE", Storage="_LOCATIONS", ThisKey="LocTypeID", OtherKey="LocTypeID", DeleteRule="NO ACTION")]
		public EntitySet<LOCATIONS> LOCATIONS
		{
			get
			{
				return this._LOCATIONS;
			}
			set
			{
				this._LOCATIONS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOCATIONS(LOCATIONS entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS_TYPE = this;
		}
		
		private void detach_LOCATIONS(LOCATIONS entity)
		{
			this.SendPropertyChanging();
			entity.LOCATIONS_TYPE = null;
		}
	}
	
	[Table(Name="dbo.LOCKOUT")]
	public partial class LOCKOUT
	{
		
		private bool _Lockout1;
		
		public LOCKOUT()
		{
		}
		
		[Column(Name="Lockout", Storage="_Lockout1", DbType="Bit NOT NULL")]
		public bool Lockout1
		{
			get
			{
				return this._Lockout1;
			}
			set
			{
				if ((this._Lockout1 != value))
				{
					this._Lockout1 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.mastip")]
	public partial class Mastip
	{
		
		private string _MachineType;
		
		private string _CHANGETO_;
		
		private string _MachineName;
		
		private string _Manufacturer;
		
		private string _Name2;
		
		private string _ProductFamily;
		
		public Mastip()
		{
		}
		
		[Column(Name="Machine Type", Storage="_MachineType", DbType="NVarChar(255)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this._MachineType = value;
				}
			}
		}
		
		[Column(Name="CHANGE TO:", Storage="_CHANGETO_", DbType="NVarChar(255)")]
		public string CHANGETO_
		{
			get
			{
				return this._CHANGETO_;
			}
			set
			{
				if ((this._CHANGETO_ != value))
				{
					this._CHANGETO_ = value;
				}
			}
		}
		
		[Column(Name="Machine Name", Storage="_MachineName", DbType="NVarChar(255)")]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this._MachineName = value;
				}
			}
		}
		
		[Column(Storage="_Manufacturer", DbType="NVarChar(255)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this._Manufacturer = value;
				}
			}
		}
		
		[Column(Storage="_Name2", DbType="NVarChar(255)")]
		public string Name2
		{
			get
			{
				return this._Name2;
			}
			set
			{
				if ((this._Name2 != value))
				{
					this._Name2 = value;
				}
			}
		}
		
		[Column(Name="Product Family", Storage="_ProductFamily", DbType="NVarChar(255)")]
		public string ProductFamily
		{
			get
			{
				return this._ProductFamily;
			}
			set
			{
				if ((this._ProductFamily != value))
				{
					this._ProductFamily = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Mnbrcust")]
	public partial class Mnbrcust
	{
		
		private string _PrimaryTitle;
		
		private string _SwitchPhone;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _InteractiveTotal;
		
		private System.Nullable<double> _CeCommisionRate;
		
		private System.Nullable<double> _InteractiveRate;
		
		private string _Status;
		
		private string _LastInvoiceNumber;
		
		private string _LastInvoiceAmount;
		
		private string _Action;
		
		private string _REPID;
		
		private string _AccMngrID;
		
		private System.Nullable<int> _SC_CustAccountID;
		
		private System.Nullable<int> _SC_InvNum;
		
		private System.Nullable<int> _Tm;
		
		private System.Nullable<int> _CoMPANYnUM;
		
		public Mnbrcust()
		{
		}
		
		[Column(Name="Primary Title", Storage="_PrimaryTitle", DbType="NVarChar(255)")]
		public string PrimaryTitle
		{
			get
			{
				return this._PrimaryTitle;
			}
			set
			{
				if ((this._PrimaryTitle != value))
				{
					this._PrimaryTitle = value;
				}
			}
		}
		
		[Column(Name="Switch Phone", Storage="_SwitchPhone", DbType="NVarChar(255)")]
		public string SwitchPhone
		{
			get
			{
				return this._SwitchPhone;
			}
			set
			{
				if ((this._SwitchPhone != value))
				{
					this._SwitchPhone = value;
				}
			}
		}
		
		[Column(Name="Invoice date", Storage="_InvoiceDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[Column(Name="Interactive total", Storage="_InteractiveTotal", DbType="NVarChar(255)")]
		public string InteractiveTotal
		{
			get
			{
				return this._InteractiveTotal;
			}
			set
			{
				if ((this._InteractiveTotal != value))
				{
					this._InteractiveTotal = value;
				}
			}
		}
		
		[Column(Name="Ce Commision Rate", Storage="_CeCommisionRate", DbType="Float")]
		public System.Nullable<double> CeCommisionRate
		{
			get
			{
				return this._CeCommisionRate;
			}
			set
			{
				if ((this._CeCommisionRate != value))
				{
					this._CeCommisionRate = value;
				}
			}
		}
		
		[Column(Name="Interactive Rate", Storage="_InteractiveRate", DbType="Float")]
		public System.Nullable<double> InteractiveRate
		{
			get
			{
				return this._InteractiveRate;
			}
			set
			{
				if ((this._InteractiveRate != value))
				{
					this._InteractiveRate = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(255)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Name="Last Invoice Number", Storage="_LastInvoiceNumber", DbType="NVarChar(255)")]
		public string LastInvoiceNumber
		{
			get
			{
				return this._LastInvoiceNumber;
			}
			set
			{
				if ((this._LastInvoiceNumber != value))
				{
					this._LastInvoiceNumber = value;
				}
			}
		}
		
		[Column(Name="Last invoice amount", Storage="_LastInvoiceAmount", DbType="NVarChar(255)")]
		public string LastInvoiceAmount
		{
			get
			{
				return this._LastInvoiceAmount;
			}
			set
			{
				if ((this._LastInvoiceAmount != value))
				{
					this._LastInvoiceAmount = value;
				}
			}
		}
		
		[Column(Storage="_Action", DbType="NVarChar(255)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this._Action = value;
				}
			}
		}
		
		[Column(Storage="_REPID", DbType="NVarChar(255)")]
		public string REPID
		{
			get
			{
				return this._REPID;
			}
			set
			{
				if ((this._REPID != value))
				{
					this._REPID = value;
				}
			}
		}
		
		[Column(Storage="_AccMngrID", DbType="NVarChar(255)")]
		public string AccMngrID
		{
			get
			{
				return this._AccMngrID;
			}
			set
			{
				if ((this._AccMngrID != value))
				{
					this._AccMngrID = value;
				}
			}
		}
		
		[Column(Storage="_SC_CustAccountID", DbType="Int")]
		public System.Nullable<int> SC_CustAccountID
		{
			get
			{
				return this._SC_CustAccountID;
			}
			set
			{
				if ((this._SC_CustAccountID != value))
				{
					this._SC_CustAccountID = value;
				}
			}
		}
		
		[Column(Storage="_SC_InvNum", DbType="Int")]
		public System.Nullable<int> SC_InvNum
		{
			get
			{
				return this._SC_InvNum;
			}
			set
			{
				if ((this._SC_InvNum != value))
				{
					this._SC_InvNum = value;
				}
			}
		}
		
		[Column(Name="tm", Storage="_Tm", DbType="Int")]
		public System.Nullable<int> Tm
		{
			get
			{
				return this._Tm;
			}
			set
			{
				if ((this._Tm != value))
				{
					this._Tm = value;
				}
			}
		}
		
		[Column(Name="coMPANYnUM", Storage="_CoMPANYnUM", DbType="Int")]
		public System.Nullable<int> CoMPANYnUM
		{
			get
			{
				return this._CoMPANYnUM;
			}
			set
			{
				if ((this._CoMPANYnUM != value))
				{
					this._CoMPANYnUM = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.MNBRINVL")]
	public partial class MNBRINVL
	{
		
		private string _CustId;
		
		private System.Nullable<double> _InvoiceNumber;
		
		private System.Nullable<double> _InvoiceLineNumber;
		
		private System.Nullable<System.DateTime> _DateJobDone;
		
		private string _Narrative;
		
		private System.Nullable<double> _Amount;
		
		private string _JobRef_;
		
		private System.Nullable<int> _SC_INVNUM;
		
		private System.Nullable<int> _SC_LINENUM;
		
		private int _SC_TEMP;
		
		public MNBRINVL()
		{
		}
		
		[Column(Name="Cust id", Storage="_CustId", DbType="NVarChar(255)")]
		public string CustId
		{
			get
			{
				return this._CustId;
			}
			set
			{
				if ((this._CustId != value))
				{
					this._CustId = value;
				}
			}
		}
		
		[Column(Name="Invoice number", Storage="_InvoiceNumber", DbType="Float")]
		public System.Nullable<double> InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[Column(Name="Invoice line number", Storage="_InvoiceLineNumber", DbType="Float")]
		public System.Nullable<double> InvoiceLineNumber
		{
			get
			{
				return this._InvoiceLineNumber;
			}
			set
			{
				if ((this._InvoiceLineNumber != value))
				{
					this._InvoiceLineNumber = value;
				}
			}
		}
		
		[Column(Name="Date job done", Storage="_DateJobDone", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateJobDone
		{
			get
			{
				return this._DateJobDone;
			}
			set
			{
				if ((this._DateJobDone != value))
				{
					this._DateJobDone = value;
				}
			}
		}
		
		[Column(Storage="_Narrative", DbType="NVarChar(255)")]
		public string Narrative
		{
			get
			{
				return this._Narrative;
			}
			set
			{
				if ((this._Narrative != value))
				{
					this._Narrative = value;
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[Column(Name="Job Ref #", Storage="_JobRef_", DbType="NVarChar(255)")]
		public string JobRef_
		{
			get
			{
				return this._JobRef_;
			}
			set
			{
				if ((this._JobRef_ != value))
				{
					this._JobRef_ = value;
				}
			}
		}
		
		[Column(Storage="_SC_INVNUM", DbType="Int")]
		public System.Nullable<int> SC_INVNUM
		{
			get
			{
				return this._SC_INVNUM;
			}
			set
			{
				if ((this._SC_INVNUM != value))
				{
					this._SC_INVNUM = value;
				}
			}
		}
		
		[Column(Storage="_SC_LINENUM", DbType="Int")]
		public System.Nullable<int> SC_LINENUM
		{
			get
			{
				return this._SC_LINENUM;
			}
			set
			{
				if ((this._SC_LINENUM != value))
				{
					this._SC_LINENUM = value;
				}
			}
		}
		
		[Column(Storage="_SC_TEMP", DbType="Int NOT NULL")]
		public int SC_TEMP
		{
			get
			{
				return this._SC_TEMP;
			}
			set
			{
				if ((this._SC_TEMP != value))
				{
					this._SC_TEMP = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.NewIMP")]
	public partial class NewIMP
	{
		
		private int _ID;
		
		private string _MachineType;
		
		private string _CHANGETO_;
		
		private string _MachineName;
		
		private string _Manufacturer;
		
		public NewIMP()
		{
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Name="Machine Type", Storage="_MachineType", DbType="NVarChar(255)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this._MachineType = value;
				}
			}
		}
		
		[Column(Name="CHANGE TO:", Storage="_CHANGETO_", DbType="NVarChar(255)")]
		public string CHANGETO_
		{
			get
			{
				return this._CHANGETO_;
			}
			set
			{
				if ((this._CHANGETO_ != value))
				{
					this._CHANGETO_ = value;
				}
			}
		}
		
		[Column(Name="Machine Name", Storage="_MachineName", DbType="NVarChar(255)")]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this._MachineName = value;
				}
			}
		}
		
		[Column(Storage="_Manufacturer", DbType="NVarChar(255)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this._Manufacturer = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.ORDER_TYPES")]
	public partial class ORDER_TYPES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _TypeID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(byte value);
    partial void OnTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ORDER_TYPES()
		{
			OnCreated();
		}
		
		[Column(Storage="_TypeID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ORPHANED_AUDITS")]
	public partial class ORPHANED_AUDITS
	{
		
		private int _Audit;
		
		private byte _TransType;
		
		private int _TransID;
		
		private string _AccountID;
		
		private short _Year;
		
		private byte _Month;
		
		private byte _Day;
		
		private System.Nullable<System.DateTime> _DateEntered;
		
		private byte _Period;
		
		private decimal _Amount;
		
		private decimal _Discount;
		
		public ORPHANED_AUDITS()
		{
		}
		
		[Column(Storage="_Audit", DbType="Int NOT NULL")]
		public int Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this._Audit = value;
				}
			}
		}
		
		[Column(Storage="_TransType", DbType="TinyInt NOT NULL")]
		public byte TransType
		{
			get
			{
				return this._TransType;
			}
			set
			{
				if ((this._TransType != value))
				{
					this._TransType = value;
				}
			}
		}
		
		[Column(Storage="_TransID", DbType="Int NOT NULL")]
		public int TransID
		{
			get
			{
				return this._TransID;
			}
			set
			{
				if ((this._TransID != value))
				{
					this._TransID = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="VarChar(12)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[Column(Storage="_Day", DbType="TinyInt NOT NULL")]
		public byte Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this._Day = value;
				}
			}
		}
		
		[Column(Storage="_DateEntered", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEntered
		{
			get
			{
				return this._DateEntered;
			}
			set
			{
				if ((this._DateEntered != value))
				{
					this._DateEntered = value;
				}
			}
		}
		
		[Column(Storage="_Period", DbType="TinyInt NOT NULL")]
		public byte Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[Column(Storage="_Discount", DbType="Money NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this._Discount = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.PARTS_MERGE")]
	public partial class PARTS_MERGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PartsMergeID;
		
		private System.DateTime _DateStarted;
		
		private string _EmployeeID;
		
		private string _ProdCode;
		
		private bool _Completed;
		
		private bool _Cancelled;
		
		private bool _RolledBack;
		
		private EntitySet<PARTS_MERGE_ITEMS> _PARTS_MERGE_ITEMS;
		
		private EntitySet<PARTS_MERGE_LOG> _PARTS_MERGE_LOG;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartsMergeIDChanging(int value);
    partial void OnPartsMergeIDChanged();
    partial void OnDateStartedChanging(System.DateTime value);
    partial void OnDateStartedChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnCompletedChanging(bool value);
    partial void OnCompletedChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnRolledBackChanging(bool value);
    partial void OnRolledBackChanged();
    #endregion
		
		public PARTS_MERGE()
		{
			this._PARTS_MERGE_ITEMS = new EntitySet<PARTS_MERGE_ITEMS>(new Action<PARTS_MERGE_ITEMS>(this.attach_PARTS_MERGE_ITEMS), new Action<PARTS_MERGE_ITEMS>(this.detach_PARTS_MERGE_ITEMS));
			this._PARTS_MERGE_LOG = new EntitySet<PARTS_MERGE_LOG>(new Action<PARTS_MERGE_LOG>(this.attach_PARTS_MERGE_LOG), new Action<PARTS_MERGE_LOG>(this.detach_PARTS_MERGE_LOG));
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_PartsMergeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PartsMergeID
		{
			get
			{
				return this._PartsMergeID;
			}
			set
			{
				if ((this._PartsMergeID != value))
				{
					this.OnPartsMergeIDChanging(value);
					this.SendPropertyChanging();
					this._PartsMergeID = value;
					this.SendPropertyChanged("PartsMergeID");
					this.OnPartsMergeIDChanged();
				}
			}
		}
		
		[Column(Storage="_DateStarted", DbType="DateTime NOT NULL")]
		public System.DateTime DateStarted
		{
			get
			{
				return this._DateStarted;
			}
			set
			{
				if ((this._DateStarted != value))
				{
					this.OnDateStartedChanging(value);
					this.SendPropertyChanging();
					this._DateStarted = value;
					this.SendPropertyChanged("DateStarted");
					this.OnDateStartedChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Completed", DbType="Bit NOT NULL")]
		public bool Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[Column(Storage="_RolledBack", DbType="Bit NOT NULL")]
		public bool RolledBack
		{
			get
			{
				return this._RolledBack;
			}
			set
			{
				if ((this._RolledBack != value))
				{
					this.OnRolledBackChanging(value);
					this.SendPropertyChanging();
					this._RolledBack = value;
					this.SendPropertyChanged("RolledBack");
					this.OnRolledBackChanged();
				}
			}
		}
		
		[Association(Name="FK_PARTS_MERGE_ITEMS_PARTS_MERGE", Storage="_PARTS_MERGE_ITEMS", ThisKey="PartsMergeID", OtherKey="PartsMergeID", DeleteRule="CASCADE")]
		public EntitySet<PARTS_MERGE_ITEMS> PARTS_MERGE_ITEMS
		{
			get
			{
				return this._PARTS_MERGE_ITEMS;
			}
			set
			{
				this._PARTS_MERGE_ITEMS.Assign(value);
			}
		}
		
		[Association(Name="FK_PARTS_MERGE_LOG_PARTS_MERGE", Storage="_PARTS_MERGE_LOG", ThisKey="PartsMergeID", OtherKey="PartsMergeID", DeleteRule="CASCADE")]
		public EntitySet<PARTS_MERGE_LOG> PARTS_MERGE_LOG
		{
			get
			{
				return this._PARTS_MERGE_LOG;
			}
			set
			{
				this._PARTS_MERGE_LOG.Assign(value);
			}
		}
		
		[Association(Name="FK_PARTS_MERGE_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.PARTS_MERGE.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.PARTS_MERGE.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PARTS_MERGE_ITEMS(PARTS_MERGE_ITEMS entity)
		{
			this.SendPropertyChanging();
			entity.PARTS_MERGE = this;
		}
		
		private void detach_PARTS_MERGE_ITEMS(PARTS_MERGE_ITEMS entity)
		{
			this.SendPropertyChanging();
			entity.PARTS_MERGE = null;
		}
		
		private void attach_PARTS_MERGE_LOG(PARTS_MERGE_LOG entity)
		{
			this.SendPropertyChanging();
			entity.PARTS_MERGE = this;
		}
		
		private void detach_PARTS_MERGE_LOG(PARTS_MERGE_LOG entity)
		{
			this.SendPropertyChanging();
			entity.PARTS_MERGE = null;
		}
	}
	
	[Table(Name="dbo.PARTS_MERGE_ITEMS")]
	public partial class PARTS_MERGE_ITEMS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PartsMergeItemID;
		
		private int _PartsMergeID;
		
		private System.DateTime _DateAdded;
		
		private string _ProdCode;
		
		private bool _Alias;
		
		private EntityRef<PARTS_MERGE> _PARTS_MERGE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartsMergeItemIDChanging(int value);
    partial void OnPartsMergeItemIDChanged();
    partial void OnPartsMergeIDChanging(int value);
    partial void OnPartsMergeIDChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnAliasChanging(bool value);
    partial void OnAliasChanged();
    #endregion
		
		public PARTS_MERGE_ITEMS()
		{
			this._PARTS_MERGE = default(EntityRef<PARTS_MERGE>);
			OnCreated();
		}
		
		[Column(Storage="_PartsMergeItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PartsMergeItemID
		{
			get
			{
				return this._PartsMergeItemID;
			}
			set
			{
				if ((this._PartsMergeItemID != value))
				{
					this.OnPartsMergeItemIDChanging(value);
					this.SendPropertyChanging();
					this._PartsMergeItemID = value;
					this.SendPropertyChanged("PartsMergeItemID");
					this.OnPartsMergeItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_PartsMergeID", DbType="Int NOT NULL")]
		public int PartsMergeID
		{
			get
			{
				return this._PartsMergeID;
			}
			set
			{
				if ((this._PartsMergeID != value))
				{
					if (this._PARTS_MERGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartsMergeIDChanging(value);
					this.SendPropertyChanging();
					this._PartsMergeID = value;
					this.SendPropertyChanged("PartsMergeID");
					this.OnPartsMergeIDChanged();
				}
			}
		}
		
		[Column(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Alias", DbType="Bit NOT NULL")]
		public bool Alias
		{
			get
			{
				return this._Alias;
			}
			set
			{
				if ((this._Alias != value))
				{
					this.OnAliasChanging(value);
					this.SendPropertyChanging();
					this._Alias = value;
					this.SendPropertyChanged("Alias");
					this.OnAliasChanged();
				}
			}
		}
		
		[Association(Name="FK_PARTS_MERGE_ITEMS_PARTS_MERGE", Storage="_PARTS_MERGE", ThisKey="PartsMergeID", OtherKey="PartsMergeID", IsForeignKey=true, DeleteOnNull=true)]
		public PARTS_MERGE PARTS_MERGE
		{
			get
			{
				return this._PARTS_MERGE.Entity;
			}
			set
			{
				PARTS_MERGE previousValue = this._PARTS_MERGE.Entity;
				if (((previousValue != value) 
							|| (this._PARTS_MERGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PARTS_MERGE.Entity = null;
						previousValue.PARTS_MERGE_ITEMS.Remove(this);
					}
					this._PARTS_MERGE.Entity = value;
					if ((value != null))
					{
						value.PARTS_MERGE_ITEMS.Add(this);
						this._PartsMergeID = value.PartsMergeID;
					}
					else
					{
						this._PartsMergeID = default(int);
					}
					this.SendPropertyChanged("PARTS_MERGE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PARTS_MERGE_LOG")]
	public partial class PARTS_MERGE_LOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PartsMergeActionID;
		
		private int _PartsMergeID;
		
		private System.DateTime _DateCreated;
		
		private string _TableName;
		
		private int _PrimaryKeyValue;
		
		private string _OldProdCode;
		
		private string _NewProdCode;
		
		private string _OldDeviceCode;
		
		private string _NewDeviceCode;
		
		private EntityRef<PARTS_MERGE> _PARTS_MERGE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartsMergeActionIDChanging(int value);
    partial void OnPartsMergeActionIDChanged();
    partial void OnPartsMergeIDChanging(int value);
    partial void OnPartsMergeIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnPrimaryKeyValueChanging(int value);
    partial void OnPrimaryKeyValueChanged();
    partial void OnOldProdCodeChanging(string value);
    partial void OnOldProdCodeChanged();
    partial void OnNewProdCodeChanging(string value);
    partial void OnNewProdCodeChanged();
    partial void OnOldDeviceCodeChanging(string value);
    partial void OnOldDeviceCodeChanged();
    partial void OnNewDeviceCodeChanging(string value);
    partial void OnNewDeviceCodeChanged();
    #endregion
		
		public PARTS_MERGE_LOG()
		{
			this._PARTS_MERGE = default(EntityRef<PARTS_MERGE>);
			OnCreated();
		}
		
		[Column(Storage="_PartsMergeActionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PartsMergeActionID
		{
			get
			{
				return this._PartsMergeActionID;
			}
			set
			{
				if ((this._PartsMergeActionID != value))
				{
					this.OnPartsMergeActionIDChanging(value);
					this.SendPropertyChanging();
					this._PartsMergeActionID = value;
					this.SendPropertyChanged("PartsMergeActionID");
					this.OnPartsMergeActionIDChanged();
				}
			}
		}
		
		[Column(Storage="_PartsMergeID", DbType="Int NOT NULL")]
		public int PartsMergeID
		{
			get
			{
				return this._PartsMergeID;
			}
			set
			{
				if ((this._PartsMergeID != value))
				{
					if (this._PARTS_MERGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartsMergeIDChanging(value);
					this.SendPropertyChanging();
					this._PartsMergeID = value;
					this.SendPropertyChanged("PartsMergeID");
					this.OnPartsMergeIDChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_TableName", DbType="VarChar(50)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[Column(Storage="_PrimaryKeyValue", DbType="Int NOT NULL")]
		public int PrimaryKeyValue
		{
			get
			{
				return this._PrimaryKeyValue;
			}
			set
			{
				if ((this._PrimaryKeyValue != value))
				{
					this.OnPrimaryKeyValueChanging(value);
					this.SendPropertyChanging();
					this._PrimaryKeyValue = value;
					this.SendPropertyChanged("PrimaryKeyValue");
					this.OnPrimaryKeyValueChanged();
				}
			}
		}
		
		[Column(Storage="_OldProdCode", DbType="VarChar(35)")]
		public string OldProdCode
		{
			get
			{
				return this._OldProdCode;
			}
			set
			{
				if ((this._OldProdCode != value))
				{
					this.OnOldProdCodeChanging(value);
					this.SendPropertyChanging();
					this._OldProdCode = value;
					this.SendPropertyChanged("OldProdCode");
					this.OnOldProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_NewProdCode", DbType="VarChar(35)")]
		public string NewProdCode
		{
			get
			{
				return this._NewProdCode;
			}
			set
			{
				if ((this._NewProdCode != value))
				{
					this.OnNewProdCodeChanging(value);
					this.SendPropertyChanging();
					this._NewProdCode = value;
					this.SendPropertyChanged("NewProdCode");
					this.OnNewProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_OldDeviceCode", DbType="VarChar(35)")]
		public string OldDeviceCode
		{
			get
			{
				return this._OldDeviceCode;
			}
			set
			{
				if ((this._OldDeviceCode != value))
				{
					this.OnOldDeviceCodeChanging(value);
					this.SendPropertyChanging();
					this._OldDeviceCode = value;
					this.SendPropertyChanged("OldDeviceCode");
					this.OnOldDeviceCodeChanged();
				}
			}
		}
		
		[Column(Storage="_NewDeviceCode", DbType="VarChar(35)")]
		public string NewDeviceCode
		{
			get
			{
				return this._NewDeviceCode;
			}
			set
			{
				if ((this._NewDeviceCode != value))
				{
					this.OnNewDeviceCodeChanging(value);
					this.SendPropertyChanging();
					this._NewDeviceCode = value;
					this.SendPropertyChanged("NewDeviceCode");
					this.OnNewDeviceCodeChanged();
				}
			}
		}
		
		[Association(Name="FK_PARTS_MERGE_LOG_PARTS_MERGE", Storage="_PARTS_MERGE", ThisKey="PartsMergeID", OtherKey="PartsMergeID", IsForeignKey=true, DeleteOnNull=true)]
		public PARTS_MERGE PARTS_MERGE
		{
			get
			{
				return this._PARTS_MERGE.Entity;
			}
			set
			{
				PARTS_MERGE previousValue = this._PARTS_MERGE.Entity;
				if (((previousValue != value) 
							|| (this._PARTS_MERGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PARTS_MERGE.Entity = null;
						previousValue.PARTS_MERGE_LOG.Remove(this);
					}
					this._PARTS_MERGE.Entity = value;
					if ((value != null))
					{
						value.PARTS_MERGE_LOG.Add(this);
						this._PartsMergeID = value.PartsMergeID;
					}
					else
					{
						this._PartsMergeID = default(int);
					}
					this.SendPropertyChanged("PARTS_MERGE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRICELISTS")]
	public partial class PRICELISTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PriceListNum;
		
		private string _ReportName;
		
		private string _Description;
		
		private bool _MarkupOptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceListNumChanging(int value);
    partial void OnPriceListNumChanged();
    partial void OnReportNameChanging(string value);
    partial void OnReportNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkupOptionsChanging(bool value);
    partial void OnMarkupOptionsChanged();
    #endregion
		
		public PRICELISTS()
		{
			OnCreated();
		}
		
		[Column(Storage="_PriceListNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PriceListNum
		{
			get
			{
				return this._PriceListNum;
			}
			set
			{
				if ((this._PriceListNum != value))
				{
					this.OnPriceListNumChanging(value);
					this.SendPropertyChanging();
					this._PriceListNum = value;
					this.SendPropertyChanged("PriceListNum");
					this.OnPriceListNumChanged();
				}
			}
		}
		
		[Column(Storage="_ReportName", DbType="VarChar(50)")]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this.OnReportNameChanging(value);
					this.SendPropertyChanging();
					this._ReportName = value;
					this.SendPropertyChanged("ReportName");
					this.OnReportNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_MarkupOptions", DbType="Bit NOT NULL")]
		public bool MarkupOptions
		{
			get
			{
				return this._MarkupOptions;
			}
			set
			{
				if ((this._MarkupOptions != value))
				{
					this.OnMarkupOptionsChanging(value);
					this.SendPropertyChanging();
					this._MarkupOptions = value;
					this.SendPropertyChanged("MarkupOptions");
					this.OnMarkupOptionsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRINTER_SETUP")]
	public partial class PRINTER_SETUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MachineID;
		
		private int _ReportID;
		
		private int _PrinterID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMachineIDChanging(int value);
    partial void OnMachineIDChanged();
    partial void OnReportIDChanging(int value);
    partial void OnReportIDChanged();
    partial void OnPrinterIDChanging(int value);
    partial void OnPrinterIDChanged();
    #endregion
		
		public PRINTER_SETUP()
		{
			OnCreated();
		}
		
		[Column(Storage="_MachineID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MachineID
		{
			get
			{
				return this._MachineID;
			}
			set
			{
				if ((this._MachineID != value))
				{
					this.OnMachineIDChanging(value);
					this.SendPropertyChanging();
					this._MachineID = value;
					this.SendPropertyChanged("MachineID");
					this.OnMachineIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReportID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[Column(Storage="_PrinterID", DbType="Int NOT NULL")]
		public int PrinterID
		{
			get
			{
				return this._PrinterID;
			}
			set
			{
				if ((this._PrinterID != value))
				{
					this.OnPrinterIDChanging(value);
					this.SendPropertyChanging();
					this._PrinterID = value;
					this.SendPropertyChanged("PrinterID");
					this.OnPrinterIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PRINTERS")]
	public partial class PRINTERS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PrinterID;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrinterIDChanging(int value);
    partial void OnPrinterIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PRINTERS()
		{
			OnCreated();
		}
		
		[Column(Storage="_PrinterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PrinterID
		{
			get
			{
				return this._PrinterID;
			}
			set
			{
				if ((this._PrinterID != value))
				{
					this.OnPrinterIDChanging(value);
					this.SendPropertyChanging();
					this._PrinterID = value;
					this.SendPropertyChanged("PrinterID");
					this.OnPrinterIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PROBLEM_TABLE")]
	public partial class PROBLEM_TABLE
	{
		
		private int _ProblemNo;
		
		private string _ProblemDescrip;
		
		private string _ProblemResolv;
		
		public PROBLEM_TABLE()
		{
		}
		
		[Column(Storage="_ProblemNo", DbType="Int NOT NULL")]
		public int ProblemNo
		{
			get
			{
				return this._ProblemNo;
			}
			set
			{
				if ((this._ProblemNo != value))
				{
					this._ProblemNo = value;
				}
			}
		}
		
		[Column(Storage="_ProblemDescrip", DbType="NVarChar(80)")]
		public string ProblemDescrip
		{
			get
			{
				return this._ProblemDescrip;
			}
			set
			{
				if ((this._ProblemDescrip != value))
				{
					this._ProblemDescrip = value;
				}
			}
		}
		
		[Column(Storage="_ProblemResolv", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ProblemResolv
		{
			get
			{
				return this._ProblemResolv;
			}
			set
			{
				if ((this._ProblemResolv != value))
				{
					this._ProblemResolv = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.PROJECT")]
	public partial class PROJECT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectID;
		
		private string _ProjectNumber;
		
		private string _ProjectName;
		
		private System.Nullable<int> _AccountID;
		
		private string _ProjectManager;
		
		private string _CustomerProjectID;
		
		private string _CustomerProjectManager;
		
		private decimal _TimeEstimate;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<decimal> _CAPEXBudget;
		
		private System.Nullable<decimal> _OPEXBudget;
		
		private System.Nullable<int> _ProjectTermInMonths;
		
		private System.Nullable<int> _SpaID;
		
		private string _DCFLink;
		
		private string _CostModelLink;
		
		private System.Nullable<int> _Financed;
		
		private System.Nullable<int> _BusinessUnit;
		
		private System.Nullable<System.DateTime> _NPNDate;
		
		private System.Nullable<System.DateTime> _UATHandoverDate;
		
		private System.Nullable<System.DateTime> _T2PDate;
		
		private System.Nullable<System.DateTime> _ProjectEndDate;
		
		private System.Nullable<System.DateTime> _SOWDate;
		
		private EntitySet<PROJECT_CHANGE_REQUEST> _PROJECT_CHANGE_REQUEST;
		
		private EntityRef<GL_BUSINESS_UNITS> _GL_BUSINESS_UNITS;
		
		private EntityRef<PROJECT_STATUS> _PROJECT_STATUS;
		
		private EntitySet<PROJECT_TASKS> _PROJECT_TASKS;
		
		private EntitySet<STKORD> _STKORD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnProjectNumberChanging(string value);
    partial void OnProjectNumberChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnProjectManagerChanging(string value);
    partial void OnProjectManagerChanged();
    partial void OnCustomerProjectIDChanging(string value);
    partial void OnCustomerProjectIDChanged();
    partial void OnCustomerProjectManagerChanging(string value);
    partial void OnCustomerProjectManagerChanged();
    partial void OnTimeEstimateChanging(decimal value);
    partial void OnTimeEstimateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCAPEXBudgetChanging(System.Nullable<decimal> value);
    partial void OnCAPEXBudgetChanged();
    partial void OnOPEXBudgetChanging(System.Nullable<decimal> value);
    partial void OnOPEXBudgetChanged();
    partial void OnProjectTermInMonthsChanging(System.Nullable<int> value);
    partial void OnProjectTermInMonthsChanged();
    partial void OnSpaIDChanging(System.Nullable<int> value);
    partial void OnSpaIDChanged();
    partial void OnDCFLinkChanging(string value);
    partial void OnDCFLinkChanged();
    partial void OnCostModelLinkChanging(string value);
    partial void OnCostModelLinkChanged();
    partial void OnFinancedChanging(System.Nullable<int> value);
    partial void OnFinancedChanged();
    partial void OnBusinessUnitChanging(System.Nullable<int> value);
    partial void OnBusinessUnitChanged();
    partial void OnNPNDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNPNDateChanged();
    partial void OnUATHandoverDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUATHandoverDateChanged();
    partial void OnT2PDateChanging(System.Nullable<System.DateTime> value);
    partial void OnT2PDateChanged();
    partial void OnProjectEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectEndDateChanged();
    partial void OnSOWDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSOWDateChanged();
    #endregion
		
		public PROJECT()
		{
			this._PROJECT_CHANGE_REQUEST = new EntitySet<PROJECT_CHANGE_REQUEST>(new Action<PROJECT_CHANGE_REQUEST>(this.attach_PROJECT_CHANGE_REQUEST), new Action<PROJECT_CHANGE_REQUEST>(this.detach_PROJECT_CHANGE_REQUEST));
			this._GL_BUSINESS_UNITS = default(EntityRef<GL_BUSINESS_UNITS>);
			this._PROJECT_STATUS = default(EntityRef<PROJECT_STATUS>);
			this._PROJECT_TASKS = new EntitySet<PROJECT_TASKS>(new Action<PROJECT_TASKS>(this.attach_PROJECT_TASKS), new Action<PROJECT_TASKS>(this.detach_PROJECT_TASKS));
			this._STKORD = new EntitySet<STKORD>(new Action<STKORD>(this.attach_STKORD), new Action<STKORD>(this.detach_STKORD));
			OnCreated();
		}
		
		[Column(Storage="_ProjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectNumber", DbType="VarChar(25)")]
		public string ProjectNumber
		{
			get
			{
				return this._ProjectNumber;
			}
			set
			{
				if ((this._ProjectNumber != value))
				{
					this.OnProjectNumberChanging(value);
					this.SendPropertyChanging();
					this._ProjectNumber = value;
					this.SendPropertyChanged("ProjectNumber");
					this.OnProjectNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectName", DbType="VarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectManager", DbType="VarChar(25)")]
		public string ProjectManager
		{
			get
			{
				return this._ProjectManager;
			}
			set
			{
				if ((this._ProjectManager != value))
				{
					this.OnProjectManagerChanging(value);
					this.SendPropertyChanging();
					this._ProjectManager = value;
					this.SendPropertyChanged("ProjectManager");
					this.OnProjectManagerChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerProjectID", DbType="VarChar(100)")]
		public string CustomerProjectID
		{
			get
			{
				return this._CustomerProjectID;
			}
			set
			{
				if ((this._CustomerProjectID != value))
				{
					this.OnCustomerProjectIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerProjectID = value;
					this.SendPropertyChanged("CustomerProjectID");
					this.OnCustomerProjectIDChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerProjectManager", DbType="VarChar(100)")]
		public string CustomerProjectManager
		{
			get
			{
				return this._CustomerProjectManager;
			}
			set
			{
				if ((this._CustomerProjectManager != value))
				{
					this.OnCustomerProjectManagerChanging(value);
					this.SendPropertyChanging();
					this._CustomerProjectManager = value;
					this.SendPropertyChanged("CustomerProjectManager");
					this.OnCustomerProjectManagerChanged();
				}
			}
		}
		
		[Column(Storage="_TimeEstimate", DbType="Decimal(9,2) NOT NULL")]
		public decimal TimeEstimate
		{
			get
			{
				return this._TimeEstimate;
			}
			set
			{
				if ((this._TimeEstimate != value))
				{
					this.OnTimeEstimateChanging(value);
					this.SendPropertyChanging();
					this._TimeEstimate = value;
					this.SendPropertyChanged("TimeEstimate");
					this.OnTimeEstimateChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._PROJECT_STATUS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_CAPEXBudget", DbType="Money")]
		public System.Nullable<decimal> CAPEXBudget
		{
			get
			{
				return this._CAPEXBudget;
			}
			set
			{
				if ((this._CAPEXBudget != value))
				{
					this.OnCAPEXBudgetChanging(value);
					this.SendPropertyChanging();
					this._CAPEXBudget = value;
					this.SendPropertyChanged("CAPEXBudget");
					this.OnCAPEXBudgetChanged();
				}
			}
		}
		
		[Column(Storage="_OPEXBudget", DbType="Money")]
		public System.Nullable<decimal> OPEXBudget
		{
			get
			{
				return this._OPEXBudget;
			}
			set
			{
				if ((this._OPEXBudget != value))
				{
					this.OnOPEXBudgetChanging(value);
					this.SendPropertyChanging();
					this._OPEXBudget = value;
					this.SendPropertyChanged("OPEXBudget");
					this.OnOPEXBudgetChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectTermInMonths", DbType="Int")]
		public System.Nullable<int> ProjectTermInMonths
		{
			get
			{
				return this._ProjectTermInMonths;
			}
			set
			{
				if ((this._ProjectTermInMonths != value))
				{
					this.OnProjectTermInMonthsChanging(value);
					this.SendPropertyChanging();
					this._ProjectTermInMonths = value;
					this.SendPropertyChanged("ProjectTermInMonths");
					this.OnProjectTermInMonthsChanged();
				}
			}
		}
		
		[Column(Storage="_SpaID", DbType="Int")]
		public System.Nullable<int> SpaID
		{
			get
			{
				return this._SpaID;
			}
			set
			{
				if ((this._SpaID != value))
				{
					this.OnSpaIDChanging(value);
					this.SendPropertyChanging();
					this._SpaID = value;
					this.SendPropertyChanged("SpaID");
					this.OnSpaIDChanged();
				}
			}
		}
		
		[Column(Storage="_DCFLink", DbType="VarChar(200)")]
		public string DCFLink
		{
			get
			{
				return this._DCFLink;
			}
			set
			{
				if ((this._DCFLink != value))
				{
					this.OnDCFLinkChanging(value);
					this.SendPropertyChanging();
					this._DCFLink = value;
					this.SendPropertyChanged("DCFLink");
					this.OnDCFLinkChanged();
				}
			}
		}
		
		[Column(Storage="_CostModelLink", DbType="VarChar(200)")]
		public string CostModelLink
		{
			get
			{
				return this._CostModelLink;
			}
			set
			{
				if ((this._CostModelLink != value))
				{
					this.OnCostModelLinkChanging(value);
					this.SendPropertyChanging();
					this._CostModelLink = value;
					this.SendPropertyChanged("CostModelLink");
					this.OnCostModelLinkChanged();
				}
			}
		}
		
		[Column(Storage="_Financed", DbType="Int")]
		public System.Nullable<int> Financed
		{
			get
			{
				return this._Financed;
			}
			set
			{
				if ((this._Financed != value))
				{
					this.OnFinancedChanging(value);
					this.SendPropertyChanging();
					this._Financed = value;
					this.SendPropertyChanged("Financed");
					this.OnFinancedChanged();
				}
			}
		}
		
		[Column(Storage="_BusinessUnit", DbType="Int")]
		public System.Nullable<int> BusinessUnit
		{
			get
			{
				return this._BusinessUnit;
			}
			set
			{
				if ((this._BusinessUnit != value))
				{
					if (this._GL_BUSINESS_UNITS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessUnitChanging(value);
					this.SendPropertyChanging();
					this._BusinessUnit = value;
					this.SendPropertyChanged("BusinessUnit");
					this.OnBusinessUnitChanged();
				}
			}
		}
		
		[Column(Storage="_NPNDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NPNDate
		{
			get
			{
				return this._NPNDate;
			}
			set
			{
				if ((this._NPNDate != value))
				{
					this.OnNPNDateChanging(value);
					this.SendPropertyChanging();
					this._NPNDate = value;
					this.SendPropertyChanged("NPNDate");
					this.OnNPNDateChanged();
				}
			}
		}
		
		[Column(Storage="_UATHandoverDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UATHandoverDate
		{
			get
			{
				return this._UATHandoverDate;
			}
			set
			{
				if ((this._UATHandoverDate != value))
				{
					this.OnUATHandoverDateChanging(value);
					this.SendPropertyChanging();
					this._UATHandoverDate = value;
					this.SendPropertyChanged("UATHandoverDate");
					this.OnUATHandoverDateChanged();
				}
			}
		}
		
		[Column(Storage="_T2PDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> T2PDate
		{
			get
			{
				return this._T2PDate;
			}
			set
			{
				if ((this._T2PDate != value))
				{
					this.OnT2PDateChanging(value);
					this.SendPropertyChanging();
					this._T2PDate = value;
					this.SendPropertyChanged("T2PDate");
					this.OnT2PDateChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectEndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ProjectEndDate
		{
			get
			{
				return this._ProjectEndDate;
			}
			set
			{
				if ((this._ProjectEndDate != value))
				{
					this.OnProjectEndDateChanging(value);
					this.SendPropertyChanging();
					this._ProjectEndDate = value;
					this.SendPropertyChanged("ProjectEndDate");
					this.OnProjectEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_SOWDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SOWDate
		{
			get
			{
				return this._SOWDate;
			}
			set
			{
				if ((this._SOWDate != value))
				{
					this.OnSOWDateChanging(value);
					this.SendPropertyChanging();
					this._SOWDate = value;
					this.SendPropertyChanged("SOWDate");
					this.OnSOWDateChanged();
				}
			}
		}
		
		[Association(Name="FK_PROJECT_CHANGE_REQUEST_PROJECT", Storage="_PROJECT_CHANGE_REQUEST", ThisKey="ProjectID", OtherKey="Project", DeleteRule="NO ACTION")]
		public EntitySet<PROJECT_CHANGE_REQUEST> PROJECT_CHANGE_REQUEST
		{
			get
			{
				return this._PROJECT_CHANGE_REQUEST;
			}
			set
			{
				this._PROJECT_CHANGE_REQUEST.Assign(value);
			}
		}
		
		[Association(Name="FK_PROJECT_GL_BUSINESS_UNITS", Storage="_GL_BUSINESS_UNITS", ThisKey="BusinessUnit", OtherKey="GLBusinessUnitID", IsForeignKey=true)]
		public GL_BUSINESS_UNITS GL_BUSINESS_UNITS
		{
			get
			{
				return this._GL_BUSINESS_UNITS.Entity;
			}
			set
			{
				GL_BUSINESS_UNITS previousValue = this._GL_BUSINESS_UNITS.Entity;
				if (((previousValue != value) 
							|| (this._GL_BUSINESS_UNITS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_BUSINESS_UNITS.Entity = null;
						previousValue.PROJECT.Remove(this);
					}
					this._GL_BUSINESS_UNITS.Entity = value;
					if ((value != null))
					{
						value.PROJECT.Add(this);
						this._BusinessUnit = value.GLBusinessUnitID;
					}
					else
					{
						this._BusinessUnit = default(Nullable<int>);
					}
					this.SendPropertyChanged("GL_BUSINESS_UNITS");
				}
			}
		}
		
		[Association(Name="FK_PROJECT_PROJECT_STATUS", Storage="_PROJECT_STATUS", ThisKey="Status", OtherKey="StatusID", IsForeignKey=true)]
		public PROJECT_STATUS PROJECT_STATUS
		{
			get
			{
				return this._PROJECT_STATUS.Entity;
			}
			set
			{
				PROJECT_STATUS previousValue = this._PROJECT_STATUS.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT_STATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT_STATUS.Entity = null;
						previousValue.PROJECT.Remove(this);
					}
					this._PROJECT_STATUS.Entity = value;
					if ((value != null))
					{
						value.PROJECT.Add(this);
						this._Status = value.StatusID;
					}
					else
					{
						this._Status = default(int);
					}
					this.SendPropertyChanged("PROJECT_STATUS");
				}
			}
		}
		
		[Association(Name="FK_PROJECT_TASKS_PROJECT", Storage="_PROJECT_TASKS", ThisKey="ProjectID", OtherKey="ProjectID", DeleteRule="NO ACTION")]
		public EntitySet<PROJECT_TASKS> PROJECT_TASKS
		{
			get
			{
				return this._PROJECT_TASKS;
			}
			set
			{
				this._PROJECT_TASKS.Assign(value);
			}
		}
		
		[Association(Name="FK_STKORD_PROJECT", Storage="_STKORD", ThisKey="ProjectID", OtherKey="Project", DeleteRule="NO ACTION")]
		public EntitySet<STKORD> STKORD
		{
			get
			{
				return this._STKORD;
			}
			set
			{
				this._STKORD.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROJECT_CHANGE_REQUEST(PROJECT_CHANGE_REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.ProjectPROJECT = this;
		}
		
		private void detach_PROJECT_CHANGE_REQUEST(PROJECT_CHANGE_REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.ProjectPROJECT = null;
		}
		
		private void attach_PROJECT_TASKS(PROJECT_TASKS entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT = this;
		}
		
		private void detach_PROJECT_TASKS(PROJECT_TASKS entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT = null;
		}
		
		private void attach_STKORD(STKORD entity)
		{
			this.SendPropertyChanging();
			entity.ProjectPROJECT = this;
		}
		
		private void detach_STKORD(STKORD entity)
		{
			this.SendPropertyChanging();
			entity.ProjectPROJECT = null;
		}
	}
	
	[Table(Name="dbo.PROJECT_BUDGET_TOLERANCES")]
	public partial class PROJECT_BUDGET_TOLERANCES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ToleranceID;
		
		private decimal _Percentage;
		
		private decimal _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnToleranceIDChanging(int value);
    partial void OnToleranceIDChanged();
    partial void OnPercentageChanging(decimal value);
    partial void OnPercentageChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public PROJECT_BUDGET_TOLERANCES()
		{
			OnCreated();
		}
		
		[Column(Storage="_ToleranceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ToleranceID
		{
			get
			{
				return this._ToleranceID;
			}
			set
			{
				if ((this._ToleranceID != value))
				{
					this.OnToleranceIDChanging(value);
					this.SendPropertyChanging();
					this._ToleranceID = value;
					this.SendPropertyChanged("ToleranceID");
					this.OnToleranceIDChanged();
				}
			}
		}
		
		[Column(Storage="_Percentage", DbType="Decimal(9,2) NOT NULL")]
		public decimal Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PROJECT_CHANGE_REQUEST")]
	public partial class PROJECT_CHANGE_REQUEST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectChangeRequestID;
		
		private System.Nullable<int> _ProjectChangeRequestNumber;
		
		private int _Project;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _ProjectTermInMonths;
		
		private System.Nullable<decimal> _CAPEXBudget;
		
		private System.Nullable<decimal> _OPEXBudget;
		
		private string _PCRLink;
		
		private EntityRef<PROJECT> _ProjectPROJECT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectChangeRequestIDChanging(int value);
    partial void OnProjectChangeRequestIDChanged();
    partial void OnProjectChangeRequestNumberChanging(System.Nullable<int> value);
    partial void OnProjectChangeRequestNumberChanged();
    partial void OnProjectChanging(int value);
    partial void OnProjectChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnProjectTermInMonthsChanging(System.Nullable<int> value);
    partial void OnProjectTermInMonthsChanged();
    partial void OnCAPEXBudgetChanging(System.Nullable<decimal> value);
    partial void OnCAPEXBudgetChanged();
    partial void OnOPEXBudgetChanging(System.Nullable<decimal> value);
    partial void OnOPEXBudgetChanged();
    partial void OnPCRLinkChanging(string value);
    partial void OnPCRLinkChanged();
    #endregion
		
		public PROJECT_CHANGE_REQUEST()
		{
			this._ProjectPROJECT = default(EntityRef<PROJECT>);
			OnCreated();
		}
		
		[Column(Storage="_ProjectChangeRequestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProjectChangeRequestID
		{
			get
			{
				return this._ProjectChangeRequestID;
			}
			set
			{
				if ((this._ProjectChangeRequestID != value))
				{
					this.OnProjectChangeRequestIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectChangeRequestID = value;
					this.SendPropertyChanged("ProjectChangeRequestID");
					this.OnProjectChangeRequestIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectChangeRequestNumber", DbType="Int")]
		public System.Nullable<int> ProjectChangeRequestNumber
		{
			get
			{
				return this._ProjectChangeRequestNumber;
			}
			set
			{
				if ((this._ProjectChangeRequestNumber != value))
				{
					this.OnProjectChangeRequestNumberChanging(value);
					this.SendPropertyChanging();
					this._ProjectChangeRequestNumber = value;
					this.SendPropertyChanged("ProjectChangeRequestNumber");
					this.OnProjectChangeRequestNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Project", DbType="Int NOT NULL")]
		public int Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					if (this._ProjectPROJECT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectTermInMonths", DbType="Int")]
		public System.Nullable<int> ProjectTermInMonths
		{
			get
			{
				return this._ProjectTermInMonths;
			}
			set
			{
				if ((this._ProjectTermInMonths != value))
				{
					this.OnProjectTermInMonthsChanging(value);
					this.SendPropertyChanging();
					this._ProjectTermInMonths = value;
					this.SendPropertyChanged("ProjectTermInMonths");
					this.OnProjectTermInMonthsChanged();
				}
			}
		}
		
		[Column(Storage="_CAPEXBudget", DbType="Money")]
		public System.Nullable<decimal> CAPEXBudget
		{
			get
			{
				return this._CAPEXBudget;
			}
			set
			{
				if ((this._CAPEXBudget != value))
				{
					this.OnCAPEXBudgetChanging(value);
					this.SendPropertyChanging();
					this._CAPEXBudget = value;
					this.SendPropertyChanged("CAPEXBudget");
					this.OnCAPEXBudgetChanged();
				}
			}
		}
		
		[Column(Storage="_OPEXBudget", DbType="Money")]
		public System.Nullable<decimal> OPEXBudget
		{
			get
			{
				return this._OPEXBudget;
			}
			set
			{
				if ((this._OPEXBudget != value))
				{
					this.OnOPEXBudgetChanging(value);
					this.SendPropertyChanging();
					this._OPEXBudget = value;
					this.SendPropertyChanged("OPEXBudget");
					this.OnOPEXBudgetChanged();
				}
			}
		}
		
		[Column(Storage="_PCRLink", DbType="VarChar(200)")]
		public string PCRLink
		{
			get
			{
				return this._PCRLink;
			}
			set
			{
				if ((this._PCRLink != value))
				{
					this.OnPCRLinkChanging(value);
					this.SendPropertyChanging();
					this._PCRLink = value;
					this.SendPropertyChanged("PCRLink");
					this.OnPCRLinkChanged();
				}
			}
		}
		
		[Association(Name="FK_PROJECT_CHANGE_REQUEST_PROJECT", Storage="_ProjectPROJECT", ThisKey="Project", OtherKey="ProjectID", IsForeignKey=true)]
		public PROJECT ProjectPROJECT
		{
			get
			{
				return this._ProjectPROJECT.Entity;
			}
			set
			{
				PROJECT previousValue = this._ProjectPROJECT.Entity;
				if (((previousValue != value) 
							|| (this._ProjectPROJECT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectPROJECT.Entity = null;
						previousValue.PROJECT_CHANGE_REQUEST.Remove(this);
					}
					this._ProjectPROJECT.Entity = value;
					if ((value != null))
					{
						value.PROJECT_CHANGE_REQUEST.Add(this);
						this._Project = value.ProjectID;
					}
					else
					{
						this._Project = default(int);
					}
					this.SendPropertyChanged("ProjectPROJECT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PROJECT_CHANGE_REQUEST_EDITING_RULES")]
	public partial class PROJECT_CHANGE_REQUEST_EDITING_RULES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private bool _CAPEXProject;
		
		private int _Field;
		
		private int _Status;
		
		private bool _Mandatory;
		
		private bool _ReadOnly;
		
		private bool _NeedPermission;
		
		private EntityRef<PROJECT_CHANGE_REQUEST_FIELDS> _PROJECT_CHANGE_REQUEST_FIELDS;
		
		private EntityRef<PROJECT_STATUS> _PROJECT_STATUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCAPEXProjectChanging(bool value);
    partial void OnCAPEXProjectChanged();
    partial void OnFieldChanging(int value);
    partial void OnFieldChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnMandatoryChanging(bool value);
    partial void OnMandatoryChanged();
    partial void OnReadOnlyChanging(bool value);
    partial void OnReadOnlyChanged();
    partial void OnNeedPermissionChanging(bool value);
    partial void OnNeedPermissionChanged();
    #endregion
		
		public PROJECT_CHANGE_REQUEST_EDITING_RULES()
		{
			this._PROJECT_CHANGE_REQUEST_FIELDS = default(EntityRef<PROJECT_CHANGE_REQUEST_FIELDS>);
			this._PROJECT_STATUS = default(EntityRef<PROJECT_STATUS>);
			OnCreated();
		}
		
		[Column(Storage="_CAPEXProject", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool CAPEXProject
		{
			get
			{
				return this._CAPEXProject;
			}
			set
			{
				if ((this._CAPEXProject != value))
				{
					this.OnCAPEXProjectChanging(value);
					this.SendPropertyChanging();
					this._CAPEXProject = value;
					this.SendPropertyChanged("CAPEXProject");
					this.OnCAPEXProjectChanged();
				}
			}
		}
		
		[Column(Storage="_Field", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					if (this._PROJECT_CHANGE_REQUEST_FIELDS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldChanging(value);
					this.SendPropertyChanging();
					this._Field = value;
					this.SendPropertyChanged("Field");
					this.OnFieldChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._PROJECT_STATUS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Mandatory", DbType="Bit NOT NULL")]
		public bool Mandatory
		{
			get
			{
				return this._Mandatory;
			}
			set
			{
				if ((this._Mandatory != value))
				{
					this.OnMandatoryChanging(value);
					this.SendPropertyChanging();
					this._Mandatory = value;
					this.SendPropertyChanged("Mandatory");
					this.OnMandatoryChanged();
				}
			}
		}
		
		[Column(Storage="_ReadOnly", DbType="Bit NOT NULL")]
		public bool ReadOnly
		{
			get
			{
				return this._ReadOnly;
			}
			set
			{
				if ((this._ReadOnly != value))
				{
					this.OnReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._ReadOnly = value;
					this.SendPropertyChanged("ReadOnly");
					this.OnReadOnlyChanged();
				}
			}
		}
		
		[Column(Storage="_NeedPermission", DbType="Bit NOT NULL")]
		public bool NeedPermission
		{
			get
			{
				return this._NeedPermission;
			}
			set
			{
				if ((this._NeedPermission != value))
				{
					this.OnNeedPermissionChanging(value);
					this.SendPropertyChanging();
					this._NeedPermission = value;
					this.SendPropertyChanged("NeedPermission");
					this.OnNeedPermissionChanged();
				}
			}
		}
		
		[Association(Name="FK_PROJECT_CHANGE_REQUEST_EDITING_RULES_PROJECT_CHANGE_REQUEST_FIELDS", Storage="_PROJECT_CHANGE_REQUEST_FIELDS", ThisKey="Field", OtherKey="FieldID", IsForeignKey=true)]
		public PROJECT_CHANGE_REQUEST_FIELDS PROJECT_CHANGE_REQUEST_FIELDS
		{
			get
			{
				return this._PROJECT_CHANGE_REQUEST_FIELDS.Entity;
			}
			set
			{
				PROJECT_CHANGE_REQUEST_FIELDS previousValue = this._PROJECT_CHANGE_REQUEST_FIELDS.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT_CHANGE_REQUEST_FIELDS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT_CHANGE_REQUEST_FIELDS.Entity = null;
						previousValue.PROJECT_CHANGE_REQUEST_EDITING_RULES.Remove(this);
					}
					this._PROJECT_CHANGE_REQUEST_FIELDS.Entity = value;
					if ((value != null))
					{
						value.PROJECT_CHANGE_REQUEST_EDITING_RULES.Add(this);
						this._Field = value.FieldID;
					}
					else
					{
						this._Field = default(int);
					}
					this.SendPropertyChanged("PROJECT_CHANGE_REQUEST_FIELDS");
				}
			}
		}
		
		[Association(Name="FK_PROJECT_CHANGE_REQUEST_EDITING_RULES_PROJECT_STATUS", Storage="_PROJECT_STATUS", ThisKey="Status", OtherKey="StatusID", IsForeignKey=true)]
		public PROJECT_STATUS PROJECT_STATUS
		{
			get
			{
				return this._PROJECT_STATUS.Entity;
			}
			set
			{
				PROJECT_STATUS previousValue = this._PROJECT_STATUS.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT_STATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT_STATUS.Entity = null;
						previousValue.PROJECT_CHANGE_REQUEST_EDITING_RULES.Remove(this);
					}
					this._PROJECT_STATUS.Entity = value;
					if ((value != null))
					{
						value.PROJECT_CHANGE_REQUEST_EDITING_RULES.Add(this);
						this._Status = value.StatusID;
					}
					else
					{
						this._Status = default(int);
					}
					this.SendPropertyChanged("PROJECT_STATUS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PROJECT_CHANGE_REQUEST_FIELDS")]
	public partial class PROJECT_CHANGE_REQUEST_FIELDS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FieldID;
		
		private string _FieldName;
		
		private string _FieldLabel;
		
		private int _FieldOrder;
		
		private EntitySet<PROJECT_CHANGE_REQUEST_EDITING_RULES> _PROJECT_CHANGE_REQUEST_EDITING_RULES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFieldIDChanging(int value);
    partial void OnFieldIDChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldLabelChanging(string value);
    partial void OnFieldLabelChanged();
    partial void OnFieldOrderChanging(int value);
    partial void OnFieldOrderChanged();
    #endregion
		
		public PROJECT_CHANGE_REQUEST_FIELDS()
		{
			this._PROJECT_CHANGE_REQUEST_EDITING_RULES = new EntitySet<PROJECT_CHANGE_REQUEST_EDITING_RULES>(new Action<PROJECT_CHANGE_REQUEST_EDITING_RULES>(this.attach_PROJECT_CHANGE_REQUEST_EDITING_RULES), new Action<PROJECT_CHANGE_REQUEST_EDITING_RULES>(this.detach_PROJECT_CHANGE_REQUEST_EDITING_RULES));
			OnCreated();
		}
		
		[Column(Storage="_FieldID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this.OnFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FieldID = value;
					this.SendPropertyChanged("FieldID");
					this.OnFieldIDChanged();
				}
			}
		}
		
		[Column(Storage="_FieldName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[Column(Storage="_FieldLabel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FieldLabel
		{
			get
			{
				return this._FieldLabel;
			}
			set
			{
				if ((this._FieldLabel != value))
				{
					this.OnFieldLabelChanging(value);
					this.SendPropertyChanging();
					this._FieldLabel = value;
					this.SendPropertyChanged("FieldLabel");
					this.OnFieldLabelChanged();
				}
			}
		}
		
		[Column(Storage="_FieldOrder", DbType="Int NOT NULL")]
		public int FieldOrder
		{
			get
			{
				return this._FieldOrder;
			}
			set
			{
				if ((this._FieldOrder != value))
				{
					this.OnFieldOrderChanging(value);
					this.SendPropertyChanging();
					this._FieldOrder = value;
					this.SendPropertyChanged("FieldOrder");
					this.OnFieldOrderChanged();
				}
			}
		}
		
		[Association(Name="FK_PROJECT_CHANGE_REQUEST_EDITING_RULES_PROJECT_CHANGE_REQUEST_FIELDS", Storage="_PROJECT_CHANGE_REQUEST_EDITING_RULES", ThisKey="FieldID", OtherKey="Field", DeleteRule="NO ACTION")]
		public EntitySet<PROJECT_CHANGE_REQUEST_EDITING_RULES> PROJECT_CHANGE_REQUEST_EDITING_RULES
		{
			get
			{
				return this._PROJECT_CHANGE_REQUEST_EDITING_RULES;
			}
			set
			{
				this._PROJECT_CHANGE_REQUEST_EDITING_RULES.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROJECT_CHANGE_REQUEST_EDITING_RULES(PROJECT_CHANGE_REQUEST_EDITING_RULES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_CHANGE_REQUEST_FIELDS = this;
		}
		
		private void detach_PROJECT_CHANGE_REQUEST_EDITING_RULES(PROJECT_CHANGE_REQUEST_EDITING_RULES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_CHANGE_REQUEST_FIELDS = null;
		}
	}
	
	[Table(Name="dbo.PROJECT_EDITING_RULES")]
	public partial class PROJECT_EDITING_RULES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private bool _CAPEXProject;
		
		private int _Field;
		
		private int _Status;
		
		private bool _Mandatory;
		
		private bool _ReadOnly;
		
		private bool _NeedPermission;
		
		private EntityRef<PROJECT_FIELDS> _PROJECT_FIELDS;
		
		private EntityRef<PROJECT_STATUS> _PROJECT_STATUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCAPEXProjectChanging(bool value);
    partial void OnCAPEXProjectChanged();
    partial void OnFieldChanging(int value);
    partial void OnFieldChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnMandatoryChanging(bool value);
    partial void OnMandatoryChanged();
    partial void OnReadOnlyChanging(bool value);
    partial void OnReadOnlyChanged();
    partial void OnNeedPermissionChanging(bool value);
    partial void OnNeedPermissionChanged();
    #endregion
		
		public PROJECT_EDITING_RULES()
		{
			this._PROJECT_FIELDS = default(EntityRef<PROJECT_FIELDS>);
			this._PROJECT_STATUS = default(EntityRef<PROJECT_STATUS>);
			OnCreated();
		}
		
		[Column(Storage="_CAPEXProject", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool CAPEXProject
		{
			get
			{
				return this._CAPEXProject;
			}
			set
			{
				if ((this._CAPEXProject != value))
				{
					this.OnCAPEXProjectChanging(value);
					this.SendPropertyChanging();
					this._CAPEXProject = value;
					this.SendPropertyChanged("CAPEXProject");
					this.OnCAPEXProjectChanged();
				}
			}
		}
		
		[Column(Storage="_Field", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					if (this._PROJECT_FIELDS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldChanging(value);
					this.SendPropertyChanging();
					this._Field = value;
					this.SendPropertyChanged("Field");
					this.OnFieldChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._PROJECT_STATUS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Mandatory", DbType="Bit NOT NULL")]
		public bool Mandatory
		{
			get
			{
				return this._Mandatory;
			}
			set
			{
				if ((this._Mandatory != value))
				{
					this.OnMandatoryChanging(value);
					this.SendPropertyChanging();
					this._Mandatory = value;
					this.SendPropertyChanged("Mandatory");
					this.OnMandatoryChanged();
				}
			}
		}
		
		[Column(Storage="_ReadOnly", DbType="Bit NOT NULL")]
		public bool ReadOnly
		{
			get
			{
				return this._ReadOnly;
			}
			set
			{
				if ((this._ReadOnly != value))
				{
					this.OnReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._ReadOnly = value;
					this.SendPropertyChanged("ReadOnly");
					this.OnReadOnlyChanged();
				}
			}
		}
		
		[Column(Storage="_NeedPermission", DbType="Bit NOT NULL")]
		public bool NeedPermission
		{
			get
			{
				return this._NeedPermission;
			}
			set
			{
				if ((this._NeedPermission != value))
				{
					this.OnNeedPermissionChanging(value);
					this.SendPropertyChanging();
					this._NeedPermission = value;
					this.SendPropertyChanged("NeedPermission");
					this.OnNeedPermissionChanged();
				}
			}
		}
		
		[Association(Name="FK_PROJECT_EDITING_RULES_PROJECT_FIELDS", Storage="_PROJECT_FIELDS", ThisKey="Field", OtherKey="FieldID", IsForeignKey=true)]
		public PROJECT_FIELDS PROJECT_FIELDS
		{
			get
			{
				return this._PROJECT_FIELDS.Entity;
			}
			set
			{
				PROJECT_FIELDS previousValue = this._PROJECT_FIELDS.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT_FIELDS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT_FIELDS.Entity = null;
						previousValue.PROJECT_EDITING_RULES.Remove(this);
					}
					this._PROJECT_FIELDS.Entity = value;
					if ((value != null))
					{
						value.PROJECT_EDITING_RULES.Add(this);
						this._Field = value.FieldID;
					}
					else
					{
						this._Field = default(int);
					}
					this.SendPropertyChanged("PROJECT_FIELDS");
				}
			}
		}
		
		[Association(Name="FK_PROJECT_EDITING_RULES_PROJECT_STATUS", Storage="_PROJECT_STATUS", ThisKey="Status", OtherKey="StatusID", IsForeignKey=true)]
		public PROJECT_STATUS PROJECT_STATUS
		{
			get
			{
				return this._PROJECT_STATUS.Entity;
			}
			set
			{
				PROJECT_STATUS previousValue = this._PROJECT_STATUS.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT_STATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT_STATUS.Entity = null;
						previousValue.PROJECT_EDITING_RULES.Remove(this);
					}
					this._PROJECT_STATUS.Entity = value;
					if ((value != null))
					{
						value.PROJECT_EDITING_RULES.Add(this);
						this._Status = value.StatusID;
					}
					else
					{
						this._Status = default(int);
					}
					this.SendPropertyChanged("PROJECT_STATUS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PROJECT_ENGINEER_TIMESHEET")]
	public partial class PROJECT_ENGINEER_TIMESHEET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TimesheetID;
		
		private string _EngineerID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private int _Status;
		
		private EntitySet<PROJECT_ENGINEER_TIMESHEET_ENTRIES> _PROJECT_ENGINEER_TIMESHEET_ENTRIES;
		
		private EntitySet<PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES> _PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimesheetIDChanging(int value);
    partial void OnTimesheetIDChanged();
    partial void OnEngineerIDChanging(string value);
    partial void OnEngineerIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public PROJECT_ENGINEER_TIMESHEET()
		{
			this._PROJECT_ENGINEER_TIMESHEET_ENTRIES = new EntitySet<PROJECT_ENGINEER_TIMESHEET_ENTRIES>(new Action<PROJECT_ENGINEER_TIMESHEET_ENTRIES>(this.attach_PROJECT_ENGINEER_TIMESHEET_ENTRIES), new Action<PROJECT_ENGINEER_TIMESHEET_ENTRIES>(this.detach_PROJECT_ENGINEER_TIMESHEET_ENTRIES));
			this._PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES = new EntitySet<PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES>(new Action<PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES>(this.attach_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES), new Action<PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES>(this.detach_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES));
			OnCreated();
		}
		
		[Column(Storage="_TimesheetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TimesheetID
		{
			get
			{
				return this._TimesheetID;
			}
			set
			{
				if ((this._TimesheetID != value))
				{
					this.OnTimesheetIDChanging(value);
					this.SendPropertyChanging();
					this._TimesheetID = value;
					this.SendPropertyChanged("TimesheetID");
					this.OnTimesheetIDChanged();
				}
			}
		}
		
		[Column(Storage="_EngineerID", DbType="VarChar(25)")]
		public string EngineerID
		{
			get
			{
				return this._EngineerID;
			}
			set
			{
				if ((this._EngineerID != value))
				{
					this.OnEngineerIDChanging(value);
					this.SendPropertyChanging();
					this._EngineerID = value;
					this.SendPropertyChanged("EngineerID");
					this.OnEngineerIDChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Association(Name="FK_PROJECT_ENGINEER_TIMESHEET_ENTRIES_PROJECT_ENGINEER_TIMESHEET", Storage="_PROJECT_ENGINEER_TIMESHEET_ENTRIES", ThisKey="TimesheetID", OtherKey="TimesheetID", DeleteRule="NO ACTION")]
		public EntitySet<PROJECT_ENGINEER_TIMESHEET_ENTRIES> PROJECT_ENGINEER_TIMESHEET_ENTRIES
		{
			get
			{
				return this._PROJECT_ENGINEER_TIMESHEET_ENTRIES;
			}
			set
			{
				this._PROJECT_ENGINEER_TIMESHEET_ENTRIES.Assign(value);
			}
		}
		
		[Association(Name="FK_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES_PROJECT_ENGINEER_TIMESHEET", Storage="_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES", ThisKey="TimesheetID", OtherKey="TimesheetID", DeleteRule="NO ACTION")]
		public EntitySet<PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES> PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES
		{
			get
			{
				return this._PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES;
			}
			set
			{
				this._PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROJECT_ENGINEER_TIMESHEET_ENTRIES(PROJECT_ENGINEER_TIMESHEET_ENTRIES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_ENGINEER_TIMESHEET = this;
		}
		
		private void detach_PROJECT_ENGINEER_TIMESHEET_ENTRIES(PROJECT_ENGINEER_TIMESHEET_ENTRIES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_ENGINEER_TIMESHEET = null;
		}
		
		private void attach_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES(PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_ENGINEER_TIMESHEET = this;
		}
		
		private void detach_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES(PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_ENGINEER_TIMESHEET = null;
		}
	}
	
	[Table(Name="dbo.PROJECT_ENGINEER_TIMESHEET_ENTRIES")]
	public partial class PROJECT_ENGINEER_TIMESHEET_ENTRIES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TimesheetDailyEntryID;
		
		private int _TimesheetEntryID;
		
		private int _TimesheetID;
		
		private int _TaskID;
		
		private System.Nullable<System.DateTime> _TaskDate;
		
		private decimal _Time;
		
		private System.Nullable<int> _FootPrintsID;
		
		private EntityRef<PROJECT_ENGINEER_TIMESHEET> _PROJECT_ENGINEER_TIMESHEET;
		
		private EntityRef<PROJECT_TASKS> _PROJECT_TASKS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimesheetDailyEntryIDChanging(int value);
    partial void OnTimesheetDailyEntryIDChanged();
    partial void OnTimesheetEntryIDChanging(int value);
    partial void OnTimesheetEntryIDChanged();
    partial void OnTimesheetIDChanging(int value);
    partial void OnTimesheetIDChanged();
    partial void OnTaskIDChanging(int value);
    partial void OnTaskIDChanged();
    partial void OnTaskDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTaskDateChanged();
    partial void OnTimeChanging(decimal value);
    partial void OnTimeChanged();
    partial void OnFootPrintsIDChanging(System.Nullable<int> value);
    partial void OnFootPrintsIDChanged();
    #endregion
		
		public PROJECT_ENGINEER_TIMESHEET_ENTRIES()
		{
			this._PROJECT_ENGINEER_TIMESHEET = default(EntityRef<PROJECT_ENGINEER_TIMESHEET>);
			this._PROJECT_TASKS = default(EntityRef<PROJECT_TASKS>);
			OnCreated();
		}
		
		[Column(Storage="_TimesheetDailyEntryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TimesheetDailyEntryID
		{
			get
			{
				return this._TimesheetDailyEntryID;
			}
			set
			{
				if ((this._TimesheetDailyEntryID != value))
				{
					this.OnTimesheetDailyEntryIDChanging(value);
					this.SendPropertyChanging();
					this._TimesheetDailyEntryID = value;
					this.SendPropertyChanged("TimesheetDailyEntryID");
					this.OnTimesheetDailyEntryIDChanged();
				}
			}
		}
		
		[Column(Storage="_TimesheetEntryID", DbType="Int NOT NULL")]
		public int TimesheetEntryID
		{
			get
			{
				return this._TimesheetEntryID;
			}
			set
			{
				if ((this._TimesheetEntryID != value))
				{
					this.OnTimesheetEntryIDChanging(value);
					this.SendPropertyChanging();
					this._TimesheetEntryID = value;
					this.SendPropertyChanged("TimesheetEntryID");
					this.OnTimesheetEntryIDChanged();
				}
			}
		}
		
		[Column(Storage="_TimesheetID", DbType="Int NOT NULL")]
		public int TimesheetID
		{
			get
			{
				return this._TimesheetID;
			}
			set
			{
				if ((this._TimesheetID != value))
				{
					if (this._PROJECT_ENGINEER_TIMESHEET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTimesheetIDChanging(value);
					this.SendPropertyChanging();
					this._TimesheetID = value;
					this.SendPropertyChanged("TimesheetID");
					this.OnTimesheetIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskID", DbType="Int NOT NULL")]
		public int TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					if (this._PROJECT_TASKS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TaskDate
		{
			get
			{
				return this._TaskDate;
			}
			set
			{
				if ((this._TaskDate != value))
				{
					this.OnTaskDateChanging(value);
					this.SendPropertyChanging();
					this._TaskDate = value;
					this.SendPropertyChanged("TaskDate");
					this.OnTaskDateChanged();
				}
			}
		}
		
		[Column(Storage="_Time", DbType="Decimal(9,2) NOT NULL")]
		public decimal Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[Column(Storage="_FootPrintsID", DbType="Int")]
		public System.Nullable<int> FootPrintsID
		{
			get
			{
				return this._FootPrintsID;
			}
			set
			{
				if ((this._FootPrintsID != value))
				{
					this.OnFootPrintsIDChanging(value);
					this.SendPropertyChanging();
					this._FootPrintsID = value;
					this.SendPropertyChanged("FootPrintsID");
					this.OnFootPrintsIDChanged();
				}
			}
		}
		
		[Association(Name="FK_PROJECT_ENGINEER_TIMESHEET_ENTRIES_PROJECT_ENGINEER_TIMESHEET", Storage="_PROJECT_ENGINEER_TIMESHEET", ThisKey="TimesheetID", OtherKey="TimesheetID", IsForeignKey=true)]
		public PROJECT_ENGINEER_TIMESHEET PROJECT_ENGINEER_TIMESHEET
		{
			get
			{
				return this._PROJECT_ENGINEER_TIMESHEET.Entity;
			}
			set
			{
				PROJECT_ENGINEER_TIMESHEET previousValue = this._PROJECT_ENGINEER_TIMESHEET.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT_ENGINEER_TIMESHEET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT_ENGINEER_TIMESHEET.Entity = null;
						previousValue.PROJECT_ENGINEER_TIMESHEET_ENTRIES.Remove(this);
					}
					this._PROJECT_ENGINEER_TIMESHEET.Entity = value;
					if ((value != null))
					{
						value.PROJECT_ENGINEER_TIMESHEET_ENTRIES.Add(this);
						this._TimesheetID = value.TimesheetID;
					}
					else
					{
						this._TimesheetID = default(int);
					}
					this.SendPropertyChanged("PROJECT_ENGINEER_TIMESHEET");
				}
			}
		}
		
		[Association(Name="FK_PROJECT_ENGINEER_TIMESHEET_ENTRIES_PROJECT_TASKS", Storage="_PROJECT_TASKS", ThisKey="TaskID", OtherKey="TaskID", IsForeignKey=true)]
		public PROJECT_TASKS PROJECT_TASKS
		{
			get
			{
				return this._PROJECT_TASKS.Entity;
			}
			set
			{
				PROJECT_TASKS previousValue = this._PROJECT_TASKS.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT_TASKS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT_TASKS.Entity = null;
						previousValue.PROJECT_ENGINEER_TIMESHEET_ENTRIES.Remove(this);
					}
					this._PROJECT_TASKS.Entity = value;
					if ((value != null))
					{
						value.PROJECT_ENGINEER_TIMESHEET_ENTRIES.Add(this);
						this._TaskID = value.TaskID;
					}
					else
					{
						this._TaskID = default(int);
					}
					this.SendPropertyChanged("PROJECT_TASKS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES")]
	public partial class PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TimesheetEntryID;
		
		private int _TimesheetID;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<int> _ProjectID;
		
		private int _TaskID;
		
		private decimal _Mon;
		
		private decimal _Tue;
		
		private decimal _Wed;
		
		private decimal _Thu;
		
		private decimal _Fri;
		
		private decimal _Sat;
		
		private decimal _Sun;
		
		private System.Nullable<int> _FootPrintsID;
		
		private EntityRef<PROJECT_ENGINEER_TIMESHEET> _PROJECT_ENGINEER_TIMESHEET;
		
		private EntityRef<PROJECT_TASKS> _PROJECT_TASKS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimesheetEntryIDChanging(int value);
    partial void OnTimesheetEntryIDChanged();
    partial void OnTimesheetIDChanging(int value);
    partial void OnTimesheetIDChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnProjectIDChanging(System.Nullable<int> value);
    partial void OnProjectIDChanged();
    partial void OnTaskIDChanging(int value);
    partial void OnTaskIDChanged();
    partial void OnMonChanging(decimal value);
    partial void OnMonChanged();
    partial void OnTueChanging(decimal value);
    partial void OnTueChanged();
    partial void OnWedChanging(decimal value);
    partial void OnWedChanged();
    partial void OnThuChanging(decimal value);
    partial void OnThuChanged();
    partial void OnFriChanging(decimal value);
    partial void OnFriChanged();
    partial void OnSatChanging(decimal value);
    partial void OnSatChanged();
    partial void OnSunChanging(decimal value);
    partial void OnSunChanged();
    partial void OnFootPrintsIDChanging(System.Nullable<int> value);
    partial void OnFootPrintsIDChanged();
    #endregion
		
		public PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES()
		{
			this._PROJECT_ENGINEER_TIMESHEET = default(EntityRef<PROJECT_ENGINEER_TIMESHEET>);
			this._PROJECT_TASKS = default(EntityRef<PROJECT_TASKS>);
			OnCreated();
		}
		
		[Column(Storage="_TimesheetEntryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TimesheetEntryID
		{
			get
			{
				return this._TimesheetEntryID;
			}
			set
			{
				if ((this._TimesheetEntryID != value))
				{
					this.OnTimesheetEntryIDChanging(value);
					this.SendPropertyChanging();
					this._TimesheetEntryID = value;
					this.SendPropertyChanged("TimesheetEntryID");
					this.OnTimesheetEntryIDChanged();
				}
			}
		}
		
		[Column(Storage="_TimesheetID", DbType="Int NOT NULL")]
		public int TimesheetID
		{
			get
			{
				return this._TimesheetID;
			}
			set
			{
				if ((this._TimesheetID != value))
				{
					if (this._PROJECT_ENGINEER_TIMESHEET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTimesheetIDChanging(value);
					this.SendPropertyChanging();
					this._TimesheetID = value;
					this.SendPropertyChanged("TimesheetID");
					this.OnTimesheetIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectID", DbType="Int")]
		public System.Nullable<int> ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskID", DbType="Int NOT NULL")]
		public int TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					if (this._PROJECT_TASKS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_Mon", DbType="Decimal(9,2) NOT NULL")]
		public decimal Mon
		{
			get
			{
				return this._Mon;
			}
			set
			{
				if ((this._Mon != value))
				{
					this.OnMonChanging(value);
					this.SendPropertyChanging();
					this._Mon = value;
					this.SendPropertyChanged("Mon");
					this.OnMonChanged();
				}
			}
		}
		
		[Column(Storage="_Tue", DbType="Decimal(9,2) NOT NULL")]
		public decimal Tue
		{
			get
			{
				return this._Tue;
			}
			set
			{
				if ((this._Tue != value))
				{
					this.OnTueChanging(value);
					this.SendPropertyChanging();
					this._Tue = value;
					this.SendPropertyChanged("Tue");
					this.OnTueChanged();
				}
			}
		}
		
		[Column(Storage="_Wed", DbType="Decimal(9,2) NOT NULL")]
		public decimal Wed
		{
			get
			{
				return this._Wed;
			}
			set
			{
				if ((this._Wed != value))
				{
					this.OnWedChanging(value);
					this.SendPropertyChanging();
					this._Wed = value;
					this.SendPropertyChanged("Wed");
					this.OnWedChanged();
				}
			}
		}
		
		[Column(Storage="_Thu", DbType="Decimal(9,2) NOT NULL")]
		public decimal Thu
		{
			get
			{
				return this._Thu;
			}
			set
			{
				if ((this._Thu != value))
				{
					this.OnThuChanging(value);
					this.SendPropertyChanging();
					this._Thu = value;
					this.SendPropertyChanged("Thu");
					this.OnThuChanged();
				}
			}
		}
		
		[Column(Storage="_Fri", DbType="Decimal(9,2) NOT NULL")]
		public decimal Fri
		{
			get
			{
				return this._Fri;
			}
			set
			{
				if ((this._Fri != value))
				{
					this.OnFriChanging(value);
					this.SendPropertyChanging();
					this._Fri = value;
					this.SendPropertyChanged("Fri");
					this.OnFriChanged();
				}
			}
		}
		
		[Column(Storage="_Sat", DbType="Decimal(9,2) NOT NULL")]
		public decimal Sat
		{
			get
			{
				return this._Sat;
			}
			set
			{
				if ((this._Sat != value))
				{
					this.OnSatChanging(value);
					this.SendPropertyChanging();
					this._Sat = value;
					this.SendPropertyChanged("Sat");
					this.OnSatChanged();
				}
			}
		}
		
		[Column(Storage="_Sun", DbType="Decimal(9,2) NOT NULL")]
		public decimal Sun
		{
			get
			{
				return this._Sun;
			}
			set
			{
				if ((this._Sun != value))
				{
					this.OnSunChanging(value);
					this.SendPropertyChanging();
					this._Sun = value;
					this.SendPropertyChanged("Sun");
					this.OnSunChanged();
				}
			}
		}
		
		[Column(Storage="_FootPrintsID", DbType="Int")]
		public System.Nullable<int> FootPrintsID
		{
			get
			{
				return this._FootPrintsID;
			}
			set
			{
				if ((this._FootPrintsID != value))
				{
					this.OnFootPrintsIDChanging(value);
					this.SendPropertyChanging();
					this._FootPrintsID = value;
					this.SendPropertyChanged("FootPrintsID");
					this.OnFootPrintsIDChanged();
				}
			}
		}
		
		[Association(Name="FK_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES_PROJECT_ENGINEER_TIMESHEET", Storage="_PROJECT_ENGINEER_TIMESHEET", ThisKey="TimesheetID", OtherKey="TimesheetID", IsForeignKey=true)]
		public PROJECT_ENGINEER_TIMESHEET PROJECT_ENGINEER_TIMESHEET
		{
			get
			{
				return this._PROJECT_ENGINEER_TIMESHEET.Entity;
			}
			set
			{
				PROJECT_ENGINEER_TIMESHEET previousValue = this._PROJECT_ENGINEER_TIMESHEET.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT_ENGINEER_TIMESHEET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT_ENGINEER_TIMESHEET.Entity = null;
						previousValue.PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES.Remove(this);
					}
					this._PROJECT_ENGINEER_TIMESHEET.Entity = value;
					if ((value != null))
					{
						value.PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES.Add(this);
						this._TimesheetID = value.TimesheetID;
					}
					else
					{
						this._TimesheetID = default(int);
					}
					this.SendPropertyChanged("PROJECT_ENGINEER_TIMESHEET");
				}
			}
		}
		
		[Association(Name="FK_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES_PROJECT_TASKS", Storage="_PROJECT_TASKS", ThisKey="TaskID", OtherKey="TaskID", IsForeignKey=true)]
		public PROJECT_TASKS PROJECT_TASKS
		{
			get
			{
				return this._PROJECT_TASKS.Entity;
			}
			set
			{
				PROJECT_TASKS previousValue = this._PROJECT_TASKS.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT_TASKS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT_TASKS.Entity = null;
						previousValue.PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES.Remove(this);
					}
					this._PROJECT_TASKS.Entity = value;
					if ((value != null))
					{
						value.PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES.Add(this);
						this._TaskID = value.TaskID;
					}
					else
					{
						this._TaskID = default(int);
					}
					this.SendPropertyChanged("PROJECT_TASKS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PROJECT_FIELDS")]
	public partial class PROJECT_FIELDS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FieldID;
		
		private string _FieldName;
		
		private string _FieldLabel;
		
		private int _FieldOrder;
		
		private EntitySet<PROJECT_EDITING_RULES> _PROJECT_EDITING_RULES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFieldIDChanging(int value);
    partial void OnFieldIDChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldLabelChanging(string value);
    partial void OnFieldLabelChanged();
    partial void OnFieldOrderChanging(int value);
    partial void OnFieldOrderChanged();
    #endregion
		
		public PROJECT_FIELDS()
		{
			this._PROJECT_EDITING_RULES = new EntitySet<PROJECT_EDITING_RULES>(new Action<PROJECT_EDITING_RULES>(this.attach_PROJECT_EDITING_RULES), new Action<PROJECT_EDITING_RULES>(this.detach_PROJECT_EDITING_RULES));
			OnCreated();
		}
		
		[Column(Storage="_FieldID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this.OnFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FieldID = value;
					this.SendPropertyChanged("FieldID");
					this.OnFieldIDChanged();
				}
			}
		}
		
		[Column(Storage="_FieldName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[Column(Storage="_FieldLabel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FieldLabel
		{
			get
			{
				return this._FieldLabel;
			}
			set
			{
				if ((this._FieldLabel != value))
				{
					this.OnFieldLabelChanging(value);
					this.SendPropertyChanging();
					this._FieldLabel = value;
					this.SendPropertyChanged("FieldLabel");
					this.OnFieldLabelChanged();
				}
			}
		}
		
		[Column(Storage="_FieldOrder", DbType="Int NOT NULL")]
		public int FieldOrder
		{
			get
			{
				return this._FieldOrder;
			}
			set
			{
				if ((this._FieldOrder != value))
				{
					this.OnFieldOrderChanging(value);
					this.SendPropertyChanging();
					this._FieldOrder = value;
					this.SendPropertyChanged("FieldOrder");
					this.OnFieldOrderChanged();
				}
			}
		}
		
		[Association(Name="FK_PROJECT_EDITING_RULES_PROJECT_FIELDS", Storage="_PROJECT_EDITING_RULES", ThisKey="FieldID", OtherKey="Field", DeleteRule="NO ACTION")]
		public EntitySet<PROJECT_EDITING_RULES> PROJECT_EDITING_RULES
		{
			get
			{
				return this._PROJECT_EDITING_RULES;
			}
			set
			{
				this._PROJECT_EDITING_RULES.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROJECT_EDITING_RULES(PROJECT_EDITING_RULES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_FIELDS = this;
		}
		
		private void detach_PROJECT_EDITING_RULES(PROJECT_EDITING_RULES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_FIELDS = null;
		}
	}
	
	[Table(Name="dbo.PROJECT_STATUS")]
	public partial class PROJECT_STATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _StatusDescription;
		
		private int _DisplayOrder;
		
		private EntitySet<PROJECT_CHANGE_REQUEST_EDITING_RULES> _PROJECT_CHANGE_REQUEST_EDITING_RULES;
		
		private EntitySet<PROJECT_EDITING_RULES> _PROJECT_EDITING_RULES;
		
		private EntitySet<PROJECT> _PROJECT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnStatusDescriptionChanging(string value);
    partial void OnStatusDescriptionChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public PROJECT_STATUS()
		{
			this._PROJECT_CHANGE_REQUEST_EDITING_RULES = new EntitySet<PROJECT_CHANGE_REQUEST_EDITING_RULES>(new Action<PROJECT_CHANGE_REQUEST_EDITING_RULES>(this.attach_PROJECT_CHANGE_REQUEST_EDITING_RULES), new Action<PROJECT_CHANGE_REQUEST_EDITING_RULES>(this.detach_PROJECT_CHANGE_REQUEST_EDITING_RULES));
			this._PROJECT_EDITING_RULES = new EntitySet<PROJECT_EDITING_RULES>(new Action<PROJECT_EDITING_RULES>(this.attach_PROJECT_EDITING_RULES), new Action<PROJECT_EDITING_RULES>(this.detach_PROJECT_EDITING_RULES));
			this._PROJECT = new EntitySet<PROJECT>(new Action<PROJECT>(this.attach_PROJECT), new Action<PROJECT>(this.detach_PROJECT));
			OnCreated();
		}
		
		[Column(Storage="_StatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[Column(Storage="_StatusDescription", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusDescription
		{
			get
			{
				return this._StatusDescription;
			}
			set
			{
				if ((this._StatusDescription != value))
				{
					this.OnStatusDescriptionChanging(value);
					this.SendPropertyChanging();
					this._StatusDescription = value;
					this.SendPropertyChanged("StatusDescription");
					this.OnStatusDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[Association(Name="FK_PROJECT_CHANGE_REQUEST_EDITING_RULES_PROJECT_STATUS", Storage="_PROJECT_CHANGE_REQUEST_EDITING_RULES", ThisKey="StatusID", OtherKey="Status", DeleteRule="NO ACTION")]
		public EntitySet<PROJECT_CHANGE_REQUEST_EDITING_RULES> PROJECT_CHANGE_REQUEST_EDITING_RULES
		{
			get
			{
				return this._PROJECT_CHANGE_REQUEST_EDITING_RULES;
			}
			set
			{
				this._PROJECT_CHANGE_REQUEST_EDITING_RULES.Assign(value);
			}
		}
		
		[Association(Name="FK_PROJECT_EDITING_RULES_PROJECT_STATUS", Storage="_PROJECT_EDITING_RULES", ThisKey="StatusID", OtherKey="Status", DeleteRule="NO ACTION")]
		public EntitySet<PROJECT_EDITING_RULES> PROJECT_EDITING_RULES
		{
			get
			{
				return this._PROJECT_EDITING_RULES;
			}
			set
			{
				this._PROJECT_EDITING_RULES.Assign(value);
			}
		}
		
		[Association(Name="FK_PROJECT_PROJECT_STATUS", Storage="_PROJECT", ThisKey="StatusID", OtherKey="Status", DeleteRule="NO ACTION")]
		public EntitySet<PROJECT> PROJECT
		{
			get
			{
				return this._PROJECT;
			}
			set
			{
				this._PROJECT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROJECT_CHANGE_REQUEST_EDITING_RULES(PROJECT_CHANGE_REQUEST_EDITING_RULES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_STATUS = this;
		}
		
		private void detach_PROJECT_CHANGE_REQUEST_EDITING_RULES(PROJECT_CHANGE_REQUEST_EDITING_RULES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_STATUS = null;
		}
		
		private void attach_PROJECT_EDITING_RULES(PROJECT_EDITING_RULES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_STATUS = this;
		}
		
		private void detach_PROJECT_EDITING_RULES(PROJECT_EDITING_RULES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_STATUS = null;
		}
		
		private void attach_PROJECT(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_STATUS = this;
		}
		
		private void detach_PROJECT(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_STATUS = null;
		}
	}
	
	[Table(Name="dbo.PROJECT_TASKS")]
	public partial class PROJECT_TASKS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskID;
		
		private int _ProjectID;
		
		private string _TaskDescription;
		
		private decimal _TimeEstimate;
		
		private EntitySet<PROJECT_ENGINEER_TIMESHEET_ENTRIES> _PROJECT_ENGINEER_TIMESHEET_ENTRIES;
		
		private EntitySet<PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES> _PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES;
		
		private EntityRef<PROJECT> _PROJECT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIDChanging(int value);
    partial void OnTaskIDChanged();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnTaskDescriptionChanging(string value);
    partial void OnTaskDescriptionChanged();
    partial void OnTimeEstimateChanging(decimal value);
    partial void OnTimeEstimateChanged();
    #endregion
		
		public PROJECT_TASKS()
		{
			this._PROJECT_ENGINEER_TIMESHEET_ENTRIES = new EntitySet<PROJECT_ENGINEER_TIMESHEET_ENTRIES>(new Action<PROJECT_ENGINEER_TIMESHEET_ENTRIES>(this.attach_PROJECT_ENGINEER_TIMESHEET_ENTRIES), new Action<PROJECT_ENGINEER_TIMESHEET_ENTRIES>(this.detach_PROJECT_ENGINEER_TIMESHEET_ENTRIES));
			this._PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES = new EntitySet<PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES>(new Action<PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES>(this.attach_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES), new Action<PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES>(this.detach_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES));
			this._PROJECT = default(EntityRef<PROJECT>);
			OnCreated();
		}
		
		[Column(Storage="_TaskID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectID", DbType="Int NOT NULL")]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._PROJECT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskDescription", DbType="VarChar(100)")]
		public string TaskDescription
		{
			get
			{
				return this._TaskDescription;
			}
			set
			{
				if ((this._TaskDescription != value))
				{
					this.OnTaskDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TaskDescription = value;
					this.SendPropertyChanged("TaskDescription");
					this.OnTaskDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_TimeEstimate", DbType="Decimal(9,2) NOT NULL")]
		public decimal TimeEstimate
		{
			get
			{
				return this._TimeEstimate;
			}
			set
			{
				if ((this._TimeEstimate != value))
				{
					this.OnTimeEstimateChanging(value);
					this.SendPropertyChanging();
					this._TimeEstimate = value;
					this.SendPropertyChanged("TimeEstimate");
					this.OnTimeEstimateChanged();
				}
			}
		}
		
		[Association(Name="FK_PROJECT_ENGINEER_TIMESHEET_ENTRIES_PROJECT_TASKS", Storage="_PROJECT_ENGINEER_TIMESHEET_ENTRIES", ThisKey="TaskID", OtherKey="TaskID", DeleteRule="NO ACTION")]
		public EntitySet<PROJECT_ENGINEER_TIMESHEET_ENTRIES> PROJECT_ENGINEER_TIMESHEET_ENTRIES
		{
			get
			{
				return this._PROJECT_ENGINEER_TIMESHEET_ENTRIES;
			}
			set
			{
				this._PROJECT_ENGINEER_TIMESHEET_ENTRIES.Assign(value);
			}
		}
		
		[Association(Name="FK_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES_PROJECT_TASKS", Storage="_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES", ThisKey="TaskID", OtherKey="TaskID", DeleteRule="NO ACTION")]
		public EntitySet<PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES> PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES
		{
			get
			{
				return this._PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES;
			}
			set
			{
				this._PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES.Assign(value);
			}
		}
		
		[Association(Name="FK_PROJECT_TASKS_PROJECT", Storage="_PROJECT", ThisKey="ProjectID", OtherKey="ProjectID", IsForeignKey=true)]
		public PROJECT PROJECT
		{
			get
			{
				return this._PROJECT.Entity;
			}
			set
			{
				PROJECT previousValue = this._PROJECT.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT.Entity = null;
						previousValue.PROJECT_TASKS.Remove(this);
					}
					this._PROJECT.Entity = value;
					if ((value != null))
					{
						value.PROJECT_TASKS.Add(this);
						this._ProjectID = value.ProjectID;
					}
					else
					{
						this._ProjectID = default(int);
					}
					this.SendPropertyChanged("PROJECT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROJECT_ENGINEER_TIMESHEET_ENTRIES(PROJECT_ENGINEER_TIMESHEET_ENTRIES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_TASKS = this;
		}
		
		private void detach_PROJECT_ENGINEER_TIMESHEET_ENTRIES(PROJECT_ENGINEER_TIMESHEET_ENTRIES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_TASKS = null;
		}
		
		private void attach_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES(PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_TASKS = this;
		}
		
		private void detach_PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES(PROJECT_ENGINEER_TIMESHEET_WEEKLY_ENTRIES entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_TASKS = null;
		}
	}
	
	[Table(Name="dbo.PURCHASES_JNL")]
	public partial class PURCHASES_JNL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Audit;
		
		private System.Nullable<short> _Year;
		
		private System.Nullable<byte> _Month;
		
		private System.Nullable<int> _JnlKey;
		
		private System.Nullable<System.DateTime> _JournalDate;
		
		private System.Nullable<byte> _TransType;
		
		private string _TransID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Creditor;
		
		private string _InvNum;
		
		private System.Nullable<System.DateTime> _InvDate;
		
		private string _OrdNum;
		
		private string _ChequeNum;
		
		private string _Refno;
		
		private string _Description;
		
		private decimal _Freight;
		
		private decimal _InvTotal;
		
		private decimal _PrevInvTotal;
		
		private decimal _GST;
		
		private decimal _Discount;
		
		private decimal _CalcTotal;
		
		private decimal _Adjustment;
		
		private byte _Period;
		
		private bool _Updated;
		
		private string _PurchCtrlAccGL;
		
		private bool _Pay;
		
		private decimal _Payment;
		
		private byte _CompanyNum;
		
		private bool _BankRec;
		
		private byte _GLType;
		
		private decimal _ExchangeRate;
		
		private string _CurrencyType;
		
		private string _CreditorName;
		
		private System.Nullable<byte> _TermsDays;
		
		private string _TermsMethod;
		
		private System.Nullable<System.DateTime> _PaymentDue;
		
		private System.Nullable<byte> _PaymentMethod;
		
		private string _GST_Type;
		
		private System.Nullable<System.DateTime> _DatePaid;
		
		private string _BankAccGL;
		
		private string _OldType;
		
		private System.Nullable<bool> _NewUp;
		
		private int _BatchNum;
		
		private bool _Manpay;
		
		private string _BxManpay;
		
		private string _OldAccountID;
		
		private string _InsUser;
		
		private System.Nullable<System.DateTime> _InsDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuditChanging(int value);
    partial void OnAuditChanged();
    partial void OnYearChanging(System.Nullable<short> value);
    partial void OnYearChanged();
    partial void OnMonthChanging(System.Nullable<byte> value);
    partial void OnMonthChanged();
    partial void OnJnlKeyChanging(System.Nullable<int> value);
    partial void OnJnlKeyChanged();
    partial void OnJournalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJournalDateChanged();
    partial void OnTransTypeChanging(System.Nullable<byte> value);
    partial void OnTransTypeChanged();
    partial void OnTransIDChanging(string value);
    partial void OnTransIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCreditorChanging(string value);
    partial void OnCreditorChanged();
    partial void OnInvNumChanging(string value);
    partial void OnInvNumChanged();
    partial void OnInvDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvDateChanged();
    partial void OnOrdNumChanging(string value);
    partial void OnOrdNumChanged();
    partial void OnChequeNumChanging(string value);
    partial void OnChequeNumChanged();
    partial void OnRefnoChanging(string value);
    partial void OnRefnoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFreightChanging(decimal value);
    partial void OnFreightChanged();
    partial void OnInvTotalChanging(decimal value);
    partial void OnInvTotalChanged();
    partial void OnPrevInvTotalChanging(decimal value);
    partial void OnPrevInvTotalChanged();
    partial void OnGSTChanging(decimal value);
    partial void OnGSTChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnCalcTotalChanging(decimal value);
    partial void OnCalcTotalChanged();
    partial void OnAdjustmentChanging(decimal value);
    partial void OnAdjustmentChanged();
    partial void OnPeriodChanging(byte value);
    partial void OnPeriodChanged();
    partial void OnUpdatedChanging(bool value);
    partial void OnUpdatedChanged();
    partial void OnPurchCtrlAccGLChanging(string value);
    partial void OnPurchCtrlAccGLChanged();
    partial void OnPayChanging(bool value);
    partial void OnPayChanged();
    partial void OnPaymentChanging(decimal value);
    partial void OnPaymentChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnBankRecChanging(bool value);
    partial void OnBankRecChanged();
    partial void OnGLTypeChanging(byte value);
    partial void OnGLTypeChanged();
    partial void OnExchangeRateChanging(decimal value);
    partial void OnExchangeRateChanged();
    partial void OnCurrencyTypeChanging(string value);
    partial void OnCurrencyTypeChanged();
    partial void OnCreditorNameChanging(string value);
    partial void OnCreditorNameChanged();
    partial void OnTermsDaysChanging(System.Nullable<byte> value);
    partial void OnTermsDaysChanged();
    partial void OnTermsMethodChanging(string value);
    partial void OnTermsMethodChanged();
    partial void OnPaymentDueChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDueChanged();
    partial void OnPaymentMethodChanging(System.Nullable<byte> value);
    partial void OnPaymentMethodChanged();
    partial void OnGST_TypeChanging(string value);
    partial void OnGST_TypeChanged();
    partial void OnDatePaidChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePaidChanged();
    partial void OnBankAccGLChanging(string value);
    partial void OnBankAccGLChanged();
    partial void OnOldTypeChanging(string value);
    partial void OnOldTypeChanged();
    partial void OnNewUpChanging(System.Nullable<bool> value);
    partial void OnNewUpChanged();
    partial void OnBatchNumChanging(int value);
    partial void OnBatchNumChanged();
    partial void OnManpayChanging(bool value);
    partial void OnManpayChanged();
    partial void OnBxManpayChanging(string value);
    partial void OnBxManpayChanged();
    partial void OnOldAccountIDChanging(string value);
    partial void OnOldAccountIDChanged();
    partial void OnInsUserChanging(string value);
    partial void OnInsUserChanged();
    partial void OnInsDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsDateChanged();
    #endregion
		
		public PURCHASES_JNL()
		{
			OnCreated();
		}
		
		[Column(Storage="_Audit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt")]
		public System.Nullable<short> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt")]
		public System.Nullable<byte> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_JnlKey", DbType="Int")]
		public System.Nullable<int> JnlKey
		{
			get
			{
				return this._JnlKey;
			}
			set
			{
				if ((this._JnlKey != value))
				{
					this.OnJnlKeyChanging(value);
					this.SendPropertyChanging();
					this._JnlKey = value;
					this.SendPropertyChanged("JnlKey");
					this.OnJnlKeyChanged();
				}
			}
		}
		
		[Column(Storage="_JournalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this.OnJournalDateChanging(value);
					this.SendPropertyChanging();
					this._JournalDate = value;
					this.SendPropertyChanged("JournalDate");
					this.OnJournalDateChanged();
				}
			}
		}
		
		[Column(Storage="_TransType", DbType="TinyInt")]
		public System.Nullable<byte> TransType
		{
			get
			{
				return this._TransType;
			}
			set
			{
				if ((this._TransType != value))
				{
					this.OnTransTypeChanging(value);
					this.SendPropertyChanging();
					this._TransType = value;
					this.SendPropertyChanged("TransType");
					this.OnTransTypeChanged();
				}
			}
		}
		
		[Column(Storage="_TransID", DbType="VarChar(3)")]
		public string TransID
		{
			get
			{
				return this._TransID;
			}
			set
			{
				if ((this._TransID != value))
				{
					this.OnTransIDChanging(value);
					this.SendPropertyChanging();
					this._TransID = value;
					this.SendPropertyChanged("TransID");
					this.OnTransIDChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Creditor", DbType="VarChar(12)")]
		public string Creditor
		{
			get
			{
				return this._Creditor;
			}
			set
			{
				if ((this._Creditor != value))
				{
					this.OnCreditorChanging(value);
					this.SendPropertyChanging();
					this._Creditor = value;
					this.SendPropertyChanged("Creditor");
					this.OnCreditorChanged();
				}
			}
		}
		
		[Column(Storage="_InvNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string InvNum
		{
			get
			{
				return this._InvNum;
			}
			set
			{
				if ((this._InvNum != value))
				{
					this.OnInvNumChanging(value);
					this.SendPropertyChanging();
					this._InvNum = value;
					this.SendPropertyChanged("InvNum");
					this.OnInvNumChanged();
				}
			}
		}
		
		[Column(Storage="_InvDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvDate
		{
			get
			{
				return this._InvDate;
			}
			set
			{
				if ((this._InvDate != value))
				{
					this.OnInvDateChanging(value);
					this.SendPropertyChanging();
					this._InvDate = value;
					this.SendPropertyChanged("InvDate");
					this.OnInvDateChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_ChequeNum", DbType="VarChar(12)")]
		public string ChequeNum
		{
			get
			{
				return this._ChequeNum;
			}
			set
			{
				if ((this._ChequeNum != value))
				{
					this.OnChequeNumChanging(value);
					this.SendPropertyChanging();
					this._ChequeNum = value;
					this.SendPropertyChanged("ChequeNum");
					this.OnChequeNumChanged();
				}
			}
		}
		
		[Column(Storage="_Refno", DbType="VarChar(10)")]
		public string Refno
		{
			get
			{
				return this._Refno;
			}
			set
			{
				if ((this._Refno != value))
				{
					this.OnRefnoChanging(value);
					this.SendPropertyChanging();
					this._Refno = value;
					this.SendPropertyChanged("Refno");
					this.OnRefnoChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(32)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Freight", DbType="Decimal(9,2) NOT NULL")]
		public decimal Freight
		{
			get
			{
				return this._Freight;
			}
			set
			{
				if ((this._Freight != value))
				{
					this.OnFreightChanging(value);
					this.SendPropertyChanging();
					this._Freight = value;
					this.SendPropertyChanged("Freight");
					this.OnFreightChanged();
				}
			}
		}
		
		[Column(Storage="_InvTotal", DbType="Decimal(9,2) NOT NULL")]
		public decimal InvTotal
		{
			get
			{
				return this._InvTotal;
			}
			set
			{
				if ((this._InvTotal != value))
				{
					this.OnInvTotalChanging(value);
					this.SendPropertyChanging();
					this._InvTotal = value;
					this.SendPropertyChanged("InvTotal");
					this.OnInvTotalChanged();
				}
			}
		}
		
		[Column(Storage="_PrevInvTotal", DbType="Decimal(9,2) NOT NULL")]
		public decimal PrevInvTotal
		{
			get
			{
				return this._PrevInvTotal;
			}
			set
			{
				if ((this._PrevInvTotal != value))
				{
					this.OnPrevInvTotalChanging(value);
					this.SendPropertyChanging();
					this._PrevInvTotal = value;
					this.SendPropertyChanged("PrevInvTotal");
					this.OnPrevInvTotalChanged();
				}
			}
		}
		
		[Column(Storage="_GST", DbType="Decimal(9,2) NOT NULL")]
		public decimal GST
		{
			get
			{
				return this._GST;
			}
			set
			{
				if ((this._GST != value))
				{
					this.OnGSTChanging(value);
					this.SendPropertyChanging();
					this._GST = value;
					this.SendPropertyChanged("GST");
					this.OnGSTChanged();
				}
			}
		}
		
		[Column(Storage="_Discount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[Column(Storage="_CalcTotal", DbType="Decimal(9,2) NOT NULL")]
		public decimal CalcTotal
		{
			get
			{
				return this._CalcTotal;
			}
			set
			{
				if ((this._CalcTotal != value))
				{
					this.OnCalcTotalChanging(value);
					this.SendPropertyChanging();
					this._CalcTotal = value;
					this.SendPropertyChanged("CalcTotal");
					this.OnCalcTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Adjustment", DbType="Decimal(9,2) NOT NULL")]
		public decimal Adjustment
		{
			get
			{
				return this._Adjustment;
			}
			set
			{
				if ((this._Adjustment != value))
				{
					this.OnAdjustmentChanging(value);
					this.SendPropertyChanging();
					this._Adjustment = value;
					this.SendPropertyChanged("Adjustment");
					this.OnAdjustmentChanged();
				}
			}
		}
		
		[Column(Storage="_Period", DbType="TinyInt NOT NULL")]
		public byte Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[Column(Storage="_Updated", DbType="Bit NOT NULL")]
		public bool Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_PurchCtrlAccGL", DbType="VarChar(16)")]
		public string PurchCtrlAccGL
		{
			get
			{
				return this._PurchCtrlAccGL;
			}
			set
			{
				if ((this._PurchCtrlAccGL != value))
				{
					this.OnPurchCtrlAccGLChanging(value);
					this.SendPropertyChanging();
					this._PurchCtrlAccGL = value;
					this.SendPropertyChanged("PurchCtrlAccGL");
					this.OnPurchCtrlAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_Pay", DbType="Bit NOT NULL")]
		public bool Pay
		{
			get
			{
				return this._Pay;
			}
			set
			{
				if ((this._Pay != value))
				{
					this.OnPayChanging(value);
					this.SendPropertyChanging();
					this._Pay = value;
					this.SendPropertyChanged("Pay");
					this.OnPayChanged();
				}
			}
		}
		
		[Column(Storage="_Payment", DbType="Decimal(19,4) NOT NULL")]
		public decimal Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_BankRec", DbType="Bit NOT NULL")]
		public bool BankRec
		{
			get
			{
				return this._BankRec;
			}
			set
			{
				if ((this._BankRec != value))
				{
					this.OnBankRecChanging(value);
					this.SendPropertyChanging();
					this._BankRec = value;
					this.SendPropertyChanged("BankRec");
					this.OnBankRecChanged();
				}
			}
		}
		
		[Column(Storage="_GLType", DbType="TinyInt NOT NULL")]
		public byte GLType
		{
			get
			{
				return this._GLType;
			}
			set
			{
				if ((this._GLType != value))
				{
					this.OnGLTypeChanging(value);
					this.SendPropertyChanging();
					this._GLType = value;
					this.SendPropertyChanged("GLType");
					this.OnGLTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ExchangeRate", DbType="Decimal(9,4) NOT NULL")]
		public decimal ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[Column(Storage="_CurrencyType", DbType="VarChar(5)")]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this.OnCurrencyTypeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyType = value;
					this.SendPropertyChanged("CurrencyType");
					this.OnCurrencyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_CreditorName", DbType="VarChar(50)")]
		public string CreditorName
		{
			get
			{
				return this._CreditorName;
			}
			set
			{
				if ((this._CreditorName != value))
				{
					this.OnCreditorNameChanging(value);
					this.SendPropertyChanging();
					this._CreditorName = value;
					this.SendPropertyChanged("CreditorName");
					this.OnCreditorNameChanged();
				}
			}
		}
		
		[Column(Storage="_TermsDays", DbType="TinyInt")]
		public System.Nullable<byte> TermsDays
		{
			get
			{
				return this._TermsDays;
			}
			set
			{
				if ((this._TermsDays != value))
				{
					this.OnTermsDaysChanging(value);
					this.SendPropertyChanging();
					this._TermsDays = value;
					this.SendPropertyChanged("TermsDays");
					this.OnTermsDaysChanged();
				}
			}
		}
		
		[Column(Storage="_TermsMethod", DbType="Char(1)")]
		public string TermsMethod
		{
			get
			{
				return this._TermsMethod;
			}
			set
			{
				if ((this._TermsMethod != value))
				{
					this.OnTermsMethodChanging(value);
					this.SendPropertyChanging();
					this._TermsMethod = value;
					this.SendPropertyChanged("TermsMethod");
					this.OnTermsMethodChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentDue", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDue
		{
			get
			{
				return this._PaymentDue;
			}
			set
			{
				if ((this._PaymentDue != value))
				{
					this.OnPaymentDueChanging(value);
					this.SendPropertyChanging();
					this._PaymentDue = value;
					this.SendPropertyChanged("PaymentDue");
					this.OnPaymentDueChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentMethod", DbType="TinyInt")]
		public System.Nullable<byte> PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[Column(Storage="_GST_Type", DbType="Char(1)")]
		public string GST_Type
		{
			get
			{
				return this._GST_Type;
			}
			set
			{
				if ((this._GST_Type != value))
				{
					this.OnGST_TypeChanging(value);
					this.SendPropertyChanging();
					this._GST_Type = value;
					this.SendPropertyChanged("GST_Type");
					this.OnGST_TypeChanged();
				}
			}
		}
		
		[Column(Storage="_DatePaid", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePaid
		{
			get
			{
				return this._DatePaid;
			}
			set
			{
				if ((this._DatePaid != value))
				{
					this.OnDatePaidChanging(value);
					this.SendPropertyChanging();
					this._DatePaid = value;
					this.SendPropertyChanged("DatePaid");
					this.OnDatePaidChanged();
				}
			}
		}
		
		[Column(Storage="_BankAccGL", DbType="VarChar(16)")]
		public string BankAccGL
		{
			get
			{
				return this._BankAccGL;
			}
			set
			{
				if ((this._BankAccGL != value))
				{
					this.OnBankAccGLChanging(value);
					this.SendPropertyChanging();
					this._BankAccGL = value;
					this.SendPropertyChanged("BankAccGL");
					this.OnBankAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_OldType", DbType="VarChar(50)")]
		public string OldType
		{
			get
			{
				return this._OldType;
			}
			set
			{
				if ((this._OldType != value))
				{
					this.OnOldTypeChanging(value);
					this.SendPropertyChanging();
					this._OldType = value;
					this.SendPropertyChanged("OldType");
					this.OnOldTypeChanged();
				}
			}
		}
		
		[Column(Storage="_NewUp", DbType="Bit")]
		public System.Nullable<bool> NewUp
		{
			get
			{
				return this._NewUp;
			}
			set
			{
				if ((this._NewUp != value))
				{
					this.OnNewUpChanging(value);
					this.SendPropertyChanging();
					this._NewUp = value;
					this.SendPropertyChanged("NewUp");
					this.OnNewUpChanged();
				}
			}
		}
		
		[Column(Storage="_BatchNum", DbType="Int NOT NULL")]
		public int BatchNum
		{
			get
			{
				return this._BatchNum;
			}
			set
			{
				if ((this._BatchNum != value))
				{
					this.OnBatchNumChanging(value);
					this.SendPropertyChanging();
					this._BatchNum = value;
					this.SendPropertyChanged("BatchNum");
					this.OnBatchNumChanged();
				}
			}
		}
		
		[Column(Storage="_Manpay", DbType="Bit NOT NULL")]
		public bool Manpay
		{
			get
			{
				return this._Manpay;
			}
			set
			{
				if ((this._Manpay != value))
				{
					this.OnManpayChanging(value);
					this.SendPropertyChanging();
					this._Manpay = value;
					this.SendPropertyChanged("Manpay");
					this.OnManpayChanged();
				}
			}
		}
		
		[Column(Name="bxManpay", Storage="_BxManpay", DbType="Char(1)")]
		public string BxManpay
		{
			get
			{
				return this._BxManpay;
			}
			set
			{
				if ((this._BxManpay != value))
				{
					this.OnBxManpayChanging(value);
					this.SendPropertyChanging();
					this._BxManpay = value;
					this.SendPropertyChanged("BxManpay");
					this.OnBxManpayChanged();
				}
			}
		}
		
		[Column(Storage="_OldAccountID", DbType="VarChar(12)")]
		public string OldAccountID
		{
			get
			{
				return this._OldAccountID;
			}
			set
			{
				if ((this._OldAccountID != value))
				{
					this.OnOldAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OldAccountID = value;
					this.SendPropertyChanged("OldAccountID");
					this.OnOldAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_InsUser", DbType="VarChar(25)")]
		public string InsUser
		{
			get
			{
				return this._InsUser;
			}
			set
			{
				if ((this._InsUser != value))
				{
					this.OnInsUserChanging(value);
					this.SendPropertyChanging();
					this._InsUser = value;
					this.SendPropertyChanged("InsUser");
					this.OnInsUserChanged();
				}
			}
		}
		
		[Column(Storage="_InsDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsDate
		{
			get
			{
				return this._InsDate;
			}
			set
			{
				if ((this._InsDate != value))
				{
					this.OnInsDateChanging(value);
					this.SendPropertyChanging();
					this._InsDate = value;
					this.SendPropertyChanged("InsDate");
					this.OnInsDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PURCHASES_JNL_DISSECTIONS")]
	public partial class PURCHASES_JNL_DISSECTIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Audit;
		
		private System.Nullable<int> _Purch_Jnl_Audit;
		
		private string _CtrlAccGL;
		
		private string _DissectAccGL;
		
		private decimal _Amount;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private string _CurrencyType;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Creditor;
		
		private string _InvNum;
		
		private System.Nullable<byte> _CompanyNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuditChanging(int value);
    partial void OnAuditChanged();
    partial void OnPurch_Jnl_AuditChanging(System.Nullable<int> value);
    partial void OnPurch_Jnl_AuditChanged();
    partial void OnCtrlAccGLChanging(string value);
    partial void OnCtrlAccGLChanged();
    partial void OnDissectAccGLChanging(string value);
    partial void OnDissectAccGLChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    partial void OnCurrencyTypeChanging(string value);
    partial void OnCurrencyTypeChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCreditorChanging(string value);
    partial void OnCreditorChanged();
    partial void OnInvNumChanging(string value);
    partial void OnInvNumChanged();
    partial void OnCompanyNumChanging(System.Nullable<byte> value);
    partial void OnCompanyNumChanged();
    #endregion
		
		public PURCHASES_JNL_DISSECTIONS()
		{
			OnCreated();
		}
		
		[Column(Storage="_Audit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[Column(Storage="_Purch_Jnl_Audit", DbType="Int")]
		public System.Nullable<int> Purch_Jnl_Audit
		{
			get
			{
				return this._Purch_Jnl_Audit;
			}
			set
			{
				if ((this._Purch_Jnl_Audit != value))
				{
					this.OnPurch_Jnl_AuditChanging(value);
					this.SendPropertyChanging();
					this._Purch_Jnl_Audit = value;
					this.SendPropertyChanged("Purch_Jnl_Audit");
					this.OnPurch_Jnl_AuditChanged();
				}
			}
		}
		
		[Column(Storage="_CtrlAccGL", DbType="VarChar(16)")]
		public string CtrlAccGL
		{
			get
			{
				return this._CtrlAccGL;
			}
			set
			{
				if ((this._CtrlAccGL != value))
				{
					this.OnCtrlAccGLChanging(value);
					this.SendPropertyChanging();
					this._CtrlAccGL = value;
					this.SendPropertyChanged("CtrlAccGL");
					this.OnCtrlAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_DissectAccGL", DbType="VarChar(16)")]
		public string DissectAccGL
		{
			get
			{
				return this._DissectAccGL;
			}
			set
			{
				if ((this._DissectAccGL != value))
				{
					this.OnDissectAccGLChanging(value);
					this.SendPropertyChanging();
					this._DissectAccGL = value;
					this.SendPropertyChanged("DissectAccGL");
					this.OnDissectAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Storage="_ExchangeRate", DbType="Decimal(5,4)")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[Column(Storage="_CurrencyType", DbType="VarChar(5)")]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this.OnCurrencyTypeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyType = value;
					this.SendPropertyChanged("CurrencyType");
					this.OnCurrencyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Creditor", DbType="VarChar(12)")]
		public string Creditor
		{
			get
			{
				return this._Creditor;
			}
			set
			{
				if ((this._Creditor != value))
				{
					this.OnCreditorChanging(value);
					this.SendPropertyChanging();
					this._Creditor = value;
					this.SendPropertyChanged("Creditor");
					this.OnCreditorChanged();
				}
			}
		}
		
		[Column(Storage="_InvNum", DbType="VarChar(16)")]
		public string InvNum
		{
			get
			{
				return this._InvNum;
			}
			set
			{
				if ((this._InvNum != value))
				{
					this.OnInvNumChanging(value);
					this.SendPropertyChanging();
					this._InvNum = value;
					this.SendPropertyChanged("InvNum");
					this.OnInvNumChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PURCHASES_JNL_DISSECTIONS_BKP")]
	public partial class PURCHASES_JNL_DISSECTIONS_BKP
	{
		
		private System.Nullable<int> _Audit;
		
		private System.Nullable<int> _Purch_Jnl_Audit;
		
		private string _CtrlAccGL;
		
		private string _DissectAccGL;
		
		private decimal _Amount;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private string _CurrencyType;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Creditor;
		
		private string _InvNum;
		
		private System.Nullable<byte> _CompanyNum;
		
		private System.Nullable<System.Guid> _BKP_KEY;
		
		public PURCHASES_JNL_DISSECTIONS_BKP()
		{
		}
		
		[Column(Storage="_Audit", DbType="Int")]
		public System.Nullable<int> Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this._Audit = value;
				}
			}
		}
		
		[Column(Storage="_Purch_Jnl_Audit", DbType="Int")]
		public System.Nullable<int> Purch_Jnl_Audit
		{
			get
			{
				return this._Purch_Jnl_Audit;
			}
			set
			{
				if ((this._Purch_Jnl_Audit != value))
				{
					this._Purch_Jnl_Audit = value;
				}
			}
		}
		
		[Column(Storage="_CtrlAccGL", DbType="VarChar(16)")]
		public string CtrlAccGL
		{
			get
			{
				return this._CtrlAccGL;
			}
			set
			{
				if ((this._CtrlAccGL != value))
				{
					this._CtrlAccGL = value;
				}
			}
		}
		
		[Column(Storage="_DissectAccGL", DbType="VarChar(16)")]
		public string DissectAccGL
		{
			get
			{
				return this._DissectAccGL;
			}
			set
			{
				if ((this._DissectAccGL != value))
				{
					this._DissectAccGL = value;
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[Column(Storage="_ExchangeRate", DbType="Decimal(5,4)")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this._ExchangeRate = value;
				}
			}
		}
		
		[Column(Storage="_CurrencyType", DbType="VarChar(5)")]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this._CurrencyType = value;
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Creditor", DbType="VarChar(12)")]
		public string Creditor
		{
			get
			{
				return this._Creditor;
			}
			set
			{
				if ((this._Creditor != value))
				{
					this._Creditor = value;
				}
			}
		}
		
		[Column(Storage="_InvNum", DbType="VarChar(16)")]
		public string InvNum
		{
			get
			{
				return this._InvNum;
			}
			set
			{
				if ((this._InvNum != value))
				{
					this._InvNum = value;
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_BKP_KEY", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BKP_KEY
		{
			get
			{
				return this._BKP_KEY;
			}
			set
			{
				if ((this._BKP_KEY != value))
				{
					this._BKP_KEY = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.RENUM")]
	public partial class RENUM
	{
		
		private System.Nullable<int> _SC_INVNUM;
		
		public RENUM()
		{
		}
		
		[Column(Storage="_SC_INVNUM", DbType="Int")]
		public System.Nullable<int> SC_INVNUM
		{
			get
			{
				return this._SC_INVNUM;
			}
			set
			{
				if ((this._SC_INVNUM != value))
				{
					this._SC_INVNUM = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.REP_ADJUST")]
	public partial class REP_ADJUST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NKey;
		
		private System.Nullable<System.DateTime> _JnlDate;
		
		private short _RepCode;
		
		private string _Description;
		
		private System.Nullable<decimal> _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNKeyChanging(int value);
    partial void OnNKeyChanged();
    partial void OnJnlDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJnlDateChanged();
    partial void OnRepCodeChanging(short value);
    partial void OnRepCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    #endregion
		
		public REP_ADJUST()
		{
			OnCreated();
		}
		
		[Column(Storage="_NKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NKey
		{
			get
			{
				return this._NKey;
			}
			set
			{
				if ((this._NKey != value))
				{
					this.OnNKeyChanging(value);
					this.SendPropertyChanging();
					this._NKey = value;
					this.SendPropertyChanged("NKey");
					this.OnNKeyChanged();
				}
			}
		}
		
		[Column(Storage="_JnlDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JnlDate
		{
			get
			{
				return this._JnlDate;
			}
			set
			{
				if ((this._JnlDate != value))
				{
					this.OnJnlDateChanging(value);
					this.SendPropertyChanging();
					this._JnlDate = value;
					this.SendPropertyChanged("JnlDate");
					this.OnJnlDateChanged();
				}
			}
		}
		
		[Column(Storage="_RepCode", DbType="SmallInt NOT NULL")]
		public short RepCode
		{
			get
			{
				return this._RepCode;
			}
			set
			{
				if ((this._RepCode != value))
				{
					this.OnRepCodeChanging(value);
					this.SendPropertyChanging();
					this._RepCode = value;
					this.SendPropertyChanged("RepCode");
					this.OnRepCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(32)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.REP_ADJUST_JNL")]
	public partial class REP_ADJUST_JNL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _JournalDate;
		
		private string _Explanation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalDateChanging(System.DateTime value);
    partial void OnJournalDateChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    #endregion
		
		public REP_ADJUST_JNL()
		{
			OnCreated();
		}
		
		[Column(Storage="_JournalDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this.OnJournalDateChanging(value);
					this.SendPropertyChanging();
					this._JournalDate = value;
					this.SendPropertyChanged("JournalDate");
					this.OnJournalDateChanged();
				}
			}
		}
		
		[Column(Storage="_Explanation", DbType="VarChar(50)")]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.REPORTS")]
	public partial class REPORTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportID;
		
		private string _Name;
		
		private string _Description;
		
		private string _DescriptionEx;
		
		private string _Type;
		
		private byte _RepFilter;
		
		private string _RepField;
		
		private byte _PeriodFilter;
		
		private string _PeriodMonthField;
		
		private string _PeriodYearField;
		
		private byte _DateFilter;
		
		private string _DateField;
		
		private byte _DebtorFilter;
		
		private string _DebtorField;
		
		private byte _StockGroupFilter;
		
		private string _StockGroupField;
		
		private byte _StockRangeFilter;
		
		private string _StockField;
		
		private byte _StockArticleFilter;
		
		private string _ArticleField;
		
		private bool _SPRecordSource;
		
		private bool _UnAvailable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIDChanging(int value);
    partial void OnReportIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDescriptionExChanging(string value);
    partial void OnDescriptionExChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnRepFilterChanging(byte value);
    partial void OnRepFilterChanged();
    partial void OnRepFieldChanging(string value);
    partial void OnRepFieldChanged();
    partial void OnPeriodFilterChanging(byte value);
    partial void OnPeriodFilterChanged();
    partial void OnPeriodMonthFieldChanging(string value);
    partial void OnPeriodMonthFieldChanged();
    partial void OnPeriodYearFieldChanging(string value);
    partial void OnPeriodYearFieldChanged();
    partial void OnDateFilterChanging(byte value);
    partial void OnDateFilterChanged();
    partial void OnDateFieldChanging(string value);
    partial void OnDateFieldChanged();
    partial void OnDebtorFilterChanging(byte value);
    partial void OnDebtorFilterChanged();
    partial void OnDebtorFieldChanging(string value);
    partial void OnDebtorFieldChanged();
    partial void OnStockGroupFilterChanging(byte value);
    partial void OnStockGroupFilterChanged();
    partial void OnStockGroupFieldChanging(string value);
    partial void OnStockGroupFieldChanged();
    partial void OnStockRangeFilterChanging(byte value);
    partial void OnStockRangeFilterChanged();
    partial void OnStockFieldChanging(string value);
    partial void OnStockFieldChanged();
    partial void OnStockArticleFilterChanging(byte value);
    partial void OnStockArticleFilterChanged();
    partial void OnArticleFieldChanging(string value);
    partial void OnArticleFieldChanged();
    partial void OnSPRecordSourceChanging(bool value);
    partial void OnSPRecordSourceChanged();
    partial void OnUnAvailableChanging(bool value);
    partial void OnUnAvailableChanged();
    #endregion
		
		public REPORTS()
		{
			OnCreated();
		}
		
		[Column(Storage="_ReportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_DescriptionEx", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionEx
		{
			get
			{
				return this._DescriptionEx;
			}
			set
			{
				if ((this._DescriptionEx != value))
				{
					this.OnDescriptionExChanging(value);
					this.SendPropertyChanging();
					this._DescriptionEx = value;
					this.SendPropertyChanged("DescriptionEx");
					this.OnDescriptionExChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_RepFilter", DbType="TinyInt NOT NULL")]
		public byte RepFilter
		{
			get
			{
				return this._RepFilter;
			}
			set
			{
				if ((this._RepFilter != value))
				{
					this.OnRepFilterChanging(value);
					this.SendPropertyChanging();
					this._RepFilter = value;
					this.SendPropertyChanged("RepFilter");
					this.OnRepFilterChanged();
				}
			}
		}
		
		[Column(Storage="_RepField", DbType="VarChar(20)")]
		public string RepField
		{
			get
			{
				return this._RepField;
			}
			set
			{
				if ((this._RepField != value))
				{
					this.OnRepFieldChanging(value);
					this.SendPropertyChanging();
					this._RepField = value;
					this.SendPropertyChanged("RepField");
					this.OnRepFieldChanged();
				}
			}
		}
		
		[Column(Storage="_PeriodFilter", DbType="TinyInt NOT NULL")]
		public byte PeriodFilter
		{
			get
			{
				return this._PeriodFilter;
			}
			set
			{
				if ((this._PeriodFilter != value))
				{
					this.OnPeriodFilterChanging(value);
					this.SendPropertyChanging();
					this._PeriodFilter = value;
					this.SendPropertyChanged("PeriodFilter");
					this.OnPeriodFilterChanged();
				}
			}
		}
		
		[Column(Storage="_PeriodMonthField", DbType="VarChar(20)")]
		public string PeriodMonthField
		{
			get
			{
				return this._PeriodMonthField;
			}
			set
			{
				if ((this._PeriodMonthField != value))
				{
					this.OnPeriodMonthFieldChanging(value);
					this.SendPropertyChanging();
					this._PeriodMonthField = value;
					this.SendPropertyChanged("PeriodMonthField");
					this.OnPeriodMonthFieldChanged();
				}
			}
		}
		
		[Column(Storage="_PeriodYearField", DbType="VarChar(20)")]
		public string PeriodYearField
		{
			get
			{
				return this._PeriodYearField;
			}
			set
			{
				if ((this._PeriodYearField != value))
				{
					this.OnPeriodYearFieldChanging(value);
					this.SendPropertyChanging();
					this._PeriodYearField = value;
					this.SendPropertyChanged("PeriodYearField");
					this.OnPeriodYearFieldChanged();
				}
			}
		}
		
		[Column(Storage="_DateFilter", DbType="TinyInt NOT NULL")]
		public byte DateFilter
		{
			get
			{
				return this._DateFilter;
			}
			set
			{
				if ((this._DateFilter != value))
				{
					this.OnDateFilterChanging(value);
					this.SendPropertyChanging();
					this._DateFilter = value;
					this.SendPropertyChanged("DateFilter");
					this.OnDateFilterChanged();
				}
			}
		}
		
		[Column(Storage="_DateField", DbType="VarChar(20)")]
		public string DateField
		{
			get
			{
				return this._DateField;
			}
			set
			{
				if ((this._DateField != value))
				{
					this.OnDateFieldChanging(value);
					this.SendPropertyChanging();
					this._DateField = value;
					this.SendPropertyChanged("DateField");
					this.OnDateFieldChanged();
				}
			}
		}
		
		[Column(Storage="_DebtorFilter", DbType="TinyInt NOT NULL")]
		public byte DebtorFilter
		{
			get
			{
				return this._DebtorFilter;
			}
			set
			{
				if ((this._DebtorFilter != value))
				{
					this.OnDebtorFilterChanging(value);
					this.SendPropertyChanging();
					this._DebtorFilter = value;
					this.SendPropertyChanged("DebtorFilter");
					this.OnDebtorFilterChanged();
				}
			}
		}
		
		[Column(Storage="_DebtorField", DbType="VarChar(20)")]
		public string DebtorField
		{
			get
			{
				return this._DebtorField;
			}
			set
			{
				if ((this._DebtorField != value))
				{
					this.OnDebtorFieldChanging(value);
					this.SendPropertyChanging();
					this._DebtorField = value;
					this.SendPropertyChanged("DebtorField");
					this.OnDebtorFieldChanged();
				}
			}
		}
		
		[Column(Storage="_StockGroupFilter", DbType="TinyInt NOT NULL")]
		public byte StockGroupFilter
		{
			get
			{
				return this._StockGroupFilter;
			}
			set
			{
				if ((this._StockGroupFilter != value))
				{
					this.OnStockGroupFilterChanging(value);
					this.SendPropertyChanging();
					this._StockGroupFilter = value;
					this.SendPropertyChanged("StockGroupFilter");
					this.OnStockGroupFilterChanged();
				}
			}
		}
		
		[Column(Storage="_StockGroupField", DbType="VarChar(20)")]
		public string StockGroupField
		{
			get
			{
				return this._StockGroupField;
			}
			set
			{
				if ((this._StockGroupField != value))
				{
					this.OnStockGroupFieldChanging(value);
					this.SendPropertyChanging();
					this._StockGroupField = value;
					this.SendPropertyChanged("StockGroupField");
					this.OnStockGroupFieldChanged();
				}
			}
		}
		
		[Column(Storage="_StockRangeFilter", DbType="TinyInt NOT NULL")]
		public byte StockRangeFilter
		{
			get
			{
				return this._StockRangeFilter;
			}
			set
			{
				if ((this._StockRangeFilter != value))
				{
					this.OnStockRangeFilterChanging(value);
					this.SendPropertyChanging();
					this._StockRangeFilter = value;
					this.SendPropertyChanged("StockRangeFilter");
					this.OnStockRangeFilterChanged();
				}
			}
		}
		
		[Column(Storage="_StockField", DbType="VarChar(20)")]
		public string StockField
		{
			get
			{
				return this._StockField;
			}
			set
			{
				if ((this._StockField != value))
				{
					this.OnStockFieldChanging(value);
					this.SendPropertyChanging();
					this._StockField = value;
					this.SendPropertyChanged("StockField");
					this.OnStockFieldChanged();
				}
			}
		}
		
		[Column(Storage="_StockArticleFilter", DbType="TinyInt NOT NULL")]
		public byte StockArticleFilter
		{
			get
			{
				return this._StockArticleFilter;
			}
			set
			{
				if ((this._StockArticleFilter != value))
				{
					this.OnStockArticleFilterChanging(value);
					this.SendPropertyChanging();
					this._StockArticleFilter = value;
					this.SendPropertyChanged("StockArticleFilter");
					this.OnStockArticleFilterChanged();
				}
			}
		}
		
		[Column(Storage="_ArticleField", DbType="VarChar(20)")]
		public string ArticleField
		{
			get
			{
				return this._ArticleField;
			}
			set
			{
				if ((this._ArticleField != value))
				{
					this.OnArticleFieldChanging(value);
					this.SendPropertyChanging();
					this._ArticleField = value;
					this.SendPropertyChanged("ArticleField");
					this.OnArticleFieldChanged();
				}
			}
		}
		
		[Column(Storage="_SPRecordSource", DbType="Bit NOT NULL")]
		public bool SPRecordSource
		{
			get
			{
				return this._SPRecordSource;
			}
			set
			{
				if ((this._SPRecordSource != value))
				{
					this.OnSPRecordSourceChanging(value);
					this.SendPropertyChanging();
					this._SPRecordSource = value;
					this.SendPropertyChanged("SPRecordSource");
					this.OnSPRecordSourceChanged();
				}
			}
		}
		
		[Column(Storage="_UnAvailable", DbType="Bit NOT NULL")]
		public bool UnAvailable
		{
			get
			{
				return this._UnAvailable;
			}
			set
			{
				if ((this._UnAvailable != value))
				{
					this.OnUnAvailableChanging(value);
					this.SendPropertyChanging();
					this._UnAvailable = value;
					this.SendPropertyChanged("UnAvailable");
					this.OnUnAvailableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.REPS_DIARY")]
	public partial class REPS_DIARY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Date;
		
		private int _CallID;
		
		private string _Customer;
		
		private System.Nullable<double> _Time;
		
		private string _Engineer;
		
		private string _Supplier;
		
		private string _Contact;
		
		private string _SupplierRef;
		
		private string _Equipment;
		
		private string _SerialNumber;
		
		private string _Problem;
		
		private string _SLA;
		
		private string _Loan;
		
		private string _Parts;
		
		private System.Nullable<bool> _TandM;
		
		private string _CustRef;
		
		private string _Comments;
		
		private string _Maint_Periph;
		
		private string _Status;
		
		private System.Nullable<int> _Location;
		
		private string _SecureNote;
		
		private string _LocationName;
		
		private System.Nullable<int> _CustomerID;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCallIDChanging(int value);
    partial void OnCallIDChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnTimeChanging(System.Nullable<double> value);
    partial void OnTimeChanged();
    partial void OnEngineerChanging(string value);
    partial void OnEngineerChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnSupplierRefChanging(string value);
    partial void OnSupplierRefChanged();
    partial void OnEquipmentChanging(string value);
    partial void OnEquipmentChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnProblemChanging(string value);
    partial void OnProblemChanged();
    partial void OnSLAChanging(string value);
    partial void OnSLAChanged();
    partial void OnLoanChanging(string value);
    partial void OnLoanChanged();
    partial void OnPartsChanging(string value);
    partial void OnPartsChanged();
    partial void OnTandMChanging(System.Nullable<bool> value);
    partial void OnTandMChanged();
    partial void OnCustRefChanging(string value);
    partial void OnCustRefChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnMaint_PeriphChanging(string value);
    partial void OnMaint_PeriphChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnLocationChanging(System.Nullable<int> value);
    partial void OnLocationChanged();
    partial void OnSecureNoteChanging(string value);
    partial void OnSecureNoteChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    #endregion
		
		public REPS_DIARY()
		{
			this._DEBTORS = default(EntityRef<DEBTORS>);
			OnCreated();
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_CallID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CallID
		{
			get
			{
				return this._CallID;
			}
			set
			{
				if ((this._CallID != value))
				{
					this.OnCallIDChanging(value);
					this.SendPropertyChanging();
					this._CallID = value;
					this.SendPropertyChanged("CallID");
					this.OnCallIDChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(512)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_Time", DbType="Float")]
		public System.Nullable<double> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Engineer", DbType="VarChar(50)")]
		public string Engineer
		{
			get
			{
				return this._Engineer;
			}
			set
			{
				if ((this._Engineer != value))
				{
					this.OnEngineerChanging(value);
					this.SendPropertyChanging();
					this._Engineer = value;
					this.SendPropertyChanged("Engineer");
					this.OnEngineerChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(16)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Contact", DbType="VarChar(50)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierRef", DbType="VarChar(50)")]
		public string SupplierRef
		{
			get
			{
				return this._SupplierRef;
			}
			set
			{
				if ((this._SupplierRef != value))
				{
					this.OnSupplierRefChanging(value);
					this.SendPropertyChanging();
					this._SupplierRef = value;
					this.SendPropertyChanged("SupplierRef");
					this.OnSupplierRefChanged();
				}
			}
		}
		
		[Column(Storage="_Equipment", DbType="VarChar(50)")]
		public string Equipment
		{
			get
			{
				return this._Equipment;
			}
			set
			{
				if ((this._Equipment != value))
				{
					this.OnEquipmentChanging(value);
					this.SendPropertyChanging();
					this._Equipment = value;
					this.SendPropertyChanged("Equipment");
					this.OnEquipmentChanged();
				}
			}
		}
		
		[Column(Storage="_SerialNumber", DbType="VarChar(50)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Problem", DbType="VarChar(255)")]
		public string Problem
		{
			get
			{
				return this._Problem;
			}
			set
			{
				if ((this._Problem != value))
				{
					this.OnProblemChanging(value);
					this.SendPropertyChanging();
					this._Problem = value;
					this.SendPropertyChanged("Problem");
					this.OnProblemChanged();
				}
			}
		}
		
		[Column(Storage="_SLA", DbType="VarChar(50)")]
		public string SLA
		{
			get
			{
				return this._SLA;
			}
			set
			{
				if ((this._SLA != value))
				{
					this.OnSLAChanging(value);
					this.SendPropertyChanging();
					this._SLA = value;
					this.SendPropertyChanged("SLA");
					this.OnSLAChanged();
				}
			}
		}
		
		[Column(Storage="_Loan", DbType="VarChar(50)")]
		public string Loan
		{
			get
			{
				return this._Loan;
			}
			set
			{
				if ((this._Loan != value))
				{
					this.OnLoanChanging(value);
					this.SendPropertyChanging();
					this._Loan = value;
					this.SendPropertyChanged("Loan");
					this.OnLoanChanged();
				}
			}
		}
		
		[Column(Storage="_Parts", DbType="VarChar(50)")]
		public string Parts
		{
			get
			{
				return this._Parts;
			}
			set
			{
				if ((this._Parts != value))
				{
					this.OnPartsChanging(value);
					this.SendPropertyChanging();
					this._Parts = value;
					this.SendPropertyChanged("Parts");
					this.OnPartsChanged();
				}
			}
		}
		
		[Column(Storage="_TandM", DbType="Bit")]
		public System.Nullable<bool> TandM
		{
			get
			{
				return this._TandM;
			}
			set
			{
				if ((this._TandM != value))
				{
					this.OnTandMChanging(value);
					this.SendPropertyChanging();
					this._TandM = value;
					this.SendPropertyChanged("TandM");
					this.OnTandMChanged();
				}
			}
		}
		
		[Column(Storage="_CustRef", DbType="VarChar(50)")]
		public string CustRef
		{
			get
			{
				return this._CustRef;
			}
			set
			{
				if ((this._CustRef != value))
				{
					this.OnCustRefChanging(value);
					this.SendPropertyChanging();
					this._CustRef = value;
					this.SendPropertyChanged("CustRef");
					this.OnCustRefChanged();
				}
			}
		}
		
		[Column(Storage="_Comments", DbType="VarChar(500)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[Column(Name="Maint/Periph", Storage="_Maint_Periph", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Maint_Periph
		{
			get
			{
				return this._Maint_Periph;
			}
			set
			{
				if ((this._Maint_Periph != value))
				{
					this.OnMaint_PeriphChanging(value);
					this.SendPropertyChanging();
					this._Maint_Periph = value;
					this.SendPropertyChanged("Maint_Periph");
					this.OnMaint_PeriphChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Location", DbType="Int")]
		public System.Nullable<int> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Storage="_SecureNote", DbType="VarChar(1024)")]
		public string SecureNote
		{
			get
			{
				return this._SecureNote;
			}
			set
			{
				if ((this._SecureNote != value))
				{
					this.OnSecureNoteChanging(value);
					this.SendPropertyChanging();
					this._SecureNote = value;
					this.SendPropertyChanged("SecureNote");
					this.OnSecureNoteChanged();
				}
			}
		}
		
		[Column(Storage="_LocationName", DbType="VarChar(1024)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[Association(Name="FK_REPS_DIARY_DEBTORS", Storage="_DEBTORS", ThisKey="Location", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.REPS_DIARY.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.REPS_DIARY.Add(this);
						this._Location = value.AccountID;
					}
					else
					{
						this._Location = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.REVCAT_TO_GL")]
	public partial class REVCAT_TO_GL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RevCatGLId;
		
		private string _GLAccount;
		
		private string _GLDescription;
		
		private string _RevenueCategoryDescription;
		
		private System.Nullable<int> _RevenueCategory;
		
		private string _ContractLocation;
		
		private System.Nullable<int> _GLCodeType;
		
		private EntityRef<GL_CODES_TYPES> _GL_CODES_TYPES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRevCatGLIdChanging(int value);
    partial void OnRevCatGLIdChanged();
    partial void OnGLAccountChanging(string value);
    partial void OnGLAccountChanged();
    partial void OnGLDescriptionChanging(string value);
    partial void OnGLDescriptionChanged();
    partial void OnRevenueCategoryDescriptionChanging(string value);
    partial void OnRevenueCategoryDescriptionChanged();
    partial void OnRevenueCategoryChanging(System.Nullable<int> value);
    partial void OnRevenueCategoryChanged();
    partial void OnContractLocationChanging(string value);
    partial void OnContractLocationChanged();
    partial void OnGLCodeTypeChanging(System.Nullable<int> value);
    partial void OnGLCodeTypeChanged();
    #endregion
		
		public REVCAT_TO_GL()
		{
			this._GL_CODES_TYPES = default(EntityRef<GL_CODES_TYPES>);
			OnCreated();
		}
		
		[Column(Storage="_RevCatGLId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RevCatGLId
		{
			get
			{
				return this._RevCatGLId;
			}
			set
			{
				if ((this._RevCatGLId != value))
				{
					this.OnRevCatGLIdChanging(value);
					this.SendPropertyChanging();
					this._RevCatGLId = value;
					this.SendPropertyChanged("RevCatGLId");
					this.OnRevCatGLIdChanged();
				}
			}
		}
		
		[Column(Storage="_GLAccount", DbType="VarChar(16)")]
		public string GLAccount
		{
			get
			{
				return this._GLAccount;
			}
			set
			{
				if ((this._GLAccount != value))
				{
					this.OnGLAccountChanging(value);
					this.SendPropertyChanging();
					this._GLAccount = value;
					this.SendPropertyChanged("GLAccount");
					this.OnGLAccountChanged();
				}
			}
		}
		
		[Column(Storage="_GLDescription", DbType="VarChar(200)")]
		public string GLDescription
		{
			get
			{
				return this._GLDescription;
			}
			set
			{
				if ((this._GLDescription != value))
				{
					this.OnGLDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GLDescription = value;
					this.SendPropertyChanged("GLDescription");
					this.OnGLDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategoryDescription", DbType="VarChar(32)")]
		public string RevenueCategoryDescription
		{
			get
			{
				return this._RevenueCategoryDescription;
			}
			set
			{
				if ((this._RevenueCategoryDescription != value))
				{
					this.OnRevenueCategoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategoryDescription = value;
					this.SendPropertyChanged("RevenueCategoryDescription");
					this.OnRevenueCategoryDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this.OnRevenueCategoryChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategory = value;
					this.SendPropertyChanged("RevenueCategory");
					this.OnRevenueCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_ContractLocation", DbType="VarChar(5)")]
		public string ContractLocation
		{
			get
			{
				return this._ContractLocation;
			}
			set
			{
				if ((this._ContractLocation != value))
				{
					this.OnContractLocationChanging(value);
					this.SendPropertyChanging();
					this._ContractLocation = value;
					this.SendPropertyChanged("ContractLocation");
					this.OnContractLocationChanged();
				}
			}
		}
		
		[Column(Storage="_GLCodeType", DbType="Int")]
		public System.Nullable<int> GLCodeType
		{
			get
			{
				return this._GLCodeType;
			}
			set
			{
				if ((this._GLCodeType != value))
				{
					if (this._GL_CODES_TYPES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._GLCodeType = value;
					this.SendPropertyChanged("GLCodeType");
					this.OnGLCodeTypeChanged();
				}
			}
		}
		
		[Association(Name="FK_REVCAT_TO_GL_GL_CODES_TYPES", Storage="_GL_CODES_TYPES", ThisKey="GLCodeType", OtherKey="GLCodeTypeId", IsForeignKey=true)]
		public GL_CODES_TYPES GL_CODES_TYPES
		{
			get
			{
				return this._GL_CODES_TYPES.Entity;
			}
			set
			{
				GL_CODES_TYPES previousValue = this._GL_CODES_TYPES.Entity;
				if (((previousValue != value) 
							|| (this._GL_CODES_TYPES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_CODES_TYPES.Entity = null;
						previousValue.REVCAT_TO_GL.Remove(this);
					}
					this._GL_CODES_TYPES.Entity = value;
					if ((value != null))
					{
						value.REVCAT_TO_GL.Add(this);
						this._GLCodeType = value.GLCodeTypeId;
					}
					else
					{
						this._GLCodeType = default(Nullable<int>);
					}
					this.SendPropertyChanged("GL_CODES_TYPES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.REVENUE_CATEGORIES")]
	public partial class REVENUE_CATEGORIES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RevenueCategoryId;
		
		private string _RevenueCategoryDescription;
		
		private string _RevenueCategoryGroup;
		
		private System.Nullable<int> _GLRevenueCategoryID;
		
		private System.Nullable<int> _GLService;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntitySet<DEBTORS_3P_INVOICES_ITEMS> _DEBTORS_3P_INVOICES_ITEMS;
		
		private EntityRef<GL_SERVICES> _GL_SERVICES;
		
		private EntitySet<STKORDITEM> _STKORDITEM;
		
		private EntitySet<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRevenueCategoryIdChanging(int value);
    partial void OnRevenueCategoryIdChanged();
    partial void OnRevenueCategoryDescriptionChanging(string value);
    partial void OnRevenueCategoryDescriptionChanged();
    partial void OnRevenueCategoryGroupChanging(string value);
    partial void OnRevenueCategoryGroupChanged();
    partial void OnGLRevenueCategoryIDChanging(System.Nullable<int> value);
    partial void OnGLRevenueCategoryIDChanged();
    partial void OnGLServiceChanging(System.Nullable<int> value);
    partial void OnGLServiceChanged();
    #endregion
		
		public REVENUE_CATEGORIES()
		{
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			this._DEBTORS_3P_INVOICES_ITEMS = new EntitySet<DEBTORS_3P_INVOICES_ITEMS>(new Action<DEBTORS_3P_INVOICES_ITEMS>(this.attach_DEBTORS_3P_INVOICES_ITEMS), new Action<DEBTORS_3P_INVOICES_ITEMS>(this.detach_DEBTORS_3P_INVOICES_ITEMS));
			this._GL_SERVICES = default(EntityRef<GL_SERVICES>);
			this._STKORDITEM = new EntitySet<STKORDITEM>(new Action<STKORDITEM>(this.attach_STKORDITEM), new Action<STKORDITEM>(this.detach_STKORDITEM));
			this._STOCK = new EntitySet<STOCK>(new Action<STOCK>(this.attach_STOCK), new Action<STOCK>(this.detach_STOCK));
			OnCreated();
		}
		
		[Column(Storage="_RevenueCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RevenueCategoryId
		{
			get
			{
				return this._RevenueCategoryId;
			}
			set
			{
				if ((this._RevenueCategoryId != value))
				{
					this.OnRevenueCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategoryId = value;
					this.SendPropertyChanged("RevenueCategoryId");
					this.OnRevenueCategoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategoryDescription", DbType="VarChar(32)")]
		public string RevenueCategoryDescription
		{
			get
			{
				return this._RevenueCategoryDescription;
			}
			set
			{
				if ((this._RevenueCategoryDescription != value))
				{
					this.OnRevenueCategoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategoryDescription = value;
					this.SendPropertyChanged("RevenueCategoryDescription");
					this.OnRevenueCategoryDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategoryGroup", DbType="VarChar(32)")]
		public string RevenueCategoryGroup
		{
			get
			{
				return this._RevenueCategoryGroup;
			}
			set
			{
				if ((this._RevenueCategoryGroup != value))
				{
					this.OnRevenueCategoryGroupChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategoryGroup = value;
					this.SendPropertyChanged("RevenueCategoryGroup");
					this.OnRevenueCategoryGroupChanged();
				}
			}
		}
		
		[Column(Storage="_GLRevenueCategoryID", DbType="Int")]
		public System.Nullable<int> GLRevenueCategoryID
		{
			get
			{
				return this._GLRevenueCategoryID;
			}
			set
			{
				if ((this._GLRevenueCategoryID != value))
				{
					this.OnGLRevenueCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._GLRevenueCategoryID = value;
					this.SendPropertyChanged("GLRevenueCategoryID");
					this.OnGLRevenueCategoryIDChanged();
				}
			}
		}
		
		[Column(Storage="_GLService", DbType="Int")]
		public System.Nullable<int> GLService
		{
			get
			{
				return this._GLService;
			}
			set
			{
				if ((this._GLService != value))
				{
					if (this._GL_SERVICES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLServiceChanging(value);
					this.SendPropertyChanging();
					this._GLService = value;
					this.SendPropertyChanged("GLService");
					this.OnGLServiceChanged();
				}
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_REVENUE_CATEGORIES", Storage="_CTRAC_ITEM", ThisKey="RevenueCategoryId", OtherKey="RevenueCategory", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_DEBTORS_3P_INVOICES_ITEMS_REVENUE_CATEGORIES", Storage="_DEBTORS_3P_INVOICES_ITEMS", ThisKey="RevenueCategoryId", OtherKey="RevenueCategory", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_3P_INVOICES_ITEMS> DEBTORS_3P_INVOICES_ITEMS
		{
			get
			{
				return this._DEBTORS_3P_INVOICES_ITEMS;
			}
			set
			{
				this._DEBTORS_3P_INVOICES_ITEMS.Assign(value);
			}
		}
		
		[Association(Name="FK_REVENUE_CATEGORIES_GL_SERVICES", Storage="_GL_SERVICES", ThisKey="GLService", OtherKey="GLServiceID", IsForeignKey=true)]
		public GL_SERVICES GL_SERVICES
		{
			get
			{
				return this._GL_SERVICES.Entity;
			}
			set
			{
				GL_SERVICES previousValue = this._GL_SERVICES.Entity;
				if (((previousValue != value) 
							|| (this._GL_SERVICES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_SERVICES.Entity = null;
						previousValue.REVENUE_CATEGORIES.Remove(this);
					}
					this._GL_SERVICES.Entity = value;
					if ((value != null))
					{
						value.REVENUE_CATEGORIES.Add(this);
						this._GLService = value.GLServiceID;
					}
					else
					{
						this._GLService = default(Nullable<int>);
					}
					this.SendPropertyChanged("GL_SERVICES");
				}
			}
		}
		
		[Association(Name="FK_STKORDITEM_REVENUE_CATEGORIES", Storage="_STKORDITEM", ThisKey="RevenueCategoryId", OtherKey="CostCategory", DeleteRule="NO ACTION")]
		public EntitySet<STKORDITEM> STKORDITEM
		{
			get
			{
				return this._STKORDITEM;
			}
			set
			{
				this._STKORDITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_REVENUE_CATEGORIES", Storage="_STOCK", ThisKey="RevenueCategoryId", OtherKey="RevenueCategory", DeleteRule="NO ACTION")]
		public EntitySet<STOCK> STOCK
		{
			get
			{
				return this._STOCK;
			}
			set
			{
				this._STOCK.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.REVENUE_CATEGORIES = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.REVENUE_CATEGORIES = null;
		}
		
		private void attach_DEBTORS_3P_INVOICES_ITEMS(DEBTORS_3P_INVOICES_ITEMS entity)
		{
			this.SendPropertyChanging();
			entity.REVENUE_CATEGORIES = this;
		}
		
		private void detach_DEBTORS_3P_INVOICES_ITEMS(DEBTORS_3P_INVOICES_ITEMS entity)
		{
			this.SendPropertyChanging();
			entity.REVENUE_CATEGORIES = null;
		}
		
		private void attach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.REVENUE_CATEGORIES = this;
		}
		
		private void detach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.REVENUE_CATEGORIES = null;
		}
		
		private void attach_STOCK(STOCK entity)
		{
			this.SendPropertyChanging();
			entity.REVENUE_CATEGORIES = this;
		}
		
		private void detach_STOCK(STOCK entity)
		{
			this.SendPropertyChanging();
			entity.REVENUE_CATEGORIES = null;
		}
	}
	
	[Table(Name="dbo.REVENUE_CATEGORIES_GROUPS")]
	public partial class REVENUE_CATEGORIES_GROUPS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RevenueCategoryGroup;
		
		private string _RevenueCategoryGroupGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRevenueCategoryGroupChanging(string value);
    partial void OnRevenueCategoryGroupChanged();
    partial void OnRevenueCategoryGroupGroupChanging(string value);
    partial void OnRevenueCategoryGroupGroupChanged();
    #endregion
		
		public REVENUE_CATEGORIES_GROUPS()
		{
			OnCreated();
		}
		
		[Column(Storage="_RevenueCategoryGroup", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RevenueCategoryGroup
		{
			get
			{
				return this._RevenueCategoryGroup;
			}
			set
			{
				if ((this._RevenueCategoryGroup != value))
				{
					this.OnRevenueCategoryGroupChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategoryGroup = value;
					this.SendPropertyChanged("RevenueCategoryGroup");
					this.OnRevenueCategoryGroupChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategoryGroupGroup", DbType="VarChar(32)")]
		public string RevenueCategoryGroupGroup
		{
			get
			{
				return this._RevenueCategoryGroupGroup;
			}
			set
			{
				if ((this._RevenueCategoryGroupGroup != value))
				{
					this.OnRevenueCategoryGroupGroupChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategoryGroupGroup = value;
					this.SendPropertyChanged("RevenueCategoryGroupGroup");
					this.OnRevenueCategoryGroupGroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SALEITEM")]
	public partial class SALEITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemNum;
		
		private int _OrdNum;
		
		private string _AccountID;
		
		private string _CustOrdNum;
		
		private System.Nullable<System.DateTime> _CustOrdDate;
		
		private string _JobRef;
		
		private string _Required;
		
		private string _ProdCode;
		
		private string _Description;
		
		private System.Nullable<decimal> _Qty;
		
		private System.Nullable<decimal> _QtySupplied;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _TaxRate;
		
		private System.Nullable<decimal> _SalesTax;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _DiscVal;
		
		private bool _ItemPrinted;
		
		private System.Nullable<System.DateTime> _ETP;
		
		private System.Nullable<int> _ProdOrd;
		
		private bool _ChkPrint;
		
		private bool _Inserted;
		
		private System.Nullable<int> _LocationID;
		
		private int _StockAudit;
		
		private System.Nullable<int> _OldOrdNum;
		
		private System.Nullable<bool> _INT_IsVariation;
		
		private string _INT_VariationText;
		
		private System.Nullable<int> _INT_ContractItemID;
		
		private System.Nullable<int> _INT_ContractID;
		
		private System.Nullable<System.DateTime> _INT_InvFromDate;
		
		private System.Nullable<System.DateTime> _INT_InvToDate;
		
		private System.Nullable<System.DateTime> _JobDate;
		
		private string _INT_CE;
		
		private System.Nullable<int> _INT_InvBatch;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<int> _RevenueCategory;
		
		private System.Nullable<int> _InvFreq;
		
		private System.Nullable<System.DateTime> _NextInvDate;
		
		private EntityRef<CTRAC_HEADER> _CTRAC_HEADER;
		
		private EntityRef<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntityRef<SALESORD> _SALESORD;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemNumChanging(int value);
    partial void OnItemNumChanged();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnCustOrdNumChanging(string value);
    partial void OnCustOrdNumChanged();
    partial void OnCustOrdDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCustOrdDateChanged();
    partial void OnJobRefChanging(string value);
    partial void OnJobRefChanged();
    partial void OnRequiredChanging(string value);
    partial void OnRequiredChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnQtySuppliedChanging(System.Nullable<decimal> value);
    partial void OnQtySuppliedChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnTaxRateChanging(System.Nullable<decimal> value);
    partial void OnTaxRateChanged();
    partial void OnSalesTaxChanging(System.Nullable<decimal> value);
    partial void OnSalesTaxChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnDiscValChanging(System.Nullable<decimal> value);
    partial void OnDiscValChanged();
    partial void OnItemPrintedChanging(bool value);
    partial void OnItemPrintedChanged();
    partial void OnETPChanging(System.Nullable<System.DateTime> value);
    partial void OnETPChanged();
    partial void OnProdOrdChanging(System.Nullable<int> value);
    partial void OnProdOrdChanged();
    partial void OnChkPrintChanging(bool value);
    partial void OnChkPrintChanged();
    partial void OnInsertedChanging(bool value);
    partial void OnInsertedChanged();
    partial void OnLocationIDChanging(System.Nullable<int> value);
    partial void OnLocationIDChanged();
    partial void OnStockAuditChanging(int value);
    partial void OnStockAuditChanged();
    partial void OnOldOrdNumChanging(System.Nullable<int> value);
    partial void OnOldOrdNumChanged();
    partial void OnINT_IsVariationChanging(System.Nullable<bool> value);
    partial void OnINT_IsVariationChanged();
    partial void OnINT_VariationTextChanging(string value);
    partial void OnINT_VariationTextChanged();
    partial void OnINT_ContractItemIDChanging(System.Nullable<int> value);
    partial void OnINT_ContractItemIDChanged();
    partial void OnINT_ContractIDChanging(System.Nullable<int> value);
    partial void OnINT_ContractIDChanged();
    partial void OnINT_InvFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnINT_InvFromDateChanged();
    partial void OnINT_InvToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnINT_InvToDateChanged();
    partial void OnJobDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJobDateChanged();
    partial void OnINT_CEChanging(string value);
    partial void OnINT_CEChanged();
    partial void OnINT_InvBatchChanging(System.Nullable<int> value);
    partial void OnINT_InvBatchChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnRevenueCategoryChanging(System.Nullable<int> value);
    partial void OnRevenueCategoryChanged();
    partial void OnInvFreqChanging(System.Nullable<int> value);
    partial void OnInvFreqChanged();
    partial void OnNextInvDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextInvDateChanged();
    #endregion
		
		public SALEITEM()
		{
			this._CTRAC_HEADER = default(EntityRef<CTRAC_HEADER>);
			this._CTRAC_ITEM = default(EntityRef<CTRAC_ITEM>);
			this._SALESORD = default(EntityRef<SALESORD>);
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_ItemNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemNum
		{
			get
			{
				return this._ItemNum;
			}
			set
			{
				if ((this._ItemNum != value))
				{
					this.OnItemNumChanging(value);
					this.SendPropertyChanging();
					this._ItemNum = value;
					this.SendPropertyChanged("ItemNum");
					this.OnItemNumChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int NOT NULL")]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					if (this._SALESORD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="VarChar(12)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_CustOrdNum", DbType="VarChar(16)")]
		public string CustOrdNum
		{
			get
			{
				return this._CustOrdNum;
			}
			set
			{
				if ((this._CustOrdNum != value))
				{
					this.OnCustOrdNumChanging(value);
					this.SendPropertyChanging();
					this._CustOrdNum = value;
					this.SendPropertyChanged("CustOrdNum");
					this.OnCustOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_CustOrdDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CustOrdDate
		{
			get
			{
				return this._CustOrdDate;
			}
			set
			{
				if ((this._CustOrdDate != value))
				{
					this.OnCustOrdDateChanging(value);
					this.SendPropertyChanging();
					this._CustOrdDate = value;
					this.SendPropertyChanged("CustOrdDate");
					this.OnCustOrdDateChanged();
				}
			}
		}
		
		[Column(Storage="_JobRef", DbType="VarChar(16)")]
		public string JobRef
		{
			get
			{
				return this._JobRef;
			}
			set
			{
				if ((this._JobRef != value))
				{
					this.OnJobRefChanging(value);
					this.SendPropertyChanging();
					this._JobRef = value;
					this.SendPropertyChanged("JobRef");
					this.OnJobRefChanged();
				}
			}
		}
		
		[Column(Storage="_Required", DbType="VarChar(5)")]
		public string Required
		{
			get
			{
				return this._Required;
			}
			set
			{
				if ((this._Required != value))
				{
					this.OnRequiredChanging(value);
					this.SendPropertyChanging();
					this._Required = value;
					this.SendPropertyChanged("Required");
					this.OnRequiredChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(2048)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_QtySupplied", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> QtySupplied
		{
			get
			{
				return this._QtySupplied;
			}
			set
			{
				if ((this._QtySupplied != value))
				{
					this.OnQtySuppliedChanging(value);
					this.SendPropertyChanging();
					this._QtySupplied = value;
					this.SendPropertyChanged("QtySupplied");
					this.OnQtySuppliedChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_TaxRate", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[Column(Storage="_SalesTax", DbType="Money")]
		public System.Nullable<decimal> SalesTax
		{
			get
			{
				return this._SalesTax;
			}
			set
			{
				if ((this._SalesTax != value))
				{
					this.OnSalesTaxChanging(value);
					this.SendPropertyChanging();
					this._SalesTax = value;
					this.SendPropertyChanged("SalesTax");
					this.OnSalesTaxChanged();
				}
			}
		}
		
		[Column(Storage="_Cost", DbType="Money")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[Column(Storage="_DiscVal", DbType="Money")]
		public System.Nullable<decimal> DiscVal
		{
			get
			{
				return this._DiscVal;
			}
			set
			{
				if ((this._DiscVal != value))
				{
					this.OnDiscValChanging(value);
					this.SendPropertyChanging();
					this._DiscVal = value;
					this.SendPropertyChanged("DiscVal");
					this.OnDiscValChanged();
				}
			}
		}
		
		[Column(Storage="_ItemPrinted", DbType="Bit NOT NULL")]
		public bool ItemPrinted
		{
			get
			{
				return this._ItemPrinted;
			}
			set
			{
				if ((this._ItemPrinted != value))
				{
					this.OnItemPrintedChanging(value);
					this.SendPropertyChanging();
					this._ItemPrinted = value;
					this.SendPropertyChanged("ItemPrinted");
					this.OnItemPrintedChanged();
				}
			}
		}
		
		[Column(Storage="_ETP", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETP
		{
			get
			{
				return this._ETP;
			}
			set
			{
				if ((this._ETP != value))
				{
					this.OnETPChanging(value);
					this.SendPropertyChanging();
					this._ETP = value;
					this.SendPropertyChanged("ETP");
					this.OnETPChanged();
				}
			}
		}
		
		[Column(Storage="_ProdOrd", DbType="Int")]
		public System.Nullable<int> ProdOrd
		{
			get
			{
				return this._ProdOrd;
			}
			set
			{
				if ((this._ProdOrd != value))
				{
					this.OnProdOrdChanging(value);
					this.SendPropertyChanging();
					this._ProdOrd = value;
					this.SendPropertyChanged("ProdOrd");
					this.OnProdOrdChanged();
				}
			}
		}
		
		[Column(Name="chkPrint", Storage="_ChkPrint", DbType="Bit NOT NULL")]
		public bool ChkPrint
		{
			get
			{
				return this._ChkPrint;
			}
			set
			{
				if ((this._ChkPrint != value))
				{
					this.OnChkPrintChanging(value);
					this.SendPropertyChanging();
					this._ChkPrint = value;
					this.SendPropertyChanged("ChkPrint");
					this.OnChkPrintChanged();
				}
			}
		}
		
		[Column(Storage="_Inserted", DbType="Bit NOT NULL")]
		public bool Inserted
		{
			get
			{
				return this._Inserted;
			}
			set
			{
				if ((this._Inserted != value))
				{
					this.OnInsertedChanging(value);
					this.SendPropertyChanging();
					this._Inserted = value;
					this.SendPropertyChanged("Inserted");
					this.OnInsertedChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int")]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_StockAudit", DbType="Int NOT NULL")]
		public int StockAudit
		{
			get
			{
				return this._StockAudit;
			}
			set
			{
				if ((this._StockAudit != value))
				{
					this.OnStockAuditChanging(value);
					this.SendPropertyChanging();
					this._StockAudit = value;
					this.SendPropertyChanged("StockAudit");
					this.OnStockAuditChanged();
				}
			}
		}
		
		[Column(Storage="_OldOrdNum", DbType="Int")]
		public System.Nullable<int> OldOrdNum
		{
			get
			{
				return this._OldOrdNum;
			}
			set
			{
				if ((this._OldOrdNum != value))
				{
					this.OnOldOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OldOrdNum = value;
					this.SendPropertyChanged("OldOrdNum");
					this.OnOldOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_INT_IsVariation", DbType="Bit")]
		public System.Nullable<bool> INT_IsVariation
		{
			get
			{
				return this._INT_IsVariation;
			}
			set
			{
				if ((this._INT_IsVariation != value))
				{
					this.OnINT_IsVariationChanging(value);
					this.SendPropertyChanging();
					this._INT_IsVariation = value;
					this.SendPropertyChanged("INT_IsVariation");
					this.OnINT_IsVariationChanged();
				}
			}
		}
		
		[Column(Storage="_INT_VariationText", DbType="VarChar(255)")]
		public string INT_VariationText
		{
			get
			{
				return this._INT_VariationText;
			}
			set
			{
				if ((this._INT_VariationText != value))
				{
					this.OnINT_VariationTextChanging(value);
					this.SendPropertyChanging();
					this._INT_VariationText = value;
					this.SendPropertyChanged("INT_VariationText");
					this.OnINT_VariationTextChanged();
				}
			}
		}
		
		[Column(Storage="_INT_ContractItemID", DbType="Int")]
		public System.Nullable<int> INT_ContractItemID
		{
			get
			{
				return this._INT_ContractItemID;
			}
			set
			{
				if ((this._INT_ContractItemID != value))
				{
					if (this._CTRAC_ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINT_ContractItemIDChanging(value);
					this.SendPropertyChanging();
					this._INT_ContractItemID = value;
					this.SendPropertyChanged("INT_ContractItemID");
					this.OnINT_ContractItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_INT_ContractID", DbType="Int")]
		public System.Nullable<int> INT_ContractID
		{
			get
			{
				return this._INT_ContractID;
			}
			set
			{
				if ((this._INT_ContractID != value))
				{
					if (this._CTRAC_HEADER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINT_ContractIDChanging(value);
					this.SendPropertyChanging();
					this._INT_ContractID = value;
					this.SendPropertyChanged("INT_ContractID");
					this.OnINT_ContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_INT_InvFromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> INT_InvFromDate
		{
			get
			{
				return this._INT_InvFromDate;
			}
			set
			{
				if ((this._INT_InvFromDate != value))
				{
					this.OnINT_InvFromDateChanging(value);
					this.SendPropertyChanging();
					this._INT_InvFromDate = value;
					this.SendPropertyChanged("INT_InvFromDate");
					this.OnINT_InvFromDateChanged();
				}
			}
		}
		
		[Column(Storage="_INT_InvToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> INT_InvToDate
		{
			get
			{
				return this._INT_InvToDate;
			}
			set
			{
				if ((this._INT_InvToDate != value))
				{
					this.OnINT_InvToDateChanging(value);
					this.SendPropertyChanging();
					this._INT_InvToDate = value;
					this.SendPropertyChanged("INT_InvToDate");
					this.OnINT_InvToDateChanged();
				}
			}
		}
		
		[Column(Storage="_JobDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobDate
		{
			get
			{
				return this._JobDate;
			}
			set
			{
				if ((this._JobDate != value))
				{
					this.OnJobDateChanging(value);
					this.SendPropertyChanging();
					this._JobDate = value;
					this.SendPropertyChanged("JobDate");
					this.OnJobDateChanged();
				}
			}
		}
		
		[Column(Storage="_INT_CE", DbType="VarChar(25)")]
		public string INT_CE
		{
			get
			{
				return this._INT_CE;
			}
			set
			{
				if ((this._INT_CE != value))
				{
					this.OnINT_CEChanging(value);
					this.SendPropertyChanging();
					this._INT_CE = value;
					this.SendPropertyChanged("INT_CE");
					this.OnINT_CEChanged();
				}
			}
		}
		
		[Column(Storage="_INT_InvBatch", DbType="Int")]
		public System.Nullable<int> INT_InvBatch
		{
			get
			{
				return this._INT_InvBatch;
			}
			set
			{
				if ((this._INT_InvBatch != value))
				{
					this.OnINT_InvBatchChanging(value);
					this.SendPropertyChanging();
					this._INT_InvBatch = value;
					this.SendPropertyChanged("INT_InvBatch");
					this.OnINT_InvBatchChanged();
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="Money")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this.OnRevenueCategoryChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategory = value;
					this.SendPropertyChanged("RevenueCategory");
					this.OnRevenueCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_InvFreq", DbType="Int")]
		public System.Nullable<int> InvFreq
		{
			get
			{
				return this._InvFreq;
			}
			set
			{
				if ((this._InvFreq != value))
				{
					this.OnInvFreqChanging(value);
					this.SendPropertyChanging();
					this._InvFreq = value;
					this.SendPropertyChanged("InvFreq");
					this.OnInvFreqChanged();
				}
			}
		}
		
		[Column(Storage="_NextInvDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextInvDate
		{
			get
			{
				return this._NextInvDate;
			}
			set
			{
				if ((this._NextInvDate != value))
				{
					this.OnNextInvDateChanging(value);
					this.SendPropertyChanging();
					this._NextInvDate = value;
					this.SendPropertyChanged("NextInvDate");
					this.OnNextInvDateChanged();
				}
			}
		}
		
		[Association(Name="FK_SALEITEM_CTRAC_HEADER", Storage="_CTRAC_HEADER", ThisKey="INT_ContractID", OtherKey="ContractId", IsForeignKey=true)]
		public CTRAC_HEADER CTRAC_HEADER
		{
			get
			{
				return this._CTRAC_HEADER.Entity;
			}
			set
			{
				CTRAC_HEADER previousValue = this._CTRAC_HEADER.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_HEADER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_HEADER.Entity = null;
						previousValue.SALEITEM.Remove(this);
					}
					this._CTRAC_HEADER.Entity = value;
					if ((value != null))
					{
						value.SALEITEM.Add(this);
						this._INT_ContractID = value.ContractId;
					}
					else
					{
						this._INT_ContractID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CTRAC_HEADER");
				}
			}
		}
		
		[Association(Name="FK_SALEITEM_CTRAC_ITEM", Storage="_CTRAC_ITEM", ThisKey="INT_ContractItemID", OtherKey="ContractItemID", IsForeignKey=true)]
		public CTRAC_ITEM CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM.Entity;
			}
			set
			{
				CTRAC_ITEM previousValue = this._CTRAC_ITEM.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_ITEM.Entity = null;
						previousValue.SALEITEM.Remove(this);
					}
					this._CTRAC_ITEM.Entity = value;
					if ((value != null))
					{
						value.SALEITEM.Add(this);
						this._INT_ContractItemID = value.ContractItemID;
					}
					else
					{
						this._INT_ContractItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CTRAC_ITEM");
				}
			}
		}
		
		[Association(Name="FK_SALEITEM_SALESORD", Storage="_SALESORD", ThisKey="OrdNum", OtherKey="OrdNum", IsForeignKey=true)]
		public SALESORD SALESORD
		{
			get
			{
				return this._SALESORD.Entity;
			}
			set
			{
				SALESORD previousValue = this._SALESORD.Entity;
				if (((previousValue != value) 
							|| (this._SALESORD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALESORD.Entity = null;
						previousValue.SALEITEM.Remove(this);
					}
					this._SALESORD.Entity = value;
					if ((value != null))
					{
						value.SALEITEM.Add(this);
						this._OrdNum = value.OrdNum;
					}
					else
					{
						this._OrdNum = default(int);
					}
					this.SendPropertyChanged("SALESORD");
				}
			}
		}
		
		[Association(Name="FK_SALEITEM_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.SALEITEM.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.SALEITEM.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SALEITEM_DRAFT")]
	public partial class SALEITEM_DRAFT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemNum;
		
		private int _OrdNum;
		
		private string _AccountID;
		
		private string _CustOrdNum;
		
		private System.Nullable<System.DateTime> _CustOrdDate;
		
		private string _JobRef;
		
		private string _Required;
		
		private string _ProdCode;
		
		private string _Description;
		
		private System.Nullable<decimal> _Qty;
		
		private System.Nullable<decimal> _QtySupplied;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _TaxRate;
		
		private System.Nullable<decimal> _SalesTax;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _DiscVal;
		
		private bool _ItemPrinted;
		
		private System.Nullable<System.DateTime> _ETP;
		
		private System.Nullable<int> _ProdOrd;
		
		private bool _ChkPrint;
		
		private bool _Inserted;
		
		private System.Nullable<int> _LocationID;
		
		private int _StockAudit;
		
		private System.Nullable<int> _OldOrdNum;
		
		private System.Nullable<bool> _INT_IsVariation;
		
		private string _INT_VariationText;
		
		private System.Nullable<int> _INT_ContractItemID;
		
		private System.Nullable<int> _INT_ContractID;
		
		private System.Nullable<System.DateTime> _INT_InvFromDate;
		
		private System.Nullable<System.DateTime> _INT_InvToDate;
		
		private System.Nullable<System.DateTime> _JobDate;
		
		private string _INT_CE;
		
		private System.Nullable<int> _INT_InvBatch;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<int> _RevenueCategory;
		
		private EntityRef<SALESORD_DRAFT> _SALESORD_DRAFT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemNumChanging(int value);
    partial void OnItemNumChanged();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnCustOrdNumChanging(string value);
    partial void OnCustOrdNumChanged();
    partial void OnCustOrdDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCustOrdDateChanged();
    partial void OnJobRefChanging(string value);
    partial void OnJobRefChanged();
    partial void OnRequiredChanging(string value);
    partial void OnRequiredChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnQtySuppliedChanging(System.Nullable<decimal> value);
    partial void OnQtySuppliedChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnTaxRateChanging(System.Nullable<decimal> value);
    partial void OnTaxRateChanged();
    partial void OnSalesTaxChanging(System.Nullable<decimal> value);
    partial void OnSalesTaxChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnDiscValChanging(System.Nullable<decimal> value);
    partial void OnDiscValChanged();
    partial void OnItemPrintedChanging(bool value);
    partial void OnItemPrintedChanged();
    partial void OnETPChanging(System.Nullable<System.DateTime> value);
    partial void OnETPChanged();
    partial void OnProdOrdChanging(System.Nullable<int> value);
    partial void OnProdOrdChanged();
    partial void OnChkPrintChanging(bool value);
    partial void OnChkPrintChanged();
    partial void OnInsertedChanging(bool value);
    partial void OnInsertedChanged();
    partial void OnLocationIDChanging(System.Nullable<int> value);
    partial void OnLocationIDChanged();
    partial void OnStockAuditChanging(int value);
    partial void OnStockAuditChanged();
    partial void OnOldOrdNumChanging(System.Nullable<int> value);
    partial void OnOldOrdNumChanged();
    partial void OnINT_IsVariationChanging(System.Nullable<bool> value);
    partial void OnINT_IsVariationChanged();
    partial void OnINT_VariationTextChanging(string value);
    partial void OnINT_VariationTextChanged();
    partial void OnINT_ContractItemIDChanging(System.Nullable<int> value);
    partial void OnINT_ContractItemIDChanged();
    partial void OnINT_ContractIDChanging(System.Nullable<int> value);
    partial void OnINT_ContractIDChanged();
    partial void OnINT_InvFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnINT_InvFromDateChanged();
    partial void OnINT_InvToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnINT_InvToDateChanged();
    partial void OnJobDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJobDateChanged();
    partial void OnINT_CEChanging(string value);
    partial void OnINT_CEChanged();
    partial void OnINT_InvBatchChanging(System.Nullable<int> value);
    partial void OnINT_InvBatchChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnRevenueCategoryChanging(System.Nullable<int> value);
    partial void OnRevenueCategoryChanged();
    #endregion
		
		public SALEITEM_DRAFT()
		{
			this._SALESORD_DRAFT = default(EntityRef<SALESORD_DRAFT>);
			OnCreated();
		}
		
		[Column(Storage="_ItemNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemNum
		{
			get
			{
				return this._ItemNum;
			}
			set
			{
				if ((this._ItemNum != value))
				{
					this.OnItemNumChanging(value);
					this.SendPropertyChanging();
					this._ItemNum = value;
					this.SendPropertyChanged("ItemNum");
					this.OnItemNumChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int NOT NULL")]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					if (this._SALESORD_DRAFT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="VarChar(12)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_CustOrdNum", DbType="VarChar(16)")]
		public string CustOrdNum
		{
			get
			{
				return this._CustOrdNum;
			}
			set
			{
				if ((this._CustOrdNum != value))
				{
					this.OnCustOrdNumChanging(value);
					this.SendPropertyChanging();
					this._CustOrdNum = value;
					this.SendPropertyChanged("CustOrdNum");
					this.OnCustOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_CustOrdDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CustOrdDate
		{
			get
			{
				return this._CustOrdDate;
			}
			set
			{
				if ((this._CustOrdDate != value))
				{
					this.OnCustOrdDateChanging(value);
					this.SendPropertyChanging();
					this._CustOrdDate = value;
					this.SendPropertyChanged("CustOrdDate");
					this.OnCustOrdDateChanged();
				}
			}
		}
		
		[Column(Storage="_JobRef", DbType="VarChar(16)")]
		public string JobRef
		{
			get
			{
				return this._JobRef;
			}
			set
			{
				if ((this._JobRef != value))
				{
					this.OnJobRefChanging(value);
					this.SendPropertyChanging();
					this._JobRef = value;
					this.SendPropertyChanged("JobRef");
					this.OnJobRefChanged();
				}
			}
		}
		
		[Column(Storage="_Required", DbType="VarChar(5)")]
		public string Required
		{
			get
			{
				return this._Required;
			}
			set
			{
				if ((this._Required != value))
				{
					this.OnRequiredChanging(value);
					this.SendPropertyChanging();
					this._Required = value;
					this.SendPropertyChanged("Required");
					this.OnRequiredChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(2048)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_QtySupplied", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> QtySupplied
		{
			get
			{
				return this._QtySupplied;
			}
			set
			{
				if ((this._QtySupplied != value))
				{
					this.OnQtySuppliedChanging(value);
					this.SendPropertyChanging();
					this._QtySupplied = value;
					this.SendPropertyChanged("QtySupplied");
					this.OnQtySuppliedChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_TaxRate", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[Column(Storage="_SalesTax", DbType="Money")]
		public System.Nullable<decimal> SalesTax
		{
			get
			{
				return this._SalesTax;
			}
			set
			{
				if ((this._SalesTax != value))
				{
					this.OnSalesTaxChanging(value);
					this.SendPropertyChanging();
					this._SalesTax = value;
					this.SendPropertyChanged("SalesTax");
					this.OnSalesTaxChanged();
				}
			}
		}
		
		[Column(Storage="_Cost", DbType="Money")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[Column(Storage="_DiscVal", DbType="Money")]
		public System.Nullable<decimal> DiscVal
		{
			get
			{
				return this._DiscVal;
			}
			set
			{
				if ((this._DiscVal != value))
				{
					this.OnDiscValChanging(value);
					this.SendPropertyChanging();
					this._DiscVal = value;
					this.SendPropertyChanged("DiscVal");
					this.OnDiscValChanged();
				}
			}
		}
		
		[Column(Storage="_ItemPrinted", DbType="Bit NOT NULL")]
		public bool ItemPrinted
		{
			get
			{
				return this._ItemPrinted;
			}
			set
			{
				if ((this._ItemPrinted != value))
				{
					this.OnItemPrintedChanging(value);
					this.SendPropertyChanging();
					this._ItemPrinted = value;
					this.SendPropertyChanged("ItemPrinted");
					this.OnItemPrintedChanged();
				}
			}
		}
		
		[Column(Storage="_ETP", DbType="DateTime")]
		public System.Nullable<System.DateTime> ETP
		{
			get
			{
				return this._ETP;
			}
			set
			{
				if ((this._ETP != value))
				{
					this.OnETPChanging(value);
					this.SendPropertyChanging();
					this._ETP = value;
					this.SendPropertyChanged("ETP");
					this.OnETPChanged();
				}
			}
		}
		
		[Column(Storage="_ProdOrd", DbType="Int")]
		public System.Nullable<int> ProdOrd
		{
			get
			{
				return this._ProdOrd;
			}
			set
			{
				if ((this._ProdOrd != value))
				{
					this.OnProdOrdChanging(value);
					this.SendPropertyChanging();
					this._ProdOrd = value;
					this.SendPropertyChanged("ProdOrd");
					this.OnProdOrdChanged();
				}
			}
		}
		
		[Column(Name="chkPrint", Storage="_ChkPrint", DbType="Bit NOT NULL")]
		public bool ChkPrint
		{
			get
			{
				return this._ChkPrint;
			}
			set
			{
				if ((this._ChkPrint != value))
				{
					this.OnChkPrintChanging(value);
					this.SendPropertyChanging();
					this._ChkPrint = value;
					this.SendPropertyChanged("ChkPrint");
					this.OnChkPrintChanged();
				}
			}
		}
		
		[Column(Storage="_Inserted", DbType="Bit NOT NULL")]
		public bool Inserted
		{
			get
			{
				return this._Inserted;
			}
			set
			{
				if ((this._Inserted != value))
				{
					this.OnInsertedChanging(value);
					this.SendPropertyChanging();
					this._Inserted = value;
					this.SendPropertyChanged("Inserted");
					this.OnInsertedChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int")]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_StockAudit", DbType="Int NOT NULL")]
		public int StockAudit
		{
			get
			{
				return this._StockAudit;
			}
			set
			{
				if ((this._StockAudit != value))
				{
					this.OnStockAuditChanging(value);
					this.SendPropertyChanging();
					this._StockAudit = value;
					this.SendPropertyChanged("StockAudit");
					this.OnStockAuditChanged();
				}
			}
		}
		
		[Column(Storage="_OldOrdNum", DbType="Int")]
		public System.Nullable<int> OldOrdNum
		{
			get
			{
				return this._OldOrdNum;
			}
			set
			{
				if ((this._OldOrdNum != value))
				{
					this.OnOldOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OldOrdNum = value;
					this.SendPropertyChanged("OldOrdNum");
					this.OnOldOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_INT_IsVariation", DbType="Bit")]
		public System.Nullable<bool> INT_IsVariation
		{
			get
			{
				return this._INT_IsVariation;
			}
			set
			{
				if ((this._INT_IsVariation != value))
				{
					this.OnINT_IsVariationChanging(value);
					this.SendPropertyChanging();
					this._INT_IsVariation = value;
					this.SendPropertyChanged("INT_IsVariation");
					this.OnINT_IsVariationChanged();
				}
			}
		}
		
		[Column(Storage="_INT_VariationText", DbType="VarChar(255)")]
		public string INT_VariationText
		{
			get
			{
				return this._INT_VariationText;
			}
			set
			{
				if ((this._INT_VariationText != value))
				{
					this.OnINT_VariationTextChanging(value);
					this.SendPropertyChanging();
					this._INT_VariationText = value;
					this.SendPropertyChanged("INT_VariationText");
					this.OnINT_VariationTextChanged();
				}
			}
		}
		
		[Column(Storage="_INT_ContractItemID", DbType="Int")]
		public System.Nullable<int> INT_ContractItemID
		{
			get
			{
				return this._INT_ContractItemID;
			}
			set
			{
				if ((this._INT_ContractItemID != value))
				{
					this.OnINT_ContractItemIDChanging(value);
					this.SendPropertyChanging();
					this._INT_ContractItemID = value;
					this.SendPropertyChanged("INT_ContractItemID");
					this.OnINT_ContractItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_INT_ContractID", DbType="Int")]
		public System.Nullable<int> INT_ContractID
		{
			get
			{
				return this._INT_ContractID;
			}
			set
			{
				if ((this._INT_ContractID != value))
				{
					this.OnINT_ContractIDChanging(value);
					this.SendPropertyChanging();
					this._INT_ContractID = value;
					this.SendPropertyChanged("INT_ContractID");
					this.OnINT_ContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_INT_InvFromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> INT_InvFromDate
		{
			get
			{
				return this._INT_InvFromDate;
			}
			set
			{
				if ((this._INT_InvFromDate != value))
				{
					this.OnINT_InvFromDateChanging(value);
					this.SendPropertyChanging();
					this._INT_InvFromDate = value;
					this.SendPropertyChanged("INT_InvFromDate");
					this.OnINT_InvFromDateChanged();
				}
			}
		}
		
		[Column(Storage="_INT_InvToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> INT_InvToDate
		{
			get
			{
				return this._INT_InvToDate;
			}
			set
			{
				if ((this._INT_InvToDate != value))
				{
					this.OnINT_InvToDateChanging(value);
					this.SendPropertyChanging();
					this._INT_InvToDate = value;
					this.SendPropertyChanged("INT_InvToDate");
					this.OnINT_InvToDateChanged();
				}
			}
		}
		
		[Column(Storage="_JobDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobDate
		{
			get
			{
				return this._JobDate;
			}
			set
			{
				if ((this._JobDate != value))
				{
					this.OnJobDateChanging(value);
					this.SendPropertyChanging();
					this._JobDate = value;
					this.SendPropertyChanged("JobDate");
					this.OnJobDateChanged();
				}
			}
		}
		
		[Column(Storage="_INT_CE", DbType="VarChar(25)")]
		public string INT_CE
		{
			get
			{
				return this._INT_CE;
			}
			set
			{
				if ((this._INT_CE != value))
				{
					this.OnINT_CEChanging(value);
					this.SendPropertyChanging();
					this._INT_CE = value;
					this.SendPropertyChanged("INT_CE");
					this.OnINT_CEChanged();
				}
			}
		}
		
		[Column(Storage="_INT_InvBatch", DbType="Int")]
		public System.Nullable<int> INT_InvBatch
		{
			get
			{
				return this._INT_InvBatch;
			}
			set
			{
				if ((this._INT_InvBatch != value))
				{
					this.OnINT_InvBatchChanging(value);
					this.SendPropertyChanging();
					this._INT_InvBatch = value;
					this.SendPropertyChanged("INT_InvBatch");
					this.OnINT_InvBatchChanged();
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="Money")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this.OnRevenueCategoryChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategory = value;
					this.SendPropertyChanged("RevenueCategory");
					this.OnRevenueCategoryChanged();
				}
			}
		}
		
		[Association(Name="FK_SALEITEM_DRAFT_SALESORD_DRAFT", Storage="_SALESORD_DRAFT", ThisKey="OrdNum", OtherKey="OrdNum", IsForeignKey=true)]
		public SALESORD_DRAFT SALESORD_DRAFT
		{
			get
			{
				return this._SALESORD_DRAFT.Entity;
			}
			set
			{
				SALESORD_DRAFT previousValue = this._SALESORD_DRAFT.Entity;
				if (((previousValue != value) 
							|| (this._SALESORD_DRAFT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALESORD_DRAFT.Entity = null;
						previousValue.SALEITEM_DRAFT.Remove(this);
					}
					this._SALESORD_DRAFT.Entity = value;
					if ((value != null))
					{
						value.SALEITEM_DRAFT.Add(this);
						this._OrdNum = value.OrdNum;
					}
					else
					{
						this._OrdNum = default(int);
					}
					this.SendPropertyChanged("SALESORD_DRAFT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SALES_ANALYSIS")]
	public partial class SALES_ANALYSIS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NKey;
		
		private string _Heading;
		
		private string _CopyFrom;
		
		private System.Nullable<System.DateTime> _FiscalFrom;
		
		private System.Nullable<System.DateTime> _FiscalTo;
		
		private System.Nullable<System.DateTime> _YTD;
		
		private System.Nullable<System.DateTime> _PeriodFrom;
		
		private System.Nullable<System.DateTime> _PeriodTo;
		
		private System.Nullable<int> _AuditFrom;
		
		private System.Nullable<int> _AuditTo;
		
		private string _ReportHeading;
		
		private string _ReportNotes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNKeyChanging(int value);
    partial void OnNKeyChanged();
    partial void OnHeadingChanging(string value);
    partial void OnHeadingChanged();
    partial void OnCopyFromChanging(string value);
    partial void OnCopyFromChanged();
    partial void OnFiscalFromChanging(System.Nullable<System.DateTime> value);
    partial void OnFiscalFromChanged();
    partial void OnFiscalToChanging(System.Nullable<System.DateTime> value);
    partial void OnFiscalToChanged();
    partial void OnYTDChanging(System.Nullable<System.DateTime> value);
    partial void OnYTDChanged();
    partial void OnPeriodFromChanging(System.Nullable<System.DateTime> value);
    partial void OnPeriodFromChanged();
    partial void OnPeriodToChanging(System.Nullable<System.DateTime> value);
    partial void OnPeriodToChanged();
    partial void OnAuditFromChanging(System.Nullable<int> value);
    partial void OnAuditFromChanged();
    partial void OnAuditToChanging(System.Nullable<int> value);
    partial void OnAuditToChanged();
    partial void OnReportHeadingChanging(string value);
    partial void OnReportHeadingChanged();
    partial void OnReportNotesChanging(string value);
    partial void OnReportNotesChanged();
    #endregion
		
		public SALES_ANALYSIS()
		{
			OnCreated();
		}
		
		[Column(Storage="_NKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NKey
		{
			get
			{
				return this._NKey;
			}
			set
			{
				if ((this._NKey != value))
				{
					this.OnNKeyChanging(value);
					this.SendPropertyChanging();
					this._NKey = value;
					this.SendPropertyChanged("NKey");
					this.OnNKeyChanged();
				}
			}
		}
		
		[Column(Storage="_Heading", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[Column(Storage="_CopyFrom", DbType="VarChar(35)")]
		public string CopyFrom
		{
			get
			{
				return this._CopyFrom;
			}
			set
			{
				if ((this._CopyFrom != value))
				{
					this.OnCopyFromChanging(value);
					this.SendPropertyChanging();
					this._CopyFrom = value;
					this.SendPropertyChanged("CopyFrom");
					this.OnCopyFromChanged();
				}
			}
		}
		
		[Column(Storage="_FiscalFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> FiscalFrom
		{
			get
			{
				return this._FiscalFrom;
			}
			set
			{
				if ((this._FiscalFrom != value))
				{
					this.OnFiscalFromChanging(value);
					this.SendPropertyChanging();
					this._FiscalFrom = value;
					this.SendPropertyChanged("FiscalFrom");
					this.OnFiscalFromChanged();
				}
			}
		}
		
		[Column(Storage="_FiscalTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> FiscalTo
		{
			get
			{
				return this._FiscalTo;
			}
			set
			{
				if ((this._FiscalTo != value))
				{
					this.OnFiscalToChanging(value);
					this.SendPropertyChanging();
					this._FiscalTo = value;
					this.SendPropertyChanged("FiscalTo");
					this.OnFiscalToChanged();
				}
			}
		}
		
		[Column(Storage="_YTD", DbType="DateTime")]
		public System.Nullable<System.DateTime> YTD
		{
			get
			{
				return this._YTD;
			}
			set
			{
				if ((this._YTD != value))
				{
					this.OnYTDChanging(value);
					this.SendPropertyChanging();
					this._YTD = value;
					this.SendPropertyChanged("YTD");
					this.OnYTDChanged();
				}
			}
		}
		
		[Column(Storage="_PeriodFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> PeriodFrom
		{
			get
			{
				return this._PeriodFrom;
			}
			set
			{
				if ((this._PeriodFrom != value))
				{
					this.OnPeriodFromChanging(value);
					this.SendPropertyChanging();
					this._PeriodFrom = value;
					this.SendPropertyChanged("PeriodFrom");
					this.OnPeriodFromChanged();
				}
			}
		}
		
		[Column(Storage="_PeriodTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> PeriodTo
		{
			get
			{
				return this._PeriodTo;
			}
			set
			{
				if ((this._PeriodTo != value))
				{
					this.OnPeriodToChanging(value);
					this.SendPropertyChanging();
					this._PeriodTo = value;
					this.SendPropertyChanged("PeriodTo");
					this.OnPeriodToChanged();
				}
			}
		}
		
		[Column(Storage="_AuditFrom", DbType="Int")]
		public System.Nullable<int> AuditFrom
		{
			get
			{
				return this._AuditFrom;
			}
			set
			{
				if ((this._AuditFrom != value))
				{
					this.OnAuditFromChanging(value);
					this.SendPropertyChanging();
					this._AuditFrom = value;
					this.SendPropertyChanged("AuditFrom");
					this.OnAuditFromChanged();
				}
			}
		}
		
		[Column(Storage="_AuditTo", DbType="Int")]
		public System.Nullable<int> AuditTo
		{
			get
			{
				return this._AuditTo;
			}
			set
			{
				if ((this._AuditTo != value))
				{
					this.OnAuditToChanging(value);
					this.SendPropertyChanging();
					this._AuditTo = value;
					this.SendPropertyChanged("AuditTo");
					this.OnAuditToChanged();
				}
			}
		}
		
		[Column(Storage="_ReportHeading", DbType="NVarChar(50)")]
		public string ReportHeading
		{
			get
			{
				return this._ReportHeading;
			}
			set
			{
				if ((this._ReportHeading != value))
				{
					this.OnReportHeadingChanging(value);
					this.SendPropertyChanging();
					this._ReportHeading = value;
					this.SendPropertyChanged("ReportHeading");
					this.OnReportHeadingChanged();
				}
			}
		}
		
		[Column(Storage="_ReportNotes", DbType="NVarChar(250)")]
		public string ReportNotes
		{
			get
			{
				return this._ReportNotes;
			}
			set
			{
				if ((this._ReportNotes != value))
				{
					this.OnReportNotesChanging(value);
					this.SendPropertyChanging();
					this._ReportNotes = value;
					this.SendPropertyChanged("ReportNotes");
					this.OnReportNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SALES_COMMISSION_DUE_ITEM")]
	public partial class SALES_COMMISSION_DUE_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommissionDueItemID;
		
		private System.Nullable<int> _ContractItemID;
		
		private System.Nullable<int> _OrdNum;
		
		private string _SalesRep;
		
		private System.Nullable<decimal> _CommissionDue;
		
		private bool _PayCommission;
		
		private EntityRef<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntitySet<SALES_COMMISSION_PRERUN_ITEM_CANCELLED> _SALES_COMMISSION_PRERUN_ITEM_CANCELLED;
		
		private EntitySet<SALES_COMMISSION_PRERUN_ITEM> _SALES_COMMISSION_PRERUN_ITEM;
		
		private EntitySet<SALES_COMMISSION_RUN_ITEM> _SALES_COMMISSION_RUN_ITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommissionDueItemIDChanging(int value);
    partial void OnCommissionDueItemIDChanged();
    partial void OnContractItemIDChanging(System.Nullable<int> value);
    partial void OnContractItemIDChanged();
    partial void OnOrdNumChanging(System.Nullable<int> value);
    partial void OnOrdNumChanged();
    partial void OnSalesRepChanging(string value);
    partial void OnSalesRepChanged();
    partial void OnCommissionDueChanging(System.Nullable<decimal> value);
    partial void OnCommissionDueChanged();
    partial void OnPayCommissionChanging(bool value);
    partial void OnPayCommissionChanged();
    #endregion
		
		public SALES_COMMISSION_DUE_ITEM()
		{
			this._CTRAC_ITEM = default(EntityRef<CTRAC_ITEM>);
			this._SALES_COMMISSION_PRERUN_ITEM_CANCELLED = new EntitySet<SALES_COMMISSION_PRERUN_ITEM_CANCELLED>(new Action<SALES_COMMISSION_PRERUN_ITEM_CANCELLED>(this.attach_SALES_COMMISSION_PRERUN_ITEM_CANCELLED), new Action<SALES_COMMISSION_PRERUN_ITEM_CANCELLED>(this.detach_SALES_COMMISSION_PRERUN_ITEM_CANCELLED));
			this._SALES_COMMISSION_PRERUN_ITEM = new EntitySet<SALES_COMMISSION_PRERUN_ITEM>(new Action<SALES_COMMISSION_PRERUN_ITEM>(this.attach_SALES_COMMISSION_PRERUN_ITEM), new Action<SALES_COMMISSION_PRERUN_ITEM>(this.detach_SALES_COMMISSION_PRERUN_ITEM));
			this._SALES_COMMISSION_RUN_ITEM = new EntitySet<SALES_COMMISSION_RUN_ITEM>(new Action<SALES_COMMISSION_RUN_ITEM>(this.attach_SALES_COMMISSION_RUN_ITEM), new Action<SALES_COMMISSION_RUN_ITEM>(this.detach_SALES_COMMISSION_RUN_ITEM));
			OnCreated();
		}
		
		[Column(Storage="_CommissionDueItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommissionDueItemID
		{
			get
			{
				return this._CommissionDueItemID;
			}
			set
			{
				if ((this._CommissionDueItemID != value))
				{
					this.OnCommissionDueItemIDChanging(value);
					this.SendPropertyChanging();
					this._CommissionDueItemID = value;
					this.SendPropertyChanged("CommissionDueItemID");
					this.OnCommissionDueItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContractItemID", DbType="Int")]
		public System.Nullable<int> ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					if (this._CTRAC_ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContractItemID = value;
					this.SendPropertyChanged("ContractItemID");
					this.OnContractItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_SalesRep", DbType="VarChar(25)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					this.OnSalesRepChanging(value);
					this.SendPropertyChanging();
					this._SalesRep = value;
					this.SendPropertyChanged("SalesRep");
					this.OnSalesRepChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionDue", DbType="Money")]
		public System.Nullable<decimal> CommissionDue
		{
			get
			{
				return this._CommissionDue;
			}
			set
			{
				if ((this._CommissionDue != value))
				{
					this.OnCommissionDueChanging(value);
					this.SendPropertyChanging();
					this._CommissionDue = value;
					this.SendPropertyChanged("CommissionDue");
					this.OnCommissionDueChanged();
				}
			}
		}
		
		[Column(Storage="_PayCommission", DbType="Bit NOT NULL")]
		public bool PayCommission
		{
			get
			{
				return this._PayCommission;
			}
			set
			{
				if ((this._PayCommission != value))
				{
					this.OnPayCommissionChanging(value);
					this.SendPropertyChanging();
					this._PayCommission = value;
					this.SendPropertyChanged("PayCommission");
					this.OnPayCommissionChanged();
				}
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_DUE_ITEM_CTRAC_ITEM", Storage="_CTRAC_ITEM", ThisKey="ContractItemID", OtherKey="ContractItemID", IsForeignKey=true)]
		public CTRAC_ITEM CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM.Entity;
			}
			set
			{
				CTRAC_ITEM previousValue = this._CTRAC_ITEM.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_ITEM.Entity = null;
						previousValue.SALES_COMMISSION_DUE_ITEM.Remove(this);
					}
					this._CTRAC_ITEM.Entity = value;
					if ((value != null))
					{
						value.SALES_COMMISSION_DUE_ITEM.Add(this);
						this._ContractItemID = value.ContractItemID;
					}
					else
					{
						this._ContractItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CTRAC_ITEM");
				}
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_PRERUN_ITEM_CANCELLED_SALES_COMMISSION_DUE_ITEM", Storage="_SALES_COMMISSION_PRERUN_ITEM_CANCELLED", ThisKey="CommissionDueItemID", OtherKey="CommissionDueItem", DeleteRule="NO ACTION")]
		public EntitySet<SALES_COMMISSION_PRERUN_ITEM_CANCELLED> SALES_COMMISSION_PRERUN_ITEM_CANCELLED
		{
			get
			{
				return this._SALES_COMMISSION_PRERUN_ITEM_CANCELLED;
			}
			set
			{
				this._SALES_COMMISSION_PRERUN_ITEM_CANCELLED.Assign(value);
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_PRERUN_ITEM_SALES_COMMISSION_DUE_ITEM", Storage="_SALES_COMMISSION_PRERUN_ITEM", ThisKey="CommissionDueItemID", OtherKey="CommissionDueItem", DeleteRule="NO ACTION")]
		public EntitySet<SALES_COMMISSION_PRERUN_ITEM> SALES_COMMISSION_PRERUN_ITEM
		{
			get
			{
				return this._SALES_COMMISSION_PRERUN_ITEM;
			}
			set
			{
				this._SALES_COMMISSION_PRERUN_ITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_RUN_ITEM_SALES_COMMISSION_DUE_ITEM", Storage="_SALES_COMMISSION_RUN_ITEM", ThisKey="CommissionDueItemID", OtherKey="CommissionDueItem", DeleteRule="NO ACTION")]
		public EntitySet<SALES_COMMISSION_RUN_ITEM> SALES_COMMISSION_RUN_ITEM
		{
			get
			{
				return this._SALES_COMMISSION_RUN_ITEM;
			}
			set
			{
				this._SALES_COMMISSION_RUN_ITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SALES_COMMISSION_PRERUN_ITEM_CANCELLED(SALES_COMMISSION_PRERUN_ITEM_CANCELLED entity)
		{
			this.SendPropertyChanging();
			entity.SALES_COMMISSION_DUE_ITEM = this;
		}
		
		private void detach_SALES_COMMISSION_PRERUN_ITEM_CANCELLED(SALES_COMMISSION_PRERUN_ITEM_CANCELLED entity)
		{
			this.SendPropertyChanging();
			entity.SALES_COMMISSION_DUE_ITEM = null;
		}
		
		private void attach_SALES_COMMISSION_PRERUN_ITEM(SALES_COMMISSION_PRERUN_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.SALES_COMMISSION_DUE_ITEM = this;
		}
		
		private void detach_SALES_COMMISSION_PRERUN_ITEM(SALES_COMMISSION_PRERUN_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.SALES_COMMISSION_DUE_ITEM = null;
		}
		
		private void attach_SALES_COMMISSION_RUN_ITEM(SALES_COMMISSION_RUN_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.SALES_COMMISSION_DUE_ITEM = this;
		}
		
		private void detach_SALES_COMMISSION_RUN_ITEM(SALES_COMMISSION_RUN_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.SALES_COMMISSION_DUE_ITEM = null;
		}
	}
	
	[Table(Name="dbo.SALES_COMMISSION_PRERUN")]
	public partial class SALES_COMMISSION_PRERUN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommissionPreRunID;
		
		private System.Nullable<System.DateTime> _RunDate;
		
		private string _RunBy;
		
		private bool _Complete;
		
		private bool _Cancelled;
		
		private EntitySet<SALES_COMMISSION_PRERUN_ITEM_CANCELLED> _SALES_COMMISSION_PRERUN_ITEM_CANCELLED;
		
		private EntitySet<SALES_COMMISSION_PRERUN_ITEM> _SALES_COMMISSION_PRERUN_ITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommissionPreRunIDChanging(int value);
    partial void OnCommissionPreRunIDChanged();
    partial void OnRunDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRunDateChanged();
    partial void OnRunByChanging(string value);
    partial void OnRunByChanged();
    partial void OnCompleteChanging(bool value);
    partial void OnCompleteChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    #endregion
		
		public SALES_COMMISSION_PRERUN()
		{
			this._SALES_COMMISSION_PRERUN_ITEM_CANCELLED = new EntitySet<SALES_COMMISSION_PRERUN_ITEM_CANCELLED>(new Action<SALES_COMMISSION_PRERUN_ITEM_CANCELLED>(this.attach_SALES_COMMISSION_PRERUN_ITEM_CANCELLED), new Action<SALES_COMMISSION_PRERUN_ITEM_CANCELLED>(this.detach_SALES_COMMISSION_PRERUN_ITEM_CANCELLED));
			this._SALES_COMMISSION_PRERUN_ITEM = new EntitySet<SALES_COMMISSION_PRERUN_ITEM>(new Action<SALES_COMMISSION_PRERUN_ITEM>(this.attach_SALES_COMMISSION_PRERUN_ITEM), new Action<SALES_COMMISSION_PRERUN_ITEM>(this.detach_SALES_COMMISSION_PRERUN_ITEM));
			OnCreated();
		}
		
		[Column(Storage="_CommissionPreRunID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommissionPreRunID
		{
			get
			{
				return this._CommissionPreRunID;
			}
			set
			{
				if ((this._CommissionPreRunID != value))
				{
					this.OnCommissionPreRunIDChanging(value);
					this.SendPropertyChanging();
					this._CommissionPreRunID = value;
					this.SendPropertyChanged("CommissionPreRunID");
					this.OnCommissionPreRunIDChanged();
				}
			}
		}
		
		[Column(Storage="_RunDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this.OnRunDateChanging(value);
					this.SendPropertyChanging();
					this._RunDate = value;
					this.SendPropertyChanged("RunDate");
					this.OnRunDateChanged();
				}
			}
		}
		
		[Column(Storage="_RunBy", DbType="VarChar(25)")]
		public string RunBy
		{
			get
			{
				return this._RunBy;
			}
			set
			{
				if ((this._RunBy != value))
				{
					this.OnRunByChanging(value);
					this.SendPropertyChanging();
					this._RunBy = value;
					this.SendPropertyChanged("RunBy");
					this.OnRunByChanged();
				}
			}
		}
		
		[Column(Storage="_Complete", DbType="Bit NOT NULL")]
		public bool Complete
		{
			get
			{
				return this._Complete;
			}
			set
			{
				if ((this._Complete != value))
				{
					this.OnCompleteChanging(value);
					this.SendPropertyChanging();
					this._Complete = value;
					this.SendPropertyChanged("Complete");
					this.OnCompleteChanged();
				}
			}
		}
		
		[Column(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_PRERUN_ITEM_CANCELLED_SALES_COMMISSION_PRERUN", Storage="_SALES_COMMISSION_PRERUN_ITEM_CANCELLED", ThisKey="CommissionPreRunID", OtherKey="CommissionPreRun", DeleteRule="NO ACTION")]
		public EntitySet<SALES_COMMISSION_PRERUN_ITEM_CANCELLED> SALES_COMMISSION_PRERUN_ITEM_CANCELLED
		{
			get
			{
				return this._SALES_COMMISSION_PRERUN_ITEM_CANCELLED;
			}
			set
			{
				this._SALES_COMMISSION_PRERUN_ITEM_CANCELLED.Assign(value);
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_PRERUN_ITEM_SALES_COMMISSION_PRERUN", Storage="_SALES_COMMISSION_PRERUN_ITEM", ThisKey="CommissionPreRunID", OtherKey="CommissionPreRun", DeleteRule="NO ACTION")]
		public EntitySet<SALES_COMMISSION_PRERUN_ITEM> SALES_COMMISSION_PRERUN_ITEM
		{
			get
			{
				return this._SALES_COMMISSION_PRERUN_ITEM;
			}
			set
			{
				this._SALES_COMMISSION_PRERUN_ITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SALES_COMMISSION_PRERUN_ITEM_CANCELLED(SALES_COMMISSION_PRERUN_ITEM_CANCELLED entity)
		{
			this.SendPropertyChanging();
			entity.SALES_COMMISSION_PRERUN = this;
		}
		
		private void detach_SALES_COMMISSION_PRERUN_ITEM_CANCELLED(SALES_COMMISSION_PRERUN_ITEM_CANCELLED entity)
		{
			this.SendPropertyChanging();
			entity.SALES_COMMISSION_PRERUN = null;
		}
		
		private void attach_SALES_COMMISSION_PRERUN_ITEM(SALES_COMMISSION_PRERUN_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.SALES_COMMISSION_PRERUN = this;
		}
		
		private void detach_SALES_COMMISSION_PRERUN_ITEM(SALES_COMMISSION_PRERUN_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.SALES_COMMISSION_PRERUN = null;
		}
	}
	
	[Table(Name="dbo.SALES_COMMISSION_PRERUN_ITEM")]
	public partial class SALES_COMMISSION_PRERUN_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommissionPreRunItemID;
		
		private System.Nullable<int> _CommissionPreRun;
		
		private System.Nullable<int> _CommissionDueItem;
		
		private System.Nullable<decimal> _Commission;
		
		private EntityRef<SALES_COMMISSION_DUE_ITEM> _SALES_COMMISSION_DUE_ITEM;
		
		private EntityRef<SALES_COMMISSION_PRERUN> _SALES_COMMISSION_PRERUN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommissionPreRunItemIDChanging(int value);
    partial void OnCommissionPreRunItemIDChanged();
    partial void OnCommissionPreRunChanging(System.Nullable<int> value);
    partial void OnCommissionPreRunChanged();
    partial void OnCommissionDueItemChanging(System.Nullable<int> value);
    partial void OnCommissionDueItemChanged();
    partial void OnCommissionChanging(System.Nullable<decimal> value);
    partial void OnCommissionChanged();
    #endregion
		
		public SALES_COMMISSION_PRERUN_ITEM()
		{
			this._SALES_COMMISSION_DUE_ITEM = default(EntityRef<SALES_COMMISSION_DUE_ITEM>);
			this._SALES_COMMISSION_PRERUN = default(EntityRef<SALES_COMMISSION_PRERUN>);
			OnCreated();
		}
		
		[Column(Storage="_CommissionPreRunItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommissionPreRunItemID
		{
			get
			{
				return this._CommissionPreRunItemID;
			}
			set
			{
				if ((this._CommissionPreRunItemID != value))
				{
					this.OnCommissionPreRunItemIDChanging(value);
					this.SendPropertyChanging();
					this._CommissionPreRunItemID = value;
					this.SendPropertyChanged("CommissionPreRunItemID");
					this.OnCommissionPreRunItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionPreRun", DbType="Int")]
		public System.Nullable<int> CommissionPreRun
		{
			get
			{
				return this._CommissionPreRun;
			}
			set
			{
				if ((this._CommissionPreRun != value))
				{
					if (this._SALES_COMMISSION_PRERUN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommissionPreRunChanging(value);
					this.SendPropertyChanging();
					this._CommissionPreRun = value;
					this.SendPropertyChanged("CommissionPreRun");
					this.OnCommissionPreRunChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionDueItem", DbType="Int")]
		public System.Nullable<int> CommissionDueItem
		{
			get
			{
				return this._CommissionDueItem;
			}
			set
			{
				if ((this._CommissionDueItem != value))
				{
					if (this._SALES_COMMISSION_DUE_ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommissionDueItemChanging(value);
					this.SendPropertyChanging();
					this._CommissionDueItem = value;
					this.SendPropertyChanged("CommissionDueItem");
					this.OnCommissionDueItemChanged();
				}
			}
		}
		
		[Column(Storage="_Commission", DbType="Money")]
		public System.Nullable<decimal> Commission
		{
			get
			{
				return this._Commission;
			}
			set
			{
				if ((this._Commission != value))
				{
					this.OnCommissionChanging(value);
					this.SendPropertyChanging();
					this._Commission = value;
					this.SendPropertyChanged("Commission");
					this.OnCommissionChanged();
				}
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_PRERUN_ITEM_SALES_COMMISSION_DUE_ITEM", Storage="_SALES_COMMISSION_DUE_ITEM", ThisKey="CommissionDueItem", OtherKey="CommissionDueItemID", IsForeignKey=true)]
		public SALES_COMMISSION_DUE_ITEM SALES_COMMISSION_DUE_ITEM
		{
			get
			{
				return this._SALES_COMMISSION_DUE_ITEM.Entity;
			}
			set
			{
				SALES_COMMISSION_DUE_ITEM previousValue = this._SALES_COMMISSION_DUE_ITEM.Entity;
				if (((previousValue != value) 
							|| (this._SALES_COMMISSION_DUE_ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALES_COMMISSION_DUE_ITEM.Entity = null;
						previousValue.SALES_COMMISSION_PRERUN_ITEM.Remove(this);
					}
					this._SALES_COMMISSION_DUE_ITEM.Entity = value;
					if ((value != null))
					{
						value.SALES_COMMISSION_PRERUN_ITEM.Add(this);
						this._CommissionDueItem = value.CommissionDueItemID;
					}
					else
					{
						this._CommissionDueItem = default(Nullable<int>);
					}
					this.SendPropertyChanged("SALES_COMMISSION_DUE_ITEM");
				}
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_PRERUN_ITEM_SALES_COMMISSION_PRERUN", Storage="_SALES_COMMISSION_PRERUN", ThisKey="CommissionPreRun", OtherKey="CommissionPreRunID", IsForeignKey=true)]
		public SALES_COMMISSION_PRERUN SALES_COMMISSION_PRERUN
		{
			get
			{
				return this._SALES_COMMISSION_PRERUN.Entity;
			}
			set
			{
				SALES_COMMISSION_PRERUN previousValue = this._SALES_COMMISSION_PRERUN.Entity;
				if (((previousValue != value) 
							|| (this._SALES_COMMISSION_PRERUN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALES_COMMISSION_PRERUN.Entity = null;
						previousValue.SALES_COMMISSION_PRERUN_ITEM.Remove(this);
					}
					this._SALES_COMMISSION_PRERUN.Entity = value;
					if ((value != null))
					{
						value.SALES_COMMISSION_PRERUN_ITEM.Add(this);
						this._CommissionPreRun = value.CommissionPreRunID;
					}
					else
					{
						this._CommissionPreRun = default(Nullable<int>);
					}
					this.SendPropertyChanged("SALES_COMMISSION_PRERUN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SALES_COMMISSION_PRERUN_ITEM_CANCELLED")]
	public partial class SALES_COMMISSION_PRERUN_ITEM_CANCELLED : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommissionPreRunItemCancelledID;
		
		private System.Nullable<int> _CommissionPreRun;
		
		private System.Nullable<int> _CommissionDueItem;
		
		private System.Nullable<decimal> _CommissionCancelled;
		
		private EntityRef<SALES_COMMISSION_DUE_ITEM> _SALES_COMMISSION_DUE_ITEM;
		
		private EntityRef<SALES_COMMISSION_PRERUN> _SALES_COMMISSION_PRERUN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommissionPreRunItemCancelledIDChanging(int value);
    partial void OnCommissionPreRunItemCancelledIDChanged();
    partial void OnCommissionPreRunChanging(System.Nullable<int> value);
    partial void OnCommissionPreRunChanged();
    partial void OnCommissionDueItemChanging(System.Nullable<int> value);
    partial void OnCommissionDueItemChanged();
    partial void OnCommissionCancelledChanging(System.Nullable<decimal> value);
    partial void OnCommissionCancelledChanged();
    #endregion
		
		public SALES_COMMISSION_PRERUN_ITEM_CANCELLED()
		{
			this._SALES_COMMISSION_DUE_ITEM = default(EntityRef<SALES_COMMISSION_DUE_ITEM>);
			this._SALES_COMMISSION_PRERUN = default(EntityRef<SALES_COMMISSION_PRERUN>);
			OnCreated();
		}
		
		[Column(Storage="_CommissionPreRunItemCancelledID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommissionPreRunItemCancelledID
		{
			get
			{
				return this._CommissionPreRunItemCancelledID;
			}
			set
			{
				if ((this._CommissionPreRunItemCancelledID != value))
				{
					this.OnCommissionPreRunItemCancelledIDChanging(value);
					this.SendPropertyChanging();
					this._CommissionPreRunItemCancelledID = value;
					this.SendPropertyChanged("CommissionPreRunItemCancelledID");
					this.OnCommissionPreRunItemCancelledIDChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionPreRun", DbType="Int")]
		public System.Nullable<int> CommissionPreRun
		{
			get
			{
				return this._CommissionPreRun;
			}
			set
			{
				if ((this._CommissionPreRun != value))
				{
					if (this._SALES_COMMISSION_PRERUN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommissionPreRunChanging(value);
					this.SendPropertyChanging();
					this._CommissionPreRun = value;
					this.SendPropertyChanged("CommissionPreRun");
					this.OnCommissionPreRunChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionDueItem", DbType="Int")]
		public System.Nullable<int> CommissionDueItem
		{
			get
			{
				return this._CommissionDueItem;
			}
			set
			{
				if ((this._CommissionDueItem != value))
				{
					if (this._SALES_COMMISSION_DUE_ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommissionDueItemChanging(value);
					this.SendPropertyChanging();
					this._CommissionDueItem = value;
					this.SendPropertyChanged("CommissionDueItem");
					this.OnCommissionDueItemChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionCancelled", DbType="Money")]
		public System.Nullable<decimal> CommissionCancelled
		{
			get
			{
				return this._CommissionCancelled;
			}
			set
			{
				if ((this._CommissionCancelled != value))
				{
					this.OnCommissionCancelledChanging(value);
					this.SendPropertyChanging();
					this._CommissionCancelled = value;
					this.SendPropertyChanged("CommissionCancelled");
					this.OnCommissionCancelledChanged();
				}
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_PRERUN_ITEM_CANCELLED_SALES_COMMISSION_DUE_ITEM", Storage="_SALES_COMMISSION_DUE_ITEM", ThisKey="CommissionDueItem", OtherKey="CommissionDueItemID", IsForeignKey=true)]
		public SALES_COMMISSION_DUE_ITEM SALES_COMMISSION_DUE_ITEM
		{
			get
			{
				return this._SALES_COMMISSION_DUE_ITEM.Entity;
			}
			set
			{
				SALES_COMMISSION_DUE_ITEM previousValue = this._SALES_COMMISSION_DUE_ITEM.Entity;
				if (((previousValue != value) 
							|| (this._SALES_COMMISSION_DUE_ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALES_COMMISSION_DUE_ITEM.Entity = null;
						previousValue.SALES_COMMISSION_PRERUN_ITEM_CANCELLED.Remove(this);
					}
					this._SALES_COMMISSION_DUE_ITEM.Entity = value;
					if ((value != null))
					{
						value.SALES_COMMISSION_PRERUN_ITEM_CANCELLED.Add(this);
						this._CommissionDueItem = value.CommissionDueItemID;
					}
					else
					{
						this._CommissionDueItem = default(Nullable<int>);
					}
					this.SendPropertyChanged("SALES_COMMISSION_DUE_ITEM");
				}
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_PRERUN_ITEM_CANCELLED_SALES_COMMISSION_PRERUN", Storage="_SALES_COMMISSION_PRERUN", ThisKey="CommissionPreRun", OtherKey="CommissionPreRunID", IsForeignKey=true)]
		public SALES_COMMISSION_PRERUN SALES_COMMISSION_PRERUN
		{
			get
			{
				return this._SALES_COMMISSION_PRERUN.Entity;
			}
			set
			{
				SALES_COMMISSION_PRERUN previousValue = this._SALES_COMMISSION_PRERUN.Entity;
				if (((previousValue != value) 
							|| (this._SALES_COMMISSION_PRERUN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALES_COMMISSION_PRERUN.Entity = null;
						previousValue.SALES_COMMISSION_PRERUN_ITEM_CANCELLED.Remove(this);
					}
					this._SALES_COMMISSION_PRERUN.Entity = value;
					if ((value != null))
					{
						value.SALES_COMMISSION_PRERUN_ITEM_CANCELLED.Add(this);
						this._CommissionPreRun = value.CommissionPreRunID;
					}
					else
					{
						this._CommissionPreRun = default(Nullable<int>);
					}
					this.SendPropertyChanged("SALES_COMMISSION_PRERUN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SALES_COMMISSION_RUN")]
	public partial class SALES_COMMISSION_RUN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommissionRunID;
		
		private System.Nullable<System.DateTime> _RunDate;
		
		private string _RunBy;
		
		private bool _Cancelled;
		
		private EntitySet<SALES_COMMISSION_RUN_ITEM> _SALES_COMMISSION_RUN_ITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommissionRunIDChanging(int value);
    partial void OnCommissionRunIDChanged();
    partial void OnRunDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRunDateChanged();
    partial void OnRunByChanging(string value);
    partial void OnRunByChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    #endregion
		
		public SALES_COMMISSION_RUN()
		{
			this._SALES_COMMISSION_RUN_ITEM = new EntitySet<SALES_COMMISSION_RUN_ITEM>(new Action<SALES_COMMISSION_RUN_ITEM>(this.attach_SALES_COMMISSION_RUN_ITEM), new Action<SALES_COMMISSION_RUN_ITEM>(this.detach_SALES_COMMISSION_RUN_ITEM));
			OnCreated();
		}
		
		[Column(Storage="_CommissionRunID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommissionRunID
		{
			get
			{
				return this._CommissionRunID;
			}
			set
			{
				if ((this._CommissionRunID != value))
				{
					this.OnCommissionRunIDChanging(value);
					this.SendPropertyChanging();
					this._CommissionRunID = value;
					this.SendPropertyChanged("CommissionRunID");
					this.OnCommissionRunIDChanged();
				}
			}
		}
		
		[Column(Storage="_RunDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this.OnRunDateChanging(value);
					this.SendPropertyChanging();
					this._RunDate = value;
					this.SendPropertyChanged("RunDate");
					this.OnRunDateChanged();
				}
			}
		}
		
		[Column(Storage="_RunBy", DbType="VarChar(25)")]
		public string RunBy
		{
			get
			{
				return this._RunBy;
			}
			set
			{
				if ((this._RunBy != value))
				{
					this.OnRunByChanging(value);
					this.SendPropertyChanging();
					this._RunBy = value;
					this.SendPropertyChanged("RunBy");
					this.OnRunByChanged();
				}
			}
		}
		
		[Column(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_RUN_ITEM_SALES_COMMISSION_RUN", Storage="_SALES_COMMISSION_RUN_ITEM", ThisKey="CommissionRunID", OtherKey="CommissionRun", DeleteRule="NO ACTION")]
		public EntitySet<SALES_COMMISSION_RUN_ITEM> SALES_COMMISSION_RUN_ITEM
		{
			get
			{
				return this._SALES_COMMISSION_RUN_ITEM;
			}
			set
			{
				this._SALES_COMMISSION_RUN_ITEM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SALES_COMMISSION_RUN_ITEM(SALES_COMMISSION_RUN_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.SALES_COMMISSION_RUN = this;
		}
		
		private void detach_SALES_COMMISSION_RUN_ITEM(SALES_COMMISSION_RUN_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.SALES_COMMISSION_RUN = null;
		}
	}
	
	[Table(Name="dbo.SALES_COMMISSION_RUN_ITEM")]
	public partial class SALES_COMMISSION_RUN_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommissionRunItemID;
		
		private System.Nullable<int> _CommissionRun;
		
		private System.Nullable<int> _CommissionDueItem;
		
		private System.Nullable<decimal> _Commission;
		
		private EntityRef<SALES_COMMISSION_DUE_ITEM> _SALES_COMMISSION_DUE_ITEM;
		
		private EntityRef<SALES_COMMISSION_RUN> _SALES_COMMISSION_RUN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommissionRunItemIDChanging(int value);
    partial void OnCommissionRunItemIDChanged();
    partial void OnCommissionRunChanging(System.Nullable<int> value);
    partial void OnCommissionRunChanged();
    partial void OnCommissionDueItemChanging(System.Nullable<int> value);
    partial void OnCommissionDueItemChanged();
    partial void OnCommissionChanging(System.Nullable<decimal> value);
    partial void OnCommissionChanged();
    #endregion
		
		public SALES_COMMISSION_RUN_ITEM()
		{
			this._SALES_COMMISSION_DUE_ITEM = default(EntityRef<SALES_COMMISSION_DUE_ITEM>);
			this._SALES_COMMISSION_RUN = default(EntityRef<SALES_COMMISSION_RUN>);
			OnCreated();
		}
		
		[Column(Storage="_CommissionRunItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommissionRunItemID
		{
			get
			{
				return this._CommissionRunItemID;
			}
			set
			{
				if ((this._CommissionRunItemID != value))
				{
					this.OnCommissionRunItemIDChanging(value);
					this.SendPropertyChanging();
					this._CommissionRunItemID = value;
					this.SendPropertyChanged("CommissionRunItemID");
					this.OnCommissionRunItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionRun", DbType="Int")]
		public System.Nullable<int> CommissionRun
		{
			get
			{
				return this._CommissionRun;
			}
			set
			{
				if ((this._CommissionRun != value))
				{
					if (this._SALES_COMMISSION_RUN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommissionRunChanging(value);
					this.SendPropertyChanging();
					this._CommissionRun = value;
					this.SendPropertyChanged("CommissionRun");
					this.OnCommissionRunChanged();
				}
			}
		}
		
		[Column(Storage="_CommissionDueItem", DbType="Int")]
		public System.Nullable<int> CommissionDueItem
		{
			get
			{
				return this._CommissionDueItem;
			}
			set
			{
				if ((this._CommissionDueItem != value))
				{
					if (this._SALES_COMMISSION_DUE_ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommissionDueItemChanging(value);
					this.SendPropertyChanging();
					this._CommissionDueItem = value;
					this.SendPropertyChanged("CommissionDueItem");
					this.OnCommissionDueItemChanged();
				}
			}
		}
		
		[Column(Storage="_Commission", DbType="Money")]
		public System.Nullable<decimal> Commission
		{
			get
			{
				return this._Commission;
			}
			set
			{
				if ((this._Commission != value))
				{
					this.OnCommissionChanging(value);
					this.SendPropertyChanging();
					this._Commission = value;
					this.SendPropertyChanged("Commission");
					this.OnCommissionChanged();
				}
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_RUN_ITEM_SALES_COMMISSION_DUE_ITEM", Storage="_SALES_COMMISSION_DUE_ITEM", ThisKey="CommissionDueItem", OtherKey="CommissionDueItemID", IsForeignKey=true)]
		public SALES_COMMISSION_DUE_ITEM SALES_COMMISSION_DUE_ITEM
		{
			get
			{
				return this._SALES_COMMISSION_DUE_ITEM.Entity;
			}
			set
			{
				SALES_COMMISSION_DUE_ITEM previousValue = this._SALES_COMMISSION_DUE_ITEM.Entity;
				if (((previousValue != value) 
							|| (this._SALES_COMMISSION_DUE_ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALES_COMMISSION_DUE_ITEM.Entity = null;
						previousValue.SALES_COMMISSION_RUN_ITEM.Remove(this);
					}
					this._SALES_COMMISSION_DUE_ITEM.Entity = value;
					if ((value != null))
					{
						value.SALES_COMMISSION_RUN_ITEM.Add(this);
						this._CommissionDueItem = value.CommissionDueItemID;
					}
					else
					{
						this._CommissionDueItem = default(Nullable<int>);
					}
					this.SendPropertyChanged("SALES_COMMISSION_DUE_ITEM");
				}
			}
		}
		
		[Association(Name="FK_SALES_COMMISSION_RUN_ITEM_SALES_COMMISSION_RUN", Storage="_SALES_COMMISSION_RUN", ThisKey="CommissionRun", OtherKey="CommissionRunID", IsForeignKey=true)]
		public SALES_COMMISSION_RUN SALES_COMMISSION_RUN
		{
			get
			{
				return this._SALES_COMMISSION_RUN.Entity;
			}
			set
			{
				SALES_COMMISSION_RUN previousValue = this._SALES_COMMISSION_RUN.Entity;
				if (((previousValue != value) 
							|| (this._SALES_COMMISSION_RUN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALES_COMMISSION_RUN.Entity = null;
						previousValue.SALES_COMMISSION_RUN_ITEM.Remove(this);
					}
					this._SALES_COMMISSION_RUN.Entity = value;
					if ((value != null))
					{
						value.SALES_COMMISSION_RUN_ITEM.Add(this);
						this._CommissionRun = value.CommissionRunID;
					}
					else
					{
						this._CommissionRun = default(Nullable<int>);
					}
					this.SendPropertyChanged("SALES_COMMISSION_RUN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SALES_DISC")]
	public partial class SALES_DISC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _DiscountNum;
		
		private decimal _Discount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountNumChanging(byte value);
    partial void OnDiscountNumChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    #endregion
		
		public SALES_DISC()
		{
			OnCreated();
		}
		
		[Column(Storage="_DiscountNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte DiscountNum
		{
			get
			{
				return this._DiscountNum;
			}
			set
			{
				if ((this._DiscountNum != value))
				{
					this.OnDiscountNumChanging(value);
					this.SendPropertyChanging();
					this._DiscountNum = value;
					this.SendPropertyChanged("DiscountNum");
					this.OnDiscountNumChanged();
				}
			}
		}
		
		[Column(Storage="_Discount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SALES_TEAMS")]
	public partial class SALES_TEAMS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalesTeamID;
		
		private string _SalesTeamName;
		
		private string _SalesManager;
		
		private string _State;
		
		private EntitySet<SALES_TEAMS_GROWTH_TARGETS> _SALES_TEAMS_GROWTH_TARGETS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesTeamIDChanging(int value);
    partial void OnSalesTeamIDChanged();
    partial void OnSalesTeamNameChanging(string value);
    partial void OnSalesTeamNameChanged();
    partial void OnSalesManagerChanging(string value);
    partial void OnSalesManagerChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    #endregion
		
		public SALES_TEAMS()
		{
			this._SALES_TEAMS_GROWTH_TARGETS = new EntitySet<SALES_TEAMS_GROWTH_TARGETS>(new Action<SALES_TEAMS_GROWTH_TARGETS>(this.attach_SALES_TEAMS_GROWTH_TARGETS), new Action<SALES_TEAMS_GROWTH_TARGETS>(this.detach_SALES_TEAMS_GROWTH_TARGETS));
			OnCreated();
		}
		
		[Column(Storage="_SalesTeamID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SalesTeamID
		{
			get
			{
				return this._SalesTeamID;
			}
			set
			{
				if ((this._SalesTeamID != value))
				{
					this.OnSalesTeamIDChanging(value);
					this.SendPropertyChanging();
					this._SalesTeamID = value;
					this.SendPropertyChanged("SalesTeamID");
					this.OnSalesTeamIDChanged();
				}
			}
		}
		
		[Column(Storage="_SalesTeamName", DbType="VarChar(50)")]
		public string SalesTeamName
		{
			get
			{
				return this._SalesTeamName;
			}
			set
			{
				if ((this._SalesTeamName != value))
				{
					this.OnSalesTeamNameChanging(value);
					this.SendPropertyChanging();
					this._SalesTeamName = value;
					this.SendPropertyChanged("SalesTeamName");
					this.OnSalesTeamNameChanged();
				}
			}
		}
		
		[Column(Storage="_SalesManager", DbType="VarChar(25)")]
		public string SalesManager
		{
			get
			{
				return this._SalesManager;
			}
			set
			{
				if ((this._SalesManager != value))
				{
					this.OnSalesManagerChanging(value);
					this.SendPropertyChanging();
					this._SalesManager = value;
					this.SendPropertyChanged("SalesManager");
					this.OnSalesManagerChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Association(Name="FK__SALES_TEA__Sales__01974741", Storage="_SALES_TEAMS_GROWTH_TARGETS", ThisKey="SalesTeamID", OtherKey="SalesTeam", DeleteRule="NO ACTION")]
		public EntitySet<SALES_TEAMS_GROWTH_TARGETS> SALES_TEAMS_GROWTH_TARGETS
		{
			get
			{
				return this._SALES_TEAMS_GROWTH_TARGETS;
			}
			set
			{
				this._SALES_TEAMS_GROWTH_TARGETS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SALES_TEAMS_GROWTH_TARGETS(SALES_TEAMS_GROWTH_TARGETS entity)
		{
			this.SendPropertyChanging();
			entity.SALES_TEAMS = this;
		}
		
		private void detach_SALES_TEAMS_GROWTH_TARGETS(SALES_TEAMS_GROWTH_TARGETS entity)
		{
			this.SendPropertyChanging();
			entity.SALES_TEAMS = null;
		}
	}
	
	[Table(Name="dbo.SALES_TEAMS_GROWTH_TARGETS")]
	public partial class SALES_TEAMS_GROWTH_TARGETS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalesTeam;
		
		private int _Year;
		
		private decimal _Target;
		
		private EntityRef<SALES_TEAMS> _SALES_TEAMS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesTeamChanging(int value);
    partial void OnSalesTeamChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnTargetChanging(decimal value);
    partial void OnTargetChanged();
    #endregion
		
		public SALES_TEAMS_GROWTH_TARGETS()
		{
			this._SALES_TEAMS = default(EntityRef<SALES_TEAMS>);
			OnCreated();
		}
		
		[Column(Storage="_SalesTeam", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SalesTeam
		{
			get
			{
				return this._SalesTeam;
			}
			set
			{
				if ((this._SalesTeam != value))
				{
					if (this._SALES_TEAMS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesTeamChanging(value);
					this.SendPropertyChanging();
					this._SalesTeam = value;
					this.SendPropertyChanged("SalesTeam");
					this.OnSalesTeamChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Target", DbType="Money NOT NULL")]
		public decimal Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[Association(Name="FK__SALES_TEA__Sales__01974741", Storage="_SALES_TEAMS", ThisKey="SalesTeam", OtherKey="SalesTeamID", IsForeignKey=true)]
		public SALES_TEAMS SALES_TEAMS
		{
			get
			{
				return this._SALES_TEAMS.Entity;
			}
			set
			{
				SALES_TEAMS previousValue = this._SALES_TEAMS.Entity;
				if (((previousValue != value) 
							|| (this._SALES_TEAMS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALES_TEAMS.Entity = null;
						previousValue.SALES_TEAMS_GROWTH_TARGETS.Remove(this);
					}
					this._SALES_TEAMS.Entity = value;
					if ((value != null))
					{
						value.SALES_TEAMS_GROWTH_TARGETS.Add(this);
						this._SalesTeam = value.SalesTeamID;
					}
					else
					{
						this._SalesTeam = default(int);
					}
					this.SendPropertyChanged("SALES_TEAMS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SALESORD")]
	public partial class SALESORD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrdNum;
		
		private System.Nullable<System.DateTime> _OrdDate;
		
		private System.Nullable<byte> _Type;
		
		private System.Nullable<System.DateTime> _PickPrinted;
		
		private System.Nullable<System.DateTime> _InvPrinted;
		
		private System.Nullable<System.DateTime> _ShipDate;
		
		private string _ConsignNum;
		
		private string _EnteredBy;
		
		private System.Nullable<int> _AccountID;
		
		private string _OldAccount;
		
		private System.Nullable<int> _Parent;
		
		private bool _GotItems;
		
		private int _Audit;
		
		private string _ContactName;
		
		private string _Email;
		
		private string _Phone;
		
		private string _Mobile;
		
		private string _Department;
		
		private string _Couriers;
		
		private string _CourierInstructions;
		
		private string _CustOrdNum;
		
		private string _JobRef;
		
		private System.Nullable<byte> _Status;
		
		private bool _Cancelled;
		
		private bool _CreditHold;
		
		private string _Ref;
		
		private string _SalesRep;
		
		private System.Nullable<short> _RepArea1;
		
		private System.Nullable<short> _RepArea2;
		
		private System.Nullable<System.DateTime> _Required;
		
		private string _StaxCode;
		
		private string _ProductionCode;
		
		private string _ProductionName;
		
		private System.Nullable<int> _OrderQty;
		
		private System.Nullable<decimal> _OrderPrice;
		
		private System.Nullable<decimal> _OrdTotal;
		
		private decimal _InvFreight;
		
		private decimal _InvNet;
		
		private decimal _InvTax;
		
		private decimal _InvDisc;
		
		private decimal _InvTotal;
		
		private System.Nullable<decimal> _NetCost;
		
		private System.Nullable<bool> _Payment;
		
		private System.Nullable<System.DateTime> _LastPayDate;
		
		private System.Nullable<decimal> _LastPayAmt;
		
		private System.Nullable<decimal> _Paid;
		
		private string _Notes;
		
		private string _Authorisation;
		
		private string _Auditor;
		
		private string _Picker;
		
		private System.Nullable<System.DateTime> _TimeAudited;
		
		private bool _OnHold;
		
		private string _ReasonHeld;
		
		private bool _HighPriority;
		
		private decimal _Discount;
		
		private string _DelCompany;
		
		private string _DelAddr1;
		
		private string _DelAddr2;
		
		private string _DelAddr3;
		
		private bool _CrNote;
		
		private bool _FO;
		
		private string _PrintLoc;
		
		private string _SourceLoc;
		
		private System.Nullable<byte> _TerminalLoc;
		
		private byte _AgeCode;
		
		private int _LineCount;
		
		private bool _AddTo;
		
		private byte _CompanyNum;
		
		private System.Nullable<int> _QuoteNum;
		
		private System.Nullable<bool> _Summary;
		
		private System.Nullable<bool> _FastPay;
		
		private System.Nullable<byte> _PriceLevel;
		
		private bool _PreGST;
		
		private bool _RaJob;
		
		private System.Nullable<bool> _Returns;
		
		private bool _ServiceBook;
		
		private System.Nullable<System.DateTime> _BookDate;
		
		private byte _Company;
		
		private bool _ProForma;
		
		private bool _OverrideHold;
		
		private string _UserOverride;
		
		private bool _FwdDate;
		
		private byte _Month;
		
		private short _Year;
		
		private byte _GLType;
		
		private string _InvNotes;
		
		private bool _Industr;
		
		private string _InvMsg;
		
		private decimal _ExchangeRate;
		
		private string _CurrencyType;
		
		private int _LocationID;
		
		private byte _Uncosted;
		
		private System.Nullable<int> _OldOrdNum;
		
		private string _SalesAccGL;
		
		private string _SalesCtrlAccGL;
		
		private System.Nullable<int> _Receipt;
		
		private short _Branch;
		
		private System.Nullable<int> _INT_InvBatch;
		
		private System.Nullable<System.DateTime> _INT_InvToDate;
		
		private System.Nullable<bool> _INT_TM_Invoice;
		
		private System.Nullable<decimal> _INT_TM_CE_Commission;
		
		private System.Nullable<decimal> _INT_TM_INT_Commission;
		
		private string _INT_TM_Invoice_CustName;
		
		private string _INT_TM_Street1;
		
		private string _INT_TM_Street2;
		
		private string _INT_TM_Suburb;
		
		private string _INT_TM_State;
		
		private string _INT_TM_PostCode;
		
		private string _INT_TM_AcctManager;
		
		private System.Nullable<int> _INT_CreditInvnum;
		
		private string _INT_User;
		
		private System.Nullable<int> _ContractID;
		
		private bool _PDFCreated;
		
		private System.Nullable<System.DateTime> _PDFCreatedDate;
		
		private bool _PDFSent;
		
		private bool _BSG;
		
		private EntitySet<DEBTORS_RECEIPT_DETAILS> _DEBTORS_RECEIPT_DETAILS;
		
		private EntitySet<INT_INV_LINE_TEXT> _INT_INV_LINE_TEXT;
		
		private EntitySet<INT_TM_INVOICE_COMMISSIONS> _INT_TM_INVOICE_COMMISSIONS;
		
		private EntitySet<INT_TM_INVOICE_EXPENSEITEMS> _INT_TM_INVOICE_EXPENSEITEMS;
		
		private EntitySet<INT_TM_INVOICEITEMS> _INT_TM_INVOICEITEMS;
		
		private EntitySet<SALEITEM> _SALEITEM;
		
		private EntityRef<CTRAC_HEADER> _CTRAC_HEADER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnOrdDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrdDateChanged();
    partial void OnTypeChanging(System.Nullable<byte> value);
    partial void OnTypeChanged();
    partial void OnPickPrintedChanging(System.Nullable<System.DateTime> value);
    partial void OnPickPrintedChanged();
    partial void OnInvPrintedChanging(System.Nullable<System.DateTime> value);
    partial void OnInvPrintedChanged();
    partial void OnShipDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipDateChanged();
    partial void OnConsignNumChanging(string value);
    partial void OnConsignNumChanged();
    partial void OnEnteredByChanging(string value);
    partial void OnEnteredByChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnOldAccountChanging(string value);
    partial void OnOldAccountChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnGotItemsChanging(bool value);
    partial void OnGotItemsChanged();
    partial void OnAuditChanging(int value);
    partial void OnAuditChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnCouriersChanging(string value);
    partial void OnCouriersChanged();
    partial void OnCourierInstructionsChanging(string value);
    partial void OnCourierInstructionsChanged();
    partial void OnCustOrdNumChanging(string value);
    partial void OnCustOrdNumChanged();
    partial void OnJobRefChanging(string value);
    partial void OnJobRefChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnCreditHoldChanging(bool value);
    partial void OnCreditHoldChanged();
    partial void OnRefChanging(string value);
    partial void OnRefChanged();
    partial void OnSalesRepChanging(string value);
    partial void OnSalesRepChanged();
    partial void OnRepArea1Changing(System.Nullable<short> value);
    partial void OnRepArea1Changed();
    partial void OnRepArea2Changing(System.Nullable<short> value);
    partial void OnRepArea2Changed();
    partial void OnRequiredChanging(System.Nullable<System.DateTime> value);
    partial void OnRequiredChanged();
    partial void OnStaxCodeChanging(string value);
    partial void OnStaxCodeChanged();
    partial void OnProductionCodeChanging(string value);
    partial void OnProductionCodeChanged();
    partial void OnProductionNameChanging(string value);
    partial void OnProductionNameChanged();
    partial void OnOrderQtyChanging(System.Nullable<int> value);
    partial void OnOrderQtyChanged();
    partial void OnOrderPriceChanging(System.Nullable<decimal> value);
    partial void OnOrderPriceChanged();
    partial void OnOrdTotalChanging(System.Nullable<decimal> value);
    partial void OnOrdTotalChanged();
    partial void OnInvFreightChanging(decimal value);
    partial void OnInvFreightChanged();
    partial void OnInvNetChanging(decimal value);
    partial void OnInvNetChanged();
    partial void OnInvTaxChanging(decimal value);
    partial void OnInvTaxChanged();
    partial void OnInvDiscChanging(decimal value);
    partial void OnInvDiscChanged();
    partial void OnInvTotalChanging(decimal value);
    partial void OnInvTotalChanged();
    partial void OnNetCostChanging(System.Nullable<decimal> value);
    partial void OnNetCostChanged();
    partial void OnPaymentChanging(System.Nullable<bool> value);
    partial void OnPaymentChanged();
    partial void OnLastPayDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPayDateChanged();
    partial void OnLastPayAmtChanging(System.Nullable<decimal> value);
    partial void OnLastPayAmtChanged();
    partial void OnPaidChanging(System.Nullable<decimal> value);
    partial void OnPaidChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnAuthorisationChanging(string value);
    partial void OnAuthorisationChanged();
    partial void OnAuditorChanging(string value);
    partial void OnAuditorChanged();
    partial void OnPickerChanging(string value);
    partial void OnPickerChanged();
    partial void OnTimeAuditedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeAuditedChanged();
    partial void OnOnHoldChanging(bool value);
    partial void OnOnHoldChanged();
    partial void OnReasonHeldChanging(string value);
    partial void OnReasonHeldChanged();
    partial void OnHighPriorityChanging(bool value);
    partial void OnHighPriorityChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnDelCompanyChanging(string value);
    partial void OnDelCompanyChanged();
    partial void OnDelAddr1Changing(string value);
    partial void OnDelAddr1Changed();
    partial void OnDelAddr2Changing(string value);
    partial void OnDelAddr2Changed();
    partial void OnDelAddr3Changing(string value);
    partial void OnDelAddr3Changed();
    partial void OnCrNoteChanging(bool value);
    partial void OnCrNoteChanged();
    partial void OnFOChanging(bool value);
    partial void OnFOChanged();
    partial void OnPrintLocChanging(string value);
    partial void OnPrintLocChanged();
    partial void OnSourceLocChanging(string value);
    partial void OnSourceLocChanged();
    partial void OnTerminalLocChanging(System.Nullable<byte> value);
    partial void OnTerminalLocChanged();
    partial void OnAgeCodeChanging(byte value);
    partial void OnAgeCodeChanged();
    partial void OnLineCountChanging(int value);
    partial void OnLineCountChanged();
    partial void OnAddToChanging(bool value);
    partial void OnAddToChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnQuoteNumChanging(System.Nullable<int> value);
    partial void OnQuoteNumChanged();
    partial void OnSummaryChanging(System.Nullable<bool> value);
    partial void OnSummaryChanged();
    partial void OnFastPayChanging(System.Nullable<bool> value);
    partial void OnFastPayChanged();
    partial void OnPriceLevelChanging(System.Nullable<byte> value);
    partial void OnPriceLevelChanged();
    partial void OnPreGSTChanging(bool value);
    partial void OnPreGSTChanged();
    partial void OnRaJobChanging(bool value);
    partial void OnRaJobChanged();
    partial void OnReturnsChanging(System.Nullable<bool> value);
    partial void OnReturnsChanged();
    partial void OnServiceBookChanging(bool value);
    partial void OnServiceBookChanged();
    partial void OnBookDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBookDateChanged();
    partial void OnCompanyChanging(byte value);
    partial void OnCompanyChanged();
    partial void OnProFormaChanging(bool value);
    partial void OnProFormaChanged();
    partial void OnOverrideHoldChanging(bool value);
    partial void OnOverrideHoldChanged();
    partial void OnUserOverrideChanging(string value);
    partial void OnUserOverrideChanged();
    partial void OnFwdDateChanging(bool value);
    partial void OnFwdDateChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnGLTypeChanging(byte value);
    partial void OnGLTypeChanged();
    partial void OnInvNotesChanging(string value);
    partial void OnInvNotesChanged();
    partial void OnIndustrChanging(bool value);
    partial void OnIndustrChanged();
    partial void OnInvMsgChanging(string value);
    partial void OnInvMsgChanged();
    partial void OnExchangeRateChanging(decimal value);
    partial void OnExchangeRateChanged();
    partial void OnCurrencyTypeChanging(string value);
    partial void OnCurrencyTypeChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnUncostedChanging(byte value);
    partial void OnUncostedChanged();
    partial void OnOldOrdNumChanging(System.Nullable<int> value);
    partial void OnOldOrdNumChanged();
    partial void OnSalesAccGLChanging(string value);
    partial void OnSalesAccGLChanged();
    partial void OnSalesCtrlAccGLChanging(string value);
    partial void OnSalesCtrlAccGLChanged();
    partial void OnReceiptChanging(System.Nullable<int> value);
    partial void OnReceiptChanged();
    partial void OnBranchChanging(short value);
    partial void OnBranchChanged();
    partial void OnINT_InvBatchChanging(System.Nullable<int> value);
    partial void OnINT_InvBatchChanged();
    partial void OnINT_InvToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnINT_InvToDateChanged();
    partial void OnINT_TM_InvoiceChanging(System.Nullable<bool> value);
    partial void OnINT_TM_InvoiceChanged();
    partial void OnINT_TM_CE_CommissionChanging(System.Nullable<decimal> value);
    partial void OnINT_TM_CE_CommissionChanged();
    partial void OnINT_TM_INT_CommissionChanging(System.Nullable<decimal> value);
    partial void OnINT_TM_INT_CommissionChanged();
    partial void OnINT_TM_Invoice_CustNameChanging(string value);
    partial void OnINT_TM_Invoice_CustNameChanged();
    partial void OnINT_TM_Street1Changing(string value);
    partial void OnINT_TM_Street1Changed();
    partial void OnINT_TM_Street2Changing(string value);
    partial void OnINT_TM_Street2Changed();
    partial void OnINT_TM_SuburbChanging(string value);
    partial void OnINT_TM_SuburbChanged();
    partial void OnINT_TM_StateChanging(string value);
    partial void OnINT_TM_StateChanged();
    partial void OnINT_TM_PostCodeChanging(string value);
    partial void OnINT_TM_PostCodeChanged();
    partial void OnINT_TM_AcctManagerChanging(string value);
    partial void OnINT_TM_AcctManagerChanged();
    partial void OnINT_CreditInvnumChanging(System.Nullable<int> value);
    partial void OnINT_CreditInvnumChanged();
    partial void OnINT_UserChanging(string value);
    partial void OnINT_UserChanged();
    partial void OnContractIDChanging(System.Nullable<int> value);
    partial void OnContractIDChanged();
    partial void OnPDFCreatedChanging(bool value);
    partial void OnPDFCreatedChanged();
    partial void OnPDFCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPDFCreatedDateChanged();
    partial void OnPDFSentChanging(bool value);
    partial void OnPDFSentChanged();
    partial void OnBSGChanging(bool value);
    partial void OnBSGChanged();
    #endregion
		
		public SALESORD()
		{
			this._DEBTORS_RECEIPT_DETAILS = new EntitySet<DEBTORS_RECEIPT_DETAILS>(new Action<DEBTORS_RECEIPT_DETAILS>(this.attach_DEBTORS_RECEIPT_DETAILS), new Action<DEBTORS_RECEIPT_DETAILS>(this.detach_DEBTORS_RECEIPT_DETAILS));
			this._INT_INV_LINE_TEXT = new EntitySet<INT_INV_LINE_TEXT>(new Action<INT_INV_LINE_TEXT>(this.attach_INT_INV_LINE_TEXT), new Action<INT_INV_LINE_TEXT>(this.detach_INT_INV_LINE_TEXT));
			this._INT_TM_INVOICE_COMMISSIONS = new EntitySet<INT_TM_INVOICE_COMMISSIONS>(new Action<INT_TM_INVOICE_COMMISSIONS>(this.attach_INT_TM_INVOICE_COMMISSIONS), new Action<INT_TM_INVOICE_COMMISSIONS>(this.detach_INT_TM_INVOICE_COMMISSIONS));
			this._INT_TM_INVOICE_EXPENSEITEMS = new EntitySet<INT_TM_INVOICE_EXPENSEITEMS>(new Action<INT_TM_INVOICE_EXPENSEITEMS>(this.attach_INT_TM_INVOICE_EXPENSEITEMS), new Action<INT_TM_INVOICE_EXPENSEITEMS>(this.detach_INT_TM_INVOICE_EXPENSEITEMS));
			this._INT_TM_INVOICEITEMS = new EntitySet<INT_TM_INVOICEITEMS>(new Action<INT_TM_INVOICEITEMS>(this.attach_INT_TM_INVOICEITEMS), new Action<INT_TM_INVOICEITEMS>(this.detach_INT_TM_INVOICEITEMS));
			this._SALEITEM = new EntitySet<SALEITEM>(new Action<SALEITEM>(this.attach_SALEITEM), new Action<SALEITEM>(this.detach_SALEITEM));
			this._CTRAC_HEADER = default(EntityRef<CTRAC_HEADER>);
			OnCreated();
		}
		
		[Column(Storage="_OrdNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_OrdDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrdDate
		{
			get
			{
				return this._OrdDate;
			}
			set
			{
				if ((this._OrdDate != value))
				{
					this.OnOrdDateChanging(value);
					this.SendPropertyChanging();
					this._OrdDate = value;
					this.SendPropertyChanged("OrdDate");
					this.OnOrdDateChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="TinyInt")]
		public System.Nullable<byte> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_PickPrinted", DbType="DateTime")]
		public System.Nullable<System.DateTime> PickPrinted
		{
			get
			{
				return this._PickPrinted;
			}
			set
			{
				if ((this._PickPrinted != value))
				{
					this.OnPickPrintedChanging(value);
					this.SendPropertyChanging();
					this._PickPrinted = value;
					this.SendPropertyChanged("PickPrinted");
					this.OnPickPrintedChanged();
				}
			}
		}
		
		[Column(Storage="_InvPrinted", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvPrinted
		{
			get
			{
				return this._InvPrinted;
			}
			set
			{
				if ((this._InvPrinted != value))
				{
					this.OnInvPrintedChanging(value);
					this.SendPropertyChanging();
					this._InvPrinted = value;
					this.SendPropertyChanged("InvPrinted");
					this.OnInvPrintedChanged();
				}
			}
		}
		
		[Column(Storage="_ShipDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ShipDate
		{
			get
			{
				return this._ShipDate;
			}
			set
			{
				if ((this._ShipDate != value))
				{
					this.OnShipDateChanging(value);
					this.SendPropertyChanging();
					this._ShipDate = value;
					this.SendPropertyChanged("ShipDate");
					this.OnShipDateChanged();
				}
			}
		}
		
		[Column(Storage="_ConsignNum", DbType="VarChar(20)")]
		public string ConsignNum
		{
			get
			{
				return this._ConsignNum;
			}
			set
			{
				if ((this._ConsignNum != value))
				{
					this.OnConsignNumChanging(value);
					this.SendPropertyChanging();
					this._ConsignNum = value;
					this.SendPropertyChanged("ConsignNum");
					this.OnConsignNumChanged();
				}
			}
		}
		
		[Column(Storage="_EnteredBy", DbType="VarChar(25)")]
		public string EnteredBy
		{
			get
			{
				return this._EnteredBy;
			}
			set
			{
				if ((this._EnteredBy != value))
				{
					this.OnEnteredByChanging(value);
					this.SendPropertyChanging();
					this._EnteredBy = value;
					this.SendPropertyChanged("EnteredBy");
					this.OnEnteredByChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldAccount", DbType="VarChar(12)")]
		public string OldAccount
		{
			get
			{
				return this._OldAccount;
			}
			set
			{
				if ((this._OldAccount != value))
				{
					this.OnOldAccountChanging(value);
					this.SendPropertyChanging();
					this._OldAccount = value;
					this.SendPropertyChanged("OldAccount");
					this.OnOldAccountChanged();
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[Column(Storage="_GotItems", DbType="Bit NOT NULL")]
		public bool GotItems
		{
			get
			{
				return this._GotItems;
			}
			set
			{
				if ((this._GotItems != value))
				{
					this.OnGotItemsChanging(value);
					this.SendPropertyChanging();
					this._GotItems = value;
					this.SendPropertyChanged("GotItems");
					this.OnGotItemsChanged();
				}
			}
		}
		
		[Column(Storage="_Audit", DbType="Int NOT NULL")]
		public int Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[Column(Storage="_ContactName", DbType="VarChar(30)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(16)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Mobile", DbType="VarChar(16)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[Column(Storage="_Department", DbType="VarChar(16)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[Column(Storage="_Couriers", DbType="VarChar(25)")]
		public string Couriers
		{
			get
			{
				return this._Couriers;
			}
			set
			{
				if ((this._Couriers != value))
				{
					this.OnCouriersChanging(value);
					this.SendPropertyChanging();
					this._Couriers = value;
					this.SendPropertyChanged("Couriers");
					this.OnCouriersChanged();
				}
			}
		}
		
		[Column(Storage="_CourierInstructions", DbType="VarChar(50)")]
		public string CourierInstructions
		{
			get
			{
				return this._CourierInstructions;
			}
			set
			{
				if ((this._CourierInstructions != value))
				{
					this.OnCourierInstructionsChanging(value);
					this.SendPropertyChanging();
					this._CourierInstructions = value;
					this.SendPropertyChanged("CourierInstructions");
					this.OnCourierInstructionsChanged();
				}
			}
		}
		
		[Column(Storage="_CustOrdNum", DbType="VarChar(16)")]
		public string CustOrdNum
		{
			get
			{
				return this._CustOrdNum;
			}
			set
			{
				if ((this._CustOrdNum != value))
				{
					this.OnCustOrdNumChanging(value);
					this.SendPropertyChanging();
					this._CustOrdNum = value;
					this.SendPropertyChanged("CustOrdNum");
					this.OnCustOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_JobRef", DbType="VarChar(16)")]
		public string JobRef
		{
			get
			{
				return this._JobRef;
			}
			set
			{
				if ((this._JobRef != value))
				{
					this.OnJobRefChanging(value);
					this.SendPropertyChanging();
					this._JobRef = value;
					this.SendPropertyChanged("JobRef");
					this.OnJobRefChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[Column(Storage="_CreditHold", DbType="Bit NOT NULL")]
		public bool CreditHold
		{
			get
			{
				return this._CreditHold;
			}
			set
			{
				if ((this._CreditHold != value))
				{
					this.OnCreditHoldChanging(value);
					this.SendPropertyChanging();
					this._CreditHold = value;
					this.SendPropertyChanged("CreditHold");
					this.OnCreditHoldChanged();
				}
			}
		}
		
		[Column(Storage="_Ref", DbType="VarChar(20)")]
		public string Ref
		{
			get
			{
				return this._Ref;
			}
			set
			{
				if ((this._Ref != value))
				{
					this.OnRefChanging(value);
					this.SendPropertyChanging();
					this._Ref = value;
					this.SendPropertyChanged("Ref");
					this.OnRefChanged();
				}
			}
		}
		
		[Column(Storage="_SalesRep", DbType="VarChar(25)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					this.OnSalesRepChanging(value);
					this.SendPropertyChanging();
					this._SalesRep = value;
					this.SendPropertyChanged("SalesRep");
					this.OnSalesRepChanged();
				}
			}
		}
		
		[Column(Storage="_RepArea1", DbType="SmallInt")]
		public System.Nullable<short> RepArea1
		{
			get
			{
				return this._RepArea1;
			}
			set
			{
				if ((this._RepArea1 != value))
				{
					this.OnRepArea1Changing(value);
					this.SendPropertyChanging();
					this._RepArea1 = value;
					this.SendPropertyChanged("RepArea1");
					this.OnRepArea1Changed();
				}
			}
		}
		
		[Column(Storage="_RepArea2", DbType="SmallInt")]
		public System.Nullable<short> RepArea2
		{
			get
			{
				return this._RepArea2;
			}
			set
			{
				if ((this._RepArea2 != value))
				{
					this.OnRepArea2Changing(value);
					this.SendPropertyChanging();
					this._RepArea2 = value;
					this.SendPropertyChanged("RepArea2");
					this.OnRepArea2Changed();
				}
			}
		}
		
		[Column(Storage="_Required", DbType="DateTime")]
		public System.Nullable<System.DateTime> Required
		{
			get
			{
				return this._Required;
			}
			set
			{
				if ((this._Required != value))
				{
					this.OnRequiredChanging(value);
					this.SendPropertyChanging();
					this._Required = value;
					this.SendPropertyChanged("Required");
					this.OnRequiredChanged();
				}
			}
		}
		
		[Column(Storage="_StaxCode", DbType="VarChar(9)")]
		public string StaxCode
		{
			get
			{
				return this._StaxCode;
			}
			set
			{
				if ((this._StaxCode != value))
				{
					this.OnStaxCodeChanging(value);
					this.SendPropertyChanging();
					this._StaxCode = value;
					this.SendPropertyChanged("StaxCode");
					this.OnStaxCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ProductionCode", DbType="VarChar(16)")]
		public string ProductionCode
		{
			get
			{
				return this._ProductionCode;
			}
			set
			{
				if ((this._ProductionCode != value))
				{
					this.OnProductionCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductionCode = value;
					this.SendPropertyChanged("ProductionCode");
					this.OnProductionCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ProductionName", DbType="VarChar(50)")]
		public string ProductionName
		{
			get
			{
				return this._ProductionName;
			}
			set
			{
				if ((this._ProductionName != value))
				{
					this.OnProductionNameChanging(value);
					this.SendPropertyChanging();
					this._ProductionName = value;
					this.SendPropertyChanged("ProductionName");
					this.OnProductionNameChanged();
				}
			}
		}
		
		[Column(Storage="_OrderQty", DbType="Int")]
		public System.Nullable<int> OrderQty
		{
			get
			{
				return this._OrderQty;
			}
			set
			{
				if ((this._OrderQty != value))
				{
					this.OnOrderQtyChanging(value);
					this.SendPropertyChanging();
					this._OrderQty = value;
					this.SendPropertyChanged("OrderQty");
					this.OnOrderQtyChanged();
				}
			}
		}
		
		[Column(Storage="_OrderPrice", DbType="Money")]
		public System.Nullable<decimal> OrderPrice
		{
			get
			{
				return this._OrderPrice;
			}
			set
			{
				if ((this._OrderPrice != value))
				{
					this.OnOrderPriceChanging(value);
					this.SendPropertyChanging();
					this._OrderPrice = value;
					this.SendPropertyChanged("OrderPrice");
					this.OnOrderPriceChanged();
				}
			}
		}
		
		[Column(Storage="_OrdTotal", DbType="Money")]
		public System.Nullable<decimal> OrdTotal
		{
			get
			{
				return this._OrdTotal;
			}
			set
			{
				if ((this._OrdTotal != value))
				{
					this.OnOrdTotalChanging(value);
					this.SendPropertyChanging();
					this._OrdTotal = value;
					this.SendPropertyChanged("OrdTotal");
					this.OnOrdTotalChanged();
				}
			}
		}
		
		[Column(Storage="_InvFreight", DbType="Money NOT NULL")]
		public decimal InvFreight
		{
			get
			{
				return this._InvFreight;
			}
			set
			{
				if ((this._InvFreight != value))
				{
					this.OnInvFreightChanging(value);
					this.SendPropertyChanging();
					this._InvFreight = value;
					this.SendPropertyChanged("InvFreight");
					this.OnInvFreightChanged();
				}
			}
		}
		
		[Column(Storage="_InvNet", DbType="Money NOT NULL")]
		public decimal InvNet
		{
			get
			{
				return this._InvNet;
			}
			set
			{
				if ((this._InvNet != value))
				{
					this.OnInvNetChanging(value);
					this.SendPropertyChanging();
					this._InvNet = value;
					this.SendPropertyChanged("InvNet");
					this.OnInvNetChanged();
				}
			}
		}
		
		[Column(Storage="_InvTax", DbType="Money NOT NULL")]
		public decimal InvTax
		{
			get
			{
				return this._InvTax;
			}
			set
			{
				if ((this._InvTax != value))
				{
					this.OnInvTaxChanging(value);
					this.SendPropertyChanging();
					this._InvTax = value;
					this.SendPropertyChanged("InvTax");
					this.OnInvTaxChanged();
				}
			}
		}
		
		[Column(Storage="_InvDisc", DbType="Money NOT NULL")]
		public decimal InvDisc
		{
			get
			{
				return this._InvDisc;
			}
			set
			{
				if ((this._InvDisc != value))
				{
					this.OnInvDiscChanging(value);
					this.SendPropertyChanging();
					this._InvDisc = value;
					this.SendPropertyChanged("InvDisc");
					this.OnInvDiscChanged();
				}
			}
		}
		
		[Column(Storage="_InvTotal", DbType="Money NOT NULL")]
		public decimal InvTotal
		{
			get
			{
				return this._InvTotal;
			}
			set
			{
				if ((this._InvTotal != value))
				{
					this.OnInvTotalChanging(value);
					this.SendPropertyChanging();
					this._InvTotal = value;
					this.SendPropertyChanged("InvTotal");
					this.OnInvTotalChanged();
				}
			}
		}
		
		[Column(Storage="_NetCost", DbType="Money")]
		public System.Nullable<decimal> NetCost
		{
			get
			{
				return this._NetCost;
			}
			set
			{
				if ((this._NetCost != value))
				{
					this.OnNetCostChanging(value);
					this.SendPropertyChanging();
					this._NetCost = value;
					this.SendPropertyChanged("NetCost");
					this.OnNetCostChanged();
				}
			}
		}
		
		[Column(Storage="_Payment", DbType="Bit")]
		public System.Nullable<bool> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[Column(Storage="_LastPayDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPayDate
		{
			get
			{
				return this._LastPayDate;
			}
			set
			{
				if ((this._LastPayDate != value))
				{
					this.OnLastPayDateChanging(value);
					this.SendPropertyChanging();
					this._LastPayDate = value;
					this.SendPropertyChanged("LastPayDate");
					this.OnLastPayDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastPayAmt", DbType="Money")]
		public System.Nullable<decimal> LastPayAmt
		{
			get
			{
				return this._LastPayAmt;
			}
			set
			{
				if ((this._LastPayAmt != value))
				{
					this.OnLastPayAmtChanging(value);
					this.SendPropertyChanging();
					this._LastPayAmt = value;
					this.SendPropertyChanged("LastPayAmt");
					this.OnLastPayAmtChanged();
				}
			}
		}
		
		[Column(Storage="_Paid", DbType="Money")]
		public System.Nullable<decimal> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[Column(Storage="_Notes", DbType="VarChar(120)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[Column(Storage="_Authorisation", DbType="VarChar(4)")]
		public string Authorisation
		{
			get
			{
				return this._Authorisation;
			}
			set
			{
				if ((this._Authorisation != value))
				{
					this.OnAuthorisationChanging(value);
					this.SendPropertyChanging();
					this._Authorisation = value;
					this.SendPropertyChanged("Authorisation");
					this.OnAuthorisationChanged();
				}
			}
		}
		
		[Column(Storage="_Auditor", DbType="VarChar(25)")]
		public string Auditor
		{
			get
			{
				return this._Auditor;
			}
			set
			{
				if ((this._Auditor != value))
				{
					this.OnAuditorChanging(value);
					this.SendPropertyChanging();
					this._Auditor = value;
					this.SendPropertyChanged("Auditor");
					this.OnAuditorChanged();
				}
			}
		}
		
		[Column(Storage="_Picker", DbType="VarChar(25)")]
		public string Picker
		{
			get
			{
				return this._Picker;
			}
			set
			{
				if ((this._Picker != value))
				{
					this.OnPickerChanging(value);
					this.SendPropertyChanging();
					this._Picker = value;
					this.SendPropertyChanged("Picker");
					this.OnPickerChanged();
				}
			}
		}
		
		[Column(Storage="_TimeAudited", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeAudited
		{
			get
			{
				return this._TimeAudited;
			}
			set
			{
				if ((this._TimeAudited != value))
				{
					this.OnTimeAuditedChanging(value);
					this.SendPropertyChanging();
					this._TimeAudited = value;
					this.SendPropertyChanged("TimeAudited");
					this.OnTimeAuditedChanged();
				}
			}
		}
		
		[Column(Storage="_OnHold", DbType="Bit NOT NULL")]
		public bool OnHold
		{
			get
			{
				return this._OnHold;
			}
			set
			{
				if ((this._OnHold != value))
				{
					this.OnOnHoldChanging(value);
					this.SendPropertyChanging();
					this._OnHold = value;
					this.SendPropertyChanged("OnHold");
					this.OnOnHoldChanged();
				}
			}
		}
		
		[Column(Storage="_ReasonHeld", DbType="VarChar(80)")]
		public string ReasonHeld
		{
			get
			{
				return this._ReasonHeld;
			}
			set
			{
				if ((this._ReasonHeld != value))
				{
					this.OnReasonHeldChanging(value);
					this.SendPropertyChanging();
					this._ReasonHeld = value;
					this.SendPropertyChanged("ReasonHeld");
					this.OnReasonHeldChanged();
				}
			}
		}
		
		[Column(Storage="_HighPriority", DbType="Bit NOT NULL")]
		public bool HighPriority
		{
			get
			{
				return this._HighPriority;
			}
			set
			{
				if ((this._HighPriority != value))
				{
					this.OnHighPriorityChanging(value);
					this.SendPropertyChanging();
					this._HighPriority = value;
					this.SendPropertyChanged("HighPriority");
					this.OnHighPriorityChanged();
				}
			}
		}
		
		[Column(Storage="_Discount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[Column(Storage="_DelCompany", DbType="VarChar(50)")]
		public string DelCompany
		{
			get
			{
				return this._DelCompany;
			}
			set
			{
				if ((this._DelCompany != value))
				{
					this.OnDelCompanyChanging(value);
					this.SendPropertyChanging();
					this._DelCompany = value;
					this.SendPropertyChanged("DelCompany");
					this.OnDelCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_DelAddr1", DbType="VarChar(50)")]
		public string DelAddr1
		{
			get
			{
				return this._DelAddr1;
			}
			set
			{
				if ((this._DelAddr1 != value))
				{
					this.OnDelAddr1Changing(value);
					this.SendPropertyChanging();
					this._DelAddr1 = value;
					this.SendPropertyChanged("DelAddr1");
					this.OnDelAddr1Changed();
				}
			}
		}
		
		[Column(Storage="_DelAddr2", DbType="VarChar(50)")]
		public string DelAddr2
		{
			get
			{
				return this._DelAddr2;
			}
			set
			{
				if ((this._DelAddr2 != value))
				{
					this.OnDelAddr2Changing(value);
					this.SendPropertyChanging();
					this._DelAddr2 = value;
					this.SendPropertyChanged("DelAddr2");
					this.OnDelAddr2Changed();
				}
			}
		}
		
		[Column(Storage="_DelAddr3", DbType="VarChar(50)")]
		public string DelAddr3
		{
			get
			{
				return this._DelAddr3;
			}
			set
			{
				if ((this._DelAddr3 != value))
				{
					this.OnDelAddr3Changing(value);
					this.SendPropertyChanging();
					this._DelAddr3 = value;
					this.SendPropertyChanged("DelAddr3");
					this.OnDelAddr3Changed();
				}
			}
		}
		
		[Column(Storage="_CrNote", DbType="Bit NOT NULL")]
		public bool CrNote
		{
			get
			{
				return this._CrNote;
			}
			set
			{
				if ((this._CrNote != value))
				{
					this.OnCrNoteChanging(value);
					this.SendPropertyChanging();
					this._CrNote = value;
					this.SendPropertyChanged("CrNote");
					this.OnCrNoteChanged();
				}
			}
		}
		
		[Column(Storage="_FO", DbType="Bit NOT NULL")]
		public bool FO
		{
			get
			{
				return this._FO;
			}
			set
			{
				if ((this._FO != value))
				{
					this.OnFOChanging(value);
					this.SendPropertyChanging();
					this._FO = value;
					this.SendPropertyChanged("FO");
					this.OnFOChanged();
				}
			}
		}
		
		[Column(Storage="_PrintLoc", DbType="VarChar(1)")]
		public string PrintLoc
		{
			get
			{
				return this._PrintLoc;
			}
			set
			{
				if ((this._PrintLoc != value))
				{
					this.OnPrintLocChanging(value);
					this.SendPropertyChanging();
					this._PrintLoc = value;
					this.SendPropertyChanged("PrintLoc");
					this.OnPrintLocChanged();
				}
			}
		}
		
		[Column(Storage="_SourceLoc", DbType="VarChar(1)")]
		public string SourceLoc
		{
			get
			{
				return this._SourceLoc;
			}
			set
			{
				if ((this._SourceLoc != value))
				{
					this.OnSourceLocChanging(value);
					this.SendPropertyChanging();
					this._SourceLoc = value;
					this.SendPropertyChanged("SourceLoc");
					this.OnSourceLocChanged();
				}
			}
		}
		
		[Column(Storage="_TerminalLoc", DbType="TinyInt")]
		public System.Nullable<byte> TerminalLoc
		{
			get
			{
				return this._TerminalLoc;
			}
			set
			{
				if ((this._TerminalLoc != value))
				{
					this.OnTerminalLocChanging(value);
					this.SendPropertyChanging();
					this._TerminalLoc = value;
					this.SendPropertyChanged("TerminalLoc");
					this.OnTerminalLocChanged();
				}
			}
		}
		
		[Column(Storage="_AgeCode", DbType="TinyInt NOT NULL")]
		public byte AgeCode
		{
			get
			{
				return this._AgeCode;
			}
			set
			{
				if ((this._AgeCode != value))
				{
					this.OnAgeCodeChanging(value);
					this.SendPropertyChanging();
					this._AgeCode = value;
					this.SendPropertyChanged("AgeCode");
					this.OnAgeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LineCount", DbType="Int NOT NULL")]
		public int LineCount
		{
			get
			{
				return this._LineCount;
			}
			set
			{
				if ((this._LineCount != value))
				{
					this.OnLineCountChanging(value);
					this.SendPropertyChanging();
					this._LineCount = value;
					this.SendPropertyChanged("LineCount");
					this.OnLineCountChanged();
				}
			}
		}
		
		[Column(Storage="_AddTo", DbType="Bit NOT NULL")]
		public bool AddTo
		{
			get
			{
				return this._AddTo;
			}
			set
			{
				if ((this._AddTo != value))
				{
					this.OnAddToChanging(value);
					this.SendPropertyChanging();
					this._AddTo = value;
					this.SendPropertyChanged("AddTo");
					this.OnAddToChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_QuoteNum", DbType="Int")]
		public System.Nullable<int> QuoteNum
		{
			get
			{
				return this._QuoteNum;
			}
			set
			{
				if ((this._QuoteNum != value))
				{
					this.OnQuoteNumChanging(value);
					this.SendPropertyChanging();
					this._QuoteNum = value;
					this.SendPropertyChanged("QuoteNum");
					this.OnQuoteNumChanged();
				}
			}
		}
		
		[Column(Storage="_Summary", DbType="Bit")]
		public System.Nullable<bool> Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[Column(Storage="_FastPay", DbType="Bit")]
		public System.Nullable<bool> FastPay
		{
			get
			{
				return this._FastPay;
			}
			set
			{
				if ((this._FastPay != value))
				{
					this.OnFastPayChanging(value);
					this.SendPropertyChanging();
					this._FastPay = value;
					this.SendPropertyChanged("FastPay");
					this.OnFastPayChanged();
				}
			}
		}
		
		[Column(Storage="_PriceLevel", DbType="TinyInt")]
		public System.Nullable<byte> PriceLevel
		{
			get
			{
				return this._PriceLevel;
			}
			set
			{
				if ((this._PriceLevel != value))
				{
					this.OnPriceLevelChanging(value);
					this.SendPropertyChanging();
					this._PriceLevel = value;
					this.SendPropertyChanged("PriceLevel");
					this.OnPriceLevelChanged();
				}
			}
		}
		
		[Column(Storage="_PreGST", DbType="Bit NOT NULL")]
		public bool PreGST
		{
			get
			{
				return this._PreGST;
			}
			set
			{
				if ((this._PreGST != value))
				{
					this.OnPreGSTChanging(value);
					this.SendPropertyChanging();
					this._PreGST = value;
					this.SendPropertyChanged("PreGST");
					this.OnPreGSTChanged();
				}
			}
		}
		
		[Column(Storage="_RaJob", DbType="Bit NOT NULL")]
		public bool RaJob
		{
			get
			{
				return this._RaJob;
			}
			set
			{
				if ((this._RaJob != value))
				{
					this.OnRaJobChanging(value);
					this.SendPropertyChanging();
					this._RaJob = value;
					this.SendPropertyChanged("RaJob");
					this.OnRaJobChanged();
				}
			}
		}
		
		[Column(Storage="_Returns", DbType="Bit")]
		public System.Nullable<bool> Returns
		{
			get
			{
				return this._Returns;
			}
			set
			{
				if ((this._Returns != value))
				{
					this.OnReturnsChanging(value);
					this.SendPropertyChanging();
					this._Returns = value;
					this.SendPropertyChanged("Returns");
					this.OnReturnsChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceBook", DbType="Bit NOT NULL")]
		public bool ServiceBook
		{
			get
			{
				return this._ServiceBook;
			}
			set
			{
				if ((this._ServiceBook != value))
				{
					this.OnServiceBookChanging(value);
					this.SendPropertyChanging();
					this._ServiceBook = value;
					this.SendPropertyChanged("ServiceBook");
					this.OnServiceBookChanged();
				}
			}
		}
		
		[Column(Storage="_BookDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BookDate
		{
			get
			{
				return this._BookDate;
			}
			set
			{
				if ((this._BookDate != value))
				{
					this.OnBookDateChanging(value);
					this.SendPropertyChanging();
					this._BookDate = value;
					this.SendPropertyChanged("BookDate");
					this.OnBookDateChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="TinyInt NOT NULL")]
		public byte Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_ProForma", DbType="Bit NOT NULL")]
		public bool ProForma
		{
			get
			{
				return this._ProForma;
			}
			set
			{
				if ((this._ProForma != value))
				{
					this.OnProFormaChanging(value);
					this.SendPropertyChanging();
					this._ProForma = value;
					this.SendPropertyChanged("ProForma");
					this.OnProFormaChanged();
				}
			}
		}
		
		[Column(Storage="_OverrideHold", DbType="Bit NOT NULL")]
		public bool OverrideHold
		{
			get
			{
				return this._OverrideHold;
			}
			set
			{
				if ((this._OverrideHold != value))
				{
					this.OnOverrideHoldChanging(value);
					this.SendPropertyChanging();
					this._OverrideHold = value;
					this.SendPropertyChanged("OverrideHold");
					this.OnOverrideHoldChanged();
				}
			}
		}
		
		[Column(Storage="_UserOverride", DbType="VarChar(25)")]
		public string UserOverride
		{
			get
			{
				return this._UserOverride;
			}
			set
			{
				if ((this._UserOverride != value))
				{
					this.OnUserOverrideChanging(value);
					this.SendPropertyChanging();
					this._UserOverride = value;
					this.SendPropertyChanged("UserOverride");
					this.OnUserOverrideChanged();
				}
			}
		}
		
		[Column(Storage="_FwdDate", DbType="Bit NOT NULL")]
		public bool FwdDate
		{
			get
			{
				return this._FwdDate;
			}
			set
			{
				if ((this._FwdDate != value))
				{
					this.OnFwdDateChanging(value);
					this.SendPropertyChanging();
					this._FwdDate = value;
					this.SendPropertyChanged("FwdDate");
					this.OnFwdDateChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_GLType", DbType="TinyInt NOT NULL")]
		public byte GLType
		{
			get
			{
				return this._GLType;
			}
			set
			{
				if ((this._GLType != value))
				{
					this.OnGLTypeChanging(value);
					this.SendPropertyChanging();
					this._GLType = value;
					this.SendPropertyChanged("GLType");
					this.OnGLTypeChanged();
				}
			}
		}
		
		[Column(Storage="_InvNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string InvNotes
		{
			get
			{
				return this._InvNotes;
			}
			set
			{
				if ((this._InvNotes != value))
				{
					this.OnInvNotesChanging(value);
					this.SendPropertyChanging();
					this._InvNotes = value;
					this.SendPropertyChanged("InvNotes");
					this.OnInvNotesChanged();
				}
			}
		}
		
		[Column(Storage="_Industr", DbType="Bit NOT NULL")]
		public bool Industr
		{
			get
			{
				return this._Industr;
			}
			set
			{
				if ((this._Industr != value))
				{
					this.OnIndustrChanging(value);
					this.SendPropertyChanging();
					this._Industr = value;
					this.SendPropertyChanged("Industr");
					this.OnIndustrChanged();
				}
			}
		}
		
		[Column(Storage="_InvMsg", DbType="VarChar(120)")]
		public string InvMsg
		{
			get
			{
				return this._InvMsg;
			}
			set
			{
				if ((this._InvMsg != value))
				{
					this.OnInvMsgChanging(value);
					this.SendPropertyChanging();
					this._InvMsg = value;
					this.SendPropertyChanged("InvMsg");
					this.OnInvMsgChanged();
				}
			}
		}
		
		[Column(Storage="_ExchangeRate", DbType="Decimal(9,4) NOT NULL")]
		public decimal ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[Column(Storage="_CurrencyType", DbType="VarChar(5)")]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this.OnCurrencyTypeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyType = value;
					this.SendPropertyChanged("CurrencyType");
					this.OnCurrencyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_Uncosted", DbType="TinyInt NOT NULL")]
		public byte Uncosted
		{
			get
			{
				return this._Uncosted;
			}
			set
			{
				if ((this._Uncosted != value))
				{
					this.OnUncostedChanging(value);
					this.SendPropertyChanging();
					this._Uncosted = value;
					this.SendPropertyChanged("Uncosted");
					this.OnUncostedChanged();
				}
			}
		}
		
		[Column(Storage="_OldOrdNum", DbType="Int")]
		public System.Nullable<int> OldOrdNum
		{
			get
			{
				return this._OldOrdNum;
			}
			set
			{
				if ((this._OldOrdNum != value))
				{
					this.OnOldOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OldOrdNum = value;
					this.SendPropertyChanged("OldOrdNum");
					this.OnOldOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_SalesAccGL", DbType="VarChar(16)")]
		public string SalesAccGL
		{
			get
			{
				return this._SalesAccGL;
			}
			set
			{
				if ((this._SalesAccGL != value))
				{
					this.OnSalesAccGLChanging(value);
					this.SendPropertyChanging();
					this._SalesAccGL = value;
					this.SendPropertyChanged("SalesAccGL");
					this.OnSalesAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_SalesCtrlAccGL", DbType="VarChar(16)")]
		public string SalesCtrlAccGL
		{
			get
			{
				return this._SalesCtrlAccGL;
			}
			set
			{
				if ((this._SalesCtrlAccGL != value))
				{
					this.OnSalesCtrlAccGLChanging(value);
					this.SendPropertyChanging();
					this._SalesCtrlAccGL = value;
					this.SendPropertyChanged("SalesCtrlAccGL");
					this.OnSalesCtrlAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_Receipt", DbType="Int")]
		public System.Nullable<int> Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this.OnReceiptChanging(value);
					this.SendPropertyChanging();
					this._Receipt = value;
					this.SendPropertyChanged("Receipt");
					this.OnReceiptChanged();
				}
			}
		}
		
		[Column(Storage="_Branch", DbType="SmallInt NOT NULL")]
		public short Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[Column(Storage="_INT_InvBatch", DbType="Int")]
		public System.Nullable<int> INT_InvBatch
		{
			get
			{
				return this._INT_InvBatch;
			}
			set
			{
				if ((this._INT_InvBatch != value))
				{
					this.OnINT_InvBatchChanging(value);
					this.SendPropertyChanging();
					this._INT_InvBatch = value;
					this.SendPropertyChanged("INT_InvBatch");
					this.OnINT_InvBatchChanged();
				}
			}
		}
		
		[Column(Storage="_INT_InvToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> INT_InvToDate
		{
			get
			{
				return this._INT_InvToDate;
			}
			set
			{
				if ((this._INT_InvToDate != value))
				{
					this.OnINT_InvToDateChanging(value);
					this.SendPropertyChanging();
					this._INT_InvToDate = value;
					this.SendPropertyChanged("INT_InvToDate");
					this.OnINT_InvToDateChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_Invoice", DbType="Bit")]
		public System.Nullable<bool> INT_TM_Invoice
		{
			get
			{
				return this._INT_TM_Invoice;
			}
			set
			{
				if ((this._INT_TM_Invoice != value))
				{
					this.OnINT_TM_InvoiceChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_Invoice = value;
					this.SendPropertyChanged("INT_TM_Invoice");
					this.OnINT_TM_InvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_CE_Commission", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> INT_TM_CE_Commission
		{
			get
			{
				return this._INT_TM_CE_Commission;
			}
			set
			{
				if ((this._INT_TM_CE_Commission != value))
				{
					this.OnINT_TM_CE_CommissionChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_CE_Commission = value;
					this.SendPropertyChanged("INT_TM_CE_Commission");
					this.OnINT_TM_CE_CommissionChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_INT_Commission", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> INT_TM_INT_Commission
		{
			get
			{
				return this._INT_TM_INT_Commission;
			}
			set
			{
				if ((this._INT_TM_INT_Commission != value))
				{
					this.OnINT_TM_INT_CommissionChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_INT_Commission = value;
					this.SendPropertyChanged("INT_TM_INT_Commission");
					this.OnINT_TM_INT_CommissionChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_Invoice_CustName", DbType="VarChar(128)")]
		public string INT_TM_Invoice_CustName
		{
			get
			{
				return this._INT_TM_Invoice_CustName;
			}
			set
			{
				if ((this._INT_TM_Invoice_CustName != value))
				{
					this.OnINT_TM_Invoice_CustNameChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_Invoice_CustName = value;
					this.SendPropertyChanged("INT_TM_Invoice_CustName");
					this.OnINT_TM_Invoice_CustNameChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_Street1", DbType="VarChar(128)")]
		public string INT_TM_Street1
		{
			get
			{
				return this._INT_TM_Street1;
			}
			set
			{
				if ((this._INT_TM_Street1 != value))
				{
					this.OnINT_TM_Street1Changing(value);
					this.SendPropertyChanging();
					this._INT_TM_Street1 = value;
					this.SendPropertyChanged("INT_TM_Street1");
					this.OnINT_TM_Street1Changed();
				}
			}
		}
		
		[Column(Storage="_INT_TM_Street2", DbType="VarChar(128)")]
		public string INT_TM_Street2
		{
			get
			{
				return this._INT_TM_Street2;
			}
			set
			{
				if ((this._INT_TM_Street2 != value))
				{
					this.OnINT_TM_Street2Changing(value);
					this.SendPropertyChanging();
					this._INT_TM_Street2 = value;
					this.SendPropertyChanged("INT_TM_Street2");
					this.OnINT_TM_Street2Changed();
				}
			}
		}
		
		[Column(Storage="_INT_TM_Suburb", DbType="VarChar(128)")]
		public string INT_TM_Suburb
		{
			get
			{
				return this._INT_TM_Suburb;
			}
			set
			{
				if ((this._INT_TM_Suburb != value))
				{
					this.OnINT_TM_SuburbChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_Suburb = value;
					this.SendPropertyChanged("INT_TM_Suburb");
					this.OnINT_TM_SuburbChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_State", DbType="VarChar(5)")]
		public string INT_TM_State
		{
			get
			{
				return this._INT_TM_State;
			}
			set
			{
				if ((this._INT_TM_State != value))
				{
					this.OnINT_TM_StateChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_State = value;
					this.SendPropertyChanged("INT_TM_State");
					this.OnINT_TM_StateChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_PostCode", DbType="VarChar(5)")]
		public string INT_TM_PostCode
		{
			get
			{
				return this._INT_TM_PostCode;
			}
			set
			{
				if ((this._INT_TM_PostCode != value))
				{
					this.OnINT_TM_PostCodeChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_PostCode = value;
					this.SendPropertyChanged("INT_TM_PostCode");
					this.OnINT_TM_PostCodeChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_AcctManager", DbType="VarChar(25)")]
		public string INT_TM_AcctManager
		{
			get
			{
				return this._INT_TM_AcctManager;
			}
			set
			{
				if ((this._INT_TM_AcctManager != value))
				{
					this.OnINT_TM_AcctManagerChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_AcctManager = value;
					this.SendPropertyChanged("INT_TM_AcctManager");
					this.OnINT_TM_AcctManagerChanged();
				}
			}
		}
		
		[Column(Storage="_INT_CreditInvnum", DbType="Int")]
		public System.Nullable<int> INT_CreditInvnum
		{
			get
			{
				return this._INT_CreditInvnum;
			}
			set
			{
				if ((this._INT_CreditInvnum != value))
				{
					this.OnINT_CreditInvnumChanging(value);
					this.SendPropertyChanging();
					this._INT_CreditInvnum = value;
					this.SendPropertyChanged("INT_CreditInvnum");
					this.OnINT_CreditInvnumChanged();
				}
			}
		}
		
		[Column(Storage="_INT_User", DbType="VarChar(50)")]
		public string INT_User
		{
			get
			{
				return this._INT_User;
			}
			set
			{
				if ((this._INT_User != value))
				{
					this.OnINT_UserChanging(value);
					this.SendPropertyChanging();
					this._INT_User = value;
					this.SendPropertyChanged("INT_User");
					this.OnINT_UserChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._CTRAC_HEADER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_PDFCreated", DbType="Bit NOT NULL")]
		public bool PDFCreated
		{
			get
			{
				return this._PDFCreated;
			}
			set
			{
				if ((this._PDFCreated != value))
				{
					this.OnPDFCreatedChanging(value);
					this.SendPropertyChanging();
					this._PDFCreated = value;
					this.SendPropertyChanged("PDFCreated");
					this.OnPDFCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_PDFCreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PDFCreatedDate
		{
			get
			{
				return this._PDFCreatedDate;
			}
			set
			{
				if ((this._PDFCreatedDate != value))
				{
					this.OnPDFCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._PDFCreatedDate = value;
					this.SendPropertyChanged("PDFCreatedDate");
					this.OnPDFCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_PDFSent", DbType="Bit NOT NULL")]
		public bool PDFSent
		{
			get
			{
				return this._PDFSent;
			}
			set
			{
				if ((this._PDFSent != value))
				{
					this.OnPDFSentChanging(value);
					this.SendPropertyChanging();
					this._PDFSent = value;
					this.SendPropertyChanged("PDFSent");
					this.OnPDFSentChanged();
				}
			}
		}
		
		[Column(Storage="_BSG", DbType="Bit NOT NULL")]
		public bool BSG
		{
			get
			{
				return this._BSG;
			}
			set
			{
				if ((this._BSG != value))
				{
					this.OnBSGChanging(value);
					this.SendPropertyChanging();
					this._BSG = value;
					this.SendPropertyChanged("BSG");
					this.OnBSGChanged();
				}
			}
		}
		
		[Association(Name="FK_DEBTORS_RECEIPT_DETAILS_INV", Storage="_DEBTORS_RECEIPT_DETAILS", ThisKey="OrdNum", OtherKey="OrdNum", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_RECEIPT_DETAILS> DEBTORS_RECEIPT_DETAILS
		{
			get
			{
				return this._DEBTORS_RECEIPT_DETAILS;
			}
			set
			{
				this._DEBTORS_RECEIPT_DETAILS.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_INV_LINE_TEXT_ORDNUM", Storage="_INT_INV_LINE_TEXT", ThisKey="OrdNum", OtherKey="OrdNum", DeleteRule="NO ACTION")]
		public EntitySet<INT_INV_LINE_TEXT> INT_INV_LINE_TEXT
		{
			get
			{
				return this._INT_INV_LINE_TEXT;
			}
			set
			{
				this._INT_INV_LINE_TEXT.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_TM_INVOICE_COMMISSIONS_ORDNUM", Storage="_INT_TM_INVOICE_COMMISSIONS", ThisKey="OrdNum", OtherKey="OrdNum", DeleteRule="NO ACTION")]
		public EntitySet<INT_TM_INVOICE_COMMISSIONS> INT_TM_INVOICE_COMMISSIONS
		{
			get
			{
				return this._INT_TM_INVOICE_COMMISSIONS;
			}
			set
			{
				this._INT_TM_INVOICE_COMMISSIONS.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_TM_INVOICE_EXPENSEITEMS_ORDNUM", Storage="_INT_TM_INVOICE_EXPENSEITEMS", ThisKey="OrdNum", OtherKey="OrdNum", DeleteRule="NO ACTION")]
		public EntitySet<INT_TM_INVOICE_EXPENSEITEMS> INT_TM_INVOICE_EXPENSEITEMS
		{
			get
			{
				return this._INT_TM_INVOICE_EXPENSEITEMS;
			}
			set
			{
				this._INT_TM_INVOICE_EXPENSEITEMS.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_TM_INVOICEITEMS_ORDNUM", Storage="_INT_TM_INVOICEITEMS", ThisKey="OrdNum", OtherKey="OrdNum", DeleteRule="NO ACTION")]
		public EntitySet<INT_TM_INVOICEITEMS> INT_TM_INVOICEITEMS
		{
			get
			{
				return this._INT_TM_INVOICEITEMS;
			}
			set
			{
				this._INT_TM_INVOICEITEMS.Assign(value);
			}
		}
		
		[Association(Name="FK_SALEITEM_SALESORD", Storage="_SALEITEM", ThisKey="OrdNum", OtherKey="OrdNum", DeleteRule="NO ACTION")]
		public EntitySet<SALEITEM> SALEITEM
		{
			get
			{
				return this._SALEITEM;
			}
			set
			{
				this._SALEITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_SALESORD_CTRAC_HEADER", Storage="_CTRAC_HEADER", ThisKey="ContractID", OtherKey="ContractId", IsForeignKey=true)]
		public CTRAC_HEADER CTRAC_HEADER
		{
			get
			{
				return this._CTRAC_HEADER.Entity;
			}
			set
			{
				CTRAC_HEADER previousValue = this._CTRAC_HEADER.Entity;
				if (((previousValue != value) 
							|| (this._CTRAC_HEADER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTRAC_HEADER.Entity = null;
						previousValue.SALESORD.Remove(this);
					}
					this._CTRAC_HEADER.Entity = value;
					if ((value != null))
					{
						value.SALESORD.Add(this);
						this._ContractID = value.ContractId;
					}
					else
					{
						this._ContractID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CTRAC_HEADER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEBTORS_RECEIPT_DETAILS(DEBTORS_RECEIPT_DETAILS entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD = this;
		}
		
		private void detach_DEBTORS_RECEIPT_DETAILS(DEBTORS_RECEIPT_DETAILS entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD = null;
		}
		
		private void attach_INT_INV_LINE_TEXT(INT_INV_LINE_TEXT entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD = this;
		}
		
		private void detach_INT_INV_LINE_TEXT(INT_INV_LINE_TEXT entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD = null;
		}
		
		private void attach_INT_TM_INVOICE_COMMISSIONS(INT_TM_INVOICE_COMMISSIONS entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD = this;
		}
		
		private void detach_INT_TM_INVOICE_COMMISSIONS(INT_TM_INVOICE_COMMISSIONS entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD = null;
		}
		
		private void attach_INT_TM_INVOICE_EXPENSEITEMS(INT_TM_INVOICE_EXPENSEITEMS entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD = this;
		}
		
		private void detach_INT_TM_INVOICE_EXPENSEITEMS(INT_TM_INVOICE_EXPENSEITEMS entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD = null;
		}
		
		private void attach_INT_TM_INVOICEITEMS(INT_TM_INVOICEITEMS entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD = this;
		}
		
		private void detach_INT_TM_INVOICEITEMS(INT_TM_INVOICEITEMS entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD = null;
		}
		
		private void attach_SALEITEM(SALEITEM entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD = this;
		}
		
		private void detach_SALEITEM(SALEITEM entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD = null;
		}
	}
	
	[Table(Name="dbo.SALESORD_DRAFT")]
	public partial class SALESORD_DRAFT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrdNum;
		
		private System.Nullable<System.DateTime> _OrdDate;
		
		private System.Nullable<byte> _Type;
		
		private System.Nullable<System.DateTime> _PickPrinted;
		
		private System.Nullable<System.DateTime> _InvPrinted;
		
		private System.Nullable<System.DateTime> _ShipDate;
		
		private string _ConsignNum;
		
		private string _EnteredBy;
		
		private System.Nullable<int> _AccountID;
		
		private string _OldAccount;
		
		private System.Nullable<int> _Parent;
		
		private bool _GotItems;
		
		private int _Audit;
		
		private string _ContactName;
		
		private string _Email;
		
		private string _Phone;
		
		private string _Mobile;
		
		private string _Department;
		
		private string _Couriers;
		
		private string _CourierInstructions;
		
		private string _CustOrdNum;
		
		private string _JobRef;
		
		private System.Nullable<byte> _Status;
		
		private bool _Cancelled;
		
		private bool _CreditHold;
		
		private string _Ref;
		
		private string _SalesRep;
		
		private System.Nullable<short> _RepArea1;
		
		private System.Nullable<short> _RepArea2;
		
		private System.Nullable<System.DateTime> _Required;
		
		private string _StaxCode;
		
		private string _ProductionCode;
		
		private string _ProductionName;
		
		private System.Nullable<int> _OrderQty;
		
		private System.Nullable<decimal> _OrderPrice;
		
		private System.Nullable<decimal> _OrdTotal;
		
		private decimal _InvFreight;
		
		private decimal _InvNet;
		
		private decimal _InvTax;
		
		private decimal _InvDisc;
		
		private decimal _InvTotal;
		
		private System.Nullable<decimal> _NetCost;
		
		private System.Nullable<bool> _Payment;
		
		private System.Nullable<System.DateTime> _LastPayDate;
		
		private System.Nullable<decimal> _LastPayAmt;
		
		private System.Nullable<decimal> _Paid;
		
		private string _Notes;
		
		private string _Authorisation;
		
		private string _Auditor;
		
		private string _Picker;
		
		private System.Nullable<System.DateTime> _TimeAudited;
		
		private bool _OnHold;
		
		private string _ReasonHeld;
		
		private bool _HighPriority;
		
		private decimal _Discount;
		
		private string _DelCompany;
		
		private string _DelAddr1;
		
		private string _DelAddr2;
		
		private string _DelAddr3;
		
		private bool _CrNote;
		
		private bool _FO;
		
		private string _PrintLoc;
		
		private string _SourceLoc;
		
		private System.Nullable<byte> _TerminalLoc;
		
		private byte _AgeCode;
		
		private int _LineCount;
		
		private bool _AddTo;
		
		private byte _CompanyNum;
		
		private System.Nullable<int> _QuoteNum;
		
		private System.Nullable<bool> _Summary;
		
		private System.Nullable<bool> _FastPay;
		
		private System.Nullable<byte> _PriceLevel;
		
		private bool _PreGST;
		
		private bool _RaJob;
		
		private System.Nullable<bool> _Returns;
		
		private bool _ServiceBook;
		
		private System.Nullable<System.DateTime> _BookDate;
		
		private byte _Company;
		
		private bool _ProForma;
		
		private bool _OverrideHold;
		
		private string _UserOverride;
		
		private bool _FwdDate;
		
		private byte _Month;
		
		private short _Year;
		
		private byte _GLType;
		
		private string _InvNotes;
		
		private bool _Industr;
		
		private string _InvMsg;
		
		private decimal _ExchangeRate;
		
		private string _CurrencyType;
		
		private int _LocationID;
		
		private byte _Uncosted;
		
		private System.Nullable<int> _OldOrdNum;
		
		private string _SalesAccGL;
		
		private string _SalesCtrlAccGL;
		
		private System.Nullable<int> _Receipt;
		
		private short _Branch;
		
		private System.Nullable<int> _INT_InvBatch;
		
		private System.Nullable<System.DateTime> _INT_InvToDate;
		
		private System.Nullable<bool> _INT_TM_Invoice;
		
		private System.Nullable<decimal> _INT_TM_CE_Commission;
		
		private System.Nullable<decimal> _INT_TM_INT_Commission;
		
		private string _INT_TM_Invoice_CustName;
		
		private string _INT_TM_Street1;
		
		private string _INT_TM_Street2;
		
		private string _INT_TM_Suburb;
		
		private string _INT_TM_State;
		
		private string _INT_TM_PostCode;
		
		private string _INT_TM_AcctManager;
		
		private System.Nullable<int> _INT_CreditInvnum;
		
		private string _INT_User;
		
		private bool _SeparateBatchPrint;
		
		private System.Nullable<int> _ContractID;
		
		private EntitySet<INT_INV_LINE_TEXT_DRAFT> _INT_INV_LINE_TEXT_DRAFT;
		
		private EntitySet<SALEITEM_DRAFT> _SALEITEM_DRAFT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnOrdDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrdDateChanged();
    partial void OnTypeChanging(System.Nullable<byte> value);
    partial void OnTypeChanged();
    partial void OnPickPrintedChanging(System.Nullable<System.DateTime> value);
    partial void OnPickPrintedChanged();
    partial void OnInvPrintedChanging(System.Nullable<System.DateTime> value);
    partial void OnInvPrintedChanged();
    partial void OnShipDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipDateChanged();
    partial void OnConsignNumChanging(string value);
    partial void OnConsignNumChanged();
    partial void OnEnteredByChanging(string value);
    partial void OnEnteredByChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnOldAccountChanging(string value);
    partial void OnOldAccountChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnGotItemsChanging(bool value);
    partial void OnGotItemsChanged();
    partial void OnAuditChanging(int value);
    partial void OnAuditChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnCouriersChanging(string value);
    partial void OnCouriersChanged();
    partial void OnCourierInstructionsChanging(string value);
    partial void OnCourierInstructionsChanged();
    partial void OnCustOrdNumChanging(string value);
    partial void OnCustOrdNumChanged();
    partial void OnJobRefChanging(string value);
    partial void OnJobRefChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnCreditHoldChanging(bool value);
    partial void OnCreditHoldChanged();
    partial void OnRefChanging(string value);
    partial void OnRefChanged();
    partial void OnSalesRepChanging(string value);
    partial void OnSalesRepChanged();
    partial void OnRepArea1Changing(System.Nullable<short> value);
    partial void OnRepArea1Changed();
    partial void OnRepArea2Changing(System.Nullable<short> value);
    partial void OnRepArea2Changed();
    partial void OnRequiredChanging(System.Nullable<System.DateTime> value);
    partial void OnRequiredChanged();
    partial void OnStaxCodeChanging(string value);
    partial void OnStaxCodeChanged();
    partial void OnProductionCodeChanging(string value);
    partial void OnProductionCodeChanged();
    partial void OnProductionNameChanging(string value);
    partial void OnProductionNameChanged();
    partial void OnOrderQtyChanging(System.Nullable<int> value);
    partial void OnOrderQtyChanged();
    partial void OnOrderPriceChanging(System.Nullable<decimal> value);
    partial void OnOrderPriceChanged();
    partial void OnOrdTotalChanging(System.Nullable<decimal> value);
    partial void OnOrdTotalChanged();
    partial void OnInvFreightChanging(decimal value);
    partial void OnInvFreightChanged();
    partial void OnInvNetChanging(decimal value);
    partial void OnInvNetChanged();
    partial void OnInvTaxChanging(decimal value);
    partial void OnInvTaxChanged();
    partial void OnInvDiscChanging(decimal value);
    partial void OnInvDiscChanged();
    partial void OnInvTotalChanging(decimal value);
    partial void OnInvTotalChanged();
    partial void OnNetCostChanging(System.Nullable<decimal> value);
    partial void OnNetCostChanged();
    partial void OnPaymentChanging(System.Nullable<bool> value);
    partial void OnPaymentChanged();
    partial void OnLastPayDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPayDateChanged();
    partial void OnLastPayAmtChanging(System.Nullable<decimal> value);
    partial void OnLastPayAmtChanged();
    partial void OnPaidChanging(System.Nullable<decimal> value);
    partial void OnPaidChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnAuthorisationChanging(string value);
    partial void OnAuthorisationChanged();
    partial void OnAuditorChanging(string value);
    partial void OnAuditorChanged();
    partial void OnPickerChanging(string value);
    partial void OnPickerChanged();
    partial void OnTimeAuditedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeAuditedChanged();
    partial void OnOnHoldChanging(bool value);
    partial void OnOnHoldChanged();
    partial void OnReasonHeldChanging(string value);
    partial void OnReasonHeldChanged();
    partial void OnHighPriorityChanging(bool value);
    partial void OnHighPriorityChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnDelCompanyChanging(string value);
    partial void OnDelCompanyChanged();
    partial void OnDelAddr1Changing(string value);
    partial void OnDelAddr1Changed();
    partial void OnDelAddr2Changing(string value);
    partial void OnDelAddr2Changed();
    partial void OnDelAddr3Changing(string value);
    partial void OnDelAddr3Changed();
    partial void OnCrNoteChanging(bool value);
    partial void OnCrNoteChanged();
    partial void OnFOChanging(bool value);
    partial void OnFOChanged();
    partial void OnPrintLocChanging(string value);
    partial void OnPrintLocChanged();
    partial void OnSourceLocChanging(string value);
    partial void OnSourceLocChanged();
    partial void OnTerminalLocChanging(System.Nullable<byte> value);
    partial void OnTerminalLocChanged();
    partial void OnAgeCodeChanging(byte value);
    partial void OnAgeCodeChanged();
    partial void OnLineCountChanging(int value);
    partial void OnLineCountChanged();
    partial void OnAddToChanging(bool value);
    partial void OnAddToChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnQuoteNumChanging(System.Nullable<int> value);
    partial void OnQuoteNumChanged();
    partial void OnSummaryChanging(System.Nullable<bool> value);
    partial void OnSummaryChanged();
    partial void OnFastPayChanging(System.Nullable<bool> value);
    partial void OnFastPayChanged();
    partial void OnPriceLevelChanging(System.Nullable<byte> value);
    partial void OnPriceLevelChanged();
    partial void OnPreGSTChanging(bool value);
    partial void OnPreGSTChanged();
    partial void OnRaJobChanging(bool value);
    partial void OnRaJobChanged();
    partial void OnReturnsChanging(System.Nullable<bool> value);
    partial void OnReturnsChanged();
    partial void OnServiceBookChanging(bool value);
    partial void OnServiceBookChanged();
    partial void OnBookDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBookDateChanged();
    partial void OnCompanyChanging(byte value);
    partial void OnCompanyChanged();
    partial void OnProFormaChanging(bool value);
    partial void OnProFormaChanged();
    partial void OnOverrideHoldChanging(bool value);
    partial void OnOverrideHoldChanged();
    partial void OnUserOverrideChanging(string value);
    partial void OnUserOverrideChanged();
    partial void OnFwdDateChanging(bool value);
    partial void OnFwdDateChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnGLTypeChanging(byte value);
    partial void OnGLTypeChanged();
    partial void OnInvNotesChanging(string value);
    partial void OnInvNotesChanged();
    partial void OnIndustrChanging(bool value);
    partial void OnIndustrChanged();
    partial void OnInvMsgChanging(string value);
    partial void OnInvMsgChanged();
    partial void OnExchangeRateChanging(decimal value);
    partial void OnExchangeRateChanged();
    partial void OnCurrencyTypeChanging(string value);
    partial void OnCurrencyTypeChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnUncostedChanging(byte value);
    partial void OnUncostedChanged();
    partial void OnOldOrdNumChanging(System.Nullable<int> value);
    partial void OnOldOrdNumChanged();
    partial void OnSalesAccGLChanging(string value);
    partial void OnSalesAccGLChanged();
    partial void OnSalesCtrlAccGLChanging(string value);
    partial void OnSalesCtrlAccGLChanged();
    partial void OnReceiptChanging(System.Nullable<int> value);
    partial void OnReceiptChanged();
    partial void OnBranchChanging(short value);
    partial void OnBranchChanged();
    partial void OnINT_InvBatchChanging(System.Nullable<int> value);
    partial void OnINT_InvBatchChanged();
    partial void OnINT_InvToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnINT_InvToDateChanged();
    partial void OnINT_TM_InvoiceChanging(System.Nullable<bool> value);
    partial void OnINT_TM_InvoiceChanged();
    partial void OnINT_TM_CE_CommissionChanging(System.Nullable<decimal> value);
    partial void OnINT_TM_CE_CommissionChanged();
    partial void OnINT_TM_INT_CommissionChanging(System.Nullable<decimal> value);
    partial void OnINT_TM_INT_CommissionChanged();
    partial void OnINT_TM_Invoice_CustNameChanging(string value);
    partial void OnINT_TM_Invoice_CustNameChanged();
    partial void OnINT_TM_Street1Changing(string value);
    partial void OnINT_TM_Street1Changed();
    partial void OnINT_TM_Street2Changing(string value);
    partial void OnINT_TM_Street2Changed();
    partial void OnINT_TM_SuburbChanging(string value);
    partial void OnINT_TM_SuburbChanged();
    partial void OnINT_TM_StateChanging(string value);
    partial void OnINT_TM_StateChanged();
    partial void OnINT_TM_PostCodeChanging(string value);
    partial void OnINT_TM_PostCodeChanged();
    partial void OnINT_TM_AcctManagerChanging(string value);
    partial void OnINT_TM_AcctManagerChanged();
    partial void OnINT_CreditInvnumChanging(System.Nullable<int> value);
    partial void OnINT_CreditInvnumChanged();
    partial void OnINT_UserChanging(string value);
    partial void OnINT_UserChanged();
    partial void OnSeparateBatchPrintChanging(bool value);
    partial void OnSeparateBatchPrintChanged();
    partial void OnContractIDChanging(System.Nullable<int> value);
    partial void OnContractIDChanged();
    #endregion
		
		public SALESORD_DRAFT()
		{
			this._INT_INV_LINE_TEXT_DRAFT = new EntitySet<INT_INV_LINE_TEXT_DRAFT>(new Action<INT_INV_LINE_TEXT_DRAFT>(this.attach_INT_INV_LINE_TEXT_DRAFT), new Action<INT_INV_LINE_TEXT_DRAFT>(this.detach_INT_INV_LINE_TEXT_DRAFT));
			this._SALEITEM_DRAFT = new EntitySet<SALEITEM_DRAFT>(new Action<SALEITEM_DRAFT>(this.attach_SALEITEM_DRAFT), new Action<SALEITEM_DRAFT>(this.detach_SALEITEM_DRAFT));
			OnCreated();
		}
		
		[Column(Storage="_OrdNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_OrdDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrdDate
		{
			get
			{
				return this._OrdDate;
			}
			set
			{
				if ((this._OrdDate != value))
				{
					this.OnOrdDateChanging(value);
					this.SendPropertyChanging();
					this._OrdDate = value;
					this.SendPropertyChanged("OrdDate");
					this.OnOrdDateChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="TinyInt")]
		public System.Nullable<byte> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_PickPrinted", DbType="DateTime")]
		public System.Nullable<System.DateTime> PickPrinted
		{
			get
			{
				return this._PickPrinted;
			}
			set
			{
				if ((this._PickPrinted != value))
				{
					this.OnPickPrintedChanging(value);
					this.SendPropertyChanging();
					this._PickPrinted = value;
					this.SendPropertyChanged("PickPrinted");
					this.OnPickPrintedChanged();
				}
			}
		}
		
		[Column(Storage="_InvPrinted", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvPrinted
		{
			get
			{
				return this._InvPrinted;
			}
			set
			{
				if ((this._InvPrinted != value))
				{
					this.OnInvPrintedChanging(value);
					this.SendPropertyChanging();
					this._InvPrinted = value;
					this.SendPropertyChanged("InvPrinted");
					this.OnInvPrintedChanged();
				}
			}
		}
		
		[Column(Storage="_ShipDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ShipDate
		{
			get
			{
				return this._ShipDate;
			}
			set
			{
				if ((this._ShipDate != value))
				{
					this.OnShipDateChanging(value);
					this.SendPropertyChanging();
					this._ShipDate = value;
					this.SendPropertyChanged("ShipDate");
					this.OnShipDateChanged();
				}
			}
		}
		
		[Column(Storage="_ConsignNum", DbType="VarChar(20)")]
		public string ConsignNum
		{
			get
			{
				return this._ConsignNum;
			}
			set
			{
				if ((this._ConsignNum != value))
				{
					this.OnConsignNumChanging(value);
					this.SendPropertyChanging();
					this._ConsignNum = value;
					this.SendPropertyChanged("ConsignNum");
					this.OnConsignNumChanged();
				}
			}
		}
		
		[Column(Storage="_EnteredBy", DbType="VarChar(25)")]
		public string EnteredBy
		{
			get
			{
				return this._EnteredBy;
			}
			set
			{
				if ((this._EnteredBy != value))
				{
					this.OnEnteredByChanging(value);
					this.SendPropertyChanging();
					this._EnteredBy = value;
					this.SendPropertyChanged("EnteredBy");
					this.OnEnteredByChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[Column(Storage="_OldAccount", DbType="VarChar(12)")]
		public string OldAccount
		{
			get
			{
				return this._OldAccount;
			}
			set
			{
				if ((this._OldAccount != value))
				{
					this.OnOldAccountChanging(value);
					this.SendPropertyChanging();
					this._OldAccount = value;
					this.SendPropertyChanged("OldAccount");
					this.OnOldAccountChanged();
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[Column(Storage="_GotItems", DbType="Bit NOT NULL")]
		public bool GotItems
		{
			get
			{
				return this._GotItems;
			}
			set
			{
				if ((this._GotItems != value))
				{
					this.OnGotItemsChanging(value);
					this.SendPropertyChanging();
					this._GotItems = value;
					this.SendPropertyChanged("GotItems");
					this.OnGotItemsChanged();
				}
			}
		}
		
		[Column(Storage="_Audit", DbType="Int NOT NULL")]
		public int Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[Column(Storage="_ContactName", DbType="VarChar(30)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(16)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Mobile", DbType="VarChar(16)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[Column(Storage="_Department", DbType="VarChar(16)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[Column(Storage="_Couriers", DbType="VarChar(25)")]
		public string Couriers
		{
			get
			{
				return this._Couriers;
			}
			set
			{
				if ((this._Couriers != value))
				{
					this.OnCouriersChanging(value);
					this.SendPropertyChanging();
					this._Couriers = value;
					this.SendPropertyChanged("Couriers");
					this.OnCouriersChanged();
				}
			}
		}
		
		[Column(Storage="_CourierInstructions", DbType="VarChar(50)")]
		public string CourierInstructions
		{
			get
			{
				return this._CourierInstructions;
			}
			set
			{
				if ((this._CourierInstructions != value))
				{
					this.OnCourierInstructionsChanging(value);
					this.SendPropertyChanging();
					this._CourierInstructions = value;
					this.SendPropertyChanged("CourierInstructions");
					this.OnCourierInstructionsChanged();
				}
			}
		}
		
		[Column(Storage="_CustOrdNum", DbType="VarChar(16)")]
		public string CustOrdNum
		{
			get
			{
				return this._CustOrdNum;
			}
			set
			{
				if ((this._CustOrdNum != value))
				{
					this.OnCustOrdNumChanging(value);
					this.SendPropertyChanging();
					this._CustOrdNum = value;
					this.SendPropertyChanged("CustOrdNum");
					this.OnCustOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_JobRef", DbType="VarChar(16)")]
		public string JobRef
		{
			get
			{
				return this._JobRef;
			}
			set
			{
				if ((this._JobRef != value))
				{
					this.OnJobRefChanging(value);
					this.SendPropertyChanging();
					this._JobRef = value;
					this.SendPropertyChanged("JobRef");
					this.OnJobRefChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[Column(Storage="_CreditHold", DbType="Bit NOT NULL")]
		public bool CreditHold
		{
			get
			{
				return this._CreditHold;
			}
			set
			{
				if ((this._CreditHold != value))
				{
					this.OnCreditHoldChanging(value);
					this.SendPropertyChanging();
					this._CreditHold = value;
					this.SendPropertyChanged("CreditHold");
					this.OnCreditHoldChanged();
				}
			}
		}
		
		[Column(Storage="_Ref", DbType="VarChar(20)")]
		public string Ref
		{
			get
			{
				return this._Ref;
			}
			set
			{
				if ((this._Ref != value))
				{
					this.OnRefChanging(value);
					this.SendPropertyChanging();
					this._Ref = value;
					this.SendPropertyChanged("Ref");
					this.OnRefChanged();
				}
			}
		}
		
		[Column(Storage="_SalesRep", DbType="VarChar(25)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					this.OnSalesRepChanging(value);
					this.SendPropertyChanging();
					this._SalesRep = value;
					this.SendPropertyChanged("SalesRep");
					this.OnSalesRepChanged();
				}
			}
		}
		
		[Column(Storage="_RepArea1", DbType="SmallInt")]
		public System.Nullable<short> RepArea1
		{
			get
			{
				return this._RepArea1;
			}
			set
			{
				if ((this._RepArea1 != value))
				{
					this.OnRepArea1Changing(value);
					this.SendPropertyChanging();
					this._RepArea1 = value;
					this.SendPropertyChanged("RepArea1");
					this.OnRepArea1Changed();
				}
			}
		}
		
		[Column(Storage="_RepArea2", DbType="SmallInt")]
		public System.Nullable<short> RepArea2
		{
			get
			{
				return this._RepArea2;
			}
			set
			{
				if ((this._RepArea2 != value))
				{
					this.OnRepArea2Changing(value);
					this.SendPropertyChanging();
					this._RepArea2 = value;
					this.SendPropertyChanged("RepArea2");
					this.OnRepArea2Changed();
				}
			}
		}
		
		[Column(Storage="_Required", DbType="DateTime")]
		public System.Nullable<System.DateTime> Required
		{
			get
			{
				return this._Required;
			}
			set
			{
				if ((this._Required != value))
				{
					this.OnRequiredChanging(value);
					this.SendPropertyChanging();
					this._Required = value;
					this.SendPropertyChanged("Required");
					this.OnRequiredChanged();
				}
			}
		}
		
		[Column(Storage="_StaxCode", DbType="VarChar(9)")]
		public string StaxCode
		{
			get
			{
				return this._StaxCode;
			}
			set
			{
				if ((this._StaxCode != value))
				{
					this.OnStaxCodeChanging(value);
					this.SendPropertyChanging();
					this._StaxCode = value;
					this.SendPropertyChanged("StaxCode");
					this.OnStaxCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ProductionCode", DbType="VarChar(16)")]
		public string ProductionCode
		{
			get
			{
				return this._ProductionCode;
			}
			set
			{
				if ((this._ProductionCode != value))
				{
					this.OnProductionCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductionCode = value;
					this.SendPropertyChanged("ProductionCode");
					this.OnProductionCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ProductionName", DbType="VarChar(50)")]
		public string ProductionName
		{
			get
			{
				return this._ProductionName;
			}
			set
			{
				if ((this._ProductionName != value))
				{
					this.OnProductionNameChanging(value);
					this.SendPropertyChanging();
					this._ProductionName = value;
					this.SendPropertyChanged("ProductionName");
					this.OnProductionNameChanged();
				}
			}
		}
		
		[Column(Storage="_OrderQty", DbType="Int")]
		public System.Nullable<int> OrderQty
		{
			get
			{
				return this._OrderQty;
			}
			set
			{
				if ((this._OrderQty != value))
				{
					this.OnOrderQtyChanging(value);
					this.SendPropertyChanging();
					this._OrderQty = value;
					this.SendPropertyChanged("OrderQty");
					this.OnOrderQtyChanged();
				}
			}
		}
		
		[Column(Storage="_OrderPrice", DbType="Money")]
		public System.Nullable<decimal> OrderPrice
		{
			get
			{
				return this._OrderPrice;
			}
			set
			{
				if ((this._OrderPrice != value))
				{
					this.OnOrderPriceChanging(value);
					this.SendPropertyChanging();
					this._OrderPrice = value;
					this.SendPropertyChanged("OrderPrice");
					this.OnOrderPriceChanged();
				}
			}
		}
		
		[Column(Storage="_OrdTotal", DbType="Money")]
		public System.Nullable<decimal> OrdTotal
		{
			get
			{
				return this._OrdTotal;
			}
			set
			{
				if ((this._OrdTotal != value))
				{
					this.OnOrdTotalChanging(value);
					this.SendPropertyChanging();
					this._OrdTotal = value;
					this.SendPropertyChanged("OrdTotal");
					this.OnOrdTotalChanged();
				}
			}
		}
		
		[Column(Storage="_InvFreight", DbType="Money NOT NULL")]
		public decimal InvFreight
		{
			get
			{
				return this._InvFreight;
			}
			set
			{
				if ((this._InvFreight != value))
				{
					this.OnInvFreightChanging(value);
					this.SendPropertyChanging();
					this._InvFreight = value;
					this.SendPropertyChanged("InvFreight");
					this.OnInvFreightChanged();
				}
			}
		}
		
		[Column(Storage="_InvNet", DbType="Money NOT NULL")]
		public decimal InvNet
		{
			get
			{
				return this._InvNet;
			}
			set
			{
				if ((this._InvNet != value))
				{
					this.OnInvNetChanging(value);
					this.SendPropertyChanging();
					this._InvNet = value;
					this.SendPropertyChanged("InvNet");
					this.OnInvNetChanged();
				}
			}
		}
		
		[Column(Storage="_InvTax", DbType="Money NOT NULL")]
		public decimal InvTax
		{
			get
			{
				return this._InvTax;
			}
			set
			{
				if ((this._InvTax != value))
				{
					this.OnInvTaxChanging(value);
					this.SendPropertyChanging();
					this._InvTax = value;
					this.SendPropertyChanged("InvTax");
					this.OnInvTaxChanged();
				}
			}
		}
		
		[Column(Storage="_InvDisc", DbType="Money NOT NULL")]
		public decimal InvDisc
		{
			get
			{
				return this._InvDisc;
			}
			set
			{
				if ((this._InvDisc != value))
				{
					this.OnInvDiscChanging(value);
					this.SendPropertyChanging();
					this._InvDisc = value;
					this.SendPropertyChanged("InvDisc");
					this.OnInvDiscChanged();
				}
			}
		}
		
		[Column(Storage="_InvTotal", DbType="Money NOT NULL")]
		public decimal InvTotal
		{
			get
			{
				return this._InvTotal;
			}
			set
			{
				if ((this._InvTotal != value))
				{
					this.OnInvTotalChanging(value);
					this.SendPropertyChanging();
					this._InvTotal = value;
					this.SendPropertyChanged("InvTotal");
					this.OnInvTotalChanged();
				}
			}
		}
		
		[Column(Storage="_NetCost", DbType="Money")]
		public System.Nullable<decimal> NetCost
		{
			get
			{
				return this._NetCost;
			}
			set
			{
				if ((this._NetCost != value))
				{
					this.OnNetCostChanging(value);
					this.SendPropertyChanging();
					this._NetCost = value;
					this.SendPropertyChanged("NetCost");
					this.OnNetCostChanged();
				}
			}
		}
		
		[Column(Storage="_Payment", DbType="Bit")]
		public System.Nullable<bool> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[Column(Storage="_LastPayDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPayDate
		{
			get
			{
				return this._LastPayDate;
			}
			set
			{
				if ((this._LastPayDate != value))
				{
					this.OnLastPayDateChanging(value);
					this.SendPropertyChanging();
					this._LastPayDate = value;
					this.SendPropertyChanged("LastPayDate");
					this.OnLastPayDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastPayAmt", DbType="Money")]
		public System.Nullable<decimal> LastPayAmt
		{
			get
			{
				return this._LastPayAmt;
			}
			set
			{
				if ((this._LastPayAmt != value))
				{
					this.OnLastPayAmtChanging(value);
					this.SendPropertyChanging();
					this._LastPayAmt = value;
					this.SendPropertyChanged("LastPayAmt");
					this.OnLastPayAmtChanged();
				}
			}
		}
		
		[Column(Storage="_Paid", DbType="Money")]
		public System.Nullable<decimal> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[Column(Storage="_Notes", DbType="VarChar(120)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[Column(Storage="_Authorisation", DbType="VarChar(4)")]
		public string Authorisation
		{
			get
			{
				return this._Authorisation;
			}
			set
			{
				if ((this._Authorisation != value))
				{
					this.OnAuthorisationChanging(value);
					this.SendPropertyChanging();
					this._Authorisation = value;
					this.SendPropertyChanged("Authorisation");
					this.OnAuthorisationChanged();
				}
			}
		}
		
		[Column(Storage="_Auditor", DbType="VarChar(25)")]
		public string Auditor
		{
			get
			{
				return this._Auditor;
			}
			set
			{
				if ((this._Auditor != value))
				{
					this.OnAuditorChanging(value);
					this.SendPropertyChanging();
					this._Auditor = value;
					this.SendPropertyChanged("Auditor");
					this.OnAuditorChanged();
				}
			}
		}
		
		[Column(Storage="_Picker", DbType="VarChar(25)")]
		public string Picker
		{
			get
			{
				return this._Picker;
			}
			set
			{
				if ((this._Picker != value))
				{
					this.OnPickerChanging(value);
					this.SendPropertyChanging();
					this._Picker = value;
					this.SendPropertyChanged("Picker");
					this.OnPickerChanged();
				}
			}
		}
		
		[Column(Storage="_TimeAudited", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeAudited
		{
			get
			{
				return this._TimeAudited;
			}
			set
			{
				if ((this._TimeAudited != value))
				{
					this.OnTimeAuditedChanging(value);
					this.SendPropertyChanging();
					this._TimeAudited = value;
					this.SendPropertyChanged("TimeAudited");
					this.OnTimeAuditedChanged();
				}
			}
		}
		
		[Column(Storage="_OnHold", DbType="Bit NOT NULL")]
		public bool OnHold
		{
			get
			{
				return this._OnHold;
			}
			set
			{
				if ((this._OnHold != value))
				{
					this.OnOnHoldChanging(value);
					this.SendPropertyChanging();
					this._OnHold = value;
					this.SendPropertyChanged("OnHold");
					this.OnOnHoldChanged();
				}
			}
		}
		
		[Column(Storage="_ReasonHeld", DbType="VarChar(80)")]
		public string ReasonHeld
		{
			get
			{
				return this._ReasonHeld;
			}
			set
			{
				if ((this._ReasonHeld != value))
				{
					this.OnReasonHeldChanging(value);
					this.SendPropertyChanging();
					this._ReasonHeld = value;
					this.SendPropertyChanged("ReasonHeld");
					this.OnReasonHeldChanged();
				}
			}
		}
		
		[Column(Storage="_HighPriority", DbType="Bit NOT NULL")]
		public bool HighPriority
		{
			get
			{
				return this._HighPriority;
			}
			set
			{
				if ((this._HighPriority != value))
				{
					this.OnHighPriorityChanging(value);
					this.SendPropertyChanging();
					this._HighPriority = value;
					this.SendPropertyChanged("HighPriority");
					this.OnHighPriorityChanged();
				}
			}
		}
		
		[Column(Storage="_Discount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[Column(Storage="_DelCompany", DbType="VarChar(50)")]
		public string DelCompany
		{
			get
			{
				return this._DelCompany;
			}
			set
			{
				if ((this._DelCompany != value))
				{
					this.OnDelCompanyChanging(value);
					this.SendPropertyChanging();
					this._DelCompany = value;
					this.SendPropertyChanged("DelCompany");
					this.OnDelCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_DelAddr1", DbType="VarChar(50)")]
		public string DelAddr1
		{
			get
			{
				return this._DelAddr1;
			}
			set
			{
				if ((this._DelAddr1 != value))
				{
					this.OnDelAddr1Changing(value);
					this.SendPropertyChanging();
					this._DelAddr1 = value;
					this.SendPropertyChanged("DelAddr1");
					this.OnDelAddr1Changed();
				}
			}
		}
		
		[Column(Storage="_DelAddr2", DbType="VarChar(50)")]
		public string DelAddr2
		{
			get
			{
				return this._DelAddr2;
			}
			set
			{
				if ((this._DelAddr2 != value))
				{
					this.OnDelAddr2Changing(value);
					this.SendPropertyChanging();
					this._DelAddr2 = value;
					this.SendPropertyChanged("DelAddr2");
					this.OnDelAddr2Changed();
				}
			}
		}
		
		[Column(Storage="_DelAddr3", DbType="VarChar(50)")]
		public string DelAddr3
		{
			get
			{
				return this._DelAddr3;
			}
			set
			{
				if ((this._DelAddr3 != value))
				{
					this.OnDelAddr3Changing(value);
					this.SendPropertyChanging();
					this._DelAddr3 = value;
					this.SendPropertyChanged("DelAddr3");
					this.OnDelAddr3Changed();
				}
			}
		}
		
		[Column(Storage="_CrNote", DbType="Bit NOT NULL")]
		public bool CrNote
		{
			get
			{
				return this._CrNote;
			}
			set
			{
				if ((this._CrNote != value))
				{
					this.OnCrNoteChanging(value);
					this.SendPropertyChanging();
					this._CrNote = value;
					this.SendPropertyChanged("CrNote");
					this.OnCrNoteChanged();
				}
			}
		}
		
		[Column(Storage="_FO", DbType="Bit NOT NULL")]
		public bool FO
		{
			get
			{
				return this._FO;
			}
			set
			{
				if ((this._FO != value))
				{
					this.OnFOChanging(value);
					this.SendPropertyChanging();
					this._FO = value;
					this.SendPropertyChanged("FO");
					this.OnFOChanged();
				}
			}
		}
		
		[Column(Storage="_PrintLoc", DbType="VarChar(1)")]
		public string PrintLoc
		{
			get
			{
				return this._PrintLoc;
			}
			set
			{
				if ((this._PrintLoc != value))
				{
					this.OnPrintLocChanging(value);
					this.SendPropertyChanging();
					this._PrintLoc = value;
					this.SendPropertyChanged("PrintLoc");
					this.OnPrintLocChanged();
				}
			}
		}
		
		[Column(Storage="_SourceLoc", DbType="VarChar(1)")]
		public string SourceLoc
		{
			get
			{
				return this._SourceLoc;
			}
			set
			{
				if ((this._SourceLoc != value))
				{
					this.OnSourceLocChanging(value);
					this.SendPropertyChanging();
					this._SourceLoc = value;
					this.SendPropertyChanged("SourceLoc");
					this.OnSourceLocChanged();
				}
			}
		}
		
		[Column(Storage="_TerminalLoc", DbType="TinyInt")]
		public System.Nullable<byte> TerminalLoc
		{
			get
			{
				return this._TerminalLoc;
			}
			set
			{
				if ((this._TerminalLoc != value))
				{
					this.OnTerminalLocChanging(value);
					this.SendPropertyChanging();
					this._TerminalLoc = value;
					this.SendPropertyChanged("TerminalLoc");
					this.OnTerminalLocChanged();
				}
			}
		}
		
		[Column(Storage="_AgeCode", DbType="TinyInt NOT NULL")]
		public byte AgeCode
		{
			get
			{
				return this._AgeCode;
			}
			set
			{
				if ((this._AgeCode != value))
				{
					this.OnAgeCodeChanging(value);
					this.SendPropertyChanging();
					this._AgeCode = value;
					this.SendPropertyChanged("AgeCode");
					this.OnAgeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_LineCount", DbType="Int NOT NULL")]
		public int LineCount
		{
			get
			{
				return this._LineCount;
			}
			set
			{
				if ((this._LineCount != value))
				{
					this.OnLineCountChanging(value);
					this.SendPropertyChanging();
					this._LineCount = value;
					this.SendPropertyChanged("LineCount");
					this.OnLineCountChanged();
				}
			}
		}
		
		[Column(Storage="_AddTo", DbType="Bit NOT NULL")]
		public bool AddTo
		{
			get
			{
				return this._AddTo;
			}
			set
			{
				if ((this._AddTo != value))
				{
					this.OnAddToChanging(value);
					this.SendPropertyChanging();
					this._AddTo = value;
					this.SendPropertyChanged("AddTo");
					this.OnAddToChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_QuoteNum", DbType="Int")]
		public System.Nullable<int> QuoteNum
		{
			get
			{
				return this._QuoteNum;
			}
			set
			{
				if ((this._QuoteNum != value))
				{
					this.OnQuoteNumChanging(value);
					this.SendPropertyChanging();
					this._QuoteNum = value;
					this.SendPropertyChanged("QuoteNum");
					this.OnQuoteNumChanged();
				}
			}
		}
		
		[Column(Storage="_Summary", DbType="Bit")]
		public System.Nullable<bool> Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[Column(Storage="_FastPay", DbType="Bit")]
		public System.Nullable<bool> FastPay
		{
			get
			{
				return this._FastPay;
			}
			set
			{
				if ((this._FastPay != value))
				{
					this.OnFastPayChanging(value);
					this.SendPropertyChanging();
					this._FastPay = value;
					this.SendPropertyChanged("FastPay");
					this.OnFastPayChanged();
				}
			}
		}
		
		[Column(Storage="_PriceLevel", DbType="TinyInt")]
		public System.Nullable<byte> PriceLevel
		{
			get
			{
				return this._PriceLevel;
			}
			set
			{
				if ((this._PriceLevel != value))
				{
					this.OnPriceLevelChanging(value);
					this.SendPropertyChanging();
					this._PriceLevel = value;
					this.SendPropertyChanged("PriceLevel");
					this.OnPriceLevelChanged();
				}
			}
		}
		
		[Column(Storage="_PreGST", DbType="Bit NOT NULL")]
		public bool PreGST
		{
			get
			{
				return this._PreGST;
			}
			set
			{
				if ((this._PreGST != value))
				{
					this.OnPreGSTChanging(value);
					this.SendPropertyChanging();
					this._PreGST = value;
					this.SendPropertyChanged("PreGST");
					this.OnPreGSTChanged();
				}
			}
		}
		
		[Column(Storage="_RaJob", DbType="Bit NOT NULL")]
		public bool RaJob
		{
			get
			{
				return this._RaJob;
			}
			set
			{
				if ((this._RaJob != value))
				{
					this.OnRaJobChanging(value);
					this.SendPropertyChanging();
					this._RaJob = value;
					this.SendPropertyChanged("RaJob");
					this.OnRaJobChanged();
				}
			}
		}
		
		[Column(Storage="_Returns", DbType="Bit")]
		public System.Nullable<bool> Returns
		{
			get
			{
				return this._Returns;
			}
			set
			{
				if ((this._Returns != value))
				{
					this.OnReturnsChanging(value);
					this.SendPropertyChanging();
					this._Returns = value;
					this.SendPropertyChanged("Returns");
					this.OnReturnsChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceBook", DbType="Bit NOT NULL")]
		public bool ServiceBook
		{
			get
			{
				return this._ServiceBook;
			}
			set
			{
				if ((this._ServiceBook != value))
				{
					this.OnServiceBookChanging(value);
					this.SendPropertyChanging();
					this._ServiceBook = value;
					this.SendPropertyChanged("ServiceBook");
					this.OnServiceBookChanged();
				}
			}
		}
		
		[Column(Storage="_BookDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BookDate
		{
			get
			{
				return this._BookDate;
			}
			set
			{
				if ((this._BookDate != value))
				{
					this.OnBookDateChanging(value);
					this.SendPropertyChanging();
					this._BookDate = value;
					this.SendPropertyChanged("BookDate");
					this.OnBookDateChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="TinyInt NOT NULL")]
		public byte Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_ProForma", DbType="Bit NOT NULL")]
		public bool ProForma
		{
			get
			{
				return this._ProForma;
			}
			set
			{
				if ((this._ProForma != value))
				{
					this.OnProFormaChanging(value);
					this.SendPropertyChanging();
					this._ProForma = value;
					this.SendPropertyChanged("ProForma");
					this.OnProFormaChanged();
				}
			}
		}
		
		[Column(Storage="_OverrideHold", DbType="Bit NOT NULL")]
		public bool OverrideHold
		{
			get
			{
				return this._OverrideHold;
			}
			set
			{
				if ((this._OverrideHold != value))
				{
					this.OnOverrideHoldChanging(value);
					this.SendPropertyChanging();
					this._OverrideHold = value;
					this.SendPropertyChanged("OverrideHold");
					this.OnOverrideHoldChanged();
				}
			}
		}
		
		[Column(Storage="_UserOverride", DbType="VarChar(25)")]
		public string UserOverride
		{
			get
			{
				return this._UserOverride;
			}
			set
			{
				if ((this._UserOverride != value))
				{
					this.OnUserOverrideChanging(value);
					this.SendPropertyChanging();
					this._UserOverride = value;
					this.SendPropertyChanged("UserOverride");
					this.OnUserOverrideChanged();
				}
			}
		}
		
		[Column(Storage="_FwdDate", DbType="Bit NOT NULL")]
		public bool FwdDate
		{
			get
			{
				return this._FwdDate;
			}
			set
			{
				if ((this._FwdDate != value))
				{
					this.OnFwdDateChanging(value);
					this.SendPropertyChanging();
					this._FwdDate = value;
					this.SendPropertyChanged("FwdDate");
					this.OnFwdDateChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_GLType", DbType="TinyInt NOT NULL")]
		public byte GLType
		{
			get
			{
				return this._GLType;
			}
			set
			{
				if ((this._GLType != value))
				{
					this.OnGLTypeChanging(value);
					this.SendPropertyChanging();
					this._GLType = value;
					this.SendPropertyChanged("GLType");
					this.OnGLTypeChanged();
				}
			}
		}
		
		[Column(Storage="_InvNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string InvNotes
		{
			get
			{
				return this._InvNotes;
			}
			set
			{
				if ((this._InvNotes != value))
				{
					this.OnInvNotesChanging(value);
					this.SendPropertyChanging();
					this._InvNotes = value;
					this.SendPropertyChanged("InvNotes");
					this.OnInvNotesChanged();
				}
			}
		}
		
		[Column(Storage="_Industr", DbType="Bit NOT NULL")]
		public bool Industr
		{
			get
			{
				return this._Industr;
			}
			set
			{
				if ((this._Industr != value))
				{
					this.OnIndustrChanging(value);
					this.SendPropertyChanging();
					this._Industr = value;
					this.SendPropertyChanged("Industr");
					this.OnIndustrChanged();
				}
			}
		}
		
		[Column(Storage="_InvMsg", DbType="VarChar(120)")]
		public string InvMsg
		{
			get
			{
				return this._InvMsg;
			}
			set
			{
				if ((this._InvMsg != value))
				{
					this.OnInvMsgChanging(value);
					this.SendPropertyChanging();
					this._InvMsg = value;
					this.SendPropertyChanged("InvMsg");
					this.OnInvMsgChanged();
				}
			}
		}
		
		[Column(Storage="_ExchangeRate", DbType="Decimal(9,4) NOT NULL")]
		public decimal ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[Column(Storage="_CurrencyType", DbType="VarChar(5)")]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this.OnCurrencyTypeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyType = value;
					this.SendPropertyChanged("CurrencyType");
					this.OnCurrencyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_Uncosted", DbType="TinyInt NOT NULL")]
		public byte Uncosted
		{
			get
			{
				return this._Uncosted;
			}
			set
			{
				if ((this._Uncosted != value))
				{
					this.OnUncostedChanging(value);
					this.SendPropertyChanging();
					this._Uncosted = value;
					this.SendPropertyChanged("Uncosted");
					this.OnUncostedChanged();
				}
			}
		}
		
		[Column(Storage="_OldOrdNum", DbType="Int")]
		public System.Nullable<int> OldOrdNum
		{
			get
			{
				return this._OldOrdNum;
			}
			set
			{
				if ((this._OldOrdNum != value))
				{
					this.OnOldOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OldOrdNum = value;
					this.SendPropertyChanged("OldOrdNum");
					this.OnOldOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_SalesAccGL", DbType="VarChar(16)")]
		public string SalesAccGL
		{
			get
			{
				return this._SalesAccGL;
			}
			set
			{
				if ((this._SalesAccGL != value))
				{
					this.OnSalesAccGLChanging(value);
					this.SendPropertyChanging();
					this._SalesAccGL = value;
					this.SendPropertyChanged("SalesAccGL");
					this.OnSalesAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_SalesCtrlAccGL", DbType="VarChar(16)")]
		public string SalesCtrlAccGL
		{
			get
			{
				return this._SalesCtrlAccGL;
			}
			set
			{
				if ((this._SalesCtrlAccGL != value))
				{
					this.OnSalesCtrlAccGLChanging(value);
					this.SendPropertyChanging();
					this._SalesCtrlAccGL = value;
					this.SendPropertyChanged("SalesCtrlAccGL");
					this.OnSalesCtrlAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_Receipt", DbType="Int")]
		public System.Nullable<int> Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this.OnReceiptChanging(value);
					this.SendPropertyChanging();
					this._Receipt = value;
					this.SendPropertyChanged("Receipt");
					this.OnReceiptChanged();
				}
			}
		}
		
		[Column(Storage="_Branch", DbType="SmallInt NOT NULL")]
		public short Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[Column(Storage="_INT_InvBatch", DbType="Int")]
		public System.Nullable<int> INT_InvBatch
		{
			get
			{
				return this._INT_InvBatch;
			}
			set
			{
				if ((this._INT_InvBatch != value))
				{
					this.OnINT_InvBatchChanging(value);
					this.SendPropertyChanging();
					this._INT_InvBatch = value;
					this.SendPropertyChanged("INT_InvBatch");
					this.OnINT_InvBatchChanged();
				}
			}
		}
		
		[Column(Storage="_INT_InvToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> INT_InvToDate
		{
			get
			{
				return this._INT_InvToDate;
			}
			set
			{
				if ((this._INT_InvToDate != value))
				{
					this.OnINT_InvToDateChanging(value);
					this.SendPropertyChanging();
					this._INT_InvToDate = value;
					this.SendPropertyChanged("INT_InvToDate");
					this.OnINT_InvToDateChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_Invoice", DbType="Bit")]
		public System.Nullable<bool> INT_TM_Invoice
		{
			get
			{
				return this._INT_TM_Invoice;
			}
			set
			{
				if ((this._INT_TM_Invoice != value))
				{
					this.OnINT_TM_InvoiceChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_Invoice = value;
					this.SendPropertyChanged("INT_TM_Invoice");
					this.OnINT_TM_InvoiceChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_CE_Commission", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> INT_TM_CE_Commission
		{
			get
			{
				return this._INT_TM_CE_Commission;
			}
			set
			{
				if ((this._INT_TM_CE_Commission != value))
				{
					this.OnINT_TM_CE_CommissionChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_CE_Commission = value;
					this.SendPropertyChanged("INT_TM_CE_Commission");
					this.OnINT_TM_CE_CommissionChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_INT_Commission", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> INT_TM_INT_Commission
		{
			get
			{
				return this._INT_TM_INT_Commission;
			}
			set
			{
				if ((this._INT_TM_INT_Commission != value))
				{
					this.OnINT_TM_INT_CommissionChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_INT_Commission = value;
					this.SendPropertyChanged("INT_TM_INT_Commission");
					this.OnINT_TM_INT_CommissionChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_Invoice_CustName", DbType="VarChar(128)")]
		public string INT_TM_Invoice_CustName
		{
			get
			{
				return this._INT_TM_Invoice_CustName;
			}
			set
			{
				if ((this._INT_TM_Invoice_CustName != value))
				{
					this.OnINT_TM_Invoice_CustNameChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_Invoice_CustName = value;
					this.SendPropertyChanged("INT_TM_Invoice_CustName");
					this.OnINT_TM_Invoice_CustNameChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_Street1", DbType="VarChar(128)")]
		public string INT_TM_Street1
		{
			get
			{
				return this._INT_TM_Street1;
			}
			set
			{
				if ((this._INT_TM_Street1 != value))
				{
					this.OnINT_TM_Street1Changing(value);
					this.SendPropertyChanging();
					this._INT_TM_Street1 = value;
					this.SendPropertyChanged("INT_TM_Street1");
					this.OnINT_TM_Street1Changed();
				}
			}
		}
		
		[Column(Storage="_INT_TM_Street2", DbType="VarChar(128)")]
		public string INT_TM_Street2
		{
			get
			{
				return this._INT_TM_Street2;
			}
			set
			{
				if ((this._INT_TM_Street2 != value))
				{
					this.OnINT_TM_Street2Changing(value);
					this.SendPropertyChanging();
					this._INT_TM_Street2 = value;
					this.SendPropertyChanged("INT_TM_Street2");
					this.OnINT_TM_Street2Changed();
				}
			}
		}
		
		[Column(Storage="_INT_TM_Suburb", DbType="VarChar(128)")]
		public string INT_TM_Suburb
		{
			get
			{
				return this._INT_TM_Suburb;
			}
			set
			{
				if ((this._INT_TM_Suburb != value))
				{
					this.OnINT_TM_SuburbChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_Suburb = value;
					this.SendPropertyChanged("INT_TM_Suburb");
					this.OnINT_TM_SuburbChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_State", DbType="VarChar(5)")]
		public string INT_TM_State
		{
			get
			{
				return this._INT_TM_State;
			}
			set
			{
				if ((this._INT_TM_State != value))
				{
					this.OnINT_TM_StateChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_State = value;
					this.SendPropertyChanged("INT_TM_State");
					this.OnINT_TM_StateChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_PostCode", DbType="VarChar(5)")]
		public string INT_TM_PostCode
		{
			get
			{
				return this._INT_TM_PostCode;
			}
			set
			{
				if ((this._INT_TM_PostCode != value))
				{
					this.OnINT_TM_PostCodeChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_PostCode = value;
					this.SendPropertyChanged("INT_TM_PostCode");
					this.OnINT_TM_PostCodeChanged();
				}
			}
		}
		
		[Column(Storage="_INT_TM_AcctManager", DbType="VarChar(25)")]
		public string INT_TM_AcctManager
		{
			get
			{
				return this._INT_TM_AcctManager;
			}
			set
			{
				if ((this._INT_TM_AcctManager != value))
				{
					this.OnINT_TM_AcctManagerChanging(value);
					this.SendPropertyChanging();
					this._INT_TM_AcctManager = value;
					this.SendPropertyChanged("INT_TM_AcctManager");
					this.OnINT_TM_AcctManagerChanged();
				}
			}
		}
		
		[Column(Storage="_INT_CreditInvnum", DbType="Int")]
		public System.Nullable<int> INT_CreditInvnum
		{
			get
			{
				return this._INT_CreditInvnum;
			}
			set
			{
				if ((this._INT_CreditInvnum != value))
				{
					this.OnINT_CreditInvnumChanging(value);
					this.SendPropertyChanging();
					this._INT_CreditInvnum = value;
					this.SendPropertyChanged("INT_CreditInvnum");
					this.OnINT_CreditInvnumChanged();
				}
			}
		}
		
		[Column(Storage="_INT_User", DbType="VarChar(50)")]
		public string INT_User
		{
			get
			{
				return this._INT_User;
			}
			set
			{
				if ((this._INT_User != value))
				{
					this.OnINT_UserChanging(value);
					this.SendPropertyChanging();
					this._INT_User = value;
					this.SendPropertyChanged("INT_User");
					this.OnINT_UserChanged();
				}
			}
		}
		
		[Column(Storage="_SeparateBatchPrint", DbType="Bit NOT NULL")]
		public bool SeparateBatchPrint
		{
			get
			{
				return this._SeparateBatchPrint;
			}
			set
			{
				if ((this._SeparateBatchPrint != value))
				{
					this.OnSeparateBatchPrintChanging(value);
					this.SendPropertyChanging();
					this._SeparateBatchPrint = value;
					this.SendPropertyChanged("SeparateBatchPrint");
					this.OnSeparateBatchPrintChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_INV_LINE_TEXT_DRAFT_ORDNUM", Storage="_INT_INV_LINE_TEXT_DRAFT", ThisKey="OrdNum", OtherKey="OrdNum", DeleteRule="NO ACTION")]
		public EntitySet<INT_INV_LINE_TEXT_DRAFT> INT_INV_LINE_TEXT_DRAFT
		{
			get
			{
				return this._INT_INV_LINE_TEXT_DRAFT;
			}
			set
			{
				this._INT_INV_LINE_TEXT_DRAFT.Assign(value);
			}
		}
		
		[Association(Name="FK_SALEITEM_DRAFT_SALESORD_DRAFT", Storage="_SALEITEM_DRAFT", ThisKey="OrdNum", OtherKey="OrdNum", DeleteRule="NO ACTION")]
		public EntitySet<SALEITEM_DRAFT> SALEITEM_DRAFT
		{
			get
			{
				return this._SALEITEM_DRAFT;
			}
			set
			{
				this._SALEITEM_DRAFT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INT_INV_LINE_TEXT_DRAFT(INT_INV_LINE_TEXT_DRAFT entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD_DRAFT = this;
		}
		
		private void detach_INT_INV_LINE_TEXT_DRAFT(INT_INV_LINE_TEXT_DRAFT entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD_DRAFT = null;
		}
		
		private void attach_SALEITEM_DRAFT(SALEITEM_DRAFT entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD_DRAFT = this;
		}
		
		private void detach_SALEITEM_DRAFT(SALEITEM_DRAFT entity)
		{
			this.SendPropertyChanging();
			entity.SALESORD_DRAFT = null;
		}
	}
	
	[Table(Name="dbo.SALESORD_ERROR_LOG")]
	public partial class SALESORD_ERROR_LOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private System.Nullable<System.DateTime> _LogDate;
		
		private System.Nullable<int> _BatchID;
		
		private string _StoredProcedureName;
		
		private System.Nullable<int> _ErrorNumber;
		
		private string _ErrorDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnLogDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogDateChanged();
    partial void OnBatchIDChanging(System.Nullable<int> value);
    partial void OnBatchIDChanged();
    partial void OnStoredProcedureNameChanging(string value);
    partial void OnStoredProcedureNameChanged();
    partial void OnErrorNumberChanging(System.Nullable<int> value);
    partial void OnErrorNumberChanged();
    partial void OnErrorDescriptionChanging(string value);
    partial void OnErrorDescriptionChanged();
    #endregion
		
		public SALESORD_ERROR_LOG()
		{
			OnCreated();
		}
		
		[Column(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_LogDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[Column(Storage="_BatchID", DbType="Int")]
		public System.Nullable<int> BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_StoredProcedureName", DbType="VarChar(250)")]
		public string StoredProcedureName
		{
			get
			{
				return this._StoredProcedureName;
			}
			set
			{
				if ((this._StoredProcedureName != value))
				{
					this.OnStoredProcedureNameChanging(value);
					this.SendPropertyChanging();
					this._StoredProcedureName = value;
					this.SendPropertyChanged("StoredProcedureName");
					this.OnStoredProcedureNameChanged();
				}
			}
		}
		
		[Column(Storage="_ErrorNumber", DbType="Int")]
		public System.Nullable<int> ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this.OnErrorNumberChanging(value);
					this.SendPropertyChanging();
					this._ErrorNumber = value;
					this.SendPropertyChanged("ErrorNumber");
					this.OnErrorNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ErrorDescription", DbType="NVarChar(4000)")]
		public string ErrorDescription
		{
			get
			{
				return this._ErrorDescription;
			}
			set
			{
				if ((this._ErrorDescription != value))
				{
					this.OnErrorDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ErrorDescription = value;
					this.SendPropertyChanged("ErrorDescription");
					this.OnErrorDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SALESORD_EXTERNAL_LOG")]
	public partial class SALESORD_EXTERNAL_LOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private System.Nullable<System.DateTime> _LogDate;
		
		private System.Nullable<int> _BatchID;
		
		private string _StoredProcedureName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnLogDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogDateChanged();
    partial void OnBatchIDChanging(System.Nullable<int> value);
    partial void OnBatchIDChanged();
    partial void OnStoredProcedureNameChanging(string value);
    partial void OnStoredProcedureNameChanged();
    #endregion
		
		public SALESORD_EXTERNAL_LOG()
		{
			OnCreated();
		}
		
		[Column(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_LogDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[Column(Storage="_BatchID", DbType="Int")]
		public System.Nullable<int> BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_StoredProcedureName", DbType="VarChar(250)")]
		public string StoredProcedureName
		{
			get
			{
				return this._StoredProcedureName;
			}
			set
			{
				if ((this._StoredProcedureName != value))
				{
					this.OnStoredProcedureNameChanging(value);
					this.SendPropertyChanging();
					this._StoredProcedureName = value;
					this.SendPropertyChanged("StoredProcedureName");
					this.OnStoredProcedureNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SALESORD_INTERNAL_LOG")]
	public partial class SALESORD_INTERNAL_LOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private System.Nullable<System.DateTime> _LogDate;
		
		private System.Nullable<int> _BatchID;
		
		private string _StoredProcedureName;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnLogDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogDateChanged();
    partial void OnBatchIDChanging(System.Nullable<int> value);
    partial void OnBatchIDChanged();
    partial void OnStoredProcedureNameChanging(string value);
    partial void OnStoredProcedureNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public SALESORD_INTERNAL_LOG()
		{
			OnCreated();
		}
		
		[Column(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_LogDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[Column(Storage="_BatchID", DbType="Int")]
		public System.Nullable<int> BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_StoredProcedureName", DbType="VarChar(250)")]
		public string StoredProcedureName
		{
			get
			{
				return this._StoredProcedureName;
			}
			set
			{
				if ((this._StoredProcedureName != value))
				{
					this.OnStoredProcedureNameChanging(value);
					this.SendPropertyChanging();
					this._StoredProcedureName = value;
					this.SendPropertyChanged("StoredProcedureName");
					this.OnStoredProcedureNameChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="VarChar(250)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SECURITY_APPROVALS")]
	public partial class SECURITY_APPROVALS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Approval;
		
		private EntitySet<COMPANY_APPROVALS> _COMPANY_APPROVALS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApprovalChanging(string value);
    partial void OnApprovalChanged();
    #endregion
		
		public SECURITY_APPROVALS()
		{
			this._COMPANY_APPROVALS = new EntitySet<COMPANY_APPROVALS>(new Action<COMPANY_APPROVALS>(this.attach_COMPANY_APPROVALS), new Action<COMPANY_APPROVALS>(this.detach_COMPANY_APPROVALS));
			OnCreated();
		}
		
		[Column(Storage="_Approval", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Approval
		{
			get
			{
				return this._Approval;
			}
			set
			{
				if ((this._Approval != value))
				{
					this.OnApprovalChanging(value);
					this.SendPropertyChanging();
					this._Approval = value;
					this.SendPropertyChanged("Approval");
					this.OnApprovalChanged();
				}
			}
		}
		
		[Association(Name="FK_COMPANY_APPROVALS_APPROVAL", Storage="_COMPANY_APPROVALS", ThisKey="Approval", OtherKey="Approval", DeleteRule="NO ACTION")]
		public EntitySet<COMPANY_APPROVALS> COMPANY_APPROVALS
		{
			get
			{
				return this._COMPANY_APPROVALS;
			}
			set
			{
				this._COMPANY_APPROVALS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_COMPANY_APPROVALS(COMPANY_APPROVALS entity)
		{
			this.SendPropertyChanging();
			entity.SECURITY_APPROVALS = this;
		}
		
		private void detach_COMPANY_APPROVALS(COMPANY_APPROVALS entity)
		{
			this.SendPropertyChanging();
			entity.SECURITY_APPROVALS = null;
		}
	}
	
	[Table(Name="dbo.SECURITY_USERS")]
	public partial class SECURITY_USERS
	{
		
		private string _USERNAME;
		
		private System.Nullable<int> _SPID;
		
		public SECURITY_USERS()
		{
		}
		
		[Column(Storage="_USERNAME", DbType="VarChar(25)")]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this._USERNAME = value;
				}
			}
		}
		
		[Column(Storage="_SPID", DbType="Int")]
		public System.Nullable<int> SPID
		{
			get
			{
				return this._SPID;
			}
			set
			{
				if ((this._SPID != value))
				{
					this._SPID = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SERIALNUMBERS")]
	public partial class SERIALNUMBERS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NKey;
		
		private double _OrdNum;
		
		private string _SerialNum;
		
		private string _ProdCode;
		
		private string _Description;
		
		private System.Nullable<bool> _Print;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNKeyChanging(int value);
    partial void OnNKeyChanged();
    partial void OnOrdNumChanging(double value);
    partial void OnOrdNumChanged();
    partial void OnSerialNumChanging(string value);
    partial void OnSerialNumChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPrintChanging(System.Nullable<bool> value);
    partial void OnPrintChanged();
    #endregion
		
		public SERIALNUMBERS()
		{
			OnCreated();
		}
		
		[Column(Storage="_NKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NKey
		{
			get
			{
				return this._NKey;
			}
			set
			{
				if ((this._NKey != value))
				{
					this.OnNKeyChanging(value);
					this.SendPropertyChanging();
					this._NKey = value;
					this.SendPropertyChanged("NKey");
					this.OnNKeyChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Float NOT NULL", IsPrimaryKey=true)]
		public double OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_SerialNum", DbType="VarChar(50)")]
		public string SerialNum
		{
			get
			{
				return this._SerialNum;
			}
			set
			{
				if ((this._SerialNum != value))
				{
					this.OnSerialNumChanging(value);
					this.SendPropertyChanging();
					this._SerialNum = value;
					this.SendPropertyChanged("SerialNum");
					this.OnSerialNumChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Print", DbType="Bit")]
		public System.Nullable<bool> Print
		{
			get
			{
				return this._Print;
			}
			set
			{
				if ((this._Print != value))
				{
					this.OnPrintChanging(value);
					this.SendPropertyChanging();
					this._Print = value;
					this.SendPropertyChanged("Print");
					this.OnPrintChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SETUP")]
	public partial class SETUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _CompanyNum;
		
		private string _Company;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Address4;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Website;
		
		private string _TaxNum;
		
		private string _ABN;
		
		private string _SalesAccountGL;
		
		private string _SalesExportGL1;
		
		private string _SalesExportGL2;
		
		private string _DiscountGL;
		
		private string _GST_StkInputsGL;
		
		private string _GST_SndryInputsGL;
		
		private string _GST_OutputsGL;
		
		private string _GST_Liability;
		
		private string _BankAccountGL;
		
		private string _TradeDebtorsGL;
		
		private string _TradeDebtorsOSGL;
		
		private string _TradeCreditorsGL;
		
		private string _TradeCreditorsOsGL;
		
		private string _OtherCreditorsGL;
		
		private string _FirstBSAccGL;
		
		private string _LastBSAccGL;
		
		private string _USDBankAccGL;
		
		private string _RepPrep;
		
		private string _CompanyID;
		
		private bool _DefCo;
		
		private System.Nullable<decimal> _StatementBal;
		
		private System.Nullable<decimal> _Balance;
		
		private System.Nullable<byte> _CompanyGroup;
		
		private System.Nullable<byte> _FiscalStartMonth;
		
		private string _CostofSalesGL;
		
		private string _StockOnHandGL;
		
		private string _PurchClearingGL;
		
		private int _GL_Batch;
		
		private int _Last_Debtors_Audit;
		
		private int _Prev_Debtors_Audit;
		
		private string _State;
		
		private bool _SnapShotReport;
		
		private string _PDFInvoicePath;
		
		private string _RemittanceEmail;
		
		private string _POInvToAddressINT;
		
		private string _POInvToAddressBank;
		
		private int _TaxCountry;
		
		private string _NationalCreditManager;
		
		private string _CreditPhone;
		
		private string _GSTRegistrationNum;
		
		private string _ContractForecastReportURL;
		
		private string _ContractForecastArchivedReportURL;
		
		private string _AccountsPayableEmail;
		
		private EntitySet<EMPLOYEE_COMPANY> _EMPLOYEE_COMPANY;
		
		private EntitySet<COMPANY_APPROVALS> _COMPANY_APPROVALS;
		
		private EntitySet<INT_INV_BATCH_HEADER> _INT_INV_BATCH_HEADER;
		
		private EntityRef<INT_COMPANY_GROUP> _INT_COMPANY_GROUP;
		
		private EntityRef<COUNTRIES> _COUNTRIES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnAddress4Changing(string value);
    partial void OnAddress4Changed();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnTaxNumChanging(string value);
    partial void OnTaxNumChanged();
    partial void OnABNChanging(string value);
    partial void OnABNChanged();
    partial void OnSalesAccountGLChanging(string value);
    partial void OnSalesAccountGLChanged();
    partial void OnSalesExportGL1Changing(string value);
    partial void OnSalesExportGL1Changed();
    partial void OnSalesExportGL2Changing(string value);
    partial void OnSalesExportGL2Changed();
    partial void OnDiscountGLChanging(string value);
    partial void OnDiscountGLChanged();
    partial void OnGST_StkInputsGLChanging(string value);
    partial void OnGST_StkInputsGLChanged();
    partial void OnGST_SndryInputsGLChanging(string value);
    partial void OnGST_SndryInputsGLChanged();
    partial void OnGST_OutputsGLChanging(string value);
    partial void OnGST_OutputsGLChanged();
    partial void OnGST_LiabilityChanging(string value);
    partial void OnGST_LiabilityChanged();
    partial void OnBankAccountGLChanging(string value);
    partial void OnBankAccountGLChanged();
    partial void OnTradeDebtorsGLChanging(string value);
    partial void OnTradeDebtorsGLChanged();
    partial void OnTradeDebtorsOSGLChanging(string value);
    partial void OnTradeDebtorsOSGLChanged();
    partial void OnTradeCreditorsGLChanging(string value);
    partial void OnTradeCreditorsGLChanged();
    partial void OnTradeCreditorsOsGLChanging(string value);
    partial void OnTradeCreditorsOsGLChanged();
    partial void OnOtherCreditorsGLChanging(string value);
    partial void OnOtherCreditorsGLChanged();
    partial void OnFirstBSAccGLChanging(string value);
    partial void OnFirstBSAccGLChanged();
    partial void OnLastBSAccGLChanging(string value);
    partial void OnLastBSAccGLChanged();
    partial void OnUSDBankAccGLChanging(string value);
    partial void OnUSDBankAccGLChanged();
    partial void OnRepPrepChanging(string value);
    partial void OnRepPrepChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnDefCoChanging(bool value);
    partial void OnDefCoChanged();
    partial void OnStatementBalChanging(System.Nullable<decimal> value);
    partial void OnStatementBalChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnCompanyGroupChanging(System.Nullable<byte> value);
    partial void OnCompanyGroupChanged();
    partial void OnFiscalStartMonthChanging(System.Nullable<byte> value);
    partial void OnFiscalStartMonthChanged();
    partial void OnCostofSalesGLChanging(string value);
    partial void OnCostofSalesGLChanged();
    partial void OnStockOnHandGLChanging(string value);
    partial void OnStockOnHandGLChanged();
    partial void OnPurchClearingGLChanging(string value);
    partial void OnPurchClearingGLChanged();
    partial void OnGL_BatchChanging(int value);
    partial void OnGL_BatchChanged();
    partial void OnLast_Debtors_AuditChanging(int value);
    partial void OnLast_Debtors_AuditChanged();
    partial void OnPrev_Debtors_AuditChanging(int value);
    partial void OnPrev_Debtors_AuditChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnSnapShotReportChanging(bool value);
    partial void OnSnapShotReportChanged();
    partial void OnPDFInvoicePathChanging(string value);
    partial void OnPDFInvoicePathChanged();
    partial void OnRemittanceEmailChanging(string value);
    partial void OnRemittanceEmailChanged();
    partial void OnPOInvToAddressINTChanging(string value);
    partial void OnPOInvToAddressINTChanged();
    partial void OnPOInvToAddressBankChanging(string value);
    partial void OnPOInvToAddressBankChanged();
    partial void OnTaxCountryChanging(int value);
    partial void OnTaxCountryChanged();
    partial void OnNationalCreditManagerChanging(string value);
    partial void OnNationalCreditManagerChanged();
    partial void OnCreditPhoneChanging(string value);
    partial void OnCreditPhoneChanged();
    partial void OnGSTRegistrationNumChanging(string value);
    partial void OnGSTRegistrationNumChanged();
    partial void OnContractForecastReportURLChanging(string value);
    partial void OnContractForecastReportURLChanged();
    partial void OnContractForecastArchivedReportURLChanging(string value);
    partial void OnContractForecastArchivedReportURLChanged();
    partial void OnAccountsPayableEmailChanging(string value);
    partial void OnAccountsPayableEmailChanged();
    #endregion
		
		public SETUP()
		{
			this._EMPLOYEE_COMPANY = new EntitySet<EMPLOYEE_COMPANY>(new Action<EMPLOYEE_COMPANY>(this.attach_EMPLOYEE_COMPANY), new Action<EMPLOYEE_COMPANY>(this.detach_EMPLOYEE_COMPANY));
			this._COMPANY_APPROVALS = new EntitySet<COMPANY_APPROVALS>(new Action<COMPANY_APPROVALS>(this.attach_COMPANY_APPROVALS), new Action<COMPANY_APPROVALS>(this.detach_COMPANY_APPROVALS));
			this._INT_INV_BATCH_HEADER = new EntitySet<INT_INV_BATCH_HEADER>(new Action<INT_INV_BATCH_HEADER>(this.attach_INT_INV_BATCH_HEADER), new Action<INT_INV_BATCH_HEADER>(this.detach_INT_INV_BATCH_HEADER));
			this._INT_COMPANY_GROUP = default(EntityRef<INT_COMPANY_GROUP>);
			this._COUNTRIES = default(EntityRef<COUNTRIES>);
			OnCreated();
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(55)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[Column(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[Column(Storage="_Address4", DbType="VarChar(50)")]
		public string Address4
		{
			get
			{
				return this._Address4;
			}
			set
			{
				if ((this._Address4 != value))
				{
					this.OnAddress4Changing(value);
					this.SendPropertyChanging();
					this._Address4 = value;
					this.SendPropertyChanged("Address4");
					this.OnAddress4Changed();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Website", DbType="VarChar(50)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[Column(Storage="_TaxNum", DbType="VarChar(15)")]
		public string TaxNum
		{
			get
			{
				return this._TaxNum;
			}
			set
			{
				if ((this._TaxNum != value))
				{
					this.OnTaxNumChanging(value);
					this.SendPropertyChanging();
					this._TaxNum = value;
					this.SendPropertyChanged("TaxNum");
					this.OnTaxNumChanged();
				}
			}
		}
		
		[Column(Storage="_ABN", DbType="VarChar(15)")]
		public string ABN
		{
			get
			{
				return this._ABN;
			}
			set
			{
				if ((this._ABN != value))
				{
					this.OnABNChanging(value);
					this.SendPropertyChanging();
					this._ABN = value;
					this.SendPropertyChanged("ABN");
					this.OnABNChanged();
				}
			}
		}
		
		[Column(Storage="_SalesAccountGL", DbType="VarChar(16)")]
		public string SalesAccountGL
		{
			get
			{
				return this._SalesAccountGL;
			}
			set
			{
				if ((this._SalesAccountGL != value))
				{
					this.OnSalesAccountGLChanging(value);
					this.SendPropertyChanging();
					this._SalesAccountGL = value;
					this.SendPropertyChanged("SalesAccountGL");
					this.OnSalesAccountGLChanged();
				}
			}
		}
		
		[Column(Storage="_SalesExportGL1", DbType="VarChar(16)")]
		public string SalesExportGL1
		{
			get
			{
				return this._SalesExportGL1;
			}
			set
			{
				if ((this._SalesExportGL1 != value))
				{
					this.OnSalesExportGL1Changing(value);
					this.SendPropertyChanging();
					this._SalesExportGL1 = value;
					this.SendPropertyChanged("SalesExportGL1");
					this.OnSalesExportGL1Changed();
				}
			}
		}
		
		[Column(Storage="_SalesExportGL2", DbType="VarChar(16)")]
		public string SalesExportGL2
		{
			get
			{
				return this._SalesExportGL2;
			}
			set
			{
				if ((this._SalesExportGL2 != value))
				{
					this.OnSalesExportGL2Changing(value);
					this.SendPropertyChanging();
					this._SalesExportGL2 = value;
					this.SendPropertyChanged("SalesExportGL2");
					this.OnSalesExportGL2Changed();
				}
			}
		}
		
		[Column(Storage="_DiscountGL", DbType="VarChar(16)")]
		public string DiscountGL
		{
			get
			{
				return this._DiscountGL;
			}
			set
			{
				if ((this._DiscountGL != value))
				{
					this.OnDiscountGLChanging(value);
					this.SendPropertyChanging();
					this._DiscountGL = value;
					this.SendPropertyChanged("DiscountGL");
					this.OnDiscountGLChanged();
				}
			}
		}
		
		[Column(Storage="_GST_StkInputsGL", DbType="VarChar(16)")]
		public string GST_StkInputsGL
		{
			get
			{
				return this._GST_StkInputsGL;
			}
			set
			{
				if ((this._GST_StkInputsGL != value))
				{
					this.OnGST_StkInputsGLChanging(value);
					this.SendPropertyChanging();
					this._GST_StkInputsGL = value;
					this.SendPropertyChanged("GST_StkInputsGL");
					this.OnGST_StkInputsGLChanged();
				}
			}
		}
		
		[Column(Storage="_GST_SndryInputsGL", DbType="VarChar(16)")]
		public string GST_SndryInputsGL
		{
			get
			{
				return this._GST_SndryInputsGL;
			}
			set
			{
				if ((this._GST_SndryInputsGL != value))
				{
					this.OnGST_SndryInputsGLChanging(value);
					this.SendPropertyChanging();
					this._GST_SndryInputsGL = value;
					this.SendPropertyChanged("GST_SndryInputsGL");
					this.OnGST_SndryInputsGLChanged();
				}
			}
		}
		
		[Column(Storage="_GST_OutputsGL", DbType="VarChar(16)")]
		public string GST_OutputsGL
		{
			get
			{
				return this._GST_OutputsGL;
			}
			set
			{
				if ((this._GST_OutputsGL != value))
				{
					this.OnGST_OutputsGLChanging(value);
					this.SendPropertyChanging();
					this._GST_OutputsGL = value;
					this.SendPropertyChanged("GST_OutputsGL");
					this.OnGST_OutputsGLChanged();
				}
			}
		}
		
		[Column(Storage="_GST_Liability", DbType="VarChar(16)")]
		public string GST_Liability
		{
			get
			{
				return this._GST_Liability;
			}
			set
			{
				if ((this._GST_Liability != value))
				{
					this.OnGST_LiabilityChanging(value);
					this.SendPropertyChanging();
					this._GST_Liability = value;
					this.SendPropertyChanged("GST_Liability");
					this.OnGST_LiabilityChanged();
				}
			}
		}
		
		[Column(Storage="_BankAccountGL", DbType="VarChar(16)")]
		public string BankAccountGL
		{
			get
			{
				return this._BankAccountGL;
			}
			set
			{
				if ((this._BankAccountGL != value))
				{
					this.OnBankAccountGLChanging(value);
					this.SendPropertyChanging();
					this._BankAccountGL = value;
					this.SendPropertyChanged("BankAccountGL");
					this.OnBankAccountGLChanged();
				}
			}
		}
		
		[Column(Storage="_TradeDebtorsGL", DbType="VarChar(16)")]
		public string TradeDebtorsGL
		{
			get
			{
				return this._TradeDebtorsGL;
			}
			set
			{
				if ((this._TradeDebtorsGL != value))
				{
					this.OnTradeDebtorsGLChanging(value);
					this.SendPropertyChanging();
					this._TradeDebtorsGL = value;
					this.SendPropertyChanged("TradeDebtorsGL");
					this.OnTradeDebtorsGLChanged();
				}
			}
		}
		
		[Column(Storage="_TradeDebtorsOSGL", DbType="VarChar(16)")]
		public string TradeDebtorsOSGL
		{
			get
			{
				return this._TradeDebtorsOSGL;
			}
			set
			{
				if ((this._TradeDebtorsOSGL != value))
				{
					this.OnTradeDebtorsOSGLChanging(value);
					this.SendPropertyChanging();
					this._TradeDebtorsOSGL = value;
					this.SendPropertyChanged("TradeDebtorsOSGL");
					this.OnTradeDebtorsOSGLChanged();
				}
			}
		}
		
		[Column(Storage="_TradeCreditorsGL", DbType="VarChar(16)")]
		public string TradeCreditorsGL
		{
			get
			{
				return this._TradeCreditorsGL;
			}
			set
			{
				if ((this._TradeCreditorsGL != value))
				{
					this.OnTradeCreditorsGLChanging(value);
					this.SendPropertyChanging();
					this._TradeCreditorsGL = value;
					this.SendPropertyChanged("TradeCreditorsGL");
					this.OnTradeCreditorsGLChanged();
				}
			}
		}
		
		[Column(Storage="_TradeCreditorsOsGL", DbType="VarChar(16)")]
		public string TradeCreditorsOsGL
		{
			get
			{
				return this._TradeCreditorsOsGL;
			}
			set
			{
				if ((this._TradeCreditorsOsGL != value))
				{
					this.OnTradeCreditorsOsGLChanging(value);
					this.SendPropertyChanging();
					this._TradeCreditorsOsGL = value;
					this.SendPropertyChanged("TradeCreditorsOsGL");
					this.OnTradeCreditorsOsGLChanged();
				}
			}
		}
		
		[Column(Storage="_OtherCreditorsGL", DbType="VarChar(16)")]
		public string OtherCreditorsGL
		{
			get
			{
				return this._OtherCreditorsGL;
			}
			set
			{
				if ((this._OtherCreditorsGL != value))
				{
					this.OnOtherCreditorsGLChanging(value);
					this.SendPropertyChanging();
					this._OtherCreditorsGL = value;
					this.SendPropertyChanged("OtherCreditorsGL");
					this.OnOtherCreditorsGLChanged();
				}
			}
		}
		
		[Column(Storage="_FirstBSAccGL", DbType="VarChar(16)")]
		public string FirstBSAccGL
		{
			get
			{
				return this._FirstBSAccGL;
			}
			set
			{
				if ((this._FirstBSAccGL != value))
				{
					this.OnFirstBSAccGLChanging(value);
					this.SendPropertyChanging();
					this._FirstBSAccGL = value;
					this.SendPropertyChanged("FirstBSAccGL");
					this.OnFirstBSAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_LastBSAccGL", DbType="VarChar(16)")]
		public string LastBSAccGL
		{
			get
			{
				return this._LastBSAccGL;
			}
			set
			{
				if ((this._LastBSAccGL != value))
				{
					this.OnLastBSAccGLChanging(value);
					this.SendPropertyChanging();
					this._LastBSAccGL = value;
					this.SendPropertyChanged("LastBSAccGL");
					this.OnLastBSAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_USDBankAccGL", DbType="VarChar(16)")]
		public string USDBankAccGL
		{
			get
			{
				return this._USDBankAccGL;
			}
			set
			{
				if ((this._USDBankAccGL != value))
				{
					this.OnUSDBankAccGLChanging(value);
					this.SendPropertyChanging();
					this._USDBankAccGL = value;
					this.SendPropertyChanged("USDBankAccGL");
					this.OnUSDBankAccGLChanged();
				}
			}
		}
		
		[Column(Storage="_RepPrep", DbType="VarChar(50)")]
		public string RepPrep
		{
			get
			{
				return this._RepPrep;
			}
			set
			{
				if ((this._RepPrep != value))
				{
					this.OnRepPrepChanging(value);
					this.SendPropertyChanging();
					this._RepPrep = value;
					this.SendPropertyChanged("RepPrep");
					this.OnRepPrepChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyID", DbType="VarChar(5)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_DefCo", DbType="Bit NOT NULL")]
		public bool DefCo
		{
			get
			{
				return this._DefCo;
			}
			set
			{
				if ((this._DefCo != value))
				{
					this.OnDefCoChanging(value);
					this.SendPropertyChanging();
					this._DefCo = value;
					this.SendPropertyChanged("DefCo");
					this.OnDefCoChanged();
				}
			}
		}
		
		[Column(Storage="_StatementBal", DbType="Money")]
		public System.Nullable<decimal> StatementBal
		{
			get
			{
				return this._StatementBal;
			}
			set
			{
				if ((this._StatementBal != value))
				{
					this.OnStatementBalChanging(value);
					this.SendPropertyChanging();
					this._StatementBal = value;
					this.SendPropertyChanged("StatementBal");
					this.OnStatementBalChanged();
				}
			}
		}
		
		[Column(Storage="_Balance", DbType="Money")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyGroup", DbType="TinyInt")]
		public System.Nullable<byte> CompanyGroup
		{
			get
			{
				return this._CompanyGroup;
			}
			set
			{
				if ((this._CompanyGroup != value))
				{
					if (this._INT_COMPANY_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyGroupChanging(value);
					this.SendPropertyChanging();
					this._CompanyGroup = value;
					this.SendPropertyChanged("CompanyGroup");
					this.OnCompanyGroupChanged();
				}
			}
		}
		
		[Column(Storage="_FiscalStartMonth", DbType="TinyInt")]
		public System.Nullable<byte> FiscalStartMonth
		{
			get
			{
				return this._FiscalStartMonth;
			}
			set
			{
				if ((this._FiscalStartMonth != value))
				{
					this.OnFiscalStartMonthChanging(value);
					this.SendPropertyChanging();
					this._FiscalStartMonth = value;
					this.SendPropertyChanged("FiscalStartMonth");
					this.OnFiscalStartMonthChanged();
				}
			}
		}
		
		[Column(Storage="_CostofSalesGL", DbType="VarChar(16)")]
		public string CostofSalesGL
		{
			get
			{
				return this._CostofSalesGL;
			}
			set
			{
				if ((this._CostofSalesGL != value))
				{
					this.OnCostofSalesGLChanging(value);
					this.SendPropertyChanging();
					this._CostofSalesGL = value;
					this.SendPropertyChanged("CostofSalesGL");
					this.OnCostofSalesGLChanged();
				}
			}
		}
		
		[Column(Storage="_StockOnHandGL", DbType="VarChar(16)")]
		public string StockOnHandGL
		{
			get
			{
				return this._StockOnHandGL;
			}
			set
			{
				if ((this._StockOnHandGL != value))
				{
					this.OnStockOnHandGLChanging(value);
					this.SendPropertyChanging();
					this._StockOnHandGL = value;
					this.SendPropertyChanged("StockOnHandGL");
					this.OnStockOnHandGLChanged();
				}
			}
		}
		
		[Column(Storage="_PurchClearingGL", DbType="VarChar(16)")]
		public string PurchClearingGL
		{
			get
			{
				return this._PurchClearingGL;
			}
			set
			{
				if ((this._PurchClearingGL != value))
				{
					this.OnPurchClearingGLChanging(value);
					this.SendPropertyChanging();
					this._PurchClearingGL = value;
					this.SendPropertyChanged("PurchClearingGL");
					this.OnPurchClearingGLChanged();
				}
			}
		}
		
		[Column(Storage="_GL_Batch", DbType="Int NOT NULL")]
		public int GL_Batch
		{
			get
			{
				return this._GL_Batch;
			}
			set
			{
				if ((this._GL_Batch != value))
				{
					this.OnGL_BatchChanging(value);
					this.SendPropertyChanging();
					this._GL_Batch = value;
					this.SendPropertyChanged("GL_Batch");
					this.OnGL_BatchChanged();
				}
			}
		}
		
		[Column(Storage="_Last_Debtors_Audit", DbType="Int NOT NULL")]
		public int Last_Debtors_Audit
		{
			get
			{
				return this._Last_Debtors_Audit;
			}
			set
			{
				if ((this._Last_Debtors_Audit != value))
				{
					this.OnLast_Debtors_AuditChanging(value);
					this.SendPropertyChanging();
					this._Last_Debtors_Audit = value;
					this.SendPropertyChanged("Last_Debtors_Audit");
					this.OnLast_Debtors_AuditChanged();
				}
			}
		}
		
		[Column(Storage="_Prev_Debtors_Audit", DbType="Int NOT NULL")]
		public int Prev_Debtors_Audit
		{
			get
			{
				return this._Prev_Debtors_Audit;
			}
			set
			{
				if ((this._Prev_Debtors_Audit != value))
				{
					this.OnPrev_Debtors_AuditChanging(value);
					this.SendPropertyChanging();
					this._Prev_Debtors_Audit = value;
					this.SendPropertyChanged("Prev_Debtors_Audit");
					this.OnPrev_Debtors_AuditChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_SnapShotReport", DbType="Bit NOT NULL")]
		public bool SnapShotReport
		{
			get
			{
				return this._SnapShotReport;
			}
			set
			{
				if ((this._SnapShotReport != value))
				{
					this.OnSnapShotReportChanging(value);
					this.SendPropertyChanging();
					this._SnapShotReport = value;
					this.SendPropertyChanged("SnapShotReport");
					this.OnSnapShotReportChanged();
				}
			}
		}
		
		[Column(Storage="_PDFInvoicePath", DbType="VarChar(100)")]
		public string PDFInvoicePath
		{
			get
			{
				return this._PDFInvoicePath;
			}
			set
			{
				if ((this._PDFInvoicePath != value))
				{
					this.OnPDFInvoicePathChanging(value);
					this.SendPropertyChanging();
					this._PDFInvoicePath = value;
					this.SendPropertyChanged("PDFInvoicePath");
					this.OnPDFInvoicePathChanged();
				}
			}
		}
		
		[Column(Storage="_RemittanceEmail", DbType="VarChar(100)")]
		public string RemittanceEmail
		{
			get
			{
				return this._RemittanceEmail;
			}
			set
			{
				if ((this._RemittanceEmail != value))
				{
					this.OnRemittanceEmailChanging(value);
					this.SendPropertyChanging();
					this._RemittanceEmail = value;
					this.SendPropertyChanged("RemittanceEmail");
					this.OnRemittanceEmailChanged();
				}
			}
		}
		
		[Column(Storage="_POInvToAddressINT", DbType="VarChar(100)")]
		public string POInvToAddressINT
		{
			get
			{
				return this._POInvToAddressINT;
			}
			set
			{
				if ((this._POInvToAddressINT != value))
				{
					this.OnPOInvToAddressINTChanging(value);
					this.SendPropertyChanging();
					this._POInvToAddressINT = value;
					this.SendPropertyChanged("POInvToAddressINT");
					this.OnPOInvToAddressINTChanged();
				}
			}
		}
		
		[Column(Storage="_POInvToAddressBank", DbType="VarChar(100)")]
		public string POInvToAddressBank
		{
			get
			{
				return this._POInvToAddressBank;
			}
			set
			{
				if ((this._POInvToAddressBank != value))
				{
					this.OnPOInvToAddressBankChanging(value);
					this.SendPropertyChanging();
					this._POInvToAddressBank = value;
					this.SendPropertyChanged("POInvToAddressBank");
					this.OnPOInvToAddressBankChanged();
				}
			}
		}
		
		[Column(Storage="_TaxCountry", DbType="Int NOT NULL")]
		public int TaxCountry
		{
			get
			{
				return this._TaxCountry;
			}
			set
			{
				if ((this._TaxCountry != value))
				{
					if (this._COUNTRIES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxCountryChanging(value);
					this.SendPropertyChanging();
					this._TaxCountry = value;
					this.SendPropertyChanged("TaxCountry");
					this.OnTaxCountryChanged();
				}
			}
		}
		
		[Column(Storage="_NationalCreditManager", DbType="VarChar(25)")]
		public string NationalCreditManager
		{
			get
			{
				return this._NationalCreditManager;
			}
			set
			{
				if ((this._NationalCreditManager != value))
				{
					this.OnNationalCreditManagerChanging(value);
					this.SendPropertyChanging();
					this._NationalCreditManager = value;
					this.SendPropertyChanged("NationalCreditManager");
					this.OnNationalCreditManagerChanged();
				}
			}
		}
		
		[Column(Storage="_CreditPhone", DbType="VarChar(50)")]
		public string CreditPhone
		{
			get
			{
				return this._CreditPhone;
			}
			set
			{
				if ((this._CreditPhone != value))
				{
					this.OnCreditPhoneChanging(value);
					this.SendPropertyChanging();
					this._CreditPhone = value;
					this.SendPropertyChanged("CreditPhone");
					this.OnCreditPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_GSTRegistrationNum", DbType="VarChar(15)")]
		public string GSTRegistrationNum
		{
			get
			{
				return this._GSTRegistrationNum;
			}
			set
			{
				if ((this._GSTRegistrationNum != value))
				{
					this.OnGSTRegistrationNumChanging(value);
					this.SendPropertyChanging();
					this._GSTRegistrationNum = value;
					this.SendPropertyChanged("GSTRegistrationNum");
					this.OnGSTRegistrationNumChanged();
				}
			}
		}
		
		[Column(Storage="_ContractForecastReportURL", DbType="VarChar(300)")]
		public string ContractForecastReportURL
		{
			get
			{
				return this._ContractForecastReportURL;
			}
			set
			{
				if ((this._ContractForecastReportURL != value))
				{
					this.OnContractForecastReportURLChanging(value);
					this.SendPropertyChanging();
					this._ContractForecastReportURL = value;
					this.SendPropertyChanged("ContractForecastReportURL");
					this.OnContractForecastReportURLChanged();
				}
			}
		}
		
		[Column(Storage="_ContractForecastArchivedReportURL", DbType="VarChar(300)")]
		public string ContractForecastArchivedReportURL
		{
			get
			{
				return this._ContractForecastArchivedReportURL;
			}
			set
			{
				if ((this._ContractForecastArchivedReportURL != value))
				{
					this.OnContractForecastArchivedReportURLChanging(value);
					this.SendPropertyChanging();
					this._ContractForecastArchivedReportURL = value;
					this.SendPropertyChanged("ContractForecastArchivedReportURL");
					this.OnContractForecastArchivedReportURLChanged();
				}
			}
		}
		
		[Column(Storage="_AccountsPayableEmail", DbType="VarChar(100)")]
		public string AccountsPayableEmail
		{
			get
			{
				return this._AccountsPayableEmail;
			}
			set
			{
				if ((this._AccountsPayableEmail != value))
				{
					this.OnAccountsPayableEmailChanging(value);
					this.SendPropertyChanging();
					this._AccountsPayableEmail = value;
					this.SendPropertyChanged("AccountsPayableEmail");
					this.OnAccountsPayableEmailChanged();
				}
			}
		}
		
		[Association(Name="FK_COM", Storage="_EMPLOYEE_COMPANY", ThisKey="CompanyNum", OtherKey="CompanyNum", DeleteRule="NO ACTION")]
		public EntitySet<EMPLOYEE_COMPANY> EMPLOYEE_COMPANY
		{
			get
			{
				return this._EMPLOYEE_COMPANY;
			}
			set
			{
				this._EMPLOYEE_COMPANY.Assign(value);
			}
		}
		
		[Association(Name="FK_COMPANY_APPROVALS_COMPANY", Storage="_COMPANY_APPROVALS", ThisKey="CompanyNum", OtherKey="CompanyNum", DeleteRule="NO ACTION")]
		public EntitySet<COMPANY_APPROVALS> COMPANY_APPROVALS
		{
			get
			{
				return this._COMPANY_APPROVALS;
			}
			set
			{
				this._COMPANY_APPROVALS.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_INV_BATCH_HEADER_SETUP", Storage="_INT_INV_BATCH_HEADER", ThisKey="CompanyNum", OtherKey="CompanyNum", DeleteRule="NO ACTION")]
		public EntitySet<INT_INV_BATCH_HEADER> INT_INV_BATCH_HEADER
		{
			get
			{
				return this._INT_INV_BATCH_HEADER;
			}
			set
			{
				this._INT_INV_BATCH_HEADER.Assign(value);
			}
		}
		
		[Association(Name="FK_SETUP_COMPANYGROUP", Storage="_INT_COMPANY_GROUP", ThisKey="CompanyGroup", OtherKey="CompanyGroupID", IsForeignKey=true)]
		public INT_COMPANY_GROUP INT_COMPANY_GROUP
		{
			get
			{
				return this._INT_COMPANY_GROUP.Entity;
			}
			set
			{
				INT_COMPANY_GROUP previousValue = this._INT_COMPANY_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._INT_COMPANY_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_COMPANY_GROUP.Entity = null;
						previousValue.SETUP.Remove(this);
					}
					this._INT_COMPANY_GROUP.Entity = value;
					if ((value != null))
					{
						value.SETUP.Add(this);
						this._CompanyGroup = value.CompanyGroupID;
					}
					else
					{
						this._CompanyGroup = default(Nullable<byte>);
					}
					this.SendPropertyChanged("INT_COMPANY_GROUP");
				}
			}
		}
		
		[Association(Name="FK_SETUP_COUNTRIES", Storage="_COUNTRIES", ThisKey="TaxCountry", OtherKey="CountryID", IsForeignKey=true)]
		public COUNTRIES COUNTRIES
		{
			get
			{
				return this._COUNTRIES.Entity;
			}
			set
			{
				COUNTRIES previousValue = this._COUNTRIES.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRIES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRIES.Entity = null;
						previousValue.SETUP.Remove(this);
					}
					this._COUNTRIES.Entity = value;
					if ((value != null))
					{
						value.SETUP.Add(this);
						this._TaxCountry = value.CountryID;
					}
					else
					{
						this._TaxCountry = default(int);
					}
					this.SendPropertyChanged("COUNTRIES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLOYEE_COMPANY(EMPLOYEE_COMPANY entity)
		{
			this.SendPropertyChanging();
			entity.SETUP = this;
		}
		
		private void detach_EMPLOYEE_COMPANY(EMPLOYEE_COMPANY entity)
		{
			this.SendPropertyChanging();
			entity.SETUP = null;
		}
		
		private void attach_COMPANY_APPROVALS(COMPANY_APPROVALS entity)
		{
			this.SendPropertyChanging();
			entity.SETUP = this;
		}
		
		private void detach_COMPANY_APPROVALS(COMPANY_APPROVALS entity)
		{
			this.SendPropertyChanging();
			entity.SETUP = null;
		}
		
		private void attach_INT_INV_BATCH_HEADER(INT_INV_BATCH_HEADER entity)
		{
			this.SendPropertyChanging();
			entity.SETUP = this;
		}
		
		private void detach_INT_INV_BATCH_HEADER(INT_INV_BATCH_HEADER entity)
		{
			this.SendPropertyChanging();
			entity.SETUP = null;
		}
	}
	
	[Table(Name="dbo.SID_Co")]
	public partial class SID_Co
	{
		
		private System.Nullable<double> _CompanyNum;
		
		private string _OldServiceID;
		
		private string _NewServiceID;
		
		private System.Nullable<int> _OldID;
		
		private System.Nullable<int> _NewID;
		
		public SID_Co()
		{
		}
		
		[Column(Storage="_CompanyNum", DbType="Float")]
		public System.Nullable<double> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
		
		[Column(Name="Old Service ID", Storage="_OldServiceID", DbType="NVarChar(255)")]
		public string OldServiceID
		{
			get
			{
				return this._OldServiceID;
			}
			set
			{
				if ((this._OldServiceID != value))
				{
					this._OldServiceID = value;
				}
			}
		}
		
		[Column(Name="New Service ID", Storage="_NewServiceID", DbType="NVarChar(255)")]
		public string NewServiceID
		{
			get
			{
				return this._NewServiceID;
			}
			set
			{
				if ((this._NewServiceID != value))
				{
					this._NewServiceID = value;
				}
			}
		}
		
		[Column(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this._OldID = value;
				}
			}
		}
		
		[Column(Storage="_NewID", DbType="Int")]
		public System.Nullable<int> NewID
		{
			get
			{
				return this._NewID;
			}
			set
			{
				if ((this._NewID != value))
				{
					this._NewID = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SID_G")]
	public partial class SID_G
	{
		
		private string _OldServiceID;
		
		private string _CorrectServiceID;
		
		private System.Nullable<int> _OldId;
		
		private System.Nullable<int> _NewID;
		
		public SID_G()
		{
		}
		
		[Column(Name="Old Service ID", Storage="_OldServiceID", DbType="NVarChar(255)")]
		public string OldServiceID
		{
			get
			{
				return this._OldServiceID;
			}
			set
			{
				if ((this._OldServiceID != value))
				{
					this._OldServiceID = value;
				}
			}
		}
		
		[Column(Name="Correct Service ID", Storage="_CorrectServiceID", DbType="NVarChar(255)")]
		public string CorrectServiceID
		{
			get
			{
				return this._CorrectServiceID;
			}
			set
			{
				if ((this._CorrectServiceID != value))
				{
					this._CorrectServiceID = value;
				}
			}
		}
		
		[Column(Storage="_OldId", DbType="Int")]
		public System.Nullable<int> OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this._OldId = value;
				}
			}
		}
		
		[Column(Storage="_NewID", DbType="Int")]
		public System.Nullable<int> NewID
		{
			get
			{
				return this._NewID;
			}
			set
			{
				if ((this._NewID != value))
				{
					this._NewID = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SRVCTYPE")]
	public partial class SRVCTYPE
	{
		
		private int _SOUrceID;
		
		private string _Phone;
		
		public SRVCTYPE()
		{
		}
		
		[Column(Storage="_SOUrceID", DbType="Int NOT NULL")]
		public int SOUrceID
		{
			get
			{
				return this._SOUrceID;
			}
			set
			{
				if ((this._SOUrceID != value))
				{
					this._SOUrceID = value;
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="NVarChar(12)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.STKORD")]
	public partial class STKORD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrdNum;
		
		private System.Nullable<System.DateTime> _Date;
		
		private int _SupplierCode;
		
		private string _Ref;
		
		private System.Nullable<System.DateTime> _Due;
		
		private System.Nullable<bool> _Completed;
		
		private System.Nullable<decimal> _TotalValue;
		
		private string _InvNum;
		
		private System.Nullable<decimal> _Freight;
		
		private System.Nullable<decimal> _LastFreight;
		
		private System.Nullable<decimal> _Interest;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private bool _Cancelled;
		
		private System.Nullable<System.DateTime> _LCDate;
		
		private string _LCNum;
		
		private string _PayMethod;
		
		private System.Nullable<System.DateTime> _DateArranged;
		
		private System.Nullable<decimal> _USD;
		
		private System.Nullable<System.DateTime> _DateDue;
		
		private System.Nullable<float> _PayRate;
		
		private System.Nullable<System.DateTime> _ForexContractDate;
		
		private string _ForexContractNum;
		
		private System.Nullable<float> _ForexRate;
		
		private System.Nullable<float> _TriggerLevel;
		
		private string _Notes;
		
		private string _Auditor;
		
		private string _OnHold;
		
		private string _DueMonth;
		
		private string _InvoiceNum;
		
		private System.Nullable<System.DateTime> _DateReceived;
		
		private string _InternalNotes;
		
		private System.Nullable<bool> _Special;
		
		private System.Nullable<System.DateTime> _Printed;
		
		private System.Nullable<int> _Branch;
		
		private System.Nullable<short> _STKORD_Reason;
		
		private System.Nullable<byte> _SendToCompanyNum;
		
		private string _SendToAddress;
		
		private System.Nullable<bool> _IsTransfer;
		
		private System.Nullable<byte> _TransferFromCompanyNum;
		
		private System.Nullable<byte> _TransferToCompanyNum;
		
		private string _InvToAddress;
		
		private System.Nullable<byte> _OrdType;
		
		private string _SendToContact;
		
		private string _SendToPhone;
		
		private string _InvToName;
		
		private string _InvToPhone;
		
		private string _OrderedByName;
		
		private string _OrderedByPhone;
		
		private System.Nullable<int> _SendToLocation;
		
		private System.Nullable<int> _Platformid;
		
		private string _CredContact;
		
		private string _CredContactPH;
		
		private string _Fax;
		
		private System.Nullable<int> _PORequisitionNumber;
		
		private int _OrderExpenditureType;
		
		private int _OrderFrequencyType;
		
		private string _SendToState;
		
		private bool _HirePurchase;
		
		private bool _ExportReady;
		
		private bool _ExportToAccpac;
		
		private System.Nullable<int> _STKORD_ReasonType;
		
		private string _DeliverInvToAddress;
		
		private int _GoodService;
		
		private System.Nullable<int> _GLBusinessUnit;
		
		private System.Nullable<int> _Actioner;
		
		private System.Nullable<System.DateTime> _Created;
		
		private System.Nullable<int> _BlanketInvoiceFreq;
		
		private System.Nullable<int> _Project;
		
		private EntitySet<INT_STOCK_TRANSFER_BATCH> _INT_STOCK_TRANSFER_BATCH;
		
		private EntitySet<INT_STOCKTRANSIT> _INT_STOCKTRANSIT;
		
		private EntityRef<CREDITORS> _CREDITORS;
		
		private EntityRef<GL_BUSINESS_UNITS> _GL_BUSINESS_UNITS;
		
		private EntityRef<INT_STKORD_REASON> _INT_STKORD_REASON;
		
		private EntityRef<PROJECT> _ProjectPROJECT;
		
		private EntityRef<LOCATIONS> _LOCATIONS;
		
		private EntitySet<STKORDITEM> _STKORDITEM;
		
		private EntitySet<STOCK_RECEIVED> _STOCK_RECEIVED;
		
		private EntitySet<STOCK_RECEIVED_TMP> _STOCK_RECEIVED_TMP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnSupplierCodeChanging(int value);
    partial void OnSupplierCodeChanged();
    partial void OnRefChanging(string value);
    partial void OnRefChanged();
    partial void OnDueChanging(System.Nullable<System.DateTime> value);
    partial void OnDueChanged();
    partial void OnCompletedChanging(System.Nullable<bool> value);
    partial void OnCompletedChanged();
    partial void OnTotalValueChanging(System.Nullable<decimal> value);
    partial void OnTotalValueChanged();
    partial void OnInvNumChanging(string value);
    partial void OnInvNumChanged();
    partial void OnFreightChanging(System.Nullable<decimal> value);
    partial void OnFreightChanged();
    partial void OnLastFreightChanging(System.Nullable<decimal> value);
    partial void OnLastFreightChanged();
    partial void OnInterestChanging(System.Nullable<decimal> value);
    partial void OnInterestChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnLCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLCDateChanged();
    partial void OnLCNumChanging(string value);
    partial void OnLCNumChanged();
    partial void OnPayMethodChanging(string value);
    partial void OnPayMethodChanged();
    partial void OnDateArrangedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateArrangedChanged();
    partial void OnUSDChanging(System.Nullable<decimal> value);
    partial void OnUSDChanged();
    partial void OnDateDueChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDueChanged();
    partial void OnPayRateChanging(System.Nullable<float> value);
    partial void OnPayRateChanged();
    partial void OnForexContractDateChanging(System.Nullable<System.DateTime> value);
    partial void OnForexContractDateChanged();
    partial void OnForexContractNumChanging(string value);
    partial void OnForexContractNumChanged();
    partial void OnForexRateChanging(System.Nullable<float> value);
    partial void OnForexRateChanged();
    partial void OnTriggerLevelChanging(System.Nullable<float> value);
    partial void OnTriggerLevelChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnAuditorChanging(string value);
    partial void OnAuditorChanged();
    partial void OnOnHoldChanging(string value);
    partial void OnOnHoldChanged();
    partial void OnDueMonthChanging(string value);
    partial void OnDueMonthChanged();
    partial void OnInvoiceNumChanging(string value);
    partial void OnInvoiceNumChanged();
    partial void OnDateReceivedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReceivedChanged();
    partial void OnInternalNotesChanging(string value);
    partial void OnInternalNotesChanged();
    partial void OnSpecialChanging(System.Nullable<bool> value);
    partial void OnSpecialChanged();
    partial void OnPrintedChanging(System.Nullable<System.DateTime> value);
    partial void OnPrintedChanged();
    partial void OnBranchChanging(System.Nullable<int> value);
    partial void OnBranchChanged();
    partial void OnSTKORD_ReasonChanging(System.Nullable<short> value);
    partial void OnSTKORD_ReasonChanged();
    partial void OnSendToCompanyNumChanging(System.Nullable<byte> value);
    partial void OnSendToCompanyNumChanged();
    partial void OnSendToAddressChanging(string value);
    partial void OnSendToAddressChanged();
    partial void OnIsTransferChanging(System.Nullable<bool> value);
    partial void OnIsTransferChanged();
    partial void OnTransferFromCompanyNumChanging(System.Nullable<byte> value);
    partial void OnTransferFromCompanyNumChanged();
    partial void OnTransferToCompanyNumChanging(System.Nullable<byte> value);
    partial void OnTransferToCompanyNumChanged();
    partial void OnInvToAddressChanging(string value);
    partial void OnInvToAddressChanged();
    partial void OnOrdTypeChanging(System.Nullable<byte> value);
    partial void OnOrdTypeChanged();
    partial void OnSendToContactChanging(string value);
    partial void OnSendToContactChanged();
    partial void OnSendToPhoneChanging(string value);
    partial void OnSendToPhoneChanged();
    partial void OnInvToNameChanging(string value);
    partial void OnInvToNameChanged();
    partial void OnInvToPhoneChanging(string value);
    partial void OnInvToPhoneChanged();
    partial void OnOrderedByNameChanging(string value);
    partial void OnOrderedByNameChanged();
    partial void OnOrderedByPhoneChanging(string value);
    partial void OnOrderedByPhoneChanged();
    partial void OnSendToLocationChanging(System.Nullable<int> value);
    partial void OnSendToLocationChanged();
    partial void OnPlatformidChanging(System.Nullable<int> value);
    partial void OnPlatformidChanged();
    partial void OnCredContactChanging(string value);
    partial void OnCredContactChanged();
    partial void OnCredContactPHChanging(string value);
    partial void OnCredContactPHChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnPORequisitionNumberChanging(System.Nullable<int> value);
    partial void OnPORequisitionNumberChanged();
    partial void OnOrderExpenditureTypeChanging(int value);
    partial void OnOrderExpenditureTypeChanged();
    partial void OnOrderFrequencyTypeChanging(int value);
    partial void OnOrderFrequencyTypeChanged();
    partial void OnSendToStateChanging(string value);
    partial void OnSendToStateChanged();
    partial void OnHirePurchaseChanging(bool value);
    partial void OnHirePurchaseChanged();
    partial void OnExportReadyChanging(bool value);
    partial void OnExportReadyChanged();
    partial void OnExportToAccpacChanging(bool value);
    partial void OnExportToAccpacChanged();
    partial void OnSTKORD_ReasonTypeChanging(System.Nullable<int> value);
    partial void OnSTKORD_ReasonTypeChanged();
    partial void OnDeliverInvToAddressChanging(string value);
    partial void OnDeliverInvToAddressChanged();
    partial void OnGoodServiceChanging(int value);
    partial void OnGoodServiceChanged();
    partial void OnGLBusinessUnitChanging(System.Nullable<int> value);
    partial void OnGLBusinessUnitChanged();
    partial void OnActionerChanging(System.Nullable<int> value);
    partial void OnActionerChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnBlanketInvoiceFreqChanging(System.Nullable<int> value);
    partial void OnBlanketInvoiceFreqChanged();
    partial void OnProjectChanging(System.Nullable<int> value);
    partial void OnProjectChanged();
    #endregion
		
		public STKORD()
		{
			this._INT_STOCK_TRANSFER_BATCH = new EntitySet<INT_STOCK_TRANSFER_BATCH>(new Action<INT_STOCK_TRANSFER_BATCH>(this.attach_INT_STOCK_TRANSFER_BATCH), new Action<INT_STOCK_TRANSFER_BATCH>(this.detach_INT_STOCK_TRANSFER_BATCH));
			this._INT_STOCKTRANSIT = new EntitySet<INT_STOCKTRANSIT>(new Action<INT_STOCKTRANSIT>(this.attach_INT_STOCKTRANSIT), new Action<INT_STOCKTRANSIT>(this.detach_INT_STOCKTRANSIT));
			this._CREDITORS = default(EntityRef<CREDITORS>);
			this._GL_BUSINESS_UNITS = default(EntityRef<GL_BUSINESS_UNITS>);
			this._INT_STKORD_REASON = default(EntityRef<INT_STKORD_REASON>);
			this._ProjectPROJECT = default(EntityRef<PROJECT>);
			this._LOCATIONS = default(EntityRef<LOCATIONS>);
			this._STKORDITEM = new EntitySet<STKORDITEM>(new Action<STKORDITEM>(this.attach_STKORDITEM), new Action<STKORDITEM>(this.detach_STKORDITEM));
			this._STOCK_RECEIVED = new EntitySet<STOCK_RECEIVED>(new Action<STOCK_RECEIVED>(this.attach_STOCK_RECEIVED), new Action<STOCK_RECEIVED>(this.detach_STOCK_RECEIVED));
			this._STOCK_RECEIVED_TMP = new EntitySet<STOCK_RECEIVED_TMP>(new Action<STOCK_RECEIVED_TMP>(this.attach_STOCK_RECEIVED_TMP), new Action<STOCK_RECEIVED_TMP>(this.detach_STOCK_RECEIVED_TMP));
			OnCreated();
		}
		
		[Column(Storage="_OrdNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierCode", DbType="Int NOT NULL")]
		public int SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					if (this._CREDITORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Ref", DbType="VarChar(50)")]
		public string Ref
		{
			get
			{
				return this._Ref;
			}
			set
			{
				if ((this._Ref != value))
				{
					this.OnRefChanging(value);
					this.SendPropertyChanging();
					this._Ref = value;
					this.SendPropertyChanged("Ref");
					this.OnRefChanged();
				}
			}
		}
		
		[Column(Storage="_Due", DbType="DateTime")]
		public System.Nullable<System.DateTime> Due
		{
			get
			{
				return this._Due;
			}
			set
			{
				if ((this._Due != value))
				{
					this.OnDueChanging(value);
					this.SendPropertyChanging();
					this._Due = value;
					this.SendPropertyChanged("Due");
					this.OnDueChanged();
				}
			}
		}
		
		[Column(Storage="_Completed", DbType="Bit")]
		public System.Nullable<bool> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_TotalValue", DbType="Money")]
		public System.Nullable<decimal> TotalValue
		{
			get
			{
				return this._TotalValue;
			}
			set
			{
				if ((this._TotalValue != value))
				{
					this.OnTotalValueChanging(value);
					this.SendPropertyChanging();
					this._TotalValue = value;
					this.SendPropertyChanged("TotalValue");
					this.OnTotalValueChanged();
				}
			}
		}
		
		[Column(Storage="_InvNum", DbType="VarChar(16)")]
		public string InvNum
		{
			get
			{
				return this._InvNum;
			}
			set
			{
				if ((this._InvNum != value))
				{
					this.OnInvNumChanging(value);
					this.SendPropertyChanging();
					this._InvNum = value;
					this.SendPropertyChanged("InvNum");
					this.OnInvNumChanged();
				}
			}
		}
		
		[Column(Storage="_Freight", DbType="Money")]
		public System.Nullable<decimal> Freight
		{
			get
			{
				return this._Freight;
			}
			set
			{
				if ((this._Freight != value))
				{
					this.OnFreightChanging(value);
					this.SendPropertyChanging();
					this._Freight = value;
					this.SendPropertyChanged("Freight");
					this.OnFreightChanged();
				}
			}
		}
		
		[Column(Storage="_LastFreight", DbType="Money")]
		public System.Nullable<decimal> LastFreight
		{
			get
			{
				return this._LastFreight;
			}
			set
			{
				if ((this._LastFreight != value))
				{
					this.OnLastFreightChanging(value);
					this.SendPropertyChanging();
					this._LastFreight = value;
					this.SendPropertyChanged("LastFreight");
					this.OnLastFreightChanged();
				}
			}
		}
		
		[Column(Storage="_Interest", DbType="Money")]
		public System.Nullable<decimal> Interest
		{
			get
			{
				return this._Interest;
			}
			set
			{
				if ((this._Interest != value))
				{
					this.OnInterestChanging(value);
					this.SendPropertyChanging();
					this._Interest = value;
					this.SendPropertyChanged("Interest");
					this.OnInterestChanged();
				}
			}
		}
		
		[Column(Storage="_ExchangeRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[Column(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[Column(Storage="_LCDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LCDate
		{
			get
			{
				return this._LCDate;
			}
			set
			{
				if ((this._LCDate != value))
				{
					this.OnLCDateChanging(value);
					this.SendPropertyChanging();
					this._LCDate = value;
					this.SendPropertyChanged("LCDate");
					this.OnLCDateChanged();
				}
			}
		}
		
		[Column(Storage="_LCNum", DbType="VarChar(25)")]
		public string LCNum
		{
			get
			{
				return this._LCNum;
			}
			set
			{
				if ((this._LCNum != value))
				{
					this.OnLCNumChanging(value);
					this.SendPropertyChanging();
					this._LCNum = value;
					this.SendPropertyChanged("LCNum");
					this.OnLCNumChanged();
				}
			}
		}
		
		[Column(Storage="_PayMethod", DbType="VarChar(25)")]
		public string PayMethod
		{
			get
			{
				return this._PayMethod;
			}
			set
			{
				if ((this._PayMethod != value))
				{
					this.OnPayMethodChanging(value);
					this.SendPropertyChanging();
					this._PayMethod = value;
					this.SendPropertyChanged("PayMethod");
					this.OnPayMethodChanged();
				}
			}
		}
		
		[Column(Storage="_DateArranged", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateArranged
		{
			get
			{
				return this._DateArranged;
			}
			set
			{
				if ((this._DateArranged != value))
				{
					this.OnDateArrangedChanging(value);
					this.SendPropertyChanging();
					this._DateArranged = value;
					this.SendPropertyChanged("DateArranged");
					this.OnDateArrangedChanged();
				}
			}
		}
		
		[Column(Storage="_USD", DbType="Money")]
		public System.Nullable<decimal> USD
		{
			get
			{
				return this._USD;
			}
			set
			{
				if ((this._USD != value))
				{
					this.OnUSDChanging(value);
					this.SendPropertyChanging();
					this._USD = value;
					this.SendPropertyChanged("USD");
					this.OnUSDChanged();
				}
			}
		}
		
		[Column(Storage="_DateDue", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDue
		{
			get
			{
				return this._DateDue;
			}
			set
			{
				if ((this._DateDue != value))
				{
					this.OnDateDueChanging(value);
					this.SendPropertyChanging();
					this._DateDue = value;
					this.SendPropertyChanged("DateDue");
					this.OnDateDueChanged();
				}
			}
		}
		
		[Column(Storage="_PayRate", DbType="Real")]
		public System.Nullable<float> PayRate
		{
			get
			{
				return this._PayRate;
			}
			set
			{
				if ((this._PayRate != value))
				{
					this.OnPayRateChanging(value);
					this.SendPropertyChanging();
					this._PayRate = value;
					this.SendPropertyChanged("PayRate");
					this.OnPayRateChanged();
				}
			}
		}
		
		[Column(Storage="_ForexContractDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ForexContractDate
		{
			get
			{
				return this._ForexContractDate;
			}
			set
			{
				if ((this._ForexContractDate != value))
				{
					this.OnForexContractDateChanging(value);
					this.SendPropertyChanging();
					this._ForexContractDate = value;
					this.SendPropertyChanged("ForexContractDate");
					this.OnForexContractDateChanged();
				}
			}
		}
		
		[Column(Storage="_ForexContractNum", DbType="VarChar(16)")]
		public string ForexContractNum
		{
			get
			{
				return this._ForexContractNum;
			}
			set
			{
				if ((this._ForexContractNum != value))
				{
					this.OnForexContractNumChanging(value);
					this.SendPropertyChanging();
					this._ForexContractNum = value;
					this.SendPropertyChanged("ForexContractNum");
					this.OnForexContractNumChanged();
				}
			}
		}
		
		[Column(Storage="_ForexRate", DbType="Real")]
		public System.Nullable<float> ForexRate
		{
			get
			{
				return this._ForexRate;
			}
			set
			{
				if ((this._ForexRate != value))
				{
					this.OnForexRateChanging(value);
					this.SendPropertyChanging();
					this._ForexRate = value;
					this.SendPropertyChanged("ForexRate");
					this.OnForexRateChanged();
				}
			}
		}
		
		[Column(Storage="_TriggerLevel", DbType="Real")]
		public System.Nullable<float> TriggerLevel
		{
			get
			{
				return this._TriggerLevel;
			}
			set
			{
				if ((this._TriggerLevel != value))
				{
					this.OnTriggerLevelChanging(value);
					this.SendPropertyChanging();
					this._TriggerLevel = value;
					this.SendPropertyChanged("TriggerLevel");
					this.OnTriggerLevelChanged();
				}
			}
		}
		
		[Column(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[Column(Storage="_Auditor", DbType="VarChar(10)")]
		public string Auditor
		{
			get
			{
				return this._Auditor;
			}
			set
			{
				if ((this._Auditor != value))
				{
					this.OnAuditorChanging(value);
					this.SendPropertyChanging();
					this._Auditor = value;
					this.SendPropertyChanged("Auditor");
					this.OnAuditorChanged();
				}
			}
		}
		
		[Column(Storage="_OnHold", DbType="VarChar(10)")]
		public string OnHold
		{
			get
			{
				return this._OnHold;
			}
			set
			{
				if ((this._OnHold != value))
				{
					this.OnOnHoldChanging(value);
					this.SendPropertyChanging();
					this._OnHold = value;
					this.SendPropertyChanged("OnHold");
					this.OnOnHoldChanged();
				}
			}
		}
		
		[Column(Storage="_DueMonth", DbType="VarChar(10)")]
		public string DueMonth
		{
			get
			{
				return this._DueMonth;
			}
			set
			{
				if ((this._DueMonth != value))
				{
					this.OnDueMonthChanging(value);
					this.SendPropertyChanging();
					this._DueMonth = value;
					this.SendPropertyChanged("DueMonth");
					this.OnDueMonthChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceNum", DbType="VarChar(12)")]
		public string InvoiceNum
		{
			get
			{
				return this._InvoiceNum;
			}
			set
			{
				if ((this._InvoiceNum != value))
				{
					this.OnInvoiceNumChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNum = value;
					this.SendPropertyChanged("InvoiceNum");
					this.OnInvoiceNumChanged();
				}
			}
		}
		
		[Column(Storage="_DateReceived", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateReceived
		{
			get
			{
				return this._DateReceived;
			}
			set
			{
				if ((this._DateReceived != value))
				{
					this.OnDateReceivedChanging(value);
					this.SendPropertyChanging();
					this._DateReceived = value;
					this.SendPropertyChanged("DateReceived");
					this.OnDateReceivedChanged();
				}
			}
		}
		
		[Column(Storage="_InternalNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string InternalNotes
		{
			get
			{
				return this._InternalNotes;
			}
			set
			{
				if ((this._InternalNotes != value))
				{
					this.OnInternalNotesChanging(value);
					this.SendPropertyChanging();
					this._InternalNotes = value;
					this.SendPropertyChanged("InternalNotes");
					this.OnInternalNotesChanged();
				}
			}
		}
		
		[Column(Storage="_Special", DbType="Bit")]
		public System.Nullable<bool> Special
		{
			get
			{
				return this._Special;
			}
			set
			{
				if ((this._Special != value))
				{
					this.OnSpecialChanging(value);
					this.SendPropertyChanging();
					this._Special = value;
					this.SendPropertyChanged("Special");
					this.OnSpecialChanged();
				}
			}
		}
		
		[Column(Storage="_Printed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Printed
		{
			get
			{
				return this._Printed;
			}
			set
			{
				if ((this._Printed != value))
				{
					this.OnPrintedChanging(value);
					this.SendPropertyChanging();
					this._Printed = value;
					this.SendPropertyChanged("Printed");
					this.OnPrintedChanged();
				}
			}
		}
		
		[Column(Storage="_Branch", DbType="Int")]
		public System.Nullable<int> Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[Column(Storage="_STKORD_Reason", DbType="SmallInt")]
		public System.Nullable<short> STKORD_Reason
		{
			get
			{
				return this._STKORD_Reason;
			}
			set
			{
				if ((this._STKORD_Reason != value))
				{
					if (this._INT_STKORD_REASON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTKORD_ReasonChanging(value);
					this.SendPropertyChanging();
					this._STKORD_Reason = value;
					this.SendPropertyChanged("STKORD_Reason");
					this.OnSTKORD_ReasonChanged();
				}
			}
		}
		
		[Column(Storage="_SendToCompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> SendToCompanyNum
		{
			get
			{
				return this._SendToCompanyNum;
			}
			set
			{
				if ((this._SendToCompanyNum != value))
				{
					this.OnSendToCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._SendToCompanyNum = value;
					this.SendPropertyChanged("SendToCompanyNum");
					this.OnSendToCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_SendToAddress", DbType="VarChar(512)")]
		public string SendToAddress
		{
			get
			{
				return this._SendToAddress;
			}
			set
			{
				if ((this._SendToAddress != value))
				{
					this.OnSendToAddressChanging(value);
					this.SendPropertyChanging();
					this._SendToAddress = value;
					this.SendPropertyChanged("SendToAddress");
					this.OnSendToAddressChanged();
				}
			}
		}
		
		[Column(Storage="_IsTransfer", DbType="Bit")]
		public System.Nullable<bool> IsTransfer
		{
			get
			{
				return this._IsTransfer;
			}
			set
			{
				if ((this._IsTransfer != value))
				{
					this.OnIsTransferChanging(value);
					this.SendPropertyChanging();
					this._IsTransfer = value;
					this.SendPropertyChanged("IsTransfer");
					this.OnIsTransferChanged();
				}
			}
		}
		
		[Column(Storage="_TransferFromCompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> TransferFromCompanyNum
		{
			get
			{
				return this._TransferFromCompanyNum;
			}
			set
			{
				if ((this._TransferFromCompanyNum != value))
				{
					this.OnTransferFromCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._TransferFromCompanyNum = value;
					this.SendPropertyChanged("TransferFromCompanyNum");
					this.OnTransferFromCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_TransferToCompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> TransferToCompanyNum
		{
			get
			{
				return this._TransferToCompanyNum;
			}
			set
			{
				if ((this._TransferToCompanyNum != value))
				{
					this.OnTransferToCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._TransferToCompanyNum = value;
					this.SendPropertyChanged("TransferToCompanyNum");
					this.OnTransferToCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_InvToAddress", DbType="VarChar(1024)")]
		public string InvToAddress
		{
			get
			{
				return this._InvToAddress;
			}
			set
			{
				if ((this._InvToAddress != value))
				{
					this.OnInvToAddressChanging(value);
					this.SendPropertyChanging();
					this._InvToAddress = value;
					this.SendPropertyChanged("InvToAddress");
					this.OnInvToAddressChanged();
				}
			}
		}
		
		[Column(Storage="_OrdType", DbType="TinyInt")]
		public System.Nullable<byte> OrdType
		{
			get
			{
				return this._OrdType;
			}
			set
			{
				if ((this._OrdType != value))
				{
					this.OnOrdTypeChanging(value);
					this.SendPropertyChanging();
					this._OrdType = value;
					this.SendPropertyChanged("OrdType");
					this.OnOrdTypeChanged();
				}
			}
		}
		
		[Column(Storage="_SendToContact", DbType="VarChar(32)")]
		public string SendToContact
		{
			get
			{
				return this._SendToContact;
			}
			set
			{
				if ((this._SendToContact != value))
				{
					this.OnSendToContactChanging(value);
					this.SendPropertyChanging();
					this._SendToContact = value;
					this.SendPropertyChanged("SendToContact");
					this.OnSendToContactChanged();
				}
			}
		}
		
		[Column(Storage="_SendToPhone", DbType="VarChar(16)")]
		public string SendToPhone
		{
			get
			{
				return this._SendToPhone;
			}
			set
			{
				if ((this._SendToPhone != value))
				{
					this.OnSendToPhoneChanging(value);
					this.SendPropertyChanging();
					this._SendToPhone = value;
					this.SendPropertyChanged("SendToPhone");
					this.OnSendToPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_InvToName", DbType="VarChar(50)")]
		public string InvToName
		{
			get
			{
				return this._InvToName;
			}
			set
			{
				if ((this._InvToName != value))
				{
					this.OnInvToNameChanging(value);
					this.SendPropertyChanging();
					this._InvToName = value;
					this.SendPropertyChanged("InvToName");
					this.OnInvToNameChanged();
				}
			}
		}
		
		[Column(Storage="_InvToPhone", DbType="VarChar(50)")]
		public string InvToPhone
		{
			get
			{
				return this._InvToPhone;
			}
			set
			{
				if ((this._InvToPhone != value))
				{
					this.OnInvToPhoneChanging(value);
					this.SendPropertyChanging();
					this._InvToPhone = value;
					this.SendPropertyChanged("InvToPhone");
					this.OnInvToPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_OrderedByName", DbType="VarChar(32)")]
		public string OrderedByName
		{
			get
			{
				return this._OrderedByName;
			}
			set
			{
				if ((this._OrderedByName != value))
				{
					this.OnOrderedByNameChanging(value);
					this.SendPropertyChanging();
					this._OrderedByName = value;
					this.SendPropertyChanged("OrderedByName");
					this.OnOrderedByNameChanged();
				}
			}
		}
		
		[Column(Storage="_OrderedByPhone", DbType="VarChar(16)")]
		public string OrderedByPhone
		{
			get
			{
				return this._OrderedByPhone;
			}
			set
			{
				if ((this._OrderedByPhone != value))
				{
					this.OnOrderedByPhoneChanging(value);
					this.SendPropertyChanging();
					this._OrderedByPhone = value;
					this.SendPropertyChanged("OrderedByPhone");
					this.OnOrderedByPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_SendToLocation", DbType="Int")]
		public System.Nullable<int> SendToLocation
		{
			get
			{
				return this._SendToLocation;
			}
			set
			{
				if ((this._SendToLocation != value))
				{
					if (this._LOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSendToLocationChanging(value);
					this.SendPropertyChanging();
					this._SendToLocation = value;
					this.SendPropertyChanged("SendToLocation");
					this.OnSendToLocationChanged();
				}
			}
		}
		
		[Column(Name="platformid", Storage="_Platformid", DbType="Int")]
		public System.Nullable<int> Platformid
		{
			get
			{
				return this._Platformid;
			}
			set
			{
				if ((this._Platformid != value))
				{
					this.OnPlatformidChanging(value);
					this.SendPropertyChanging();
					this._Platformid = value;
					this.SendPropertyChanged("Platformid");
					this.OnPlatformidChanged();
				}
			}
		}
		
		[Column(Storage="_CredContact", DbType="VarChar(50)")]
		public string CredContact
		{
			get
			{
				return this._CredContact;
			}
			set
			{
				if ((this._CredContact != value))
				{
					this.OnCredContactChanging(value);
					this.SendPropertyChanging();
					this._CredContact = value;
					this.SendPropertyChanged("CredContact");
					this.OnCredContactChanged();
				}
			}
		}
		
		[Column(Storage="_CredContactPH", DbType="VarChar(50)")]
		public string CredContactPH
		{
			get
			{
				return this._CredContactPH;
			}
			set
			{
				if ((this._CredContactPH != value))
				{
					this.OnCredContactPHChanging(value);
					this.SendPropertyChanging();
					this._CredContactPH = value;
					this.SendPropertyChanged("CredContactPH");
					this.OnCredContactPHChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(25)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_PORequisitionNumber", DbType="Int")]
		public System.Nullable<int> PORequisitionNumber
		{
			get
			{
				return this._PORequisitionNumber;
			}
			set
			{
				if ((this._PORequisitionNumber != value))
				{
					this.OnPORequisitionNumberChanging(value);
					this.SendPropertyChanging();
					this._PORequisitionNumber = value;
					this.SendPropertyChanged("PORequisitionNumber");
					this.OnPORequisitionNumberChanged();
				}
			}
		}
		
		[Column(Storage="_OrderExpenditureType", DbType="Int NOT NULL")]
		public int OrderExpenditureType
		{
			get
			{
				return this._OrderExpenditureType;
			}
			set
			{
				if ((this._OrderExpenditureType != value))
				{
					this.OnOrderExpenditureTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderExpenditureType = value;
					this.SendPropertyChanged("OrderExpenditureType");
					this.OnOrderExpenditureTypeChanged();
				}
			}
		}
		
		[Column(Storage="_OrderFrequencyType", DbType="Int NOT NULL")]
		public int OrderFrequencyType
		{
			get
			{
				return this._OrderFrequencyType;
			}
			set
			{
				if ((this._OrderFrequencyType != value))
				{
					this.OnOrderFrequencyTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderFrequencyType = value;
					this.SendPropertyChanged("OrderFrequencyType");
					this.OnOrderFrequencyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_SendToState", DbType="VarChar(5)")]
		public string SendToState
		{
			get
			{
				return this._SendToState;
			}
			set
			{
				if ((this._SendToState != value))
				{
					this.OnSendToStateChanging(value);
					this.SendPropertyChanging();
					this._SendToState = value;
					this.SendPropertyChanged("SendToState");
					this.OnSendToStateChanged();
				}
			}
		}
		
		[Column(Storage="_HirePurchase", DbType="Bit NOT NULL")]
		public bool HirePurchase
		{
			get
			{
				return this._HirePurchase;
			}
			set
			{
				if ((this._HirePurchase != value))
				{
					this.OnHirePurchaseChanging(value);
					this.SendPropertyChanging();
					this._HirePurchase = value;
					this.SendPropertyChanged("HirePurchase");
					this.OnHirePurchaseChanged();
				}
			}
		}
		
		[Column(Storage="_ExportReady", DbType="Bit NOT NULL")]
		public bool ExportReady
		{
			get
			{
				return this._ExportReady;
			}
			set
			{
				if ((this._ExportReady != value))
				{
					this.OnExportReadyChanging(value);
					this.SendPropertyChanging();
					this._ExportReady = value;
					this.SendPropertyChanged("ExportReady");
					this.OnExportReadyChanged();
				}
			}
		}
		
		[Column(Storage="_ExportToAccpac", DbType="Bit NOT NULL")]
		public bool ExportToAccpac
		{
			get
			{
				return this._ExportToAccpac;
			}
			set
			{
				if ((this._ExportToAccpac != value))
				{
					this.OnExportToAccpacChanging(value);
					this.SendPropertyChanging();
					this._ExportToAccpac = value;
					this.SendPropertyChanged("ExportToAccpac");
					this.OnExportToAccpacChanged();
				}
			}
		}
		
		[Column(Storage="_STKORD_ReasonType", DbType="Int")]
		public System.Nullable<int> STKORD_ReasonType
		{
			get
			{
				return this._STKORD_ReasonType;
			}
			set
			{
				if ((this._STKORD_ReasonType != value))
				{
					this.OnSTKORD_ReasonTypeChanging(value);
					this.SendPropertyChanging();
					this._STKORD_ReasonType = value;
					this.SendPropertyChanged("STKORD_ReasonType");
					this.OnSTKORD_ReasonTypeChanged();
				}
			}
		}
		
		[Column(Storage="_DeliverInvToAddress", DbType="VarChar(1024)")]
		public string DeliverInvToAddress
		{
			get
			{
				return this._DeliverInvToAddress;
			}
			set
			{
				if ((this._DeliverInvToAddress != value))
				{
					this.OnDeliverInvToAddressChanging(value);
					this.SendPropertyChanging();
					this._DeliverInvToAddress = value;
					this.SendPropertyChanged("DeliverInvToAddress");
					this.OnDeliverInvToAddressChanged();
				}
			}
		}
		
		[Column(Storage="_GoodService", DbType="Int NOT NULL")]
		public int GoodService
		{
			get
			{
				return this._GoodService;
			}
			set
			{
				if ((this._GoodService != value))
				{
					this.OnGoodServiceChanging(value);
					this.SendPropertyChanging();
					this._GoodService = value;
					this.SendPropertyChanged("GoodService");
					this.OnGoodServiceChanged();
				}
			}
		}
		
		[Column(Storage="_GLBusinessUnit", DbType="Int")]
		public System.Nullable<int> GLBusinessUnit
		{
			get
			{
				return this._GLBusinessUnit;
			}
			set
			{
				if ((this._GLBusinessUnit != value))
				{
					if (this._GL_BUSINESS_UNITS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLBusinessUnitChanging(value);
					this.SendPropertyChanging();
					this._GLBusinessUnit = value;
					this.SendPropertyChanged("GLBusinessUnit");
					this.OnGLBusinessUnitChanged();
				}
			}
		}
		
		[Column(Storage="_Actioner", DbType="Int")]
		public System.Nullable<int> Actioner
		{
			get
			{
				return this._Actioner;
			}
			set
			{
				if ((this._Actioner != value))
				{
					this.OnActionerChanging(value);
					this.SendPropertyChanging();
					this._Actioner = value;
					this.SendPropertyChanged("Actioner");
					this.OnActionerChanged();
				}
			}
		}
		
		[Column(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_BlanketInvoiceFreq", DbType="Int")]
		public System.Nullable<int> BlanketInvoiceFreq
		{
			get
			{
				return this._BlanketInvoiceFreq;
			}
			set
			{
				if ((this._BlanketInvoiceFreq != value))
				{
					this.OnBlanketInvoiceFreqChanging(value);
					this.SendPropertyChanging();
					this._BlanketInvoiceFreq = value;
					this.SendPropertyChanged("BlanketInvoiceFreq");
					this.OnBlanketInvoiceFreqChanged();
				}
			}
		}
		
		[Column(Storage="_Project", DbType="Int")]
		public System.Nullable<int> Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					if (this._ProjectPROJECT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[Association(Name="FK_INT_STOCK_TRANSFER_BATCH_ORDNUM", Storage="_INT_STOCK_TRANSFER_BATCH", ThisKey="OrdNum", OtherKey="OrdNum", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_TRANSFER_BATCH> INT_STOCK_TRANSFER_BATCH
		{
			get
			{
				return this._INT_STOCK_TRANSFER_BATCH;
			}
			set
			{
				this._INT_STOCK_TRANSFER_BATCH.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCKTRANSIT_PO", Storage="_INT_STOCKTRANSIT", ThisKey="OrdNum", OtherKey="OrdNum", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCKTRANSIT> INT_STOCKTRANSIT
		{
			get
			{
				return this._INT_STOCKTRANSIT;
			}
			set
			{
				this._INT_STOCKTRANSIT.Assign(value);
			}
		}
		
		[Association(Name="FK_STKORD_CREDITORS", Storage="_CREDITORS", ThisKey="SupplierCode", OtherKey="AccountID", IsForeignKey=true)]
		public CREDITORS CREDITORS
		{
			get
			{
				return this._CREDITORS.Entity;
			}
			set
			{
				CREDITORS previousValue = this._CREDITORS.Entity;
				if (((previousValue != value) 
							|| (this._CREDITORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CREDITORS.Entity = null;
						previousValue.STKORD.Remove(this);
					}
					this._CREDITORS.Entity = value;
					if ((value != null))
					{
						value.STKORD.Add(this);
						this._SupplierCode = value.AccountID;
					}
					else
					{
						this._SupplierCode = default(int);
					}
					this.SendPropertyChanged("CREDITORS");
				}
			}
		}
		
		[Association(Name="FK_STKORD_GL_BUSINESS_UNITS", Storage="_GL_BUSINESS_UNITS", ThisKey="GLBusinessUnit", OtherKey="GLBusinessUnitID", IsForeignKey=true)]
		public GL_BUSINESS_UNITS GL_BUSINESS_UNITS
		{
			get
			{
				return this._GL_BUSINESS_UNITS.Entity;
			}
			set
			{
				GL_BUSINESS_UNITS previousValue = this._GL_BUSINESS_UNITS.Entity;
				if (((previousValue != value) 
							|| (this._GL_BUSINESS_UNITS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_BUSINESS_UNITS.Entity = null;
						previousValue.STKORD.Remove(this);
					}
					this._GL_BUSINESS_UNITS.Entity = value;
					if ((value != null))
					{
						value.STKORD.Add(this);
						this._GLBusinessUnit = value.GLBusinessUnitID;
					}
					else
					{
						this._GLBusinessUnit = default(Nullable<int>);
					}
					this.SendPropertyChanged("GL_BUSINESS_UNITS");
				}
			}
		}
		
		[Association(Name="FK_STKORD_INT_STKORD_REASON", Storage="_INT_STKORD_REASON", ThisKey="STKORD_Reason", OtherKey="ReasonID", IsForeignKey=true)]
		public INT_STKORD_REASON INT_STKORD_REASON
		{
			get
			{
				return this._INT_STKORD_REASON.Entity;
			}
			set
			{
				INT_STKORD_REASON previousValue = this._INT_STKORD_REASON.Entity;
				if (((previousValue != value) 
							|| (this._INT_STKORD_REASON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_STKORD_REASON.Entity = null;
						previousValue.STKORD.Remove(this);
					}
					this._INT_STKORD_REASON.Entity = value;
					if ((value != null))
					{
						value.STKORD.Add(this);
						this._STKORD_Reason = value.ReasonID;
					}
					else
					{
						this._STKORD_Reason = default(Nullable<short>);
					}
					this.SendPropertyChanged("INT_STKORD_REASON");
				}
			}
		}
		
		[Association(Name="FK_STKORD_PROJECT", Storage="_ProjectPROJECT", ThisKey="Project", OtherKey="ProjectID", IsForeignKey=true)]
		public PROJECT ProjectPROJECT
		{
			get
			{
				return this._ProjectPROJECT.Entity;
			}
			set
			{
				PROJECT previousValue = this._ProjectPROJECT.Entity;
				if (((previousValue != value) 
							|| (this._ProjectPROJECT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectPROJECT.Entity = null;
						previousValue.STKORD.Remove(this);
					}
					this._ProjectPROJECT.Entity = value;
					if ((value != null))
					{
						value.STKORD.Add(this);
						this._Project = value.ProjectID;
					}
					else
					{
						this._Project = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProjectPROJECT");
				}
			}
		}
		
		[Association(Name="FK_STKORD_SENDTOLOCATION", Storage="_LOCATIONS", ThisKey="SendToLocation", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LOCATIONS
		{
			get
			{
				return this._LOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS.Entity = null;
						previousValue.STKORD.Remove(this);
					}
					this._LOCATIONS.Entity = value;
					if ((value != null))
					{
						value.STKORD.Add(this);
						this._SendToLocation = value.LocationID;
					}
					else
					{
						this._SendToLocation = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_STKORDITEM_STKORD", Storage="_STKORDITEM", ThisKey="OrdNum", OtherKey="OrdNum", DeleteRule="NO ACTION")]
		public EntitySet<STKORDITEM> STKORDITEM
		{
			get
			{
				return this._STKORDITEM;
			}
			set
			{
				this._STKORDITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_STKORD", Storage="_STOCK_RECEIVED", ThisKey="OrdNum", OtherKey="PurchaseNum", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_RECEIVED> STOCK_RECEIVED
		{
			get
			{
				return this._STOCK_RECEIVED;
			}
			set
			{
				this._STOCK_RECEIVED.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_STKORD_TMP", Storage="_STOCK_RECEIVED_TMP", ThisKey="OrdNum", OtherKey="PurchaseNum", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_RECEIVED_TMP> STOCK_RECEIVED_TMP
		{
			get
			{
				return this._STOCK_RECEIVED_TMP;
			}
			set
			{
				this._STOCK_RECEIVED_TMP.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INT_STOCK_TRANSFER_BATCH(INT_STOCK_TRANSFER_BATCH entity)
		{
			this.SendPropertyChanging();
			entity.STKORD = this;
		}
		
		private void detach_INT_STOCK_TRANSFER_BATCH(INT_STOCK_TRANSFER_BATCH entity)
		{
			this.SendPropertyChanging();
			entity.STKORD = null;
		}
		
		private void attach_INT_STOCKTRANSIT(INT_STOCKTRANSIT entity)
		{
			this.SendPropertyChanging();
			entity.STKORD = this;
		}
		
		private void detach_INT_STOCKTRANSIT(INT_STOCKTRANSIT entity)
		{
			this.SendPropertyChanging();
			entity.STKORD = null;
		}
		
		private void attach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.STKORD = this;
		}
		
		private void detach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.STKORD = null;
		}
		
		private void attach_STOCK_RECEIVED(STOCK_RECEIVED entity)
		{
			this.SendPropertyChanging();
			entity.STKORD = this;
		}
		
		private void detach_STOCK_RECEIVED(STOCK_RECEIVED entity)
		{
			this.SendPropertyChanging();
			entity.STKORD = null;
		}
		
		private void attach_STOCK_RECEIVED_TMP(STOCK_RECEIVED_TMP entity)
		{
			this.SendPropertyChanging();
			entity.STKORD = this;
		}
		
		private void detach_STOCK_RECEIVED_TMP(STOCK_RECEIVED_TMP entity)
		{
			this.SendPropertyChanging();
			entity.STKORD = null;
		}
	}
	
	[Table(Name="dbo.STKORDITEM")]
	public partial class STKORDITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemNum;
		
		private int _OrdNum;
		
		private string _ProdCode;
		
		private decimal _Cost;
		
		private System.Nullable<decimal> _Price;
		
		private string _Remarks;
		
		private System.Nullable<decimal> _Qty;
		
		private System.Nullable<System.DateTime> _ETA;
		
		private System.Nullable<short> _STKORD_Reason;
		
		private short _PrevQty;
		
		private System.Nullable<decimal> _Received;
		
		private System.Nullable<decimal> _CurrentReceived;
		
		private System.Nullable<decimal> _ReceivedCost;
		
		private System.Nullable<decimal> _USD;
		
		private System.Nullable<byte> _ReceiveState;
		
		private bool _Completed;
		
		private bool _LabelPrint;
		
		private System.Nullable<int> _RecItemNum;
		
		private string _Description;
		
		private string _ItemFor;
		
		private string _SerialNo;
		
		private System.Nullable<int> _Platform;
		
		private string _DisplayCode;
		
		private System.Nullable<int> _INT_ForReturn;
		
		private System.Nullable<decimal> _CalcFullEx;
		
		private System.Nullable<decimal> _CalcFullInc;
		
		private string _MachineType;
		
		private string _Model;
		
		private int _MovedQty;
		
		private System.Nullable<decimal> _Tax;
		
		private string _GLCode;
		
		private System.Nullable<decimal> _PrintedCost;
		
		private System.Nullable<int> _AssetCategory;
		
		private System.Nullable<int> _GLState;
		
		private System.Nullable<decimal> _PrintedQty;
		
		private bool _OneOffPricing;
		
		private System.Nullable<int> _Customer;
		
		private System.Nullable<int> _CostCategory;
		
		private System.Nullable<System.DateTime> _Due;
		
		private decimal _TaxRate;
		
		private string _Producer;
		
		private string _ProductType;
		
		private EntityRef<ASSET_CATEGORIES> _ASSET_CATEGORIES;
		
		private EntityRef<DEBTORS> _DEBTORS;
		
		private EntityRef<GL_STATES> _GL_STATES;
		
		private EntityRef<INT_PLATFORM> _INT_PLATFORM;
		
		private EntityRef<INT_STKORD_REASON> _INT_STKORD_REASON;
		
		private EntityRef<REVENUE_CATEGORIES> _REVENUE_CATEGORIES;
		
		private EntityRef<STKORD> _STKORD;
		
		private EntityRef<STOCK> _STOCK;
		
		private EntitySet<STOCK_RECEIVED> _STOCK_RECEIVED;
		
		private EntitySet<STOCK_RECEIVED_TMP> _STOCK_RECEIVED_TMP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemNumChanging(int value);
    partial void OnItemNumChanged();
    partial void OnOrdNumChanging(int value);
    partial void OnOrdNumChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnETAChanging(System.Nullable<System.DateTime> value);
    partial void OnETAChanged();
    partial void OnSTKORD_ReasonChanging(System.Nullable<short> value);
    partial void OnSTKORD_ReasonChanged();
    partial void OnPrevQtyChanging(short value);
    partial void OnPrevQtyChanged();
    partial void OnReceivedChanging(System.Nullable<decimal> value);
    partial void OnReceivedChanged();
    partial void OnCurrentReceivedChanging(System.Nullable<decimal> value);
    partial void OnCurrentReceivedChanged();
    partial void OnReceivedCostChanging(System.Nullable<decimal> value);
    partial void OnReceivedCostChanged();
    partial void OnUSDChanging(System.Nullable<decimal> value);
    partial void OnUSDChanged();
    partial void OnReceiveStateChanging(System.Nullable<byte> value);
    partial void OnReceiveStateChanged();
    partial void OnCompletedChanging(bool value);
    partial void OnCompletedChanged();
    partial void OnLabelPrintChanging(bool value);
    partial void OnLabelPrintChanged();
    partial void OnRecItemNumChanging(System.Nullable<int> value);
    partial void OnRecItemNumChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnItemForChanging(string value);
    partial void OnItemForChanged();
    partial void OnSerialNoChanging(string value);
    partial void OnSerialNoChanged();
    partial void OnPlatformChanging(System.Nullable<int> value);
    partial void OnPlatformChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnINT_ForReturnChanging(System.Nullable<int> value);
    partial void OnINT_ForReturnChanged();
    partial void OnCalcFullExChanging(System.Nullable<decimal> value);
    partial void OnCalcFullExChanged();
    partial void OnCalcFullIncChanging(System.Nullable<decimal> value);
    partial void OnCalcFullIncChanged();
    partial void OnMachineTypeChanging(string value);
    partial void OnMachineTypeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnMovedQtyChanging(int value);
    partial void OnMovedQtyChanged();
    partial void OnTaxChanging(System.Nullable<decimal> value);
    partial void OnTaxChanged();
    partial void OnGLCodeChanging(string value);
    partial void OnGLCodeChanged();
    partial void OnPrintedCostChanging(System.Nullable<decimal> value);
    partial void OnPrintedCostChanged();
    partial void OnAssetCategoryChanging(System.Nullable<int> value);
    partial void OnAssetCategoryChanged();
    partial void OnGLStateChanging(System.Nullable<int> value);
    partial void OnGLStateChanged();
    partial void OnPrintedQtyChanging(System.Nullable<decimal> value);
    partial void OnPrintedQtyChanged();
    partial void OnOneOffPricingChanging(bool value);
    partial void OnOneOffPricingChanged();
    partial void OnCustomerChanging(System.Nullable<int> value);
    partial void OnCustomerChanged();
    partial void OnCostCategoryChanging(System.Nullable<int> value);
    partial void OnCostCategoryChanged();
    partial void OnDueChanging(System.Nullable<System.DateTime> value);
    partial void OnDueChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnProducerChanging(string value);
    partial void OnProducerChanged();
    partial void OnProductTypeChanging(string value);
    partial void OnProductTypeChanged();
    #endregion
		
		public STKORDITEM()
		{
			this._ASSET_CATEGORIES = default(EntityRef<ASSET_CATEGORIES>);
			this._DEBTORS = default(EntityRef<DEBTORS>);
			this._GL_STATES = default(EntityRef<GL_STATES>);
			this._INT_PLATFORM = default(EntityRef<INT_PLATFORM>);
			this._INT_STKORD_REASON = default(EntityRef<INT_STKORD_REASON>);
			this._REVENUE_CATEGORIES = default(EntityRef<REVENUE_CATEGORIES>);
			this._STKORD = default(EntityRef<STKORD>);
			this._STOCK = default(EntityRef<STOCK>);
			this._STOCK_RECEIVED = new EntitySet<STOCK_RECEIVED>(new Action<STOCK_RECEIVED>(this.attach_STOCK_RECEIVED), new Action<STOCK_RECEIVED>(this.detach_STOCK_RECEIVED));
			this._STOCK_RECEIVED_TMP = new EntitySet<STOCK_RECEIVED_TMP>(new Action<STOCK_RECEIVED_TMP>(this.attach_STOCK_RECEIVED_TMP), new Action<STOCK_RECEIVED_TMP>(this.detach_STOCK_RECEIVED_TMP));
			OnCreated();
		}
		
		[Column(Storage="_ItemNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemNum
		{
			get
			{
				return this._ItemNum;
			}
			set
			{
				if ((this._ItemNum != value))
				{
					this.OnItemNumChanging(value);
					this.SendPropertyChanging();
					this._ItemNum = value;
					this.SendPropertyChanged("ItemNum");
					this.OnItemNumChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int NOT NULL")]
		public int OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					if (this._STKORD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Cost", DbType="Decimal(9,2) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="VarChar(128)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[Column(Name="qty", Storage="_Qty", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_ETA", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ETA
		{
			get
			{
				return this._ETA;
			}
			set
			{
				if ((this._ETA != value))
				{
					this.OnETAChanging(value);
					this.SendPropertyChanging();
					this._ETA = value;
					this.SendPropertyChanged("ETA");
					this.OnETAChanged();
				}
			}
		}
		
		[Column(Storage="_STKORD_Reason", DbType="SmallInt")]
		public System.Nullable<short> STKORD_Reason
		{
			get
			{
				return this._STKORD_Reason;
			}
			set
			{
				if ((this._STKORD_Reason != value))
				{
					if (this._INT_STKORD_REASON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTKORD_ReasonChanging(value);
					this.SendPropertyChanging();
					this._STKORD_Reason = value;
					this.SendPropertyChanged("STKORD_Reason");
					this.OnSTKORD_ReasonChanged();
				}
			}
		}
		
		[Column(Storage="_PrevQty", DbType="SmallInt NOT NULL")]
		public short PrevQty
		{
			get
			{
				return this._PrevQty;
			}
			set
			{
				if ((this._PrevQty != value))
				{
					this.OnPrevQtyChanging(value);
					this.SendPropertyChanging();
					this._PrevQty = value;
					this.SendPropertyChanged("PrevQty");
					this.OnPrevQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Received", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Received
		{
			get
			{
				return this._Received;
			}
			set
			{
				if ((this._Received != value))
				{
					this.OnReceivedChanging(value);
					this.SendPropertyChanging();
					this._Received = value;
					this.SendPropertyChanged("Received");
					this.OnReceivedChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentReceived", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> CurrentReceived
		{
			get
			{
				return this._CurrentReceived;
			}
			set
			{
				if ((this._CurrentReceived != value))
				{
					this.OnCurrentReceivedChanging(value);
					this.SendPropertyChanging();
					this._CurrentReceived = value;
					this.SendPropertyChanged("CurrentReceived");
					this.OnCurrentReceivedChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivedCost", DbType="Money")]
		public System.Nullable<decimal> ReceivedCost
		{
			get
			{
				return this._ReceivedCost;
			}
			set
			{
				if ((this._ReceivedCost != value))
				{
					this.OnReceivedCostChanging(value);
					this.SendPropertyChanging();
					this._ReceivedCost = value;
					this.SendPropertyChanged("ReceivedCost");
					this.OnReceivedCostChanged();
				}
			}
		}
		
		[Column(Storage="_USD", DbType="Money")]
		public System.Nullable<decimal> USD
		{
			get
			{
				return this._USD;
			}
			set
			{
				if ((this._USD != value))
				{
					this.OnUSDChanging(value);
					this.SendPropertyChanging();
					this._USD = value;
					this.SendPropertyChanged("USD");
					this.OnUSDChanged();
				}
			}
		}
		
		[Column(Storage="_ReceiveState", DbType="TinyInt")]
		public System.Nullable<byte> ReceiveState
		{
			get
			{
				return this._ReceiveState;
			}
			set
			{
				if ((this._ReceiveState != value))
				{
					this.OnReceiveStateChanging(value);
					this.SendPropertyChanging();
					this._ReceiveState = value;
					this.SendPropertyChanged("ReceiveState");
					this.OnReceiveStateChanged();
				}
			}
		}
		
		[Column(Storage="_Completed", DbType="Bit NOT NULL")]
		public bool Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_LabelPrint", DbType="Bit NOT NULL")]
		public bool LabelPrint
		{
			get
			{
				return this._LabelPrint;
			}
			set
			{
				if ((this._LabelPrint != value))
				{
					this.OnLabelPrintChanging(value);
					this.SendPropertyChanging();
					this._LabelPrint = value;
					this.SendPropertyChanged("LabelPrint");
					this.OnLabelPrintChanged();
				}
			}
		}
		
		[Column(Storage="_RecItemNum", DbType="Int")]
		public System.Nullable<int> RecItemNum
		{
			get
			{
				return this._RecItemNum;
			}
			set
			{
				if ((this._RecItemNum != value))
				{
					this.OnRecItemNumChanging(value);
					this.SendPropertyChanging();
					this._RecItemNum = value;
					this.SendPropertyChanged("RecItemNum");
					this.OnRecItemNumChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_ItemFor", DbType="VarChar(16)")]
		public string ItemFor
		{
			get
			{
				return this._ItemFor;
			}
			set
			{
				if ((this._ItemFor != value))
				{
					this.OnItemForChanging(value);
					this.SendPropertyChanging();
					this._ItemFor = value;
					this.SendPropertyChanged("ItemFor");
					this.OnItemForChanged();
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="VarChar(32)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[Column(Storage="_Platform", DbType="Int")]
		public System.Nullable<int> Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					if (this._INT_PLATFORM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlatformChanging(value);
					this.SendPropertyChanging();
					this._Platform = value;
					this.SendPropertyChanged("Platform");
					this.OnPlatformChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayCode", DbType="VarChar(35)")]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[Column(Storage="_INT_ForReturn", DbType="Int")]
		public System.Nullable<int> INT_ForReturn
		{
			get
			{
				return this._INT_ForReturn;
			}
			set
			{
				if ((this._INT_ForReturn != value))
				{
					this.OnINT_ForReturnChanging(value);
					this.SendPropertyChanging();
					this._INT_ForReturn = value;
					this.SendPropertyChanged("INT_ForReturn");
					this.OnINT_ForReturnChanged();
				}
			}
		}
		
		[Column(Storage="_CalcFullEx", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> CalcFullEx
		{
			get
			{
				return this._CalcFullEx;
			}
			set
			{
				if ((this._CalcFullEx != value))
				{
					this.OnCalcFullExChanging(value);
					this.SendPropertyChanging();
					this._CalcFullEx = value;
					this.SendPropertyChanged("CalcFullEx");
					this.OnCalcFullExChanged();
				}
			}
		}
		
		[Column(Storage="_CalcFullInc", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> CalcFullInc
		{
			get
			{
				return this._CalcFullInc;
			}
			set
			{
				if ((this._CalcFullInc != value))
				{
					this.OnCalcFullIncChanging(value);
					this.SendPropertyChanging();
					this._CalcFullInc = value;
					this.SendPropertyChanged("CalcFullInc");
					this.OnCalcFullIncChanged();
				}
			}
		}
		
		[Column(Storage="_MachineType", DbType="VarChar(50)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this.OnMachineTypeChanging(value);
					this.SendPropertyChanging();
					this._MachineType = value;
					this.SendPropertyChanged("MachineType");
					this.OnMachineTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Model", DbType="VarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[Column(Storage="_MovedQty", DbType="Int NOT NULL")]
		public int MovedQty
		{
			get
			{
				return this._MovedQty;
			}
			set
			{
				if ((this._MovedQty != value))
				{
					this.OnMovedQtyChanging(value);
					this.SendPropertyChanging();
					this._MovedQty = value;
					this.SendPropertyChanged("MovedQty");
					this.OnMovedQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Tax", DbType="Money")]
		public System.Nullable<decimal> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[Column(Storage="_GLCode", DbType="VarChar(16)")]
		public string GLCode
		{
			get
			{
				return this._GLCode;
			}
			set
			{
				if ((this._GLCode != value))
				{
					this.OnGLCodeChanging(value);
					this.SendPropertyChanging();
					this._GLCode = value;
					this.SendPropertyChanged("GLCode");
					this.OnGLCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PrintedCost", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PrintedCost
		{
			get
			{
				return this._PrintedCost;
			}
			set
			{
				if ((this._PrintedCost != value))
				{
					this.OnPrintedCostChanging(value);
					this.SendPropertyChanging();
					this._PrintedCost = value;
					this.SendPropertyChanged("PrintedCost");
					this.OnPrintedCostChanged();
				}
			}
		}
		
		[Column(Storage="_AssetCategory", DbType="Int")]
		public System.Nullable<int> AssetCategory
		{
			get
			{
				return this._AssetCategory;
			}
			set
			{
				if ((this._AssetCategory != value))
				{
					if (this._ASSET_CATEGORIES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetCategoryChanging(value);
					this.SendPropertyChanging();
					this._AssetCategory = value;
					this.SendPropertyChanged("AssetCategory");
					this.OnAssetCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_GLState", DbType="Int")]
		public System.Nullable<int> GLState
		{
			get
			{
				return this._GLState;
			}
			set
			{
				if ((this._GLState != value))
				{
					if (this._GL_STATES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLStateChanging(value);
					this.SendPropertyChanging();
					this._GLState = value;
					this.SendPropertyChanged("GLState");
					this.OnGLStateChanged();
				}
			}
		}
		
		[Column(Storage="_PrintedQty", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PrintedQty
		{
			get
			{
				return this._PrintedQty;
			}
			set
			{
				if ((this._PrintedQty != value))
				{
					this.OnPrintedQtyChanging(value);
					this.SendPropertyChanging();
					this._PrintedQty = value;
					this.SendPropertyChanged("PrintedQty");
					this.OnPrintedQtyChanged();
				}
			}
		}
		
		[Column(Storage="_OneOffPricing", DbType="Bit NOT NULL")]
		public bool OneOffPricing
		{
			get
			{
				return this._OneOffPricing;
			}
			set
			{
				if ((this._OneOffPricing != value))
				{
					this.OnOneOffPricingChanging(value);
					this.SendPropertyChanging();
					this._OneOffPricing = value;
					this.SendPropertyChanged("OneOffPricing");
					this.OnOneOffPricingChanged();
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="Int")]
		public System.Nullable<int> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					if (this._DEBTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_CostCategory", DbType="Int")]
		public System.Nullable<int> CostCategory
		{
			get
			{
				return this._CostCategory;
			}
			set
			{
				if ((this._CostCategory != value))
				{
					if (this._REVENUE_CATEGORIES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostCategoryChanging(value);
					this.SendPropertyChanging();
					this._CostCategory = value;
					this.SendPropertyChanged("CostCategory");
					this.OnCostCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_Due", DbType="DateTime")]
		public System.Nullable<System.DateTime> Due
		{
			get
			{
				return this._Due;
			}
			set
			{
				if ((this._Due != value))
				{
					this.OnDueChanging(value);
					this.SendPropertyChanging();
					this._Due = value;
					this.SendPropertyChanged("Due");
					this.OnDueChanged();
				}
			}
		}
		
		[Column(Storage="_TaxRate", DbType="Decimal(9,2) NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[Column(Storage="_Producer", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Producer
		{
			get
			{
				return this._Producer;
			}
			set
			{
				if ((this._Producer != value))
				{
					this.OnProducerChanging(value);
					this.SendPropertyChanging();
					this._Producer = value;
					this.SendPropertyChanged("Producer");
					this.OnProducerChanged();
				}
			}
		}
		
		[Column(Storage="_ProductType", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this.OnProductTypeChanging(value);
					this.SendPropertyChanging();
					this._ProductType = value;
					this.SendPropertyChanged("ProductType");
					this.OnProductTypeChanged();
				}
			}
		}
		
		[Association(Name="FK_STKORDITEM_ASSET_CATEGORIES", Storage="_ASSET_CATEGORIES", ThisKey="AssetCategory", OtherKey="AssetCategoryId", IsForeignKey=true)]
		public ASSET_CATEGORIES ASSET_CATEGORIES
		{
			get
			{
				return this._ASSET_CATEGORIES.Entity;
			}
			set
			{
				ASSET_CATEGORIES previousValue = this._ASSET_CATEGORIES.Entity;
				if (((previousValue != value) 
							|| (this._ASSET_CATEGORIES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ASSET_CATEGORIES.Entity = null;
						previousValue.STKORDITEM.Remove(this);
					}
					this._ASSET_CATEGORIES.Entity = value;
					if ((value != null))
					{
						value.STKORDITEM.Add(this);
						this._AssetCategory = value.AssetCategoryId;
					}
					else
					{
						this._AssetCategory = default(Nullable<int>);
					}
					this.SendPropertyChanged("ASSET_CATEGORIES");
				}
			}
		}
		
		[Association(Name="FK_STKORDITEM_DEBTORS", Storage="_DEBTORS", ThisKey="Customer", OtherKey="AccountID", IsForeignKey=true)]
		public DEBTORS DEBTORS
		{
			get
			{
				return this._DEBTORS.Entity;
			}
			set
			{
				DEBTORS previousValue = this._DEBTORS.Entity;
				if (((previousValue != value) 
							|| (this._DEBTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBTORS.Entity = null;
						previousValue.STKORDITEM.Remove(this);
					}
					this._DEBTORS.Entity = value;
					if ((value != null))
					{
						value.STKORDITEM.Add(this);
						this._Customer = value.AccountID;
					}
					else
					{
						this._Customer = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEBTORS");
				}
			}
		}
		
		[Association(Name="FK_STKORDITEM_GL_STATES", Storage="_GL_STATES", ThisKey="GLState", OtherKey="GLStateID", IsForeignKey=true)]
		public GL_STATES GL_STATES
		{
			get
			{
				return this._GL_STATES.Entity;
			}
			set
			{
				GL_STATES previousValue = this._GL_STATES.Entity;
				if (((previousValue != value) 
							|| (this._GL_STATES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL_STATES.Entity = null;
						previousValue.STKORDITEM.Remove(this);
					}
					this._GL_STATES.Entity = value;
					if ((value != null))
					{
						value.STKORDITEM.Add(this);
						this._GLState = value.GLStateID;
					}
					else
					{
						this._GLState = default(Nullable<int>);
					}
					this.SendPropertyChanged("GL_STATES");
				}
			}
		}
		
		[Association(Name="FK_STKORDITEM_INT_PLATFORM", Storage="_INT_PLATFORM", ThisKey="Platform", OtherKey="PlatformID", IsForeignKey=true)]
		public INT_PLATFORM INT_PLATFORM
		{
			get
			{
				return this._INT_PLATFORM.Entity;
			}
			set
			{
				INT_PLATFORM previousValue = this._INT_PLATFORM.Entity;
				if (((previousValue != value) 
							|| (this._INT_PLATFORM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_PLATFORM.Entity = null;
						previousValue.STKORDITEM.Remove(this);
					}
					this._INT_PLATFORM.Entity = value;
					if ((value != null))
					{
						value.STKORDITEM.Add(this);
						this._Platform = value.PlatformID;
					}
					else
					{
						this._Platform = default(Nullable<int>);
					}
					this.SendPropertyChanged("INT_PLATFORM");
				}
			}
		}
		
		[Association(Name="FK_STKORDITEM_INT_STKORD_REASON", Storage="_INT_STKORD_REASON", ThisKey="STKORD_Reason", OtherKey="ReasonID", IsForeignKey=true)]
		public INT_STKORD_REASON INT_STKORD_REASON
		{
			get
			{
				return this._INT_STKORD_REASON.Entity;
			}
			set
			{
				INT_STKORD_REASON previousValue = this._INT_STKORD_REASON.Entity;
				if (((previousValue != value) 
							|| (this._INT_STKORD_REASON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_STKORD_REASON.Entity = null;
						previousValue.STKORDITEM.Remove(this);
					}
					this._INT_STKORD_REASON.Entity = value;
					if ((value != null))
					{
						value.STKORDITEM.Add(this);
						this._STKORD_Reason = value.ReasonID;
					}
					else
					{
						this._STKORD_Reason = default(Nullable<short>);
					}
					this.SendPropertyChanged("INT_STKORD_REASON");
				}
			}
		}
		
		[Association(Name="FK_STKORDITEM_REVENUE_CATEGORIES", Storage="_REVENUE_CATEGORIES", ThisKey="CostCategory", OtherKey="RevenueCategoryId", IsForeignKey=true)]
		public REVENUE_CATEGORIES REVENUE_CATEGORIES
		{
			get
			{
				return this._REVENUE_CATEGORIES.Entity;
			}
			set
			{
				REVENUE_CATEGORIES previousValue = this._REVENUE_CATEGORIES.Entity;
				if (((previousValue != value) 
							|| (this._REVENUE_CATEGORIES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REVENUE_CATEGORIES.Entity = null;
						previousValue.STKORDITEM.Remove(this);
					}
					this._REVENUE_CATEGORIES.Entity = value;
					if ((value != null))
					{
						value.STKORDITEM.Add(this);
						this._CostCategory = value.RevenueCategoryId;
					}
					else
					{
						this._CostCategory = default(Nullable<int>);
					}
					this.SendPropertyChanged("REVENUE_CATEGORIES");
				}
			}
		}
		
		[Association(Name="FK_STKORDITEM_STKORD", Storage="_STKORD", ThisKey="OrdNum", OtherKey="OrdNum", IsForeignKey=true)]
		public STKORD STKORD
		{
			get
			{
				return this._STKORD.Entity;
			}
			set
			{
				STKORD previousValue = this._STKORD.Entity;
				if (((previousValue != value) 
							|| (this._STKORD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STKORD.Entity = null;
						previousValue.STKORDITEM.Remove(this);
					}
					this._STKORD.Entity = value;
					if ((value != null))
					{
						value.STKORDITEM.Add(this);
						this._OrdNum = value.OrdNum;
					}
					else
					{
						this._OrdNum = default(int);
					}
					this.SendPropertyChanged("STKORD");
				}
			}
		}
		
		[Association(Name="FK_STKORDITEM_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.STKORDITEM.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.STKORDITEM.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_STKORDITEM", Storage="_STOCK_RECEIVED", ThisKey="ItemNum", OtherKey="StkOrdItem", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_RECEIVED> STOCK_RECEIVED
		{
			get
			{
				return this._STOCK_RECEIVED;
			}
			set
			{
				this._STOCK_RECEIVED.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_STKORDITEM_TMP", Storage="_STOCK_RECEIVED_TMP", ThisKey="ItemNum", OtherKey="StkOrdItem", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_RECEIVED_TMP> STOCK_RECEIVED_TMP
		{
			get
			{
				return this._STOCK_RECEIVED_TMP;
			}
			set
			{
				this._STOCK_RECEIVED_TMP.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STOCK_RECEIVED(STOCK_RECEIVED entity)
		{
			this.SendPropertyChanging();
			entity.StkOrdItemSTKORDITEM = this;
		}
		
		private void detach_STOCK_RECEIVED(STOCK_RECEIVED entity)
		{
			this.SendPropertyChanging();
			entity.StkOrdItemSTKORDITEM = null;
		}
		
		private void attach_STOCK_RECEIVED_TMP(STOCK_RECEIVED_TMP entity)
		{
			this.SendPropertyChanging();
			entity.StkOrdItemSTKORDITEM = this;
		}
		
		private void detach_STOCK_RECEIVED_TMP(STOCK_RECEIVED_TMP entity)
		{
			this.SendPropertyChanging();
			entity.StkOrdItemSTKORDITEM = null;
		}
	}
	
	[Table(Name="dbo.STOCK")]
	public partial class STOCK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProdCode;
		
		private string _XRefCode;
		
		private string _DistribCode;
		
		private string _SupProdCode;
		
		private string _Type;
		
		private System.Nullable<bool> _Available;
		
		private string _Description;
		
		private string _CardNum;
		
		private string _PriceUnit;
		
		private System.Nullable<decimal> _SupplierCost;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<decimal> _AvgCost;
		
		private System.Nullable<int> _Minimum;
		
		private System.Nullable<int> _Maximum;
		
		private System.Nullable<decimal> _PrevStock;
		
		private string _UPC;
		
		private string _Rep;
		
		private string _SupplierCode;
		
		private string _SupplierCode1;
		
		private string _SupplierCode2;
		
		private string _SupplierCode3;
		
		private System.Nullable<decimal> _MTD_UNITS;
		
		private System.Nullable<decimal> _MTD_COST;
		
		private System.Nullable<decimal> _YTD_UNITS;
		
		private System.Nullable<decimal> _YTD_COST;
		
		private System.Nullable<decimal> _LY_UNITS;
		
		private System.Nullable<decimal> _LY_COST;
		
		private System.Nullable<decimal> _TodayUnits;
		
		private System.Nullable<int> _AvgLast15;
		
		private System.Nullable<int> _AvgLast6;
		
		private System.Nullable<int> _AvgLast3;
		
		private System.Nullable<int> _SuggOrd;
		
		private System.Nullable<bool> _Accepted;
		
		private System.Nullable<int> _SuggOrdAv;
		
		private System.Nullable<bool> _AcceptedAv;
		
		private string _Specifications;
		
		private string _InternalNotes;
		
		private System.Nullable<decimal> _ReStockMin;
		
		private System.Nullable<bool> _Discontinued;
		
		private System.Nullable<System.DateTime> _DateDiscontinued;
		
		private System.Nullable<decimal> _TaxRate;
		
		private string _Group;
		
		private string _Brand;
		
		private string _MachineType;
		
		private string _DeviceCode;
		
		private System.Nullable<decimal> _PRICE;
		
		private string _Model;
		
		private System.Nullable<int> _RevenueCategory;
		
		private string _INT_SerialNo;
		
		private System.Nullable<int> _PartsType;
		
		private bool _ExcludeFromSnapshot;
		
		private bool _CarbonTaxEligible;
		
		private System.Nullable<decimal> _Price24x7x2;
		
		private System.Nullable<decimal> _Price9x5x4;
		
		private System.Nullable<decimal> _Price24x7x4;
		
		private System.Nullable<decimal> _Price9x5x2;
		
		private System.Nullable<System.DateTime> _PricesLastUpdated;
		
		private string _PricesSource;
		
		private EntitySet<INT_STOCK_ALIAS> _INT_STOCK_ALIAS;
		
		private EntitySet<INT_STOCK_COMPATIBILITY> _INT_STOCK_COMPATIBILITY;
		
		private EntitySet<CTRAC_ITEM> _CTRAC_ITEM;
		
		private EntitySet<DEBTORS_3P_INVOICES_ITEMS> _DEBTORS_3P_INVOICES_ITEMS;
		
		private EntitySet<DEPARTMENTS> _DEPARTMENTS;
		
		private EntitySet<INT_STOCK_BM> _INT_STOCK_BM;
		
		private EntitySet<INT_STOCK_BM> _ProdCodeINT_STOCK_BM;
		
		private EntitySet<INT_STOCK_COMPATIBILITY> _ProdCodeINT_STOCK_COMPATIBILITY;
		
		private EntitySet<INT_STOCK_LOC_SPECIFIC> _INT_STOCK_LOC_SPECIFIC;
		
		private EntitySet<INT_STOCK_OUTAGE> _INT_STOCK_OUTAGE;
		
		private EntitySet<INT_STOCK_USAGE> _INT_STOCK_USAGE;
		
		private EntitySet<INT_STOCKTRANSIT> _INT_STOCKTRANSIT;
		
		private EntitySet<PARTS_MERGE> _PARTS_MERGE;
		
		private EntitySet<SALEITEM> _SALEITEM;
		
		private EntitySet<STKORDITEM> _STKORDITEM;
		
		private EntityRef<STOCK_BRANDS> _STOCK_BRANDS;
		
		private EntitySet<STOCK_RECEIVED> _STOCK_RECEIVED;
		
		private EntitySet<STOCK_RECEIVED_TMP> _STOCK_RECEIVED_TMP;
		
		private EntityRef<REVENUE_CATEGORIES> _REVENUE_CATEGORIES;
		
		private EntitySet<STOCK_SHELF_LOCATIONS_POVALUES> _STOCK_SHELF_LOCATIONS_POVALUES;
		
		private EntitySet<STOCK_SHELF_LOCATIONS> _STOCK_SHELF_LOCATIONS;
		
		private EntitySet<STOCK_SNAPSHOT> _STOCK_SNAPSHOT;
		
		private EntityRef<STOCK_TEMP> _STOCK_TEMP;
		
		private EntitySet<STOCK_TRANSFER> _STOCK_TRANSFER;
		
		private EntitySet<STOCK_UPDATE_HISTORY> _STOCK_UPDATE_HISTORY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnXRefCodeChanging(string value);
    partial void OnXRefCodeChanged();
    partial void OnDistribCodeChanging(string value);
    partial void OnDistribCodeChanged();
    partial void OnSupProdCodeChanging(string value);
    partial void OnSupProdCodeChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAvailableChanging(System.Nullable<bool> value);
    partial void OnAvailableChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCardNumChanging(string value);
    partial void OnCardNumChanged();
    partial void OnPriceUnitChanging(string value);
    partial void OnPriceUnitChanged();
    partial void OnSupplierCostChanging(System.Nullable<decimal> value);
    partial void OnSupplierCostChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnAvgCostChanging(System.Nullable<decimal> value);
    partial void OnAvgCostChanged();
    partial void OnMinimumChanging(System.Nullable<int> value);
    partial void OnMinimumChanged();
    partial void OnMaximumChanging(System.Nullable<int> value);
    partial void OnMaximumChanged();
    partial void OnPrevStockChanging(System.Nullable<decimal> value);
    partial void OnPrevStockChanged();
    partial void OnUPCChanging(string value);
    partial void OnUPCChanged();
    partial void OnRepChanging(string value);
    partial void OnRepChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnSupplierCode1Changing(string value);
    partial void OnSupplierCode1Changed();
    partial void OnSupplierCode2Changing(string value);
    partial void OnSupplierCode2Changed();
    partial void OnSupplierCode3Changing(string value);
    partial void OnSupplierCode3Changed();
    partial void OnMTD_UNITSChanging(System.Nullable<decimal> value);
    partial void OnMTD_UNITSChanged();
    partial void OnMTD_COSTChanging(System.Nullable<decimal> value);
    partial void OnMTD_COSTChanged();
    partial void OnYTD_UNITSChanging(System.Nullable<decimal> value);
    partial void OnYTD_UNITSChanged();
    partial void OnYTD_COSTChanging(System.Nullable<decimal> value);
    partial void OnYTD_COSTChanged();
    partial void OnLY_UNITSChanging(System.Nullable<decimal> value);
    partial void OnLY_UNITSChanged();
    partial void OnLY_COSTChanging(System.Nullable<decimal> value);
    partial void OnLY_COSTChanged();
    partial void OnTodayUnitsChanging(System.Nullable<decimal> value);
    partial void OnTodayUnitsChanged();
    partial void OnAvgLast15Changing(System.Nullable<int> value);
    partial void OnAvgLast15Changed();
    partial void OnAvgLast6Changing(System.Nullable<int> value);
    partial void OnAvgLast6Changed();
    partial void OnAvgLast3Changing(System.Nullable<int> value);
    partial void OnAvgLast3Changed();
    partial void OnSuggOrdChanging(System.Nullable<int> value);
    partial void OnSuggOrdChanged();
    partial void OnAcceptedChanging(System.Nullable<bool> value);
    partial void OnAcceptedChanged();
    partial void OnSuggOrdAvChanging(System.Nullable<int> value);
    partial void OnSuggOrdAvChanged();
    partial void OnAcceptedAvChanging(System.Nullable<bool> value);
    partial void OnAcceptedAvChanged();
    partial void OnSpecificationsChanging(string value);
    partial void OnSpecificationsChanged();
    partial void OnInternalNotesChanging(string value);
    partial void OnInternalNotesChanged();
    partial void OnReStockMinChanging(System.Nullable<decimal> value);
    partial void OnReStockMinChanged();
    partial void OnDiscontinuedChanging(System.Nullable<bool> value);
    partial void OnDiscontinuedChanged();
    partial void OnDateDiscontinuedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDiscontinuedChanged();
    partial void OnTaxRateChanging(System.Nullable<decimal> value);
    partial void OnTaxRateChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnMachineTypeChanging(string value);
    partial void OnMachineTypeChanged();
    partial void OnDeviceCodeChanging(string value);
    partial void OnDeviceCodeChanged();
    partial void OnPRICEChanging(System.Nullable<decimal> value);
    partial void OnPRICEChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnRevenueCategoryChanging(System.Nullable<int> value);
    partial void OnRevenueCategoryChanged();
    partial void OnINT_SerialNoChanging(string value);
    partial void OnINT_SerialNoChanged();
    partial void OnPartsTypeChanging(System.Nullable<int> value);
    partial void OnPartsTypeChanged();
    partial void OnExcludeFromSnapshotChanging(bool value);
    partial void OnExcludeFromSnapshotChanged();
    partial void OnCarbonTaxEligibleChanging(bool value);
    partial void OnCarbonTaxEligibleChanged();
    partial void OnPrice24x7x2Changing(System.Nullable<decimal> value);
    partial void OnPrice24x7x2Changed();
    partial void OnPrice9x5x4Changing(System.Nullable<decimal> value);
    partial void OnPrice9x5x4Changed();
    partial void OnPrice24x7x4Changing(System.Nullable<decimal> value);
    partial void OnPrice24x7x4Changed();
    partial void OnPrice9x5x2Changing(System.Nullable<decimal> value);
    partial void OnPrice9x5x2Changed();
    partial void OnPricesLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnPricesLastUpdatedChanged();
    partial void OnPricesSourceChanging(string value);
    partial void OnPricesSourceChanged();
    #endregion
		
		public STOCK()
		{
			this._INT_STOCK_ALIAS = new EntitySet<INT_STOCK_ALIAS>(new Action<INT_STOCK_ALIAS>(this.attach_INT_STOCK_ALIAS), new Action<INT_STOCK_ALIAS>(this.detach_INT_STOCK_ALIAS));
			this._INT_STOCK_COMPATIBILITY = new EntitySet<INT_STOCK_COMPATIBILITY>(new Action<INT_STOCK_COMPATIBILITY>(this.attach_INT_STOCK_COMPATIBILITY), new Action<INT_STOCK_COMPATIBILITY>(this.detach_INT_STOCK_COMPATIBILITY));
			this._CTRAC_ITEM = new EntitySet<CTRAC_ITEM>(new Action<CTRAC_ITEM>(this.attach_CTRAC_ITEM), new Action<CTRAC_ITEM>(this.detach_CTRAC_ITEM));
			this._DEBTORS_3P_INVOICES_ITEMS = new EntitySet<DEBTORS_3P_INVOICES_ITEMS>(new Action<DEBTORS_3P_INVOICES_ITEMS>(this.attach_DEBTORS_3P_INVOICES_ITEMS), new Action<DEBTORS_3P_INVOICES_ITEMS>(this.detach_DEBTORS_3P_INVOICES_ITEMS));
			this._DEPARTMENTS = new EntitySet<DEPARTMENTS>(new Action<DEPARTMENTS>(this.attach_DEPARTMENTS), new Action<DEPARTMENTS>(this.detach_DEPARTMENTS));
			this._INT_STOCK_BM = new EntitySet<INT_STOCK_BM>(new Action<INT_STOCK_BM>(this.attach_INT_STOCK_BM), new Action<INT_STOCK_BM>(this.detach_INT_STOCK_BM));
			this._ProdCodeINT_STOCK_BM = new EntitySet<INT_STOCK_BM>(new Action<INT_STOCK_BM>(this.attach_ProdCodeINT_STOCK_BM), new Action<INT_STOCK_BM>(this.detach_ProdCodeINT_STOCK_BM));
			this._ProdCodeINT_STOCK_COMPATIBILITY = new EntitySet<INT_STOCK_COMPATIBILITY>(new Action<INT_STOCK_COMPATIBILITY>(this.attach_ProdCodeINT_STOCK_COMPATIBILITY), new Action<INT_STOCK_COMPATIBILITY>(this.detach_ProdCodeINT_STOCK_COMPATIBILITY));
			this._INT_STOCK_LOC_SPECIFIC = new EntitySet<INT_STOCK_LOC_SPECIFIC>(new Action<INT_STOCK_LOC_SPECIFIC>(this.attach_INT_STOCK_LOC_SPECIFIC), new Action<INT_STOCK_LOC_SPECIFIC>(this.detach_INT_STOCK_LOC_SPECIFIC));
			this._INT_STOCK_OUTAGE = new EntitySet<INT_STOCK_OUTAGE>(new Action<INT_STOCK_OUTAGE>(this.attach_INT_STOCK_OUTAGE), new Action<INT_STOCK_OUTAGE>(this.detach_INT_STOCK_OUTAGE));
			this._INT_STOCK_USAGE = new EntitySet<INT_STOCK_USAGE>(new Action<INT_STOCK_USAGE>(this.attach_INT_STOCK_USAGE), new Action<INT_STOCK_USAGE>(this.detach_INT_STOCK_USAGE));
			this._INT_STOCKTRANSIT = new EntitySet<INT_STOCKTRANSIT>(new Action<INT_STOCKTRANSIT>(this.attach_INT_STOCKTRANSIT), new Action<INT_STOCKTRANSIT>(this.detach_INT_STOCKTRANSIT));
			this._PARTS_MERGE = new EntitySet<PARTS_MERGE>(new Action<PARTS_MERGE>(this.attach_PARTS_MERGE), new Action<PARTS_MERGE>(this.detach_PARTS_MERGE));
			this._SALEITEM = new EntitySet<SALEITEM>(new Action<SALEITEM>(this.attach_SALEITEM), new Action<SALEITEM>(this.detach_SALEITEM));
			this._STKORDITEM = new EntitySet<STKORDITEM>(new Action<STKORDITEM>(this.attach_STKORDITEM), new Action<STKORDITEM>(this.detach_STKORDITEM));
			this._STOCK_BRANDS = default(EntityRef<STOCK_BRANDS>);
			this._STOCK_RECEIVED = new EntitySet<STOCK_RECEIVED>(new Action<STOCK_RECEIVED>(this.attach_STOCK_RECEIVED), new Action<STOCK_RECEIVED>(this.detach_STOCK_RECEIVED));
			this._STOCK_RECEIVED_TMP = new EntitySet<STOCK_RECEIVED_TMP>(new Action<STOCK_RECEIVED_TMP>(this.attach_STOCK_RECEIVED_TMP), new Action<STOCK_RECEIVED_TMP>(this.detach_STOCK_RECEIVED_TMP));
			this._REVENUE_CATEGORIES = default(EntityRef<REVENUE_CATEGORIES>);
			this._STOCK_SHELF_LOCATIONS_POVALUES = new EntitySet<STOCK_SHELF_LOCATIONS_POVALUES>(new Action<STOCK_SHELF_LOCATIONS_POVALUES>(this.attach_STOCK_SHELF_LOCATIONS_POVALUES), new Action<STOCK_SHELF_LOCATIONS_POVALUES>(this.detach_STOCK_SHELF_LOCATIONS_POVALUES));
			this._STOCK_SHELF_LOCATIONS = new EntitySet<STOCK_SHELF_LOCATIONS>(new Action<STOCK_SHELF_LOCATIONS>(this.attach_STOCK_SHELF_LOCATIONS), new Action<STOCK_SHELF_LOCATIONS>(this.detach_STOCK_SHELF_LOCATIONS));
			this._STOCK_SNAPSHOT = new EntitySet<STOCK_SNAPSHOT>(new Action<STOCK_SNAPSHOT>(this.attach_STOCK_SNAPSHOT), new Action<STOCK_SNAPSHOT>(this.detach_STOCK_SNAPSHOT));
			this._STOCK_TEMP = default(EntityRef<STOCK_TEMP>);
			this._STOCK_TRANSFER = new EntitySet<STOCK_TRANSFER>(new Action<STOCK_TRANSFER>(this.attach_STOCK_TRANSFER), new Action<STOCK_TRANSFER>(this.detach_STOCK_TRANSFER));
			this._STOCK_UPDATE_HISTORY = new EntitySet<STOCK_UPDATE_HISTORY>(new Action<STOCK_UPDATE_HISTORY>(this.attach_STOCK_UPDATE_HISTORY), new Action<STOCK_UPDATE_HISTORY>(this.detach_STOCK_UPDATE_HISTORY));
			OnCreated();
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_XRefCode", DbType="VarChar(35)")]
		public string XRefCode
		{
			get
			{
				return this._XRefCode;
			}
			set
			{
				if ((this._XRefCode != value))
				{
					this.OnXRefCodeChanging(value);
					this.SendPropertyChanging();
					this._XRefCode = value;
					this.SendPropertyChanged("XRefCode");
					this.OnXRefCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DistribCode", DbType="VarChar(16)")]
		public string DistribCode
		{
			get
			{
				return this._DistribCode;
			}
			set
			{
				if ((this._DistribCode != value))
				{
					this.OnDistribCodeChanging(value);
					this.SendPropertyChanging();
					this._DistribCode = value;
					this.SendPropertyChanged("DistribCode");
					this.OnDistribCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SupProdCode", DbType="VarChar(35)")]
		public string SupProdCode
		{
			get
			{
				return this._SupProdCode;
			}
			set
			{
				if ((this._SupProdCode != value))
				{
					this.OnSupProdCodeChanging(value);
					this.SendPropertyChanging();
					this._SupProdCode = value;
					this.SendPropertyChanged("SupProdCode");
					this.OnSupProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="Char(1)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Available", DbType="Bit")]
		public System.Nullable<bool> Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this.OnAvailableChanging(value);
					this.SendPropertyChanging();
					this._Available = value;
					this.SendPropertyChanged("Available");
					this.OnAvailableChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_CardNum", DbType="VarChar(10)")]
		public string CardNum
		{
			get
			{
				return this._CardNum;
			}
			set
			{
				if ((this._CardNum != value))
				{
					this.OnCardNumChanging(value);
					this.SendPropertyChanging();
					this._CardNum = value;
					this.SendPropertyChanged("CardNum");
					this.OnCardNumChanged();
				}
			}
		}
		
		[Column(Storage="_PriceUnit", DbType="VarChar(9)")]
		public string PriceUnit
		{
			get
			{
				return this._PriceUnit;
			}
			set
			{
				if ((this._PriceUnit != value))
				{
					this.OnPriceUnitChanging(value);
					this.SendPropertyChanging();
					this._PriceUnit = value;
					this.SendPropertyChanged("PriceUnit");
					this.OnPriceUnitChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierCost", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SupplierCost
		{
			get
			{
				return this._SupplierCost;
			}
			set
			{
				if ((this._SupplierCost != value))
				{
					this.OnSupplierCostChanging(value);
					this.SendPropertyChanging();
					this._SupplierCost = value;
					this.SendPropertyChanged("SupplierCost");
					this.OnSupplierCostChanged();
				}
			}
		}
		
		[Column(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_AvgCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AvgCost
		{
			get
			{
				return this._AvgCost;
			}
			set
			{
				if ((this._AvgCost != value))
				{
					this.OnAvgCostChanging(value);
					this.SendPropertyChanging();
					this._AvgCost = value;
					this.SendPropertyChanged("AvgCost");
					this.OnAvgCostChanged();
				}
			}
		}
		
		[Column(Storage="_Minimum", DbType="Int")]
		public System.Nullable<int> Minimum
		{
			get
			{
				return this._Minimum;
			}
			set
			{
				if ((this._Minimum != value))
				{
					this.OnMinimumChanging(value);
					this.SendPropertyChanging();
					this._Minimum = value;
					this.SendPropertyChanged("Minimum");
					this.OnMinimumChanged();
				}
			}
		}
		
		[Column(Storage="_Maximum", DbType="Int")]
		public System.Nullable<int> Maximum
		{
			get
			{
				return this._Maximum;
			}
			set
			{
				if ((this._Maximum != value))
				{
					this.OnMaximumChanging(value);
					this.SendPropertyChanging();
					this._Maximum = value;
					this.SendPropertyChanged("Maximum");
					this.OnMaximumChanged();
				}
			}
		}
		
		[Column(Storage="_PrevStock", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PrevStock
		{
			get
			{
				return this._PrevStock;
			}
			set
			{
				if ((this._PrevStock != value))
				{
					this.OnPrevStockChanging(value);
					this.SendPropertyChanging();
					this._PrevStock = value;
					this.SendPropertyChanged("PrevStock");
					this.OnPrevStockChanged();
				}
			}
		}
		
		[Column(Storage="_UPC", DbType="VarChar(16)")]
		public string UPC
		{
			get
			{
				return this._UPC;
			}
			set
			{
				if ((this._UPC != value))
				{
					this.OnUPCChanging(value);
					this.SendPropertyChanging();
					this._UPC = value;
					this.SendPropertyChanged("UPC");
					this.OnUPCChanged();
				}
			}
		}
		
		[Column(Storage="_Rep", DbType="VarChar(5)")]
		public string Rep
		{
			get
			{
				return this._Rep;
			}
			set
			{
				if ((this._Rep != value))
				{
					this.OnRepChanging(value);
					this.SendPropertyChanging();
					this._Rep = value;
					this.SendPropertyChanged("Rep");
					this.OnRepChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierCode", DbType="VarChar(16)")]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierCode1", DbType="VarChar(16)")]
		public string SupplierCode1
		{
			get
			{
				return this._SupplierCode1;
			}
			set
			{
				if ((this._SupplierCode1 != value))
				{
					this.OnSupplierCode1Changing(value);
					this.SendPropertyChanging();
					this._SupplierCode1 = value;
					this.SendPropertyChanged("SupplierCode1");
					this.OnSupplierCode1Changed();
				}
			}
		}
		
		[Column(Storage="_SupplierCode2", DbType="VarChar(16)")]
		public string SupplierCode2
		{
			get
			{
				return this._SupplierCode2;
			}
			set
			{
				if ((this._SupplierCode2 != value))
				{
					this.OnSupplierCode2Changing(value);
					this.SendPropertyChanging();
					this._SupplierCode2 = value;
					this.SendPropertyChanged("SupplierCode2");
					this.OnSupplierCode2Changed();
				}
			}
		}
		
		[Column(Storage="_SupplierCode3", DbType="VarChar(16)")]
		public string SupplierCode3
		{
			get
			{
				return this._SupplierCode3;
			}
			set
			{
				if ((this._SupplierCode3 != value))
				{
					this.OnSupplierCode3Changing(value);
					this.SendPropertyChanging();
					this._SupplierCode3 = value;
					this.SendPropertyChanged("SupplierCode3");
					this.OnSupplierCode3Changed();
				}
			}
		}
		
		[Column(Storage="_MTD_UNITS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MTD_UNITS
		{
			get
			{
				return this._MTD_UNITS;
			}
			set
			{
				if ((this._MTD_UNITS != value))
				{
					this.OnMTD_UNITSChanging(value);
					this.SendPropertyChanging();
					this._MTD_UNITS = value;
					this.SendPropertyChanged("MTD_UNITS");
					this.OnMTD_UNITSChanged();
				}
			}
		}
		
		[Column(Storage="_MTD_COST", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MTD_COST
		{
			get
			{
				return this._MTD_COST;
			}
			set
			{
				if ((this._MTD_COST != value))
				{
					this.OnMTD_COSTChanging(value);
					this.SendPropertyChanging();
					this._MTD_COST = value;
					this.SendPropertyChanged("MTD_COST");
					this.OnMTD_COSTChanged();
				}
			}
		}
		
		[Column(Storage="_YTD_UNITS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> YTD_UNITS
		{
			get
			{
				return this._YTD_UNITS;
			}
			set
			{
				if ((this._YTD_UNITS != value))
				{
					this.OnYTD_UNITSChanging(value);
					this.SendPropertyChanging();
					this._YTD_UNITS = value;
					this.SendPropertyChanged("YTD_UNITS");
					this.OnYTD_UNITSChanged();
				}
			}
		}
		
		[Column(Storage="_YTD_COST", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> YTD_COST
		{
			get
			{
				return this._YTD_COST;
			}
			set
			{
				if ((this._YTD_COST != value))
				{
					this.OnYTD_COSTChanging(value);
					this.SendPropertyChanging();
					this._YTD_COST = value;
					this.SendPropertyChanged("YTD_COST");
					this.OnYTD_COSTChanged();
				}
			}
		}
		
		[Column(Storage="_LY_UNITS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LY_UNITS
		{
			get
			{
				return this._LY_UNITS;
			}
			set
			{
				if ((this._LY_UNITS != value))
				{
					this.OnLY_UNITSChanging(value);
					this.SendPropertyChanging();
					this._LY_UNITS = value;
					this.SendPropertyChanged("LY_UNITS");
					this.OnLY_UNITSChanged();
				}
			}
		}
		
		[Column(Storage="_LY_COST", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LY_COST
		{
			get
			{
				return this._LY_COST;
			}
			set
			{
				if ((this._LY_COST != value))
				{
					this.OnLY_COSTChanging(value);
					this.SendPropertyChanging();
					this._LY_COST = value;
					this.SendPropertyChanged("LY_COST");
					this.OnLY_COSTChanged();
				}
			}
		}
		
		[Column(Storage="_TodayUnits", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> TodayUnits
		{
			get
			{
				return this._TodayUnits;
			}
			set
			{
				if ((this._TodayUnits != value))
				{
					this.OnTodayUnitsChanging(value);
					this.SendPropertyChanging();
					this._TodayUnits = value;
					this.SendPropertyChanged("TodayUnits");
					this.OnTodayUnitsChanged();
				}
			}
		}
		
		[Column(Storage="_AvgLast15", DbType="Int")]
		public System.Nullable<int> AvgLast15
		{
			get
			{
				return this._AvgLast15;
			}
			set
			{
				if ((this._AvgLast15 != value))
				{
					this.OnAvgLast15Changing(value);
					this.SendPropertyChanging();
					this._AvgLast15 = value;
					this.SendPropertyChanged("AvgLast15");
					this.OnAvgLast15Changed();
				}
			}
		}
		
		[Column(Storage="_AvgLast6", DbType="Int")]
		public System.Nullable<int> AvgLast6
		{
			get
			{
				return this._AvgLast6;
			}
			set
			{
				if ((this._AvgLast6 != value))
				{
					this.OnAvgLast6Changing(value);
					this.SendPropertyChanging();
					this._AvgLast6 = value;
					this.SendPropertyChanged("AvgLast6");
					this.OnAvgLast6Changed();
				}
			}
		}
		
		[Column(Storage="_AvgLast3", DbType="Int")]
		public System.Nullable<int> AvgLast3
		{
			get
			{
				return this._AvgLast3;
			}
			set
			{
				if ((this._AvgLast3 != value))
				{
					this.OnAvgLast3Changing(value);
					this.SendPropertyChanging();
					this._AvgLast3 = value;
					this.SendPropertyChanged("AvgLast3");
					this.OnAvgLast3Changed();
				}
			}
		}
		
		[Column(Storage="_SuggOrd", DbType="Int")]
		public System.Nullable<int> SuggOrd
		{
			get
			{
				return this._SuggOrd;
			}
			set
			{
				if ((this._SuggOrd != value))
				{
					this.OnSuggOrdChanging(value);
					this.SendPropertyChanging();
					this._SuggOrd = value;
					this.SendPropertyChanged("SuggOrd");
					this.OnSuggOrdChanged();
				}
			}
		}
		
		[Column(Storage="_Accepted", DbType="Bit")]
		public System.Nullable<bool> Accepted
		{
			get
			{
				return this._Accepted;
			}
			set
			{
				if ((this._Accepted != value))
				{
					this.OnAcceptedChanging(value);
					this.SendPropertyChanging();
					this._Accepted = value;
					this.SendPropertyChanged("Accepted");
					this.OnAcceptedChanged();
				}
			}
		}
		
		[Column(Storage="_SuggOrdAv", DbType="Int")]
		public System.Nullable<int> SuggOrdAv
		{
			get
			{
				return this._SuggOrdAv;
			}
			set
			{
				if ((this._SuggOrdAv != value))
				{
					this.OnSuggOrdAvChanging(value);
					this.SendPropertyChanging();
					this._SuggOrdAv = value;
					this.SendPropertyChanged("SuggOrdAv");
					this.OnSuggOrdAvChanged();
				}
			}
		}
		
		[Column(Storage="_AcceptedAv", DbType="Bit")]
		public System.Nullable<bool> AcceptedAv
		{
			get
			{
				return this._AcceptedAv;
			}
			set
			{
				if ((this._AcceptedAv != value))
				{
					this.OnAcceptedAvChanging(value);
					this.SendPropertyChanging();
					this._AcceptedAv = value;
					this.SendPropertyChanged("AcceptedAv");
					this.OnAcceptedAvChanged();
				}
			}
		}
		
		[Column(Storage="_Specifications", DbType="VarChar(2048)")]
		public string Specifications
		{
			get
			{
				return this._Specifications;
			}
			set
			{
				if ((this._Specifications != value))
				{
					this.OnSpecificationsChanging(value);
					this.SendPropertyChanging();
					this._Specifications = value;
					this.SendPropertyChanged("Specifications");
					this.OnSpecificationsChanged();
				}
			}
		}
		
		[Column(Storage="_InternalNotes", DbType="VarChar(2048)")]
		public string InternalNotes
		{
			get
			{
				return this._InternalNotes;
			}
			set
			{
				if ((this._InternalNotes != value))
				{
					this.OnInternalNotesChanging(value);
					this.SendPropertyChanging();
					this._InternalNotes = value;
					this.SendPropertyChanged("InternalNotes");
					this.OnInternalNotesChanged();
				}
			}
		}
		
		[Column(Storage="_ReStockMin", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> ReStockMin
		{
			get
			{
				return this._ReStockMin;
			}
			set
			{
				if ((this._ReStockMin != value))
				{
					this.OnReStockMinChanging(value);
					this.SendPropertyChanging();
					this._ReStockMin = value;
					this.SendPropertyChanged("ReStockMin");
					this.OnReStockMinChanged();
				}
			}
		}
		
		[Column(Storage="_Discontinued", DbType="Bit")]
		public System.Nullable<bool> Discontinued
		{
			get
			{
				return this._Discontinued;
			}
			set
			{
				if ((this._Discontinued != value))
				{
					this.OnDiscontinuedChanging(value);
					this.SendPropertyChanging();
					this._Discontinued = value;
					this.SendPropertyChanged("Discontinued");
					this.OnDiscontinuedChanged();
				}
			}
		}
		
		[Column(Storage="_DateDiscontinued", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDiscontinued
		{
			get
			{
				return this._DateDiscontinued;
			}
			set
			{
				if ((this._DateDiscontinued != value))
				{
					this.OnDateDiscontinuedChanging(value);
					this.SendPropertyChanging();
					this._DateDiscontinued = value;
					this.SendPropertyChanged("DateDiscontinued");
					this.OnDateDiscontinuedChanged();
				}
			}
		}
		
		[Column(Storage="_TaxRate", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[Column(Storage="_Group", DbType="VarChar(12)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="VarChar(35)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					if (this._STOCK_BRANDS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[Column(Storage="_MachineType", DbType="VarChar(50)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this.OnMachineTypeChanging(value);
					this.SendPropertyChanging();
					this._MachineType = value;
					this.SendPropertyChanged("MachineType");
					this.OnMachineTypeChanged();
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="VarChar(35)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this.OnDeviceCodeChanging(value);
					this.SendPropertyChanging();
					this._DeviceCode = value;
					this.SendPropertyChanged("DeviceCode");
					this.OnDeviceCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PRICE", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[Column(Name="model", Storage="_Model", DbType="VarChar(35)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					if (this._REVENUE_CATEGORIES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevenueCategoryChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategory = value;
					this.SendPropertyChanged("RevenueCategory");
					this.OnRevenueCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_INT_SerialNo", DbType="VarChar(64)")]
		public string INT_SerialNo
		{
			get
			{
				return this._INT_SerialNo;
			}
			set
			{
				if ((this._INT_SerialNo != value))
				{
					this.OnINT_SerialNoChanging(value);
					this.SendPropertyChanging();
					this._INT_SerialNo = value;
					this.SendPropertyChanged("INT_SerialNo");
					this.OnINT_SerialNoChanged();
				}
			}
		}
		
		[Column(Storage="_PartsType", DbType="Int")]
		public System.Nullable<int> PartsType
		{
			get
			{
				return this._PartsType;
			}
			set
			{
				if ((this._PartsType != value))
				{
					this.OnPartsTypeChanging(value);
					this.SendPropertyChanging();
					this._PartsType = value;
					this.SendPropertyChanged("PartsType");
					this.OnPartsTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ExcludeFromSnapshot", DbType="Bit NOT NULL")]
		public bool ExcludeFromSnapshot
		{
			get
			{
				return this._ExcludeFromSnapshot;
			}
			set
			{
				if ((this._ExcludeFromSnapshot != value))
				{
					this.OnExcludeFromSnapshotChanging(value);
					this.SendPropertyChanging();
					this._ExcludeFromSnapshot = value;
					this.SendPropertyChanged("ExcludeFromSnapshot");
					this.OnExcludeFromSnapshotChanged();
				}
			}
		}
		
		[Column(Storage="_CarbonTaxEligible", DbType="Bit NOT NULL")]
		public bool CarbonTaxEligible
		{
			get
			{
				return this._CarbonTaxEligible;
			}
			set
			{
				if ((this._CarbonTaxEligible != value))
				{
					this.OnCarbonTaxEligibleChanging(value);
					this.SendPropertyChanging();
					this._CarbonTaxEligible = value;
					this.SendPropertyChanged("CarbonTaxEligible");
					this.OnCarbonTaxEligibleChanged();
				}
			}
		}
		
		[Column(Storage="_Price24x7x2", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Price24x7x2
		{
			get
			{
				return this._Price24x7x2;
			}
			set
			{
				if ((this._Price24x7x2 != value))
				{
					this.OnPrice24x7x2Changing(value);
					this.SendPropertyChanging();
					this._Price24x7x2 = value;
					this.SendPropertyChanged("Price24x7x2");
					this.OnPrice24x7x2Changed();
				}
			}
		}
		
		[Column(Storage="_Price9x5x4", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Price9x5x4
		{
			get
			{
				return this._Price9x5x4;
			}
			set
			{
				if ((this._Price9x5x4 != value))
				{
					this.OnPrice9x5x4Changing(value);
					this.SendPropertyChanging();
					this._Price9x5x4 = value;
					this.SendPropertyChanged("Price9x5x4");
					this.OnPrice9x5x4Changed();
				}
			}
		}
		
		[Column(Storage="_Price24x7x4", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Price24x7x4
		{
			get
			{
				return this._Price24x7x4;
			}
			set
			{
				if ((this._Price24x7x4 != value))
				{
					this.OnPrice24x7x4Changing(value);
					this.SendPropertyChanging();
					this._Price24x7x4 = value;
					this.SendPropertyChanged("Price24x7x4");
					this.OnPrice24x7x4Changed();
				}
			}
		}
		
		[Column(Storage="_Price9x5x2", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Price9x5x2
		{
			get
			{
				return this._Price9x5x2;
			}
			set
			{
				if ((this._Price9x5x2 != value))
				{
					this.OnPrice9x5x2Changing(value);
					this.SendPropertyChanging();
					this._Price9x5x2 = value;
					this.SendPropertyChanged("Price9x5x2");
					this.OnPrice9x5x2Changed();
				}
			}
		}
		
		[Column(Storage="_PricesLastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> PricesLastUpdated
		{
			get
			{
				return this._PricesLastUpdated;
			}
			set
			{
				if ((this._PricesLastUpdated != value))
				{
					this.OnPricesLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._PricesLastUpdated = value;
					this.SendPropertyChanged("PricesLastUpdated");
					this.OnPricesLastUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_PricesSource", DbType="VarChar(100)")]
		public string PricesSource
		{
			get
			{
				return this._PricesSource;
			}
			set
			{
				if ((this._PricesSource != value))
				{
					this.OnPricesSourceChanging(value);
					this.SendPropertyChanging();
					this._PricesSource = value;
					this.SendPropertyChanged("PricesSource");
					this.OnPricesSourceChanged();
				}
			}
		}
		
		[Association(Name="FK_ALIAS_PRODCODE", Storage="_INT_STOCK_ALIAS", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_ALIAS> INT_STOCK_ALIAS
		{
			get
			{
				return this._INT_STOCK_ALIAS;
			}
			set
			{
				this._INT_STOCK_ALIAS.Assign(value);
			}
		}
		
		[Association(Name="FK_COMPATIBILITY_PRODCODE", Storage="_INT_STOCK_COMPATIBILITY", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_COMPATIBILITY> INT_STOCK_COMPATIBILITY
		{
			get
			{
				return this._INT_STOCK_COMPATIBILITY;
			}
			set
			{
				this._INT_STOCK_COMPATIBILITY.Assign(value);
			}
		}
		
		[Association(Name="FK_CTRAC_ITEM_STOCK", Storage="_CTRAC_ITEM", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<CTRAC_ITEM> CTRAC_ITEM
		{
			get
			{
				return this._CTRAC_ITEM;
			}
			set
			{
				this._CTRAC_ITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_DEBTORS_3P_INVOICES_ITEMS_STOCK", Storage="_DEBTORS_3P_INVOICES_ITEMS", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<DEBTORS_3P_INVOICES_ITEMS> DEBTORS_3P_INVOICES_ITEMS
		{
			get
			{
				return this._DEBTORS_3P_INVOICES_ITEMS;
			}
			set
			{
				this._DEBTORS_3P_INVOICES_ITEMS.Assign(value);
			}
		}
		
		[Association(Name="FK_DEPARTMENTS_STOCK", Storage="_DEPARTMENTS", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<DEPARTMENTS> DEPARTMENTS
		{
			get
			{
				return this._DEPARTMENTS;
			}
			set
			{
				this._DEPARTMENTS.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_BM_STOCK", Storage="_INT_STOCK_BM", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_BM> INT_STOCK_BM
		{
			get
			{
				return this._INT_STOCK_BM;
			}
			set
			{
				this._INT_STOCK_BM.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_BM_STOCK1", Storage="_ProdCodeINT_STOCK_BM", ThisKey="ProdCode", OtherKey="BM_ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_BM> ProdCodeINT_STOCK_BM
		{
			get
			{
				return this._ProdCodeINT_STOCK_BM;
			}
			set
			{
				this._ProdCodeINT_STOCK_BM.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_COMPATIBILITY_STOCK", Storage="_ProdCodeINT_STOCK_COMPATIBILITY", ThisKey="ProdCode", OtherKey="CompatProdCode", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_COMPATIBILITY> ProdCodeINT_STOCK_COMPATIBILITY
		{
			get
			{
				return this._ProdCodeINT_STOCK_COMPATIBILITY;
			}
			set
			{
				this._ProdCodeINT_STOCK_COMPATIBILITY.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_LOC_SPECIFIC_STOCK", Storage="_INT_STOCK_LOC_SPECIFIC", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="CASCADE")]
		public EntitySet<INT_STOCK_LOC_SPECIFIC> INT_STOCK_LOC_SPECIFIC
		{
			get
			{
				return this._INT_STOCK_LOC_SPECIFIC;
			}
			set
			{
				this._INT_STOCK_LOC_SPECIFIC.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_OUTAGE_STOCK", Storage="_INT_STOCK_OUTAGE", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_OUTAGE> INT_STOCK_OUTAGE
		{
			get
			{
				return this._INT_STOCK_OUTAGE;
			}
			set
			{
				this._INT_STOCK_OUTAGE.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCK_USAGE_PRODCODE", Storage="_INT_STOCK_USAGE", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCK_USAGE> INT_STOCK_USAGE
		{
			get
			{
				return this._INT_STOCK_USAGE;
			}
			set
			{
				this._INT_STOCK_USAGE.Assign(value);
			}
		}
		
		[Association(Name="FK_INT_STOCKTRANSIT_PROD", Storage="_INT_STOCKTRANSIT", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<INT_STOCKTRANSIT> INT_STOCKTRANSIT
		{
			get
			{
				return this._INT_STOCKTRANSIT;
			}
			set
			{
				this._INT_STOCKTRANSIT.Assign(value);
			}
		}
		
		[Association(Name="FK_PARTS_MERGE_STOCK", Storage="_PARTS_MERGE", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<PARTS_MERGE> PARTS_MERGE
		{
			get
			{
				return this._PARTS_MERGE;
			}
			set
			{
				this._PARTS_MERGE.Assign(value);
			}
		}
		
		[Association(Name="FK_SALEITEM_STOCK", Storage="_SALEITEM", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<SALEITEM> SALEITEM
		{
			get
			{
				return this._SALEITEM;
			}
			set
			{
				this._SALEITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_STKORDITEM_STOCK", Storage="_STKORDITEM", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<STKORDITEM> STKORDITEM
		{
			get
			{
				return this._STKORDITEM;
			}
			set
			{
				this._STKORDITEM.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_BRAND", Storage="_STOCK_BRANDS", ThisKey="Brand", OtherKey="BrandID", IsForeignKey=true)]
		public STOCK_BRANDS STOCK_BRANDS
		{
			get
			{
				return this._STOCK_BRANDS.Entity;
			}
			set
			{
				STOCK_BRANDS previousValue = this._STOCK_BRANDS.Entity;
				if (((previousValue != value) 
							|| (this._STOCK_BRANDS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK_BRANDS.Entity = null;
						previousValue.STOCK.Remove(this);
					}
					this._STOCK_BRANDS.Entity = value;
					if ((value != null))
					{
						value.STOCK.Add(this);
						this._Brand = value.BrandID;
					}
					else
					{
						this._Brand = default(string);
					}
					this.SendPropertyChanged("STOCK_BRANDS");
				}
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_STOCK", Storage="_STOCK_RECEIVED", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_RECEIVED> STOCK_RECEIVED
		{
			get
			{
				return this._STOCK_RECEIVED;
			}
			set
			{
				this._STOCK_RECEIVED.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_STOCK_TMP", Storage="_STOCK_RECEIVED_TMP", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_RECEIVED_TMP> STOCK_RECEIVED_TMP
		{
			get
			{
				return this._STOCK_RECEIVED_TMP;
			}
			set
			{
				this._STOCK_RECEIVED_TMP.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_REVENUE_CATEGORIES", Storage="_REVENUE_CATEGORIES", ThisKey="RevenueCategory", OtherKey="RevenueCategoryId", IsForeignKey=true)]
		public REVENUE_CATEGORIES REVENUE_CATEGORIES
		{
			get
			{
				return this._REVENUE_CATEGORIES.Entity;
			}
			set
			{
				REVENUE_CATEGORIES previousValue = this._REVENUE_CATEGORIES.Entity;
				if (((previousValue != value) 
							|| (this._REVENUE_CATEGORIES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REVENUE_CATEGORIES.Entity = null;
						previousValue.STOCK.Remove(this);
					}
					this._REVENUE_CATEGORIES.Entity = value;
					if ((value != null))
					{
						value.STOCK.Add(this);
						this._RevenueCategory = value.RevenueCategoryId;
					}
					else
					{
						this._RevenueCategory = default(Nullable<int>);
					}
					this.SendPropertyChanged("REVENUE_CATEGORIES");
				}
			}
		}
		
		[Association(Name="FK_STOCK_SHELF_LOCATIONS_POVALUES_STOCK", Storage="_STOCK_SHELF_LOCATIONS_POVALUES", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_SHELF_LOCATIONS_POVALUES> STOCK_SHELF_LOCATIONS_POVALUES
		{
			get
			{
				return this._STOCK_SHELF_LOCATIONS_POVALUES;
			}
			set
			{
				this._STOCK_SHELF_LOCATIONS_POVALUES.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_SHELF_LOCATIONS_STOCK", Storage="_STOCK_SHELF_LOCATIONS", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_SHELF_LOCATIONS> STOCK_SHELF_LOCATIONS
		{
			get
			{
				return this._STOCK_SHELF_LOCATIONS;
			}
			set
			{
				this._STOCK_SHELF_LOCATIONS.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_SNAPSHOT_STOCK", Storage="_STOCK_SNAPSHOT", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_SNAPSHOT> STOCK_SNAPSHOT
		{
			get
			{
				return this._STOCK_SNAPSHOT;
			}
			set
			{
				this._STOCK_SNAPSHOT.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_TEMP_STOCK", Storage="_STOCK_TEMP", ThisKey="ProdCode", OtherKey="ProdCode", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public STOCK_TEMP STOCK_TEMP
		{
			get
			{
				return this._STOCK_TEMP.Entity;
			}
			set
			{
				STOCK_TEMP previousValue = this._STOCK_TEMP.Entity;
				if (((previousValue != value) 
							|| (this._STOCK_TEMP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK_TEMP.Entity = null;
						previousValue.STOCK = null;
					}
					this._STOCK_TEMP.Entity = value;
					if ((value != null))
					{
						value.STOCK = this;
					}
					this.SendPropertyChanged("STOCK_TEMP");
				}
			}
		}
		
		[Association(Name="FK_STOCK_TRANSFER_STOCK", Storage="_STOCK_TRANSFER", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="NO ACTION")]
		public EntitySet<STOCK_TRANSFER> STOCK_TRANSFER
		{
			get
			{
				return this._STOCK_TRANSFER;
			}
			set
			{
				this._STOCK_TRANSFER.Assign(value);
			}
		}
		
		[Association(Name="FK_STOCK_UPDATE_HISTORY_PRODCODE", Storage="_STOCK_UPDATE_HISTORY", ThisKey="ProdCode", OtherKey="ProdCode", DeleteRule="CASCADE")]
		public EntitySet<STOCK_UPDATE_HISTORY> STOCK_UPDATE_HISTORY
		{
			get
			{
				return this._STOCK_UPDATE_HISTORY;
			}
			set
			{
				this._STOCK_UPDATE_HISTORY.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INT_STOCK_ALIAS(INT_STOCK_ALIAS entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_INT_STOCK_ALIAS(INT_STOCK_ALIAS entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_INT_STOCK_COMPATIBILITY(INT_STOCK_COMPATIBILITY entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_INT_STOCK_COMPATIBILITY(INT_STOCK_COMPATIBILITY entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_CTRAC_ITEM(CTRAC_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_DEBTORS_3P_INVOICES_ITEMS(DEBTORS_3P_INVOICES_ITEMS entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_DEBTORS_3P_INVOICES_ITEMS(DEBTORS_3P_INVOICES_ITEMS entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_DEPARTMENTS(DEPARTMENTS entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_DEPARTMENTS(DEPARTMENTS entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_INT_STOCK_BM(INT_STOCK_BM entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_INT_STOCK_BM(INT_STOCK_BM entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_ProdCodeINT_STOCK_BM(INT_STOCK_BM entity)
		{
			this.SendPropertyChanging();
			entity.BM_ProdCodeSTOCK = this;
		}
		
		private void detach_ProdCodeINT_STOCK_BM(INT_STOCK_BM entity)
		{
			this.SendPropertyChanging();
			entity.BM_ProdCodeSTOCK = null;
		}
		
		private void attach_ProdCodeINT_STOCK_COMPATIBILITY(INT_STOCK_COMPATIBILITY entity)
		{
			this.SendPropertyChanging();
			entity.CompatProdCodeSTOCK = this;
		}
		
		private void detach_ProdCodeINT_STOCK_COMPATIBILITY(INT_STOCK_COMPATIBILITY entity)
		{
			this.SendPropertyChanging();
			entity.CompatProdCodeSTOCK = null;
		}
		
		private void attach_INT_STOCK_LOC_SPECIFIC(INT_STOCK_LOC_SPECIFIC entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_INT_STOCK_LOC_SPECIFIC(INT_STOCK_LOC_SPECIFIC entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_INT_STOCK_OUTAGE(INT_STOCK_OUTAGE entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_INT_STOCK_OUTAGE(INT_STOCK_OUTAGE entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_INT_STOCK_USAGE(INT_STOCK_USAGE entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_INT_STOCK_USAGE(INT_STOCK_USAGE entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_INT_STOCKTRANSIT(INT_STOCKTRANSIT entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_INT_STOCKTRANSIT(INT_STOCKTRANSIT entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_PARTS_MERGE(PARTS_MERGE entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_PARTS_MERGE(PARTS_MERGE entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_SALEITEM(SALEITEM entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_SALEITEM(SALEITEM entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_STKORDITEM(STKORDITEM entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_STOCK_RECEIVED(STOCK_RECEIVED entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_STOCK_RECEIVED(STOCK_RECEIVED entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_STOCK_RECEIVED_TMP(STOCK_RECEIVED_TMP entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_STOCK_RECEIVED_TMP(STOCK_RECEIVED_TMP entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_STOCK_SHELF_LOCATIONS_POVALUES(STOCK_SHELF_LOCATIONS_POVALUES entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_STOCK_SHELF_LOCATIONS_POVALUES(STOCK_SHELF_LOCATIONS_POVALUES entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_STOCK_SHELF_LOCATIONS(STOCK_SHELF_LOCATIONS entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_STOCK_SHELF_LOCATIONS(STOCK_SHELF_LOCATIONS entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_STOCK_SNAPSHOT(STOCK_SNAPSHOT entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_STOCK_SNAPSHOT(STOCK_SNAPSHOT entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_STOCK_TRANSFER(STOCK_TRANSFER entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_STOCK_TRANSFER(STOCK_TRANSFER entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
		
		private void attach_STOCK_UPDATE_HISTORY(STOCK_UPDATE_HISTORY entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = this;
		}
		
		private void detach_STOCK_UPDATE_HISTORY(STOCK_UPDATE_HISTORY entity)
		{
			this.SendPropertyChanging();
			entity.STOCK = null;
		}
	}
	
	[Table(Name="dbo.STOCK_AUDIT")]
	public partial class STOCK_AUDIT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Audit;
		
		private string _ProdCode;
		
		private System.DateTime _Date;
		
		private byte _Month;
		
		private short _Year;
		
		private int _TransID;
		
		private byte _TransType;
		
		private string _UserID;
		
		private int _LocationID;
		
		private int _LocID2;
		
		private decimal _Qty;
		
		private decimal _Balance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuditChanging(int value);
    partial void OnAuditChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnTransIDChanging(int value);
    partial void OnTransIDChanged();
    partial void OnTransTypeChanging(byte value);
    partial void OnTransTypeChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnLocID2Changing(int value);
    partial void OnLocID2Changed();
    partial void OnQtyChanging(decimal value);
    partial void OnQtyChanged();
    partial void OnBalanceChanging(decimal value);
    partial void OnBalanceChanged();
    #endregion
		
		public STOCK_AUDIT()
		{
			OnCreated();
		}
		
		[Column(Storage="_Audit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_TransID", DbType="Int NOT NULL")]
		public int TransID
		{
			get
			{
				return this._TransID;
			}
			set
			{
				if ((this._TransID != value))
				{
					this.OnTransIDChanging(value);
					this.SendPropertyChanging();
					this._TransID = value;
					this.SendPropertyChanged("TransID");
					this.OnTransIDChanged();
				}
			}
		}
		
		[Column(Storage="_TransType", DbType="TinyInt NOT NULL")]
		public byte TransType
		{
			get
			{
				return this._TransType;
			}
			set
			{
				if ((this._TransType != value))
				{
					this.OnTransTypeChanging(value);
					this.SendPropertyChanging();
					this._TransType = value;
					this.SendPropertyChanged("TransType");
					this.OnTransTypeChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_LocID2", DbType="Int NOT NULL")]
		public int LocID2
		{
			get
			{
				return this._LocID2;
			}
			set
			{
				if ((this._LocID2 != value))
				{
					this.OnLocID2Changing(value);
					this.SendPropertyChanging();
					this._LocID2 = value;
					this.SendPropertyChanged("LocID2");
					this.OnLocID2Changed();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(9,4) NOT NULL")]
		public decimal Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Balance", DbType="Decimal(9,2) NOT NULL")]
		public decimal Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.stock_backup")]
	public partial class Stock_backup
	{
		
		private string _ProdCode;
		
		private string _XRefCode;
		
		private string _DistribCode;
		
		private string _SupProdCode;
		
		private string _Type;
		
		private System.Nullable<bool> _Available;
		
		private string _Description;
		
		private string _CardNum;
		
		private string _PriceUnit;
		
		private System.Nullable<decimal> _SupplierCost;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<decimal> _AvgCost;
		
		private System.Nullable<int> _Minimum;
		
		private System.Nullable<int> _Maximum;
		
		private System.Nullable<decimal> _PrevStock;
		
		private string _UPC;
		
		private string _Rep;
		
		private string _SupplierCode;
		
		private string _SupplierCode1;
		
		private string _SupplierCode2;
		
		private string _SupplierCode3;
		
		private System.Nullable<decimal> _MTD_UNITS;
		
		private System.Nullable<decimal> _MTD_COST;
		
		private System.Nullable<decimal> _YTD_UNITS;
		
		private System.Nullable<decimal> _YTD_COST;
		
		private System.Nullable<decimal> _LY_UNITS;
		
		private System.Nullable<decimal> _LY_COST;
		
		private System.Nullable<decimal> _TodayUnits;
		
		private System.Nullable<int> _AvgLast15;
		
		private System.Nullable<int> _AvgLast6;
		
		private System.Nullable<int> _AvgLast3;
		
		private System.Nullable<int> _SuggOrd;
		
		private System.Nullable<bool> _Accepted;
		
		private System.Nullable<int> _SuggOrdAv;
		
		private System.Nullable<bool> _AcceptedAv;
		
		private string _Specifications;
		
		private string _InternalNotes;
		
		private System.Nullable<decimal> _ReStockMin;
		
		private System.Nullable<bool> _Discontinued;
		
		private System.Nullable<System.DateTime> _DateDiscontinued;
		
		private System.Nullable<decimal> _TaxRate;
		
		private string _Group;
		
		private string _Brand;
		
		private string _MachineType;
		
		private string _DeviceCode;
		
		private System.Nullable<decimal> _PRICE;
		
		private string _Model;
		
		private System.Nullable<int> _RevenueCategory;
		
		private string _INT_SerialNo;
		
		private System.Nullable<int> _PartsType;
		
		public Stock_backup()
		{
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Storage="_XRefCode", DbType="VarChar(35)")]
		public string XRefCode
		{
			get
			{
				return this._XRefCode;
			}
			set
			{
				if ((this._XRefCode != value))
				{
					this._XRefCode = value;
				}
			}
		}
		
		[Column(Storage="_DistribCode", DbType="VarChar(16)")]
		public string DistribCode
		{
			get
			{
				return this._DistribCode;
			}
			set
			{
				if ((this._DistribCode != value))
				{
					this._DistribCode = value;
				}
			}
		}
		
		[Column(Storage="_SupProdCode", DbType="VarChar(35)")]
		public string SupProdCode
		{
			get
			{
				return this._SupProdCode;
			}
			set
			{
				if ((this._SupProdCode != value))
				{
					this._SupProdCode = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="Char(1)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_Available", DbType="Bit")]
		public System.Nullable<bool> Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this._Available = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_CardNum", DbType="VarChar(10)")]
		public string CardNum
		{
			get
			{
				return this._CardNum;
			}
			set
			{
				if ((this._CardNum != value))
				{
					this._CardNum = value;
				}
			}
		}
		
		[Column(Storage="_PriceUnit", DbType="VarChar(9)")]
		public string PriceUnit
		{
			get
			{
				return this._PriceUnit;
			}
			set
			{
				if ((this._PriceUnit != value))
				{
					this._PriceUnit = value;
				}
			}
		}
		
		[Column(Storage="_SupplierCost", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SupplierCost
		{
			get
			{
				return this._SupplierCost;
			}
			set
			{
				if ((this._SupplierCost != value))
				{
					this._SupplierCost = value;
				}
			}
		}
		
		[Column(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this._DateUpdated = value;
				}
			}
		}
		
		[Column(Storage="_AvgCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AvgCost
		{
			get
			{
				return this._AvgCost;
			}
			set
			{
				if ((this._AvgCost != value))
				{
					this._AvgCost = value;
				}
			}
		}
		
		[Column(Storage="_Minimum", DbType="Int")]
		public System.Nullable<int> Minimum
		{
			get
			{
				return this._Minimum;
			}
			set
			{
				if ((this._Minimum != value))
				{
					this._Minimum = value;
				}
			}
		}
		
		[Column(Storage="_Maximum", DbType="Int")]
		public System.Nullable<int> Maximum
		{
			get
			{
				return this._Maximum;
			}
			set
			{
				if ((this._Maximum != value))
				{
					this._Maximum = value;
				}
			}
		}
		
		[Column(Storage="_PrevStock", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PrevStock
		{
			get
			{
				return this._PrevStock;
			}
			set
			{
				if ((this._PrevStock != value))
				{
					this._PrevStock = value;
				}
			}
		}
		
		[Column(Storage="_UPC", DbType="VarChar(16)")]
		public string UPC
		{
			get
			{
				return this._UPC;
			}
			set
			{
				if ((this._UPC != value))
				{
					this._UPC = value;
				}
			}
		}
		
		[Column(Storage="_Rep", DbType="VarChar(5)")]
		public string Rep
		{
			get
			{
				return this._Rep;
			}
			set
			{
				if ((this._Rep != value))
				{
					this._Rep = value;
				}
			}
		}
		
		[Column(Storage="_SupplierCode", DbType="VarChar(16)")]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this._SupplierCode = value;
				}
			}
		}
		
		[Column(Storage="_SupplierCode1", DbType="VarChar(16)")]
		public string SupplierCode1
		{
			get
			{
				return this._SupplierCode1;
			}
			set
			{
				if ((this._SupplierCode1 != value))
				{
					this._SupplierCode1 = value;
				}
			}
		}
		
		[Column(Storage="_SupplierCode2", DbType="VarChar(16)")]
		public string SupplierCode2
		{
			get
			{
				return this._SupplierCode2;
			}
			set
			{
				if ((this._SupplierCode2 != value))
				{
					this._SupplierCode2 = value;
				}
			}
		}
		
		[Column(Storage="_SupplierCode3", DbType="VarChar(16)")]
		public string SupplierCode3
		{
			get
			{
				return this._SupplierCode3;
			}
			set
			{
				if ((this._SupplierCode3 != value))
				{
					this._SupplierCode3 = value;
				}
			}
		}
		
		[Column(Storage="_MTD_UNITS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MTD_UNITS
		{
			get
			{
				return this._MTD_UNITS;
			}
			set
			{
				if ((this._MTD_UNITS != value))
				{
					this._MTD_UNITS = value;
				}
			}
		}
		
		[Column(Storage="_MTD_COST", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MTD_COST
		{
			get
			{
				return this._MTD_COST;
			}
			set
			{
				if ((this._MTD_COST != value))
				{
					this._MTD_COST = value;
				}
			}
		}
		
		[Column(Storage="_YTD_UNITS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> YTD_UNITS
		{
			get
			{
				return this._YTD_UNITS;
			}
			set
			{
				if ((this._YTD_UNITS != value))
				{
					this._YTD_UNITS = value;
				}
			}
		}
		
		[Column(Storage="_YTD_COST", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> YTD_COST
		{
			get
			{
				return this._YTD_COST;
			}
			set
			{
				if ((this._YTD_COST != value))
				{
					this._YTD_COST = value;
				}
			}
		}
		
		[Column(Storage="_LY_UNITS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LY_UNITS
		{
			get
			{
				return this._LY_UNITS;
			}
			set
			{
				if ((this._LY_UNITS != value))
				{
					this._LY_UNITS = value;
				}
			}
		}
		
		[Column(Storage="_LY_COST", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LY_COST
		{
			get
			{
				return this._LY_COST;
			}
			set
			{
				if ((this._LY_COST != value))
				{
					this._LY_COST = value;
				}
			}
		}
		
		[Column(Storage="_TodayUnits", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> TodayUnits
		{
			get
			{
				return this._TodayUnits;
			}
			set
			{
				if ((this._TodayUnits != value))
				{
					this._TodayUnits = value;
				}
			}
		}
		
		[Column(Storage="_AvgLast15", DbType="Int")]
		public System.Nullable<int> AvgLast15
		{
			get
			{
				return this._AvgLast15;
			}
			set
			{
				if ((this._AvgLast15 != value))
				{
					this._AvgLast15 = value;
				}
			}
		}
		
		[Column(Storage="_AvgLast6", DbType="Int")]
		public System.Nullable<int> AvgLast6
		{
			get
			{
				return this._AvgLast6;
			}
			set
			{
				if ((this._AvgLast6 != value))
				{
					this._AvgLast6 = value;
				}
			}
		}
		
		[Column(Storage="_AvgLast3", DbType="Int")]
		public System.Nullable<int> AvgLast3
		{
			get
			{
				return this._AvgLast3;
			}
			set
			{
				if ((this._AvgLast3 != value))
				{
					this._AvgLast3 = value;
				}
			}
		}
		
		[Column(Storage="_SuggOrd", DbType="Int")]
		public System.Nullable<int> SuggOrd
		{
			get
			{
				return this._SuggOrd;
			}
			set
			{
				if ((this._SuggOrd != value))
				{
					this._SuggOrd = value;
				}
			}
		}
		
		[Column(Storage="_Accepted", DbType="Bit")]
		public System.Nullable<bool> Accepted
		{
			get
			{
				return this._Accepted;
			}
			set
			{
				if ((this._Accepted != value))
				{
					this._Accepted = value;
				}
			}
		}
		
		[Column(Storage="_SuggOrdAv", DbType="Int")]
		public System.Nullable<int> SuggOrdAv
		{
			get
			{
				return this._SuggOrdAv;
			}
			set
			{
				if ((this._SuggOrdAv != value))
				{
					this._SuggOrdAv = value;
				}
			}
		}
		
		[Column(Storage="_AcceptedAv", DbType="Bit")]
		public System.Nullable<bool> AcceptedAv
		{
			get
			{
				return this._AcceptedAv;
			}
			set
			{
				if ((this._AcceptedAv != value))
				{
					this._AcceptedAv = value;
				}
			}
		}
		
		[Column(Storage="_Specifications", DbType="VarChar(2048)")]
		public string Specifications
		{
			get
			{
				return this._Specifications;
			}
			set
			{
				if ((this._Specifications != value))
				{
					this._Specifications = value;
				}
			}
		}
		
		[Column(Storage="_InternalNotes", DbType="VarChar(2048)")]
		public string InternalNotes
		{
			get
			{
				return this._InternalNotes;
			}
			set
			{
				if ((this._InternalNotes != value))
				{
					this._InternalNotes = value;
				}
			}
		}
		
		[Column(Storage="_ReStockMin", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> ReStockMin
		{
			get
			{
				return this._ReStockMin;
			}
			set
			{
				if ((this._ReStockMin != value))
				{
					this._ReStockMin = value;
				}
			}
		}
		
		[Column(Storage="_Discontinued", DbType="Bit")]
		public System.Nullable<bool> Discontinued
		{
			get
			{
				return this._Discontinued;
			}
			set
			{
				if ((this._Discontinued != value))
				{
					this._Discontinued = value;
				}
			}
		}
		
		[Column(Storage="_DateDiscontinued", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDiscontinued
		{
			get
			{
				return this._DateDiscontinued;
			}
			set
			{
				if ((this._DateDiscontinued != value))
				{
					this._DateDiscontinued = value;
				}
			}
		}
		
		[Column(Storage="_TaxRate", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this._TaxRate = value;
				}
			}
		}
		
		[Column(Storage="_Group", DbType="VarChar(12)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this._Group = value;
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="VarChar(35)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[Column(Storage="_MachineType", DbType="VarChar(50)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this._MachineType = value;
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="VarChar(35)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
		
		[Column(Storage="_PRICE", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this._PRICE = value;
				}
			}
		}
		
		[Column(Name="model", Storage="_Model", DbType="VarChar(35)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this._RevenueCategory = value;
				}
			}
		}
		
		[Column(Storage="_INT_SerialNo", DbType="VarChar(64)")]
		public string INT_SerialNo
		{
			get
			{
				return this._INT_SerialNo;
			}
			set
			{
				if ((this._INT_SerialNo != value))
				{
					this._INT_SerialNo = value;
				}
			}
		}
		
		[Column(Storage="_PartsType", DbType="Int")]
		public System.Nullable<int> PartsType
		{
			get
			{
				return this._PartsType;
			}
			set
			{
				if ((this._PartsType != value))
				{
					this._PartsType = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.STOCK_BRANDS")]
	public partial class STOCK_BRANDS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BrandID;
		
		private EntitySet<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrandIDChanging(string value);
    partial void OnBrandIDChanged();
    #endregion
		
		public STOCK_BRANDS()
		{
			this._STOCK = new EntitySet<STOCK>(new Action<STOCK>(this.attach_STOCK), new Action<STOCK>(this.detach_STOCK));
			OnCreated();
		}
		
		[Column(Storage="_BrandID", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[Association(Name="FK_STOCK_BRAND", Storage="_STOCK", ThisKey="BrandID", OtherKey="Brand", DeleteRule="NO ACTION")]
		public EntitySet<STOCK> STOCK
		{
			get
			{
				return this._STOCK;
			}
			set
			{
				this._STOCK.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STOCK(STOCK entity)
		{
			this.SendPropertyChanging();
			entity.STOCK_BRANDS = this;
		}
		
		private void detach_STOCK(STOCK entity)
		{
			this.SendPropertyChanging();
			entity.STOCK_BRANDS = null;
		}
	}
	
	[Table(Name="dbo.STOCK_CONTROL")]
	public partial class STOCK_CONTROL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KeyNo;
		
		private string _Selector_Name;
		
		private string _Selector_Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyNoChanging(int value);
    partial void OnKeyNoChanged();
    partial void OnSelector_NameChanging(string value);
    partial void OnSelector_NameChanged();
    partial void OnSelector_NotesChanging(string value);
    partial void OnSelector_NotesChanged();
    #endregion
		
		public STOCK_CONTROL()
		{
			OnCreated();
		}
		
		[Column(Storage="_KeyNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KeyNo
		{
			get
			{
				return this._KeyNo;
			}
			set
			{
				if ((this._KeyNo != value))
				{
					this.OnKeyNoChanging(value);
					this.SendPropertyChanging();
					this._KeyNo = value;
					this.SendPropertyChanged("KeyNo");
					this.OnKeyNoChanged();
				}
			}
		}
		
		[Column(Storage="_Selector_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Selector_Name
		{
			get
			{
				return this._Selector_Name;
			}
			set
			{
				if ((this._Selector_Name != value))
				{
					this.OnSelector_NameChanging(value);
					this.SendPropertyChanging();
					this._Selector_Name = value;
					this.SendPropertyChanged("Selector_Name");
					this.OnSelector_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Selector_Notes", DbType="VarChar(120)")]
		public string Selector_Notes
		{
			get
			{
				return this._Selector_Notes;
			}
			set
			{
				if ((this._Selector_Notes != value))
				{
					this.OnSelector_NotesChanging(value);
					this.SendPropertyChanging();
					this._Selector_Notes = value;
					this.SendPropertyChanged("Selector_Notes");
					this.OnSelector_NotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_CONTROL_ITEMS")]
	public partial class STOCK_CONTROL_ITEMS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KeyNo;
		
		private string _ProdGroup;
		
		private string _SupplierCode;
		
		private bool _Pack;
		
		private bool _SelectAll;
		
		private string _Supplier;
		
		private string _Notes;
		
		private string _ReorderDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyNoChanging(int value);
    partial void OnKeyNoChanged();
    partial void OnProdGroupChanging(string value);
    partial void OnProdGroupChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnPackChanging(bool value);
    partial void OnPackChanged();
    partial void OnSelectAllChanging(bool value);
    partial void OnSelectAllChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnReorderDateChanging(string value);
    partial void OnReorderDateChanged();
    #endregion
		
		public STOCK_CONTROL_ITEMS()
		{
			OnCreated();
		}
		
		[Column(Storage="_KeyNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KeyNo
		{
			get
			{
				return this._KeyNo;
			}
			set
			{
				if ((this._KeyNo != value))
				{
					this.OnKeyNoChanging(value);
					this.SendPropertyChanging();
					this._KeyNo = value;
					this.SendPropertyChanged("KeyNo");
					this.OnKeyNoChanged();
				}
			}
		}
		
		[Column(Storage="_ProdGroup", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdGroup
		{
			get
			{
				return this._ProdGroup;
			}
			set
			{
				if ((this._ProdGroup != value))
				{
					this.OnProdGroupChanging(value);
					this.SendPropertyChanging();
					this._ProdGroup = value;
					this.SendPropertyChanged("ProdGroup");
					this.OnProdGroupChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierCode", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Pack", DbType="Bit NOT NULL")]
		public bool Pack
		{
			get
			{
				return this._Pack;
			}
			set
			{
				if ((this._Pack != value))
				{
					this.OnPackChanging(value);
					this.SendPropertyChanging();
					this._Pack = value;
					this.SendPropertyChanged("Pack");
					this.OnPackChanged();
				}
			}
		}
		
		[Column(Storage="_SelectAll", DbType="Bit NOT NULL")]
		public bool SelectAll
		{
			get
			{
				return this._SelectAll;
			}
			set
			{
				if ((this._SelectAll != value))
				{
					this.OnSelectAllChanging(value);
					this.SendPropertyChanging();
					this._SelectAll = value;
					this.SendPropertyChanged("SelectAll");
					this.OnSelectAllChanged();
				}
			}
		}
		
		[Column(Storage="_Supplier", DbType="VarChar(50)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[Column(Storage="_Notes", DbType="VarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[Column(Storage="_ReorderDate", DbType="VarChar(50)")]
		public string ReorderDate
		{
			get
			{
				return this._ReorderDate;
			}
			set
			{
				if ((this._ReorderDate != value))
				{
					this.OnReorderDateChanging(value);
					this.SendPropertyChanging();
					this._ReorderDate = value;
					this.SendPropertyChanged("ReorderDate");
					this.OnReorderDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_DELETE$")]
	public partial class STOCK_DELETE_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProdCode;
		
		private string _FeatureCode;
		
		private string _Brand;
		
		private string _MachineType;
		
		private string _Model;
		
		private string _DeviceCode;
		
		private string _Description;
		
		private string _Comments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnFeatureCodeChanging(string value);
    partial void OnFeatureCodeChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnMachineTypeChanging(string value);
    partial void OnMachineTypeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnDeviceCodeChanging(string value);
    partial void OnDeviceCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public STOCK_DELETE_()
		{
			OnCreated();
		}
		
		[Column(Storage="_ProdCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Name="Feature Code", Storage="_FeatureCode", DbType="NVarChar(255)")]
		public string FeatureCode
		{
			get
			{
				return this._FeatureCode;
			}
			set
			{
				if ((this._FeatureCode != value))
				{
					this.OnFeatureCodeChanging(value);
					this.SendPropertyChanging();
					this._FeatureCode = value;
					this.SendPropertyChanged("FeatureCode");
					this.OnFeatureCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="NVarChar(255)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[Column(Storage="_MachineType", DbType="NVarChar(255)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this.OnMachineTypeChanging(value);
					this.SendPropertyChanging();
					this._MachineType = value;
					this.SendPropertyChanged("MachineType");
					this.OnMachineTypeChanged();
				}
			}
		}
		
		[Column(Name="model", Storage="_Model", DbType="NVarChar(255)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="NVarChar(255)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this.OnDeviceCodeChanging(value);
					this.SendPropertyChanging();
					this._DeviceCode = value;
					this.SendPropertyChanged("DeviceCode");
					this.OnDeviceCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Comments", DbType="NVarChar(255)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_GROUPS")]
	public partial class STOCK_GROUPS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Group;
		
		private string _Group_Name;
		
		private System.Nullable<bool> _PriceList1;
		
		private System.Nullable<bool> _PriceList2;
		
		private bool _Stocktake;
		
		private System.Nullable<decimal> _Margin1;
		
		private System.Nullable<decimal> _Margin2;
		
		private System.Nullable<decimal> _Margin3;
		
		private System.Nullable<decimal> _Margin4;
		
		private System.Nullable<decimal> _Margin5;
		
		private System.Nullable<decimal> _Margin6;
		
		private System.Nullable<decimal> _Margin7;
		
		private string _MasterGroup;
		
		private System.Nullable<short> _FloatPeriod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnGroup_NameChanging(string value);
    partial void OnGroup_NameChanged();
    partial void OnPriceList1Changing(System.Nullable<bool> value);
    partial void OnPriceList1Changed();
    partial void OnPriceList2Changing(System.Nullable<bool> value);
    partial void OnPriceList2Changed();
    partial void OnStocktakeChanging(bool value);
    partial void OnStocktakeChanged();
    partial void OnMargin1Changing(System.Nullable<decimal> value);
    partial void OnMargin1Changed();
    partial void OnMargin2Changing(System.Nullable<decimal> value);
    partial void OnMargin2Changed();
    partial void OnMargin3Changing(System.Nullable<decimal> value);
    partial void OnMargin3Changed();
    partial void OnMargin4Changing(System.Nullable<decimal> value);
    partial void OnMargin4Changed();
    partial void OnMargin5Changing(System.Nullable<decimal> value);
    partial void OnMargin5Changed();
    partial void OnMargin6Changing(System.Nullable<decimal> value);
    partial void OnMargin6Changed();
    partial void OnMargin7Changing(System.Nullable<decimal> value);
    partial void OnMargin7Changed();
    partial void OnMasterGroupChanging(string value);
    partial void OnMasterGroupChanged();
    partial void OnFloatPeriodChanging(System.Nullable<short> value);
    partial void OnFloatPeriodChanged();
    #endregion
		
		public STOCK_GROUPS()
		{
			OnCreated();
		}
		
		[Column(Storage="_Group", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[Column(Storage="_Group_Name", DbType="VarChar(50)")]
		public string Group_Name
		{
			get
			{
				return this._Group_Name;
			}
			set
			{
				if ((this._Group_Name != value))
				{
					this.OnGroup_NameChanging(value);
					this.SendPropertyChanging();
					this._Group_Name = value;
					this.SendPropertyChanged("Group_Name");
					this.OnGroup_NameChanged();
				}
			}
		}
		
		[Column(Storage="_PriceList1", DbType="Bit")]
		public System.Nullable<bool> PriceList1
		{
			get
			{
				return this._PriceList1;
			}
			set
			{
				if ((this._PriceList1 != value))
				{
					this.OnPriceList1Changing(value);
					this.SendPropertyChanging();
					this._PriceList1 = value;
					this.SendPropertyChanged("PriceList1");
					this.OnPriceList1Changed();
				}
			}
		}
		
		[Column(Storage="_PriceList2", DbType="Bit")]
		public System.Nullable<bool> PriceList2
		{
			get
			{
				return this._PriceList2;
			}
			set
			{
				if ((this._PriceList2 != value))
				{
					this.OnPriceList2Changing(value);
					this.SendPropertyChanging();
					this._PriceList2 = value;
					this.SendPropertyChanged("PriceList2");
					this.OnPriceList2Changed();
				}
			}
		}
		
		[Column(Storage="_Stocktake", DbType="Bit NOT NULL")]
		public bool Stocktake
		{
			get
			{
				return this._Stocktake;
			}
			set
			{
				if ((this._Stocktake != value))
				{
					this.OnStocktakeChanging(value);
					this.SendPropertyChanging();
					this._Stocktake = value;
					this.SendPropertyChanged("Stocktake");
					this.OnStocktakeChanged();
				}
			}
		}
		
		[Column(Storage="_Margin1", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> Margin1
		{
			get
			{
				return this._Margin1;
			}
			set
			{
				if ((this._Margin1 != value))
				{
					this.OnMargin1Changing(value);
					this.SendPropertyChanging();
					this._Margin1 = value;
					this.SendPropertyChanged("Margin1");
					this.OnMargin1Changed();
				}
			}
		}
		
		[Column(Storage="_Margin2", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> Margin2
		{
			get
			{
				return this._Margin2;
			}
			set
			{
				if ((this._Margin2 != value))
				{
					this.OnMargin2Changing(value);
					this.SendPropertyChanging();
					this._Margin2 = value;
					this.SendPropertyChanged("Margin2");
					this.OnMargin2Changed();
				}
			}
		}
		
		[Column(Storage="_Margin3", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> Margin3
		{
			get
			{
				return this._Margin3;
			}
			set
			{
				if ((this._Margin3 != value))
				{
					this.OnMargin3Changing(value);
					this.SendPropertyChanging();
					this._Margin3 = value;
					this.SendPropertyChanged("Margin3");
					this.OnMargin3Changed();
				}
			}
		}
		
		[Column(Storage="_Margin4", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> Margin4
		{
			get
			{
				return this._Margin4;
			}
			set
			{
				if ((this._Margin4 != value))
				{
					this.OnMargin4Changing(value);
					this.SendPropertyChanging();
					this._Margin4 = value;
					this.SendPropertyChanged("Margin4");
					this.OnMargin4Changed();
				}
			}
		}
		
		[Column(Storage="_Margin5", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> Margin5
		{
			get
			{
				return this._Margin5;
			}
			set
			{
				if ((this._Margin5 != value))
				{
					this.OnMargin5Changing(value);
					this.SendPropertyChanging();
					this._Margin5 = value;
					this.SendPropertyChanged("Margin5");
					this.OnMargin5Changed();
				}
			}
		}
		
		[Column(Storage="_Margin6", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> Margin6
		{
			get
			{
				return this._Margin6;
			}
			set
			{
				if ((this._Margin6 != value))
				{
					this.OnMargin6Changing(value);
					this.SendPropertyChanging();
					this._Margin6 = value;
					this.SendPropertyChanged("Margin6");
					this.OnMargin6Changed();
				}
			}
		}
		
		[Column(Storage="_Margin7", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> Margin7
		{
			get
			{
				return this._Margin7;
			}
			set
			{
				if ((this._Margin7 != value))
				{
					this.OnMargin7Changing(value);
					this.SendPropertyChanging();
					this._Margin7 = value;
					this.SendPropertyChanged("Margin7");
					this.OnMargin7Changed();
				}
			}
		}
		
		[Column(Storage="_MasterGroup", DbType="VarChar(5)")]
		public string MasterGroup
		{
			get
			{
				return this._MasterGroup;
			}
			set
			{
				if ((this._MasterGroup != value))
				{
					this.OnMasterGroupChanging(value);
					this.SendPropertyChanging();
					this._MasterGroup = value;
					this.SendPropertyChanged("MasterGroup");
					this.OnMasterGroupChanged();
				}
			}
		}
		
		[Column(Storage="_FloatPeriod", DbType="SmallInt")]
		public System.Nullable<short> FloatPeriod
		{
			get
			{
				return this._FloatPeriod;
			}
			set
			{
				if ((this._FloatPeriod != value))
				{
					this.OnFloatPeriodChanging(value);
					this.SendPropertyChanging();
					this._FloatPeriod = value;
					this.SendPropertyChanged("FloatPeriod");
					this.OnFloatPeriodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_INSERT$")]
	public partial class STOCK_INSERT_
	{
		
		private string _ProdCode;
		
		private string _FeatureCode;
		
		private string _Brand;
		
		private string _MachineType;
		
		private string _Model;
		
		private string _DeviceCode;
		
		private string _Description;
		
		public STOCK_INSERT_()
		{
		}
		
		[Column(Storage="_ProdCode", DbType="NVarChar(255)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Name="Feature Code", Storage="_FeatureCode", DbType="NVarChar(255)")]
		public string FeatureCode
		{
			get
			{
				return this._FeatureCode;
			}
			set
			{
				if ((this._FeatureCode != value))
				{
					this._FeatureCode = value;
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="NVarChar(255)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[Column(Storage="_MachineType", DbType="NVarChar(255)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this._MachineType = value;
				}
			}
		}
		
		[Column(Name="model", Storage="_Model", DbType="NVarChar(255)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="NVarChar(255)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.STOCK_MASTERGROUPS")]
	public partial class STOCK_MASTERGROUPS
	{
		
		private string _MasterGroup;
		
		private string _Description;
		
		public STOCK_MASTERGROUPS()
		{
		}
		
		[Column(Storage="_MasterGroup", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MasterGroup
		{
			get
			{
				return this._MasterGroup;
			}
			set
			{
				if ((this._MasterGroup != value))
				{
					this._MasterGroup = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.STOCK_MERGE$")]
	public partial class STOCK_MERGE_
	{
		
		private string _OLDPRODCODEANDHEADER;
		
		private string _NEWCODE;
		
		public STOCK_MERGE_()
		{
		}
		
		[Column(Name="OLDPRODCODE AND HEADER", Storage="_OLDPRODCODEANDHEADER", DbType="NVarChar(255)")]
		public string OLDPRODCODEANDHEADER
		{
			get
			{
				return this._OLDPRODCODEANDHEADER;
			}
			set
			{
				if ((this._OLDPRODCODEANDHEADER != value))
				{
					this._OLDPRODCODEANDHEADER = value;
				}
			}
		}
		
		[Column(Name="NEW CODE", Storage="_NEWCODE", DbType="NVarChar(255)")]
		public string NEWCODE
		{
			get
			{
				return this._NEWCODE;
			}
			set
			{
				if ((this._NEWCODE != value))
				{
					this._NEWCODE = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.STOCK_PRICING_TEMP")]
	public partial class STOCK_PRICING_TEMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StockPricingTempId;
		
		private string _ProdCode;
		
		private System.Nullable<decimal> _Price24x7x2;
		
		private System.Nullable<decimal> _Price9x5x4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStockPricingTempIdChanging(int value);
    partial void OnStockPricingTempIdChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnPrice24x7x2Changing(System.Nullable<decimal> value);
    partial void OnPrice24x7x2Changed();
    partial void OnPrice9x5x4Changing(System.Nullable<decimal> value);
    partial void OnPrice9x5x4Changed();
    #endregion
		
		public STOCK_PRICING_TEMP()
		{
			OnCreated();
		}
		
		[Column(Storage="_StockPricingTempId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StockPricingTempId
		{
			get
			{
				return this._StockPricingTempId;
			}
			set
			{
				if ((this._StockPricingTempId != value))
				{
					this.OnStockPricingTempIdChanging(value);
					this.SendPropertyChanging();
					this._StockPricingTempId = value;
					this.SendPropertyChanged("StockPricingTempId");
					this.OnStockPricingTempIdChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Price24x7x2", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Price24x7x2
		{
			get
			{
				return this._Price24x7x2;
			}
			set
			{
				if ((this._Price24x7x2 != value))
				{
					this.OnPrice24x7x2Changing(value);
					this.SendPropertyChanging();
					this._Price24x7x2 = value;
					this.SendPropertyChanged("Price24x7x2");
					this.OnPrice24x7x2Changed();
				}
			}
		}
		
		[Column(Storage="_Price9x5x4", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Price9x5x4
		{
			get
			{
				return this._Price9x5x4;
			}
			set
			{
				if ((this._Price9x5x4 != value))
				{
					this.OnPrice9x5x4Changing(value);
					this.SendPropertyChanging();
					this._Price9x5x4 = value;
					this.SendPropertyChanged("Price9x5x4");
					this.OnPrice9x5x4Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_RECEIVED")]
	public partial class STOCK_RECEIVED : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Audit;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _InvNum;
		
		private System.Nullable<System.DateTime> _InvDate;
		
		private System.Nullable<int> _PurchaseNum;
		
		private string _Creditor;
		
		private string _ProdCode;
		
		private System.Nullable<decimal> _Qty;
		
		private System.Nullable<decimal> _PrevQty;
		
		private decimal _Cost;
		
		private byte _OrderType;
		
		private int _LocationID;
		
		private string _UserID;
		
		private int _FCNum;
		
		private System.Nullable<decimal> _CostExt;
		
		private System.Nullable<decimal> _ExchRate;
		
		private System.Nullable<decimal> _AUDInvCost;
		
		private System.Nullable<decimal> _AUDCostExt;
		
		private System.Nullable<decimal> _Duty;
		
		private System.Nullable<decimal> _Freight;
		
		private System.Nullable<decimal> _SundryCharges;
		
		private System.Nullable<decimal> _BRSA;
		
		private System.Nullable<decimal> _Clearing;
		
		private System.Nullable<decimal> _LandedCost;
		
		private System.Nullable<decimal> _LandedExt;
		
		private System.Nullable<decimal> _OrderQty;
		
		private string _CurrencyType;
		
		private bool _Processed;
		
		private bool _Completed;
		
		private int _StkOrdItem;
		
		private int _Nkey;
		
		private decimal _LastQty;
		
		private bool _PostedGL;
		
		private byte _CompanyNum;
		
		private byte _Month;
		
		private int _Year;
		
		private System.Nullable<decimal> _RetQTY;
		
		private string _ConNote;
		
		private System.Nullable<int> _RecShelfLoc;
		
		private string _RecShelfLocDesc;
		
		private System.Nullable<bool> _IsBreakdown;
		
		private EntityRef<LOCATIONS> _LOCATIONS;
		
		private EntityRef<STKORD> _STKORD;
		
		private EntityRef<STKORDITEM> _StkOrdItemSTKORDITEM;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuditChanging(int value);
    partial void OnAuditChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnInvNumChanging(string value);
    partial void OnInvNumChanged();
    partial void OnInvDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvDateChanged();
    partial void OnPurchaseNumChanging(System.Nullable<int> value);
    partial void OnPurchaseNumChanged();
    partial void OnCreditorChanging(string value);
    partial void OnCreditorChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnPrevQtyChanging(System.Nullable<decimal> value);
    partial void OnPrevQtyChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnOrderTypeChanging(byte value);
    partial void OnOrderTypeChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnFCNumChanging(int value);
    partial void OnFCNumChanged();
    partial void OnCostExtChanging(System.Nullable<decimal> value);
    partial void OnCostExtChanged();
    partial void OnExchRateChanging(System.Nullable<decimal> value);
    partial void OnExchRateChanged();
    partial void OnAUDInvCostChanging(System.Nullable<decimal> value);
    partial void OnAUDInvCostChanged();
    partial void OnAUDCostExtChanging(System.Nullable<decimal> value);
    partial void OnAUDCostExtChanged();
    partial void OnDutyChanging(System.Nullable<decimal> value);
    partial void OnDutyChanged();
    partial void OnFreightChanging(System.Nullable<decimal> value);
    partial void OnFreightChanged();
    partial void OnSundryChargesChanging(System.Nullable<decimal> value);
    partial void OnSundryChargesChanged();
    partial void OnBRSAChanging(System.Nullable<decimal> value);
    partial void OnBRSAChanged();
    partial void OnClearingChanging(System.Nullable<decimal> value);
    partial void OnClearingChanged();
    partial void OnLandedCostChanging(System.Nullable<decimal> value);
    partial void OnLandedCostChanged();
    partial void OnLandedExtChanging(System.Nullable<decimal> value);
    partial void OnLandedExtChanged();
    partial void OnOrderQtyChanging(System.Nullable<decimal> value);
    partial void OnOrderQtyChanged();
    partial void OnCurrencyTypeChanging(string value);
    partial void OnCurrencyTypeChanged();
    partial void OnProcessedChanging(bool value);
    partial void OnProcessedChanged();
    partial void OnCompletedChanging(bool value);
    partial void OnCompletedChanged();
    partial void OnStkOrdItemChanging(int value);
    partial void OnStkOrdItemChanged();
    partial void OnNkeyChanging(int value);
    partial void OnNkeyChanged();
    partial void OnLastQtyChanging(decimal value);
    partial void OnLastQtyChanged();
    partial void OnPostedGLChanging(bool value);
    partial void OnPostedGLChanged();
    partial void OnCompanyNumChanging(byte value);
    partial void OnCompanyNumChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnRetQTYChanging(System.Nullable<decimal> value);
    partial void OnRetQTYChanged();
    partial void OnConNoteChanging(string value);
    partial void OnConNoteChanged();
    partial void OnRecShelfLocChanging(System.Nullable<int> value);
    partial void OnRecShelfLocChanged();
    partial void OnRecShelfLocDescChanging(string value);
    partial void OnRecShelfLocDescChanged();
    partial void OnIsBreakdownChanging(System.Nullable<bool> value);
    partial void OnIsBreakdownChanged();
    #endregion
		
		public STOCK_RECEIVED()
		{
			this._LOCATIONS = default(EntityRef<LOCATIONS>);
			this._STKORD = default(EntityRef<STKORD>);
			this._StkOrdItemSTKORDITEM = default(EntityRef<STKORDITEM>);
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_Audit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_InvNum", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string InvNum
		{
			get
			{
				return this._InvNum;
			}
			set
			{
				if ((this._InvNum != value))
				{
					this.OnInvNumChanging(value);
					this.SendPropertyChanging();
					this._InvNum = value;
					this.SendPropertyChanged("InvNum");
					this.OnInvNumChanged();
				}
			}
		}
		
		[Column(Storage="_InvDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvDate
		{
			get
			{
				return this._InvDate;
			}
			set
			{
				if ((this._InvDate != value))
				{
					this.OnInvDateChanging(value);
					this.SendPropertyChanging();
					this._InvDate = value;
					this.SendPropertyChanged("InvDate");
					this.OnInvDateChanged();
				}
			}
		}
		
		[Column(Storage="_PurchaseNum", DbType="Int")]
		public System.Nullable<int> PurchaseNum
		{
			get
			{
				return this._PurchaseNum;
			}
			set
			{
				if ((this._PurchaseNum != value))
				{
					if (this._STKORD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseNumChanging(value);
					this.SendPropertyChanging();
					this._PurchaseNum = value;
					this.SendPropertyChanged("PurchaseNum");
					this.OnPurchaseNumChanged();
				}
			}
		}
		
		[Column(Storage="_Creditor", DbType="VarChar(12)")]
		public string Creditor
		{
			get
			{
				return this._Creditor;
			}
			set
			{
				if ((this._Creditor != value))
				{
					this.OnCreditorChanging(value);
					this.SendPropertyChanging();
					this._Creditor = value;
					this.SendPropertyChanged("Creditor");
					this.OnCreditorChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_PrevQty", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> PrevQty
		{
			get
			{
				return this._PrevQty;
			}
			set
			{
				if ((this._PrevQty != value))
				{
					this.OnPrevQtyChanging(value);
					this.SendPropertyChanging();
					this._PrevQty = value;
					this.SendPropertyChanged("PrevQty");
					this.OnPrevQtyChanged();
				}
			}
		}
		
		[Column(Storage="_Cost", DbType="Money NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[Column(Storage="_OrderType", DbType="TinyInt NOT NULL")]
		public byte OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._LOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="VarChar(25)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_FCNum", DbType="Int NOT NULL")]
		public int FCNum
		{
			get
			{
				return this._FCNum;
			}
			set
			{
				if ((this._FCNum != value))
				{
					this.OnFCNumChanging(value);
					this.SendPropertyChanging();
					this._FCNum = value;
					this.SendPropertyChanged("FCNum");
					this.OnFCNumChanged();
				}
			}
		}
		
		[Column(Storage="_CostExt", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> CostExt
		{
			get
			{
				return this._CostExt;
			}
			set
			{
				if ((this._CostExt != value))
				{
					this.OnCostExtChanging(value);
					this.SendPropertyChanging();
					this._CostExt = value;
					this.SendPropertyChanged("CostExt");
					this.OnCostExtChanged();
				}
			}
		}
		
		[Column(Storage="_ExchRate", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> ExchRate
		{
			get
			{
				return this._ExchRate;
			}
			set
			{
				if ((this._ExchRate != value))
				{
					this.OnExchRateChanging(value);
					this.SendPropertyChanging();
					this._ExchRate = value;
					this.SendPropertyChanged("ExchRate");
					this.OnExchRateChanged();
				}
			}
		}
		
		[Column(Storage="_AUDInvCost", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> AUDInvCost
		{
			get
			{
				return this._AUDInvCost;
			}
			set
			{
				if ((this._AUDInvCost != value))
				{
					this.OnAUDInvCostChanging(value);
					this.SendPropertyChanging();
					this._AUDInvCost = value;
					this.SendPropertyChanged("AUDInvCost");
					this.OnAUDInvCostChanged();
				}
			}
		}
		
		[Column(Storage="_AUDCostExt", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> AUDCostExt
		{
			get
			{
				return this._AUDCostExt;
			}
			set
			{
				if ((this._AUDCostExt != value))
				{
					this.OnAUDCostExtChanging(value);
					this.SendPropertyChanging();
					this._AUDCostExt = value;
					this.SendPropertyChanged("AUDCostExt");
					this.OnAUDCostExtChanged();
				}
			}
		}
		
		[Column(Storage="_Duty", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Duty
		{
			get
			{
				return this._Duty;
			}
			set
			{
				if ((this._Duty != value))
				{
					this.OnDutyChanging(value);
					this.SendPropertyChanging();
					this._Duty = value;
					this.SendPropertyChanged("Duty");
					this.OnDutyChanged();
				}
			}
		}
		
		[Column(Storage="_Freight", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Freight
		{
			get
			{
				return this._Freight;
			}
			set
			{
				if ((this._Freight != value))
				{
					this.OnFreightChanging(value);
					this.SendPropertyChanging();
					this._Freight = value;
					this.SendPropertyChanged("Freight");
					this.OnFreightChanged();
				}
			}
		}
		
		[Column(Storage="_SundryCharges", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> SundryCharges
		{
			get
			{
				return this._SundryCharges;
			}
			set
			{
				if ((this._SundryCharges != value))
				{
					this.OnSundryChargesChanging(value);
					this.SendPropertyChanging();
					this._SundryCharges = value;
					this.SendPropertyChanged("SundryCharges");
					this.OnSundryChargesChanged();
				}
			}
		}
		
		[Column(Storage="_BRSA", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> BRSA
		{
			get
			{
				return this._BRSA;
			}
			set
			{
				if ((this._BRSA != value))
				{
					this.OnBRSAChanging(value);
					this.SendPropertyChanging();
					this._BRSA = value;
					this.SendPropertyChanged("BRSA");
					this.OnBRSAChanged();
				}
			}
		}
		
		[Column(Storage="_Clearing", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Clearing
		{
			get
			{
				return this._Clearing;
			}
			set
			{
				if ((this._Clearing != value))
				{
					this.OnClearingChanging(value);
					this.SendPropertyChanging();
					this._Clearing = value;
					this.SendPropertyChanged("Clearing");
					this.OnClearingChanged();
				}
			}
		}
		
		[Column(Storage="_LandedCost", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> LandedCost
		{
			get
			{
				return this._LandedCost;
			}
			set
			{
				if ((this._LandedCost != value))
				{
					this.OnLandedCostChanging(value);
					this.SendPropertyChanging();
					this._LandedCost = value;
					this.SendPropertyChanged("LandedCost");
					this.OnLandedCostChanged();
				}
			}
		}
		
		[Column(Storage="_LandedExt", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> LandedExt
		{
			get
			{
				return this._LandedExt;
			}
			set
			{
				if ((this._LandedExt != value))
				{
					this.OnLandedExtChanging(value);
					this.SendPropertyChanging();
					this._LandedExt = value;
					this.SendPropertyChanged("LandedExt");
					this.OnLandedExtChanged();
				}
			}
		}
		
		[Column(Storage="_OrderQty", DbType="Decimal(10,4)")]
		public System.Nullable<decimal> OrderQty
		{
			get
			{
				return this._OrderQty;
			}
			set
			{
				if ((this._OrderQty != value))
				{
					this.OnOrderQtyChanging(value);
					this.SendPropertyChanging();
					this._OrderQty = value;
					this.SendPropertyChanged("OrderQty");
					this.OnOrderQtyChanged();
				}
			}
		}
		
		[Column(Storage="_CurrencyType", DbType="VarChar(5)")]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this.OnCurrencyTypeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyType = value;
					this.SendPropertyChanged("CurrencyType");
					this.OnCurrencyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Processed", DbType="Bit NOT NULL")]
		public bool Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnProcessedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("Processed");
					this.OnProcessedChanged();
				}
			}
		}
		
		[Column(Storage="_Completed", DbType="Bit NOT NULL")]
		public bool Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_StkOrdItem", DbType="Int NOT NULL")]
		public int StkOrdItem
		{
			get
			{
				return this._StkOrdItem;
			}
			set
			{
				if ((this._StkOrdItem != value))
				{
					if (this._StkOrdItemSTKORDITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStkOrdItemChanging(value);
					this.SendPropertyChanging();
					this._StkOrdItem = value;
					this.SendPropertyChanged("StkOrdItem");
					this.OnStkOrdItemChanged();
				}
			}
		}
		
		[Column(Storage="_Nkey", DbType="Int NOT NULL")]
		public int Nkey
		{
			get
			{
				return this._Nkey;
			}
			set
			{
				if ((this._Nkey != value))
				{
					this.OnNkeyChanging(value);
					this.SendPropertyChanging();
					this._Nkey = value;
					this.SendPropertyChanged("Nkey");
					this.OnNkeyChanged();
				}
			}
		}
		
		[Column(Storage="_LastQty", DbType="Decimal(9,4) NOT NULL")]
		public decimal LastQty
		{
			get
			{
				return this._LastQty;
			}
			set
			{
				if ((this._LastQty != value))
				{
					this.OnLastQtyChanging(value);
					this.SendPropertyChanging();
					this._LastQty = value;
					this.SendPropertyChanged("LastQty");
					this.OnLastQtyChanged();
				}
			}
		}
		
		[Column(Storage="_PostedGL", DbType="Bit NOT NULL")]
		public bool PostedGL
		{
			get
			{
				return this._PostedGL;
			}
			set
			{
				if ((this._PostedGL != value))
				{
					this.OnPostedGLChanging(value);
					this.SendPropertyChanging();
					this._PostedGL = value;
					this.SendPropertyChanged("PostedGL");
					this.OnPostedGLChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt NOT NULL")]
		public byte CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this.OnCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._CompanyNum = value;
					this.SendPropertyChanged("CompanyNum");
					this.OnCompanyNumChanged();
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_RetQTY", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> RetQTY
		{
			get
			{
				return this._RetQTY;
			}
			set
			{
				if ((this._RetQTY != value))
				{
					this.OnRetQTYChanging(value);
					this.SendPropertyChanging();
					this._RetQTY = value;
					this.SendPropertyChanged("RetQTY");
					this.OnRetQTYChanged();
				}
			}
		}
		
		[Column(Storage="_ConNote", DbType="VarChar(50)")]
		public string ConNote
		{
			get
			{
				return this._ConNote;
			}
			set
			{
				if ((this._ConNote != value))
				{
					this.OnConNoteChanging(value);
					this.SendPropertyChanging();
					this._ConNote = value;
					this.SendPropertyChanged("ConNote");
					this.OnConNoteChanged();
				}
			}
		}
		
		[Column(Storage="_RecShelfLoc", DbType="Int")]
		public System.Nullable<int> RecShelfLoc
		{
			get
			{
				return this._RecShelfLoc;
			}
			set
			{
				if ((this._RecShelfLoc != value))
				{
					this.OnRecShelfLocChanging(value);
					this.SendPropertyChanging();
					this._RecShelfLoc = value;
					this.SendPropertyChanged("RecShelfLoc");
					this.OnRecShelfLocChanged();
				}
			}
		}
		
		[Column(Storage="_RecShelfLocDesc", DbType="VarChar(50)")]
		public string RecShelfLocDesc
		{
			get
			{
				return this._RecShelfLocDesc;
			}
			set
			{
				if ((this._RecShelfLocDesc != value))
				{
					this.OnRecShelfLocDescChanging(value);
					this.SendPropertyChanging();
					this._RecShelfLocDesc = value;
					this.SendPropertyChanged("RecShelfLocDesc");
					this.OnRecShelfLocDescChanged();
				}
			}
		}
		
		[Column(Storage="_IsBreakdown", DbType="Bit")]
		public System.Nullable<bool> IsBreakdown
		{
			get
			{
				return this._IsBreakdown;
			}
			set
			{
				if ((this._IsBreakdown != value))
				{
					this.OnIsBreakdownChanging(value);
					this.SendPropertyChanging();
					this._IsBreakdown = value;
					this.SendPropertyChanged("IsBreakdown");
					this.OnIsBreakdownChanged();
				}
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_LOCATIONS", Storage="_LOCATIONS", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LOCATIONS
		{
			get
			{
				return this._LOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS.Entity = null;
						previousValue.STOCK_RECEIVED.Remove(this);
					}
					this._LOCATIONS.Entity = value;
					if ((value != null))
					{
						value.STOCK_RECEIVED.Add(this);
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(int);
					}
					this.SendPropertyChanged("LOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_STKORD", Storage="_STKORD", ThisKey="PurchaseNum", OtherKey="OrdNum", IsForeignKey=true)]
		public STKORD STKORD
		{
			get
			{
				return this._STKORD.Entity;
			}
			set
			{
				STKORD previousValue = this._STKORD.Entity;
				if (((previousValue != value) 
							|| (this._STKORD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STKORD.Entity = null;
						previousValue.STOCK_RECEIVED.Remove(this);
					}
					this._STKORD.Entity = value;
					if ((value != null))
					{
						value.STOCK_RECEIVED.Add(this);
						this._PurchaseNum = value.OrdNum;
					}
					else
					{
						this._PurchaseNum = default(Nullable<int>);
					}
					this.SendPropertyChanged("STKORD");
				}
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_STKORDITEM", Storage="_StkOrdItemSTKORDITEM", ThisKey="StkOrdItem", OtherKey="ItemNum", IsForeignKey=true)]
		public STKORDITEM StkOrdItemSTKORDITEM
		{
			get
			{
				return this._StkOrdItemSTKORDITEM.Entity;
			}
			set
			{
				STKORDITEM previousValue = this._StkOrdItemSTKORDITEM.Entity;
				if (((previousValue != value) 
							|| (this._StkOrdItemSTKORDITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StkOrdItemSTKORDITEM.Entity = null;
						previousValue.STOCK_RECEIVED.Remove(this);
					}
					this._StkOrdItemSTKORDITEM.Entity = value;
					if ((value != null))
					{
						value.STOCK_RECEIVED.Add(this);
						this._StkOrdItem = value.ItemNum;
					}
					else
					{
						this._StkOrdItem = default(int);
					}
					this.SendPropertyChanged("StkOrdItemSTKORDITEM");
				}
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.STOCK_RECEIVED.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.STOCK_RECEIVED.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_RECEIVED_TMP")]
	public partial class STOCK_RECEIVED_TMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _PurchaseNum;
		
		private string _ProdCode;
		
		private decimal _Qty;
		
		private int _StkOrdItem;
		
		private int _LocationID;
		
		private string _UserID;
		
		private decimal _RetQTY;
		
		private string _ConNote;
		
		private System.Nullable<int> _RecShelfLoc;
		
		private string _RecShelfLocDesc;
		
		private System.Nullable<System.Guid> _GUID;
		
		private System.Nullable<int> _RetShelfLoc;
		
		private string _InvNum;
		
		private System.Nullable<bool> _HasItems;
		
		private EntityRef<LOCATIONS> _LOCATIONS;
		
		private EntityRef<STKORD> _STKORD;
		
		private EntityRef<STKORDITEM> _StkOrdItemSTKORDITEM;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPurchaseNumChanging(System.Nullable<int> value);
    partial void OnPurchaseNumChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnQtyChanging(decimal value);
    partial void OnQtyChanged();
    partial void OnStkOrdItemChanging(int value);
    partial void OnStkOrdItemChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnRetQTYChanging(decimal value);
    partial void OnRetQTYChanged();
    partial void OnConNoteChanging(string value);
    partial void OnConNoteChanged();
    partial void OnRecShelfLocChanging(System.Nullable<int> value);
    partial void OnRecShelfLocChanged();
    partial void OnRecShelfLocDescChanging(string value);
    partial void OnRecShelfLocDescChanged();
    partial void OnGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnGUIDChanged();
    partial void OnRetShelfLocChanging(System.Nullable<int> value);
    partial void OnRetShelfLocChanged();
    partial void OnInvNumChanging(string value);
    partial void OnInvNumChanged();
    partial void OnHasItemsChanging(System.Nullable<bool> value);
    partial void OnHasItemsChanged();
    #endregion
		
		public STOCK_RECEIVED_TMP()
		{
			this._LOCATIONS = default(EntityRef<LOCATIONS>);
			this._STKORD = default(EntityRef<STKORD>);
			this._StkOrdItemSTKORDITEM = default(EntityRef<STKORDITEM>);
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_PurchaseNum", DbType="Int")]
		public System.Nullable<int> PurchaseNum
		{
			get
			{
				return this._PurchaseNum;
			}
			set
			{
				if ((this._PurchaseNum != value))
				{
					if (this._STKORD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseNumChanging(value);
					this.SendPropertyChanging();
					this._PurchaseNum = value;
					this.SendPropertyChanged("PurchaseNum");
					this.OnPurchaseNumChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(9,4) NOT NULL")]
		public decimal Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_StkOrdItem", DbType="Int NOT NULL")]
		public int StkOrdItem
		{
			get
			{
				return this._StkOrdItem;
			}
			set
			{
				if ((this._StkOrdItem != value))
				{
					if (this._StkOrdItemSTKORDITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStkOrdItemChanging(value);
					this.SendPropertyChanging();
					this._StkOrdItem = value;
					this.SendPropertyChanged("StkOrdItem");
					this.OnStkOrdItemChanged();
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._LOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="VarChar(25)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_RetQTY", DbType="Decimal(9,4) NOT NULL")]
		public decimal RetQTY
		{
			get
			{
				return this._RetQTY;
			}
			set
			{
				if ((this._RetQTY != value))
				{
					this.OnRetQTYChanging(value);
					this.SendPropertyChanging();
					this._RetQTY = value;
					this.SendPropertyChanged("RetQTY");
					this.OnRetQTYChanged();
				}
			}
		}
		
		[Column(Storage="_ConNote", DbType="VarChar(50)")]
		public string ConNote
		{
			get
			{
				return this._ConNote;
			}
			set
			{
				if ((this._ConNote != value))
				{
					this.OnConNoteChanging(value);
					this.SendPropertyChanging();
					this._ConNote = value;
					this.SendPropertyChanged("ConNote");
					this.OnConNoteChanged();
				}
			}
		}
		
		[Column(Storage="_RecShelfLoc", DbType="Int")]
		public System.Nullable<int> RecShelfLoc
		{
			get
			{
				return this._RecShelfLoc;
			}
			set
			{
				if ((this._RecShelfLoc != value))
				{
					this.OnRecShelfLocChanging(value);
					this.SendPropertyChanging();
					this._RecShelfLoc = value;
					this.SendPropertyChanged("RecShelfLoc");
					this.OnRecShelfLocChanged();
				}
			}
		}
		
		[Column(Storage="_RecShelfLocDesc", DbType="VarChar(50)")]
		public string RecShelfLocDesc
		{
			get
			{
				return this._RecShelfLocDesc;
			}
			set
			{
				if ((this._RecShelfLocDesc != value))
				{
					this.OnRecShelfLocDescChanging(value);
					this.SendPropertyChanging();
					this._RecShelfLocDesc = value;
					this.SendPropertyChanged("RecShelfLocDesc");
					this.OnRecShelfLocDescChanged();
				}
			}
		}
		
		[Column(Storage="_GUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[Column(Storage="_RetShelfLoc", DbType="Int")]
		public System.Nullable<int> RetShelfLoc
		{
			get
			{
				return this._RetShelfLoc;
			}
			set
			{
				if ((this._RetShelfLoc != value))
				{
					this.OnRetShelfLocChanging(value);
					this.SendPropertyChanging();
					this._RetShelfLoc = value;
					this.SendPropertyChanged("RetShelfLoc");
					this.OnRetShelfLocChanged();
				}
			}
		}
		
		[Column(Storage="_InvNum", DbType="VarChar(16)")]
		public string InvNum
		{
			get
			{
				return this._InvNum;
			}
			set
			{
				if ((this._InvNum != value))
				{
					this.OnInvNumChanging(value);
					this.SendPropertyChanging();
					this._InvNum = value;
					this.SendPropertyChanged("InvNum");
					this.OnInvNumChanged();
				}
			}
		}
		
		[Column(Storage="_HasItems", DbType="Bit")]
		public System.Nullable<bool> HasItems
		{
			get
			{
				return this._HasItems;
			}
			set
			{
				if ((this._HasItems != value))
				{
					this.OnHasItemsChanging(value);
					this.SendPropertyChanging();
					this._HasItems = value;
					this.SendPropertyChanged("HasItems");
					this.OnHasItemsChanged();
				}
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_LOCATIONS_TMP", Storage="_LOCATIONS", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LOCATIONS
		{
			get
			{
				return this._LOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS.Entity = null;
						previousValue.STOCK_RECEIVED_TMP.Remove(this);
					}
					this._LOCATIONS.Entity = value;
					if ((value != null))
					{
						value.STOCK_RECEIVED_TMP.Add(this);
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(int);
					}
					this.SendPropertyChanged("LOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_STKORD_TMP", Storage="_STKORD", ThisKey="PurchaseNum", OtherKey="OrdNum", IsForeignKey=true)]
		public STKORD STKORD
		{
			get
			{
				return this._STKORD.Entity;
			}
			set
			{
				STKORD previousValue = this._STKORD.Entity;
				if (((previousValue != value) 
							|| (this._STKORD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STKORD.Entity = null;
						previousValue.STOCK_RECEIVED_TMP.Remove(this);
					}
					this._STKORD.Entity = value;
					if ((value != null))
					{
						value.STOCK_RECEIVED_TMP.Add(this);
						this._PurchaseNum = value.OrdNum;
					}
					else
					{
						this._PurchaseNum = default(Nullable<int>);
					}
					this.SendPropertyChanged("STKORD");
				}
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_STKORDITEM_TMP", Storage="_StkOrdItemSTKORDITEM", ThisKey="StkOrdItem", OtherKey="ItemNum", IsForeignKey=true)]
		public STKORDITEM StkOrdItemSTKORDITEM
		{
			get
			{
				return this._StkOrdItemSTKORDITEM.Entity;
			}
			set
			{
				STKORDITEM previousValue = this._StkOrdItemSTKORDITEM.Entity;
				if (((previousValue != value) 
							|| (this._StkOrdItemSTKORDITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StkOrdItemSTKORDITEM.Entity = null;
						previousValue.STOCK_RECEIVED_TMP.Remove(this);
					}
					this._StkOrdItemSTKORDITEM.Entity = value;
					if ((value != null))
					{
						value.STOCK_RECEIVED_TMP.Add(this);
						this._StkOrdItem = value.ItemNum;
					}
					else
					{
						this._StkOrdItem = default(int);
					}
					this.SendPropertyChanged("StkOrdItemSTKORDITEM");
				}
			}
		}
		
		[Association(Name="FK_STOCK_RECEIVED_STOCK_TMP", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.STOCK_RECEIVED_TMP.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.STOCK_RECEIVED_TMP.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_RECEIVED_TMP_BRK")]
	public partial class STOCK_RECEIVED_TMP_BRK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProdCode;
		
		private System.Nullable<decimal> _Qty;
		
		private System.Nullable<int> _StkOrdItem;
		
		private string _GUID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnStkOrdItemChanging(System.Nullable<int> value);
    partial void OnStkOrdItemChanged();
    partial void OnGUIDChanging(string value);
    partial void OnGUIDChanged();
    #endregion
		
		public STOCK_RECEIVED_TMP_BRK()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Column(Storage="_StkOrdItem", DbType="Int")]
		public System.Nullable<int> StkOrdItem
		{
			get
			{
				return this._StkOrdItem;
			}
			set
			{
				if ((this._StkOrdItem != value))
				{
					this.OnStkOrdItemChanging(value);
					this.SendPropertyChanging();
					this._StkOrdItem = value;
					this.SendPropertyChanged("StkOrdItem");
					this.OnStkOrdItemChanged();
				}
			}
		}
		
		[Column(Storage="_GUID", DbType="VarChar(50)")]
		public string GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_SHELF_LABEL_REPORTS")]
	public partial class STOCK_SHELF_LABEL_REPORTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LabelReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabelReportChanging(string value);
    partial void OnLabelReportChanged();
    #endregion
		
		public STOCK_SHELF_LABEL_REPORTS()
		{
			OnCreated();
		}
		
		[Column(Storage="_LabelReport", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LabelReport
		{
			get
			{
				return this._LabelReport;
			}
			set
			{
				if ((this._LabelReport != value))
				{
					this.OnLabelReportChanging(value);
					this.SendPropertyChanging();
					this._LabelReport = value;
					this.SendPropertyChanged("LabelReport");
					this.OnLabelReportChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_SHELF_LOCATIONS")]
	public partial class STOCK_SHELF_LOCATIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProdCode;
		
		private int _ShelfLocationId;
		
		private System.Nullable<short> _QTY;
		
		private EntityRef<LOCATIONS_SHELF> _LOCATIONS_SHELF;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnShelfLocationIdChanging(int value);
    partial void OnShelfLocationIdChanged();
    partial void OnQTYChanging(System.Nullable<short> value);
    partial void OnQTYChanged();
    #endregion
		
		public STOCK_SHELF_LOCATIONS()
		{
			this._LOCATIONS_SHELF = default(EntityRef<LOCATIONS_SHELF>);
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ShelfLocationId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShelfLocationId
		{
			get
			{
				return this._ShelfLocationId;
			}
			set
			{
				if ((this._ShelfLocationId != value))
				{
					if (this._LOCATIONS_SHELF.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShelfLocationIdChanging(value);
					this.SendPropertyChanging();
					this._ShelfLocationId = value;
					this.SendPropertyChanged("ShelfLocationId");
					this.OnShelfLocationIdChanged();
				}
			}
		}
		
		[Column(Storage="_QTY", DbType="SmallInt")]
		public System.Nullable<short> QTY
		{
			get
			{
				return this._QTY;
			}
			set
			{
				if ((this._QTY != value))
				{
					this.OnQTYChanging(value);
					this.SendPropertyChanging();
					this._QTY = value;
					this.SendPropertyChanged("QTY");
					this.OnQTYChanged();
				}
			}
		}
		
		[Association(Name="FK_STOCK_SHELF_LOCATIONS_LOCATIONS_SHELF", Storage="_LOCATIONS_SHELF", ThisKey="ShelfLocationId", OtherKey="ShelfLocationID", IsForeignKey=true)]
		public LOCATIONS_SHELF LOCATIONS_SHELF
		{
			get
			{
				return this._LOCATIONS_SHELF.Entity;
			}
			set
			{
				LOCATIONS_SHELF previousValue = this._LOCATIONS_SHELF.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS_SHELF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS_SHELF.Entity = null;
						previousValue.STOCK_SHELF_LOCATIONS.Remove(this);
					}
					this._LOCATIONS_SHELF.Entity = value;
					if ((value != null))
					{
						value.STOCK_SHELF_LOCATIONS.Add(this);
						this._ShelfLocationId = value.ShelfLocationID;
					}
					else
					{
						this._ShelfLocationId = default(int);
					}
					this.SendPropertyChanged("LOCATIONS_SHELF");
				}
			}
		}
		
		[Association(Name="FK_STOCK_SHELF_LOCATIONS_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.STOCK_SHELF_LOCATIONS.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.STOCK_SHELF_LOCATIONS.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_SHELF_LOCATIONS_POVALUES")]
	public partial class STOCK_SHELF_LOCATIONS_POVALUES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StockValueItemID;
		
		private int _ShelfLocationId;
		
		private string _ProdCode;
		
		private System.Nullable<int> _StkOrdItem;
		
		private decimal _Cost;
		
		private System.Nullable<int> _Qty;
		
		private EntityRef<LOCATIONS_SHELF> _LOCATIONS_SHELF;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStockValueItemIDChanging(int value);
    partial void OnStockValueItemIDChanged();
    partial void OnShelfLocationIdChanging(int value);
    partial void OnShelfLocationIdChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnStkOrdItemChanging(System.Nullable<int> value);
    partial void OnStkOrdItemChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    #endregion
		
		public STOCK_SHELF_LOCATIONS_POVALUES()
		{
			this._LOCATIONS_SHELF = default(EntityRef<LOCATIONS_SHELF>);
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_StockValueItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StockValueItemID
		{
			get
			{
				return this._StockValueItemID;
			}
			set
			{
				if ((this._StockValueItemID != value))
				{
					this.OnStockValueItemIDChanging(value);
					this.SendPropertyChanging();
					this._StockValueItemID = value;
					this.SendPropertyChanged("StockValueItemID");
					this.OnStockValueItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_ShelfLocationId", DbType="Int NOT NULL")]
		public int ShelfLocationId
		{
			get
			{
				return this._ShelfLocationId;
			}
			set
			{
				if ((this._ShelfLocationId != value))
				{
					if (this._LOCATIONS_SHELF.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShelfLocationIdChanging(value);
					this.SendPropertyChanging();
					this._ShelfLocationId = value;
					this.SendPropertyChanged("ShelfLocationId");
					this.OnShelfLocationIdChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_StkOrdItem", DbType="Int")]
		public System.Nullable<int> StkOrdItem
		{
			get
			{
				return this._StkOrdItem;
			}
			set
			{
				if ((this._StkOrdItem != value))
				{
					this.OnStkOrdItemChanging(value);
					this.SendPropertyChanging();
					this._StkOrdItem = value;
					this.SendPropertyChanged("StkOrdItem");
					this.OnStkOrdItemChanged();
				}
			}
		}
		
		[Column(Storage="_Cost", DbType="Money NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[Association(Name="FK_STOCK_SHELF_LOCATIONS_POVALUES_LOCATIONS_SHELF", Storage="_LOCATIONS_SHELF", ThisKey="ShelfLocationId", OtherKey="ShelfLocationID", IsForeignKey=true)]
		public LOCATIONS_SHELF LOCATIONS_SHELF
		{
			get
			{
				return this._LOCATIONS_SHELF.Entity;
			}
			set
			{
				LOCATIONS_SHELF previousValue = this._LOCATIONS_SHELF.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS_SHELF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS_SHELF.Entity = null;
						previousValue.STOCK_SHELF_LOCATIONS_POVALUES.Remove(this);
					}
					this._LOCATIONS_SHELF.Entity = value;
					if ((value != null))
					{
						value.STOCK_SHELF_LOCATIONS_POVALUES.Add(this);
						this._ShelfLocationId = value.ShelfLocationID;
					}
					else
					{
						this._ShelfLocationId = default(int);
					}
					this.SendPropertyChanged("LOCATIONS_SHELF");
				}
			}
		}
		
		[Association(Name="FK_STOCK_SHELF_LOCATIONS_POVALUES_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.STOCK_SHELF_LOCATIONS_POVALUES.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.STOCK_SHELF_LOCATIONS_POVALUES.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_SNAPSHOT")]
	public partial class STOCK_SNAPSHOT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Month;
		
		private short _Year;
		
		private string _ProdCode;
		
		private decimal _QOH;
		
		private decimal _PICK;
		
		private decimal _QOO;
		
		private decimal _QBO;
		
		private decimal _Scan;
		
		private decimal _Price1;
		
		private decimal _Price2;
		
		private decimal _Price3;
		
		private decimal _Price4;
		
		private decimal _Price5;
		
		private decimal _Price6;
		
		private decimal _MTD_UNITS;
		
		private decimal _MTD_SALES;
		
		private decimal _MTD_COST;
		
		private decimal _SupplierCost;
		
		private decimal _Packing;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnQOHChanging(decimal value);
    partial void OnQOHChanged();
    partial void OnPICKChanging(decimal value);
    partial void OnPICKChanged();
    partial void OnQOOChanging(decimal value);
    partial void OnQOOChanged();
    partial void OnQBOChanging(decimal value);
    partial void OnQBOChanged();
    partial void OnScanChanging(decimal value);
    partial void OnScanChanged();
    partial void OnPrice1Changing(decimal value);
    partial void OnPrice1Changed();
    partial void OnPrice2Changing(decimal value);
    partial void OnPrice2Changed();
    partial void OnPrice3Changing(decimal value);
    partial void OnPrice3Changed();
    partial void OnPrice4Changing(decimal value);
    partial void OnPrice4Changed();
    partial void OnPrice5Changing(decimal value);
    partial void OnPrice5Changed();
    partial void OnPrice6Changing(decimal value);
    partial void OnPrice6Changed();
    partial void OnMTD_UNITSChanging(decimal value);
    partial void OnMTD_UNITSChanged();
    partial void OnMTD_SALESChanging(decimal value);
    partial void OnMTD_SALESChanged();
    partial void OnMTD_COSTChanging(decimal value);
    partial void OnMTD_COSTChanged();
    partial void OnSupplierCostChanging(decimal value);
    partial void OnSupplierCostChanged();
    partial void OnPackingChanging(decimal value);
    partial void OnPackingChanged();
    #endregion
		
		public STOCK_SNAPSHOT()
		{
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_Month", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_QOH", DbType="Decimal(9,2) NOT NULL")]
		public decimal QOH
		{
			get
			{
				return this._QOH;
			}
			set
			{
				if ((this._QOH != value))
				{
					this.OnQOHChanging(value);
					this.SendPropertyChanging();
					this._QOH = value;
					this.SendPropertyChanged("QOH");
					this.OnQOHChanged();
				}
			}
		}
		
		[Column(Storage="_PICK", DbType="Decimal(9,2) NOT NULL")]
		public decimal PICK
		{
			get
			{
				return this._PICK;
			}
			set
			{
				if ((this._PICK != value))
				{
					this.OnPICKChanging(value);
					this.SendPropertyChanging();
					this._PICK = value;
					this.SendPropertyChanged("PICK");
					this.OnPICKChanged();
				}
			}
		}
		
		[Column(Storage="_QOO", DbType="Decimal(9,2) NOT NULL")]
		public decimal QOO
		{
			get
			{
				return this._QOO;
			}
			set
			{
				if ((this._QOO != value))
				{
					this.OnQOOChanging(value);
					this.SendPropertyChanging();
					this._QOO = value;
					this.SendPropertyChanged("QOO");
					this.OnQOOChanged();
				}
			}
		}
		
		[Column(Storage="_QBO", DbType="Decimal(9,2) NOT NULL")]
		public decimal QBO
		{
			get
			{
				return this._QBO;
			}
			set
			{
				if ((this._QBO != value))
				{
					this.OnQBOChanging(value);
					this.SendPropertyChanging();
					this._QBO = value;
					this.SendPropertyChanged("QBO");
					this.OnQBOChanged();
				}
			}
		}
		
		[Column(Storage="_Scan", DbType="Decimal(9,2) NOT NULL")]
		public decimal Scan
		{
			get
			{
				return this._Scan;
			}
			set
			{
				if ((this._Scan != value))
				{
					this.OnScanChanging(value);
					this.SendPropertyChanging();
					this._Scan = value;
					this.SendPropertyChanged("Scan");
					this.OnScanChanged();
				}
			}
		}
		
		[Column(Storage="_Price1", DbType="Money NOT NULL")]
		public decimal Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[Column(Storage="_Price2", DbType="Money NOT NULL")]
		public decimal Price2
		{
			get
			{
				return this._Price2;
			}
			set
			{
				if ((this._Price2 != value))
				{
					this.OnPrice2Changing(value);
					this.SendPropertyChanging();
					this._Price2 = value;
					this.SendPropertyChanged("Price2");
					this.OnPrice2Changed();
				}
			}
		}
		
		[Column(Storage="_Price3", DbType="Money NOT NULL")]
		public decimal Price3
		{
			get
			{
				return this._Price3;
			}
			set
			{
				if ((this._Price3 != value))
				{
					this.OnPrice3Changing(value);
					this.SendPropertyChanging();
					this._Price3 = value;
					this.SendPropertyChanged("Price3");
					this.OnPrice3Changed();
				}
			}
		}
		
		[Column(Storage="_Price4", DbType="Money NOT NULL")]
		public decimal Price4
		{
			get
			{
				return this._Price4;
			}
			set
			{
				if ((this._Price4 != value))
				{
					this.OnPrice4Changing(value);
					this.SendPropertyChanging();
					this._Price4 = value;
					this.SendPropertyChanged("Price4");
					this.OnPrice4Changed();
				}
			}
		}
		
		[Column(Storage="_Price5", DbType="Money NOT NULL")]
		public decimal Price5
		{
			get
			{
				return this._Price5;
			}
			set
			{
				if ((this._Price5 != value))
				{
					this.OnPrice5Changing(value);
					this.SendPropertyChanging();
					this._Price5 = value;
					this.SendPropertyChanged("Price5");
					this.OnPrice5Changed();
				}
			}
		}
		
		[Column(Storage="_Price6", DbType="Money NOT NULL")]
		public decimal Price6
		{
			get
			{
				return this._Price6;
			}
			set
			{
				if ((this._Price6 != value))
				{
					this.OnPrice6Changing(value);
					this.SendPropertyChanging();
					this._Price6 = value;
					this.SendPropertyChanged("Price6");
					this.OnPrice6Changed();
				}
			}
		}
		
		[Column(Storage="_MTD_UNITS", DbType="Decimal(18,2) NOT NULL")]
		public decimal MTD_UNITS
		{
			get
			{
				return this._MTD_UNITS;
			}
			set
			{
				if ((this._MTD_UNITS != value))
				{
					this.OnMTD_UNITSChanging(value);
					this.SendPropertyChanging();
					this._MTD_UNITS = value;
					this.SendPropertyChanged("MTD_UNITS");
					this.OnMTD_UNITSChanged();
				}
			}
		}
		
		[Column(Storage="_MTD_SALES", DbType="Money NOT NULL")]
		public decimal MTD_SALES
		{
			get
			{
				return this._MTD_SALES;
			}
			set
			{
				if ((this._MTD_SALES != value))
				{
					this.OnMTD_SALESChanging(value);
					this.SendPropertyChanging();
					this._MTD_SALES = value;
					this.SendPropertyChanged("MTD_SALES");
					this.OnMTD_SALESChanged();
				}
			}
		}
		
		[Column(Storage="_MTD_COST", DbType="Money NOT NULL")]
		public decimal MTD_COST
		{
			get
			{
				return this._MTD_COST;
			}
			set
			{
				if ((this._MTD_COST != value))
				{
					this.OnMTD_COSTChanging(value);
					this.SendPropertyChanging();
					this._MTD_COST = value;
					this.SendPropertyChanged("MTD_COST");
					this.OnMTD_COSTChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierCost", DbType="Money NOT NULL")]
		public decimal SupplierCost
		{
			get
			{
				return this._SupplierCost;
			}
			set
			{
				if ((this._SupplierCost != value))
				{
					this.OnSupplierCostChanging(value);
					this.SendPropertyChanging();
					this._SupplierCost = value;
					this.SendPropertyChanged("SupplierCost");
					this.OnSupplierCostChanged();
				}
			}
		}
		
		[Column(Storage="_Packing", DbType="Money NOT NULL")]
		public decimal Packing
		{
			get
			{
				return this._Packing;
			}
			set
			{
				if ((this._Packing != value))
				{
					this.OnPackingChanging(value);
					this.SendPropertyChanging();
					this._Packing = value;
					this.SendPropertyChanged("Packing");
					this.OnPackingChanged();
				}
			}
		}
		
		[Association(Name="FK_STOCK_SNAPSHOT_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.STOCK_SNAPSHOT.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.STOCK_SNAPSHOT.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_TEMP")]
	public partial class STOCK_TEMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProdCode;
		
		private decimal _MTD_COST;
		
		private decimal _YTD_COST;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnMTD_COSTChanging(decimal value);
    partial void OnMTD_COSTChanged();
    partial void OnYTD_COSTChanging(decimal value);
    partial void OnYTD_COSTChanged();
    #endregion
		
		public STOCK_TEMP()
		{
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_MTD_COST", DbType="Money NOT NULL")]
		public decimal MTD_COST
		{
			get
			{
				return this._MTD_COST;
			}
			set
			{
				if ((this._MTD_COST != value))
				{
					this.OnMTD_COSTChanging(value);
					this.SendPropertyChanging();
					this._MTD_COST = value;
					this.SendPropertyChanged("MTD_COST");
					this.OnMTD_COSTChanged();
				}
			}
		}
		
		[Column(Storage="_YTD_COST", DbType="Money NOT NULL")]
		public decimal YTD_COST
		{
			get
			{
				return this._YTD_COST;
			}
			set
			{
				if ((this._YTD_COST != value))
				{
					this.OnYTD_COSTChanging(value);
					this.SendPropertyChanging();
					this._YTD_COST = value;
					this.SendPropertyChanged("YTD_COST");
					this.OnYTD_COSTChanged();
				}
			}
		}
		
		[Association(Name="FK_STOCK_TEMP_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.STOCK_TEMP = null;
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.STOCK_TEMP = this;
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_TRANSFER")]
	public partial class STOCK_TRANSFER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransferID;
		
		private string _ProdCode;
		
		private int _FromShelfLoc;
		
		private int _ToLoc;
		
		private short _QTY;
		
		private System.Nullable<System.DateTime> _TransferDate;
		
		private System.Nullable<int> _OrdNum;
		
		private string _Comment;
		
		private string _EmployeeID;
		
		private System.Nullable<int> _ToShelfLoc;
		
		private System.Nullable<int> _TransferBatchID;
		
		private EntityRef<INT_STOCK_TRANSFER_BATCH> _INT_STOCK_TRANSFER_BATCH;
		
		private EntityRef<LOCATIONS> _LOCATIONS;
		
		private EntityRef<LOCATIONS_SHELF> _LOCATIONS_SHELF;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransferIDChanging(int value);
    partial void OnTransferIDChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnFromShelfLocChanging(int value);
    partial void OnFromShelfLocChanged();
    partial void OnToLocChanging(int value);
    partial void OnToLocChanged();
    partial void OnQTYChanging(short value);
    partial void OnQTYChanged();
    partial void OnTransferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferDateChanged();
    partial void OnOrdNumChanging(System.Nullable<int> value);
    partial void OnOrdNumChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnToShelfLocChanging(System.Nullable<int> value);
    partial void OnToShelfLocChanged();
    partial void OnTransferBatchIDChanging(System.Nullable<int> value);
    partial void OnTransferBatchIDChanged();
    #endregion
		
		public STOCK_TRANSFER()
		{
			this._INT_STOCK_TRANSFER_BATCH = default(EntityRef<INT_STOCK_TRANSFER_BATCH>);
			this._LOCATIONS = default(EntityRef<LOCATIONS>);
			this._LOCATIONS_SHELF = default(EntityRef<LOCATIONS_SHELF>);
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_TransferID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransferID
		{
			get
			{
				return this._TransferID;
			}
			set
			{
				if ((this._TransferID != value))
				{
					this.OnTransferIDChanging(value);
					this.SendPropertyChanging();
					this._TransferID = value;
					this.SendPropertyChanged("TransferID");
					this.OnTransferIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_FromShelfLoc", DbType="Int NOT NULL")]
		public int FromShelfLoc
		{
			get
			{
				return this._FromShelfLoc;
			}
			set
			{
				if ((this._FromShelfLoc != value))
				{
					if (this._LOCATIONS_SHELF.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromShelfLocChanging(value);
					this.SendPropertyChanging();
					this._FromShelfLoc = value;
					this.SendPropertyChanged("FromShelfLoc");
					this.OnFromShelfLocChanged();
				}
			}
		}
		
		[Column(Storage="_ToLoc", DbType="Int NOT NULL")]
		public int ToLoc
		{
			get
			{
				return this._ToLoc;
			}
			set
			{
				if ((this._ToLoc != value))
				{
					if (this._LOCATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToLocChanging(value);
					this.SendPropertyChanging();
					this._ToLoc = value;
					this.SendPropertyChanged("ToLoc");
					this.OnToLocChanged();
				}
			}
		}
		
		[Column(Storage="_QTY", DbType="SmallInt NOT NULL")]
		public short QTY
		{
			get
			{
				return this._QTY;
			}
			set
			{
				if ((this._QTY != value))
				{
					this.OnQTYChanging(value);
					this.SendPropertyChanging();
					this._QTY = value;
					this.SendPropertyChanged("QTY");
					this.OnQTYChanged();
				}
			}
		}
		
		[Column(Storage="_TransferDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TransferDate
		{
			get
			{
				return this._TransferDate;
			}
			set
			{
				if ((this._TransferDate != value))
				{
					this.OnTransferDateChanging(value);
					this.SendPropertyChanging();
					this._TransferDate = value;
					this.SendPropertyChanged("TransferDate");
					this.OnTransferDateChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="VarChar(256)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeID", DbType="VarChar(25)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ToShelfLoc", DbType="Int")]
		public System.Nullable<int> ToShelfLoc
		{
			get
			{
				return this._ToShelfLoc;
			}
			set
			{
				if ((this._ToShelfLoc != value))
				{
					this.OnToShelfLocChanging(value);
					this.SendPropertyChanging();
					this._ToShelfLoc = value;
					this.SendPropertyChanged("ToShelfLoc");
					this.OnToShelfLocChanged();
				}
			}
		}
		
		[Column(Storage="_TransferBatchID", DbType="Int")]
		public System.Nullable<int> TransferBatchID
		{
			get
			{
				return this._TransferBatchID;
			}
			set
			{
				if ((this._TransferBatchID != value))
				{
					if (this._INT_STOCK_TRANSFER_BATCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransferBatchIDChanging(value);
					this.SendPropertyChanging();
					this._TransferBatchID = value;
					this.SendPropertyChanged("TransferBatchID");
					this.OnTransferBatchIDChanged();
				}
			}
		}
		
		[Association(Name="FK_STOCK_TRANSFER_BATCH", Storage="_INT_STOCK_TRANSFER_BATCH", ThisKey="TransferBatchID", OtherKey="TransferBatchID", IsForeignKey=true)]
		public INT_STOCK_TRANSFER_BATCH INT_STOCK_TRANSFER_BATCH
		{
			get
			{
				return this._INT_STOCK_TRANSFER_BATCH.Entity;
			}
			set
			{
				INT_STOCK_TRANSFER_BATCH previousValue = this._INT_STOCK_TRANSFER_BATCH.Entity;
				if (((previousValue != value) 
							|| (this._INT_STOCK_TRANSFER_BATCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INT_STOCK_TRANSFER_BATCH.Entity = null;
						previousValue.STOCK_TRANSFER.Remove(this);
					}
					this._INT_STOCK_TRANSFER_BATCH.Entity = value;
					if ((value != null))
					{
						value.STOCK_TRANSFER.Add(this);
						this._TransferBatchID = value.TransferBatchID;
					}
					else
					{
						this._TransferBatchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("INT_STOCK_TRANSFER_BATCH");
				}
			}
		}
		
		[Association(Name="FK_STOCK_TRANSFER_LOCATIONS_TO", Storage="_LOCATIONS", ThisKey="ToLoc", OtherKey="LocationID", IsForeignKey=true)]
		public LOCATIONS LOCATIONS
		{
			get
			{
				return this._LOCATIONS.Entity;
			}
			set
			{
				LOCATIONS previousValue = this._LOCATIONS.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS.Entity = null;
						previousValue.STOCK_TRANSFER.Remove(this);
					}
					this._LOCATIONS.Entity = value;
					if ((value != null))
					{
						value.STOCK_TRANSFER.Add(this);
						this._ToLoc = value.LocationID;
					}
					else
					{
						this._ToLoc = default(int);
					}
					this.SendPropertyChanged("LOCATIONS");
				}
			}
		}
		
		[Association(Name="FK_STOCK_TRANSFER_SHELFLOCATION_FROM", Storage="_LOCATIONS_SHELF", ThisKey="FromShelfLoc", OtherKey="ShelfLocationID", IsForeignKey=true)]
		public LOCATIONS_SHELF LOCATIONS_SHELF
		{
			get
			{
				return this._LOCATIONS_SHELF.Entity;
			}
			set
			{
				LOCATIONS_SHELF previousValue = this._LOCATIONS_SHELF.Entity;
				if (((previousValue != value) 
							|| (this._LOCATIONS_SHELF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATIONS_SHELF.Entity = null;
						previousValue.STOCK_TRANSFER.Remove(this);
					}
					this._LOCATIONS_SHELF.Entity = value;
					if ((value != null))
					{
						value.STOCK_TRANSFER.Add(this);
						this._FromShelfLoc = value.ShelfLocationID;
					}
					else
					{
						this._FromShelfLoc = default(int);
					}
					this.SendPropertyChanged("LOCATIONS_SHELF");
				}
			}
		}
		
		[Association(Name="FK_STOCK_TRANSFER_STOCK", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.STOCK_TRANSFER.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.STOCK_TRANSFER.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_TRENDS")]
	public partial class STOCK_TRENDS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SupplierCode;
		
		private string _Group;
		
		private decimal _Min3Percent;
		
		private decimal _Max3Percent;
		
		private bool _ViewSuggested;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnMin3PercentChanging(decimal value);
    partial void OnMin3PercentChanged();
    partial void OnMax3PercentChanging(decimal value);
    partial void OnMax3PercentChanged();
    partial void OnViewSuggestedChanging(bool value);
    partial void OnViewSuggestedChanged();
    #endregion
		
		public STOCK_TRENDS()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_SupplierCode", DbType="VarChar(12)")]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Group", DbType="VarChar(5)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[Column(Storage="_Min3Percent", DbType="Decimal(9,2) NOT NULL")]
		public decimal Min3Percent
		{
			get
			{
				return this._Min3Percent;
			}
			set
			{
				if ((this._Min3Percent != value))
				{
					this.OnMin3PercentChanging(value);
					this.SendPropertyChanging();
					this._Min3Percent = value;
					this.SendPropertyChanged("Min3Percent");
					this.OnMin3PercentChanged();
				}
			}
		}
		
		[Column(Storage="_Max3Percent", DbType="Decimal(9,2) NOT NULL")]
		public decimal Max3Percent
		{
			get
			{
				return this._Max3Percent;
			}
			set
			{
				if ((this._Max3Percent != value))
				{
					this.OnMax3PercentChanging(value);
					this.SendPropertyChanging();
					this._Max3Percent = value;
					this.SendPropertyChanged("Max3Percent");
					this.OnMax3PercentChanged();
				}
			}
		}
		
		[Column(Storage="_ViewSuggested", DbType="Bit NOT NULL")]
		public bool ViewSuggested
		{
			get
			{
				return this._ViewSuggested;
			}
			set
			{
				if ((this._ViewSuggested != value))
				{
					this.OnViewSuggestedChanging(value);
					this.SendPropertyChanging();
					this._ViewSuggested = value;
					this.SendPropertyChanged("ViewSuggested");
					this.OnViewSuggestedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_UPDATE$")]
	public partial class STOCK_UPDATE_
	{
		
		private string _ProdCode;
		
		private string _FeatureCode;
		
		private string _Brand;
		
		private string _MachineType;
		
		private string _Model;
		
		private string _DeviceCode;
		
		private string _Description;
		
		public STOCK_UPDATE_()
		{
		}
		
		[Column(Storage="_ProdCode", DbType="NVarChar(255)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Name="Feature Code", Storage="_FeatureCode", DbType="NVarChar(255)")]
		public string FeatureCode
		{
			get
			{
				return this._FeatureCode;
			}
			set
			{
				if ((this._FeatureCode != value))
				{
					this._FeatureCode = value;
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="NVarChar(255)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[Column(Storage="_MachineType", DbType="NVarChar(255)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this._MachineType = value;
				}
			}
		}
		
		[Column(Name="model", Storage="_Model", DbType="NVarChar(255)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="NVarChar(255)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.STOCK_UPDATE_HISTORY")]
	public partial class STOCK_UPDATE_HISTORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UpdateHistoryID;
		
		private string _ProdCode;
		
		private System.Nullable<System.DateTime> _UpdDate;
		
		private string _UpdUser;
		
		private string _Type;
		
		private EntityRef<STOCK> _STOCK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUpdateHistoryIDChanging(int value);
    partial void OnUpdateHistoryIDChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnUpdDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdDateChanged();
    partial void OnUpdUserChanging(string value);
    partial void OnUpdUserChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public STOCK_UPDATE_HISTORY()
		{
			this._STOCK = default(EntityRef<STOCK>);
			OnCreated();
		}
		
		[Column(Storage="_UpdateHistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UpdateHistoryID
		{
			get
			{
				return this._UpdateHistoryID;
			}
			set
			{
				if ((this._UpdateHistoryID != value))
				{
					this.OnUpdateHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._UpdateHistoryID = value;
					this.SendPropertyChanged("UpdateHistoryID");
					this.OnUpdateHistoryIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					if (this._STOCK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_UpdDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[Column(Storage="_UpdUser", DbType="VarChar(25)")]
		public string UpdUser
		{
			get
			{
				return this._UpdUser;
			}
			set
			{
				if ((this._UpdUser != value))
				{
					this.OnUpdUserChanging(value);
					this.SendPropertyChanging();
					this._UpdUser = value;
					this.SendPropertyChanged("UpdUser");
					this.OnUpdUserChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(7)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Association(Name="FK_STOCK_UPDATE_HISTORY_PRODCODE", Storage="_STOCK", ThisKey="ProdCode", OtherKey="ProdCode", IsForeignKey=true)]
		public STOCK STOCK
		{
			get
			{
				return this._STOCK.Entity;
			}
			set
			{
				STOCK previousValue = this._STOCK.Entity;
				if (((previousValue != value) 
							|| (this._STOCK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STOCK.Entity = null;
						previousValue.STOCK_UPDATE_HISTORY.Remove(this);
					}
					this._STOCK.Entity = value;
					if ((value != null))
					{
						value.STOCK_UPDATE_HISTORY.Add(this);
						this._ProdCode = value.ProdCode;
					}
					else
					{
						this._ProdCode = default(string);
					}
					this.SendPropertyChanged("STOCK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.STOCK_USAGE")]
	public partial class STOCK_USAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _NKey;
		
		private string _ProdCode;
		
		private decimal _Sales_Units;
		
		private decimal _BM_Units;
		
		private decimal _QOH;
		
		private decimal _AvgCost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNKeyChanging(decimal value);
    partial void OnNKeyChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnSales_UnitsChanging(decimal value);
    partial void OnSales_UnitsChanged();
    partial void OnBM_UnitsChanging(decimal value);
    partial void OnBM_UnitsChanged();
    partial void OnQOHChanging(decimal value);
    partial void OnQOHChanged();
    partial void OnAvgCostChanging(decimal value);
    partial void OnAvgCostChanged();
    #endregion
		
		public STOCK_USAGE()
		{
			OnCreated();
		}
		
		[Column(Storage="_NKey", DbType="Decimal(9,2) NOT NULL", IsPrimaryKey=true)]
		public decimal NKey
		{
			get
			{
				return this._NKey;
			}
			set
			{
				if ((this._NKey != value))
				{
					this.OnNKeyChanging(value);
					this.SendPropertyChanging();
					this._NKey = value;
					this.SendPropertyChanged("NKey");
					this.OnNKeyChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Sales_Units", DbType="Decimal(18,4) NOT NULL")]
		public decimal Sales_Units
		{
			get
			{
				return this._Sales_Units;
			}
			set
			{
				if ((this._Sales_Units != value))
				{
					this.OnSales_UnitsChanging(value);
					this.SendPropertyChanging();
					this._Sales_Units = value;
					this.SendPropertyChanged("Sales_Units");
					this.OnSales_UnitsChanged();
				}
			}
		}
		
		[Column(Storage="_BM_Units", DbType="Decimal(18,4) NOT NULL")]
		public decimal BM_Units
		{
			get
			{
				return this._BM_Units;
			}
			set
			{
				if ((this._BM_Units != value))
				{
					this.OnBM_UnitsChanging(value);
					this.SendPropertyChanging();
					this._BM_Units = value;
					this.SendPropertyChanged("BM_Units");
					this.OnBM_UnitsChanged();
				}
			}
		}
		
		[Column(Storage="_QOH", DbType="Decimal(18,4) NOT NULL")]
		public decimal QOH
		{
			get
			{
				return this._QOH;
			}
			set
			{
				if ((this._QOH != value))
				{
					this.OnQOHChanging(value);
					this.SendPropertyChanging();
					this._QOH = value;
					this.SendPropertyChanged("QOH");
					this.OnQOHChanged();
				}
			}
		}
		
		[Column(Storage="_AvgCost", DbType="Decimal(9,2) NOT NULL")]
		public decimal AvgCost
		{
			get
			{
				return this._AvgCost;
			}
			set
			{
				if ((this._AvgCost != value))
				{
					this.OnAvgCostChanging(value);
					this.SendPropertyChanging();
					this._AvgCost = value;
					this.SendPropertyChanged("AvgCost");
					this.OnAvgCostChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.StockConv")]
	public partial class StockConv
	{
		
		private string _OldProdCode;
		
		private string _NewProdCode;
		
		public StockConv()
		{
		}
		
		[Column(Storage="_OldProdCode", DbType="VarChar(35)")]
		public string OldProdCode
		{
			get
			{
				return this._OldProdCode;
			}
			set
			{
				if ((this._OldProdCode != value))
				{
					this._OldProdCode = value;
				}
			}
		}
		
		[Column(Storage="_NewProdCode", DbType="VarChar(35)")]
		public string NewProdCode
		{
			get
			{
				return this._NewProdCode;
			}
			set
			{
				if ((this._NewProdCode != value))
				{
					this._NewProdCode = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tbl OPTIONS FOCUS")]
	public partial class TblOPTIONSFOCUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _C;
		
		private System.Nullable<double> _CatNumber;
		
		private string _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCChanging(int value);
    partial void OnCChanged();
    partial void OnCatNumberChanging(System.Nullable<double> value);
    partial void OnCatNumberChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public TblOPTIONSFOCUS()
		{
			OnCreated();
		}
		
		[Column(Storage="_C", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this.OnCChanging(value);
					this.SendPropertyChanging();
					this._C = value;
					this.SendPropertyChanged("C");
					this.OnCChanged();
				}
			}
		}
		
		[Column(Storage="_CatNumber", DbType="Float")]
		public System.Nullable<double> CatNumber
		{
			get
			{
				return this._CatNumber;
			}
			set
			{
				if ((this._CatNumber != value))
				{
					this.OnCatNumberChanging(value);
					this.SendPropertyChanging();
					this._CatNumber = value;
					this.SendPropertyChanged("CatNumber");
					this.OnCatNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Category", DbType="NVarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl OPTIONS FOCUS ITEMS")]
	public partial class TblOPTIONSFOCUSITEMS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _C;
		
		private System.Nullable<short> _CatNumber;
		
		private System.Nullable<short> _ItemNumber;
		
		private string _StockItem;
		
		private string _StockDesc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCChanging(int value);
    partial void OnCChanged();
    partial void OnCatNumberChanging(System.Nullable<short> value);
    partial void OnCatNumberChanged();
    partial void OnItemNumberChanging(System.Nullable<short> value);
    partial void OnItemNumberChanged();
    partial void OnStockItemChanging(string value);
    partial void OnStockItemChanged();
    partial void OnStockDescChanging(string value);
    partial void OnStockDescChanged();
    #endregion
		
		public TblOPTIONSFOCUSITEMS()
		{
			OnCreated();
		}
		
		[Column(Storage="_C", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this.OnCChanging(value);
					this.SendPropertyChanging();
					this._C = value;
					this.SendPropertyChanged("C");
					this.OnCChanged();
				}
			}
		}
		
		[Column(Storage="_CatNumber", DbType="SmallInt")]
		public System.Nullable<short> CatNumber
		{
			get
			{
				return this._CatNumber;
			}
			set
			{
				if ((this._CatNumber != value))
				{
					this.OnCatNumberChanging(value);
					this.SendPropertyChanging();
					this._CatNumber = value;
					this.SendPropertyChanged("CatNumber");
					this.OnCatNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ItemNumber", DbType="SmallInt")]
		public System.Nullable<short> ItemNumber
		{
			get
			{
				return this._ItemNumber;
			}
			set
			{
				if ((this._ItemNumber != value))
				{
					this.OnItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ItemNumber = value;
					this.SendPropertyChanged("ItemNumber");
					this.OnItemNumberChanged();
				}
			}
		}
		
		[Column(Storage="_StockItem", DbType="NVarChar(25)")]
		public string StockItem
		{
			get
			{
				return this._StockItem;
			}
			set
			{
				if ((this._StockItem != value))
				{
					this.OnStockItemChanging(value);
					this.SendPropertyChanging();
					this._StockItem = value;
					this.SendPropertyChanged("StockItem");
					this.OnStockItemChanged();
				}
			}
		}
		
		[Column(Storage="_StockDesc", DbType="NVarChar(50)")]
		public string StockDesc
		{
			get
			{
				return this._StockDesc;
			}
			set
			{
				if ((this._StockDesc != value))
				{
					this.OnStockDescChanging(value);
					this.SendPropertyChanging();
					this._StockDesc = value;
					this.SendPropertyChanged("StockDesc");
					this.OnStockDescChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TEMP_ACCOUNTS")]
	public partial class TEMP_ACCOUNTS
	{
		
		private System.Nullable<int> _OLD_ACC;
		
		private System.Nullable<int> _NEW_ACC;
		
		public TEMP_ACCOUNTS()
		{
		}
		
		[Column(Storage="_OLD_ACC", DbType="Int")]
		public System.Nullable<int> OLD_ACC
		{
			get
			{
				return this._OLD_ACC;
			}
			set
			{
				if ((this._OLD_ACC != value))
				{
					this._OLD_ACC = value;
				}
			}
		}
		
		[Column(Storage="_NEW_ACC", DbType="Int")]
		public System.Nullable<int> NEW_ACC
		{
			get
			{
				return this._NEW_ACC;
			}
			set
			{
				if ((this._NEW_ACC != value))
				{
					this._NEW_ACC = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.temp_bsg_added")]
	public partial class Temp_bsg_added
	{
		
		private int _Accountid;
		
		private string _Company;
		
		private System.Nullable<decimal> _TotalValue;
		
		public Temp_bsg_added()
		{
		}
		
		[Column(Storage="_Accountid", DbType="Int NOT NULL")]
		public int Accountid
		{
			get
			{
				return this._Accountid;
			}
			set
			{
				if ((this._Accountid != value))
				{
					this._Accountid = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_TotalValue", DbType="Money")]
		public System.Nullable<decimal> TotalValue
		{
			get
			{
				return this._TotalValue;
			}
			set
			{
				if ((this._TotalValue != value))
				{
					this._TotalValue = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.temp_bsg_del")]
	public partial class Temp_bsg_del
	{
		
		private int _Accountid;
		
		private string _Company;
		
		private System.Nullable<decimal> _TotalValue;
		
		public Temp_bsg_del()
		{
		}
		
		[Column(Storage="_Accountid", DbType="Int NOT NULL")]
		public int Accountid
		{
			get
			{
				return this._Accountid;
			}
			set
			{
				if ((this._Accountid != value))
				{
					this._Accountid = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_TotalValue", DbType="Money")]
		public System.Nullable<decimal> TotalValue
		{
			get
			{
				return this._TotalValue;
			}
			set
			{
				if ((this._TotalValue != value))
				{
					this._TotalValue = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.temp_Changes")]
	public partial class Temp_Changes
	{
		
		private System.Nullable<int> _Parent;
		
		private System.Nullable<decimal> _Additions_value;
		
		private System.Nullable<decimal> _Deletions_value;
		
		public Temp_Changes()
		{
		}
		
		[Column(Name="parent", Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this._Parent = value;
				}
			}
		}
		
		[Column(Name="additions_value", Storage="_Additions_value", DbType="Money")]
		public System.Nullable<decimal> Additions_value
		{
			get
			{
				return this._Additions_value;
			}
			set
			{
				if ((this._Additions_value != value))
				{
					this._Additions_value = value;
				}
			}
		}
		
		[Column(Name="deletions_value", Storage="_Deletions_value", DbType="Money")]
		public System.Nullable<decimal> Deletions_value
		{
			get
			{
				return this._Deletions_value;
			}
			set
			{
				if ((this._Deletions_value != value))
				{
					this._Deletions_value = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TEMP_CURRENT_ACTIVE_CLIENTS")]
	public partial class TEMP_CURRENT_ACTIVE_CLIENTS
	{
		
		private System.Nullable<int> _ACCOUNTID;
		
		private System.Nullable<int> _CONTRACTID;
		
		private string _COMPANY;
		
		private System.Nullable<decimal> _TOTAL;
		
		public TEMP_CURRENT_ACTIVE_CLIENTS()
		{
		}
		
		[Column(Storage="_ACCOUNTID", DbType="Int")]
		public System.Nullable<int> ACCOUNTID
		{
			get
			{
				return this._ACCOUNTID;
			}
			set
			{
				if ((this._ACCOUNTID != value))
				{
					this._ACCOUNTID = value;
				}
			}
		}
		
		[Column(Storage="_CONTRACTID", DbType="Int")]
		public System.Nullable<int> CONTRACTID
		{
			get
			{
				return this._CONTRACTID;
			}
			set
			{
				if ((this._CONTRACTID != value))
				{
					this._CONTRACTID = value;
				}
			}
		}
		
		[Column(Storage="_COMPANY", DbType="VarChar(80)")]
		public string COMPANY
		{
			get
			{
				return this._COMPANY;
			}
			set
			{
				if ((this._COMPANY != value))
				{
					this._COMPANY = value;
				}
			}
		}
		
		[Column(Storage="_TOTAL", DbType="Money")]
		public System.Nullable<decimal> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Temp_DRUpdate")]
	public partial class Temp_DRUpdate
	{
		
		private System.Nullable<int> _RevCat;
		
		private string _ProdCode;
		
		public Temp_DRUpdate()
		{
		}
		
		[Column(Name="Rev Cat", Storage="_RevCat", DbType="Int")]
		public System.Nullable<int> RevCat
		{
			get
			{
				return this._RevCat;
			}
			set
			{
				if ((this._RevCat != value))
				{
					this._RevCat = value;
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="NVarChar(255)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TEMP_INT")]
	public partial class TEMP_INT
	{
		
		private System.Nullable<int> _SNAPSHOTITEMID;
		
		private System.Nullable<int> _ACCOUNTID;
		
		private System.Nullable<decimal> _TOTAL;
		
		private string _STATE;
		
		public TEMP_INT()
		{
		}
		
		[Column(Storage="_SNAPSHOTITEMID", DbType="Int")]
		public System.Nullable<int> SNAPSHOTITEMID
		{
			get
			{
				return this._SNAPSHOTITEMID;
			}
			set
			{
				if ((this._SNAPSHOTITEMID != value))
				{
					this._SNAPSHOTITEMID = value;
				}
			}
		}
		
		[Column(Storage="_ACCOUNTID", DbType="Int")]
		public System.Nullable<int> ACCOUNTID
		{
			get
			{
				return this._ACCOUNTID;
			}
			set
			{
				if ((this._ACCOUNTID != value))
				{
					this._ACCOUNTID = value;
				}
			}
		}
		
		[Column(Storage="_TOTAL", DbType="Money")]
		public System.Nullable<decimal> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[Column(Storage="_STATE", DbType="VarChar(5)")]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this._STATE = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TEMP_PROJECT_INCOMPLETE")]
	public partial class TEMP_PROJECT_INCOMPLETE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private System.Nullable<int> _ProjectID;
		
		private string _ProjectManager;
		
		private string _Status;
		
		private string _BusinessUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnProjectIDChanging(System.Nullable<int> value);
    partial void OnProjectIDChanged();
    partial void OnProjectManagerChanging(string value);
    partial void OnProjectManagerChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnBusinessUnitChanging(string value);
    partial void OnBusinessUnitChanged();
    #endregion
		
		public TEMP_PROJECT_INCOMPLETE()
		{
			OnCreated();
		}
		
		[Column(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectID", DbType="Int")]
		public System.Nullable<int> ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectManager", DbType="VarChar(51)")]
		public string ProjectManager
		{
			get
			{
				return this._ProjectManager;
			}
			set
			{
				if ((this._ProjectManager != value))
				{
					this.OnProjectManagerChanging(value);
					this.SendPropertyChanging();
					this._ProjectManager = value;
					this.SendPropertyChanged("ProjectManager");
					this.OnProjectManagerChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_BusinessUnit", DbType="VarChar(50)")]
		public string BusinessUnit
		{
			get
			{
				return this._BusinessUnit;
			}
			set
			{
				if ((this._BusinessUnit != value))
				{
					this.OnBusinessUnitChanging(value);
					this.SendPropertyChanging();
					this._BusinessUnit = value;
					this.SendPropertyChanged("BusinessUnit");
					this.OnBusinessUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TEMP_SNAPSHOT")]
	public partial class TEMP_SNAPSHOT
	{
		
		private System.Nullable<int> _SNAPSHOTITEMID;
		
		private System.Nullable<int> _ACCOUNTID;
		
		private System.Nullable<decimal> _TOTAL;
		
		public TEMP_SNAPSHOT()
		{
		}
		
		[Column(Storage="_SNAPSHOTITEMID", DbType="Int")]
		public System.Nullable<int> SNAPSHOTITEMID
		{
			get
			{
				return this._SNAPSHOTITEMID;
			}
			set
			{
				if ((this._SNAPSHOTITEMID != value))
				{
					this._SNAPSHOTITEMID = value;
				}
			}
		}
		
		[Column(Storage="_ACCOUNTID", DbType="Int")]
		public System.Nullable<int> ACCOUNTID
		{
			get
			{
				return this._ACCOUNTID;
			}
			set
			{
				if ((this._ACCOUNTID != value))
				{
					this._ACCOUNTID = value;
				}
			}
		}
		
		[Column(Storage="_TOTAL", DbType="Money")]
		public System.Nullable<decimal> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TEMP_THIRD_PARTY_PROFITS")]
	public partial class TEMP_THIRD_PARTY_PROFITS
	{
		
		private System.Nullable<int> _CONTRACTITEMID;
		
		private string _STATE;
		
		private System.Nullable<decimal> _PRICE;
		
		private System.Nullable<decimal> _COST;
		
		private System.Nullable<decimal> _PROFIT;
		
		public TEMP_THIRD_PARTY_PROFITS()
		{
		}
		
		[Column(Storage="_CONTRACTITEMID", DbType="Int")]
		public System.Nullable<int> CONTRACTITEMID
		{
			get
			{
				return this._CONTRACTITEMID;
			}
			set
			{
				if ((this._CONTRACTITEMID != value))
				{
					this._CONTRACTITEMID = value;
				}
			}
		}
		
		[Column(Storage="_STATE", DbType="VarChar(5)")]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this._STATE = value;
				}
			}
		}
		
		[Column(Storage="_PRICE", DbType="Money")]
		public System.Nullable<decimal> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this._PRICE = value;
				}
			}
		}
		
		[Column(Storage="_COST", DbType="Money")]
		public System.Nullable<decimal> COST
		{
			get
			{
				return this._COST;
			}
			set
			{
				if ((this._COST != value))
				{
					this._COST = value;
				}
			}
		}
		
		[Column(Storage="_PROFIT", DbType="Money")]
		public System.Nullable<decimal> PROFIT
		{
			get
			{
				return this._PROFIT;
			}
			set
			{
				if ((this._PROFIT != value))
				{
					this._PROFIT = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TEMPBAL")]
	public partial class TEMPBAL
	{
		
		private string _AccountID;
		
		private System.Nullable<decimal> _Current;
		
		private System.Nullable<decimal> @__30Days;
		
		private System.Nullable<decimal> @__60Days;
		
		private System.Nullable<decimal> @__90days;
		
		public TEMPBAL()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Current", DbType="Money")]
		public System.Nullable<decimal> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Name="30Days", Storage="__30Days", DbType="Money")]
		public System.Nullable<decimal> _30Days
		{
			get
			{
				return this.@__30Days;
			}
			set
			{
				if ((this.@__30Days != value))
				{
					this.@__30Days = value;
				}
			}
		}
		
		[Column(Name="60Days", Storage="__60Days", DbType="Money")]
		public System.Nullable<decimal> _60Days
		{
			get
			{
				return this.@__60Days;
			}
			set
			{
				if ((this.@__60Days != value))
				{
					this.@__60Days = value;
				}
			}
		}
		
		[Column(Name="90days", Storage="__90days", DbType="Money")]
		public System.Nullable<decimal> _90days
		{
			get
			{
				return this.@__90days;
			}
			set
			{
				if ((this.@__90days != value))
				{
					this.@__90days = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TempCallCount")]
	public partial class TempCallCount
	{
		
		private System.Nullable<System.DateTime> _Datevar;
		
		private System.Nullable<int> _Qty;
		
		public TempCallCount()
		{
		}
		
		[Column(Storage="_Datevar", DbType="DateTime")]
		public System.Nullable<System.DateTime> Datevar
		{
			get
			{
				return this._Datevar;
			}
			set
			{
				if ((this._Datevar != value))
				{
					this._Datevar = value;
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this._Qty = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TempCallCount4")]
	public partial class TempCallCount4
	{
		
		private System.Nullable<System.DateTime> _Datevar;
		
		private System.Nullable<int> _Qty;
		
		public TempCallCount4()
		{
		}
		
		[Column(Storage="_Datevar", DbType="DateTime")]
		public System.Nullable<System.DateTime> Datevar
		{
			get
			{
				return this._Datevar;
			}
			set
			{
				if ((this._Datevar != value))
				{
					this._Datevar = value;
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this._Qty = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TMP_101941")]
	public partial class TMP_101941
	{
		
		private System.Nullable<int> _BillingId;
		
		private string _Company;
		
		public TMP_101941()
		{
		}
		
		[Column(Storage="_BillingId", DbType="Int")]
		public System.Nullable<int> BillingId
		{
			get
			{
				return this._BillingId;
			}
			set
			{
				if ((this._BillingId != value))
				{
					this._BillingId = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="NVarChar(255)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TMP_94867")]
	public partial class TMP_94867
	{
		
		private System.Nullable<int> _BillingId;
		
		private string _Company;
		
		private System.Nullable<int> _LocationId;
		
		private string _Add1;
		
		private string _Add2;
		
		private string _City;
		
		private string _State;
		
		private System.Nullable<int> _Postcode;
		
		private string _Rep;
		
		private string _NewRep;
		
		public TMP_94867()
		{
		}
		
		[Column(Name="Billing Id", Storage="_BillingId", DbType="Int")]
		public System.Nullable<int> BillingId
		{
			get
			{
				return this._BillingId;
			}
			set
			{
				if ((this._BillingId != value))
				{
					this._BillingId = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="NVarChar(255)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Name="Location Id", Storage="_LocationId", DbType="Int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this._LocationId = value;
				}
			}
		}
		
		[Column(Storage="_Add1", DbType="NVarChar(255)")]
		public string Add1
		{
			get
			{
				return this._Add1;
			}
			set
			{
				if ((this._Add1 != value))
				{
					this._Add1 = value;
				}
			}
		}
		
		[Column(Storage="_Add2", DbType="NVarChar(255)")]
		public string Add2
		{
			get
			{
				return this._Add2;
			}
			set
			{
				if ((this._Add2 != value))
				{
					this._Add2 = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="NVarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="NVarChar(255)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_Postcode", DbType="Int")]
		public System.Nullable<int> Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this._Postcode = value;
				}
			}
		}
		
		[Column(Storage="_Rep", DbType="NVarChar(255)")]
		public string Rep
		{
			get
			{
				return this._Rep;
			}
			set
			{
				if ((this._Rep != value))
				{
					this._Rep = value;
				}
			}
		}
		
		[Column(Name="New Rep", Storage="_NewRep", DbType="NVarChar(255)")]
		public string NewRep
		{
			get
			{
				return this._NewRep;
			}
			set
			{
				if ((this._NewRep != value))
				{
					this._NewRep = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TMP_94868")]
	public partial class TMP_94868
	{
		
		private System.Nullable<int> _LocationId;
		
		private string _Company;
		
		private System.Nullable<int> _BillingId;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private System.Nullable<int> _Postcode;
		
		private string _RM;
		
		private string _NewRM;
		
		public TMP_94868()
		{
		}
		
		[Column(Name="Location Id", Storage="_LocationId", DbType="Int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this._LocationId = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="NVarChar(255)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Name="Billing Id", Storage="_BillingId", DbType="Int")]
		public System.Nullable<int> BillingId
		{
			get
			{
				return this._BillingId;
			}
			set
			{
				if ((this._BillingId != value))
				{
					this._BillingId = value;
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="NVarChar(255)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="NVarChar(255)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="NVarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="NVarChar(255)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_Postcode", DbType="Int")]
		public System.Nullable<int> Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this._Postcode = value;
				}
			}
		}
		
		[Column(Storage="_RM", DbType="NVarChar(255)")]
		public string RM
		{
			get
			{
				return this._RM;
			}
			set
			{
				if ((this._RM != value))
				{
					this._RM = value;
				}
			}
		}
		
		[Column(Name="New RM", Storage="_NewRM", DbType="NVarChar(255)")]
		public string NewRM
		{
			get
			{
				return this._NewRM;
			}
			set
			{
				if ((this._NewRM != value))
				{
					this._NewRM = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_Accounts")]
	public partial class Tmp_Accounts
	{
		
		private System.Nullable<int> _Accountid;
		
		public Tmp_Accounts()
		{
		}
		
		[Column(Name="accountid", Storage="_Accountid", DbType="Int")]
		public System.Nullable<int> Accountid
		{
			get
			{
				return this._Accountid;
			}
			set
			{
				if ((this._Accountid != value))
				{
					this._Accountid = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_ACTIP")]
	public partial class Tmp_ACTIP
	{
		
		private string _PartNo;
		
		private System.Nullable<decimal> _Dollarvalue;
		
		private System.Nullable<double> _RecId;
		
		public Tmp_ACTIP()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_Dollarvalue", DbType="Money")]
		public System.Nullable<decimal> Dollarvalue
		{
			get
			{
				return this._Dollarvalue;
			}
			set
			{
				if ((this._Dollarvalue != value))
				{
					this._Dollarvalue = value;
				}
			}
		}
		
		[Column(Name="Rec id", Storage="_RecId", DbType="Float")]
		public System.Nullable<double> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_BrisIM")]
	public partial class Tmp_BrisIM
	{
		
		private string _PartNo;
		
		private System.Nullable<decimal> _Dollarvalue;
		
		private System.Nullable<double> _RecId;
		
		public Tmp_BrisIM()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_Dollarvalue", DbType="Money")]
		public System.Nullable<decimal> Dollarvalue
		{
			get
			{
				return this._Dollarvalue;
			}
			set
			{
				if ((this._Dollarvalue != value))
				{
					this._Dollarvalue = value;
				}
			}
		}
		
		[Column(Name="Rec Id", Storage="_RecId", DbType="Float")]
		public System.Nullable<double> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_BrisIP")]
	public partial class Tmp_BrisIP
	{
		
		private string _PartNo;
		
		private System.Nullable<decimal> _DollarValue;
		
		private System.Nullable<double> _RecId;
		
		public Tmp_BrisIP()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_DollarValue", DbType="Money")]
		public System.Nullable<decimal> DollarValue
		{
			get
			{
				return this._DollarValue;
			}
			set
			{
				if ((this._DollarValue != value))
				{
					this._DollarValue = value;
				}
			}
		}
		
		[Column(Name="Rec Id", Storage="_RecId", DbType="Float")]
		public System.Nullable<double> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_BRSSnapShot")]
	public partial class Tmp_BRSSnapShot
	{
		
		private string _CompanyName;
		
		private System.Nullable<int> _ContractItemId;
		
		private string _OldProdcode;
		
		private string _OldSerialNo;
		
		private string _NewProdcode;
		
		private string _NewSerialNo;
		
		public Tmp_BRSSnapShot()
		{
		}
		
		[Column(Name="Company Name", Storage="_CompanyName", DbType="NVarChar(255)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[Column(Storage="_ContractItemId", DbType="Int")]
		public System.Nullable<int> ContractItemId
		{
			get
			{
				return this._ContractItemId;
			}
			set
			{
				if ((this._ContractItemId != value))
				{
					this._ContractItemId = value;
				}
			}
		}
		
		[Column(Storage="_OldProdcode", DbType="NVarChar(255)")]
		public string OldProdcode
		{
			get
			{
				return this._OldProdcode;
			}
			set
			{
				if ((this._OldProdcode != value))
				{
					this._OldProdcode = value;
				}
			}
		}
		
		[Column(Storage="_OldSerialNo", DbType="NVarChar(255)")]
		public string OldSerialNo
		{
			get
			{
				return this._OldSerialNo;
			}
			set
			{
				if ((this._OldSerialNo != value))
				{
					this._OldSerialNo = value;
				}
			}
		}
		
		[Column(Storage="_NewProdcode", DbType="NVarChar(255)")]
		public string NewProdcode
		{
			get
			{
				return this._NewProdcode;
			}
			set
			{
				if ((this._NewProdcode != value))
				{
					this._NewProdcode = value;
				}
			}
		}
		
		[Column(Storage="_NewSerialNo", DbType="NVarChar(255)")]
		public string NewSerialNo
		{
			get
			{
				return this._NewSerialNo;
			}
			set
			{
				if ((this._NewSerialNo != value))
				{
					this._NewSerialNo = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_BSGCustomers")]
	public partial class Tmp_BSGCustomers
	{
		
		private System.Nullable<int> _BillingID;
		
		private string _Customer;
		
		public Tmp_BSGCustomers()
		{
		}
		
		[Column(Name="Billing ID", Storage="_BillingID", DbType="Int")]
		public System.Nullable<int> BillingID
		{
			get
			{
				return this._BillingID;
			}
			set
			{
				if ((this._BillingID != value))
				{
					this._BillingID = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="NVarChar(255)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_ContinuousCustomers")]
	public partial class Tmp_ContinuousCustomers
	{
		
		private System.Nullable<int> _Accountid;
		
		private System.Nullable<System.DateTime> _Startdate;
		
		private System.Nullable<System.DateTime> _Expirydate;
		
		public Tmp_ContinuousCustomers()
		{
		}
		
		[Column(Storage="_Accountid", DbType="Int")]
		public System.Nullable<int> Accountid
		{
			get
			{
				return this._Accountid;
			}
			set
			{
				if ((this._Accountid != value))
				{
					this._Accountid = value;
				}
			}
		}
		
		[Column(Name="startdate", Storage="_Startdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Startdate
		{
			get
			{
				return this._Startdate;
			}
			set
			{
				if ((this._Startdate != value))
				{
					this._Startdate = value;
				}
			}
		}
		
		[Column(Name="expirydate", Storage="_Expirydate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Expirydate
		{
			get
			{
				return this._Expirydate;
			}
			set
			{
				if ((this._Expirydate != value))
				{
					this._Expirydate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_ContractItemLatestChangeType")]
	public partial class Tmp_ContractItemLatestChangeType
	{
		
		private System.Nullable<int> _ContractItemId;
		
		private System.Nullable<System.DateTime> _Changedate;
		
		private string _ChangeType;
		
		private string _Comment;
		
		private System.Nullable<decimal> _ItemCredit;
		
		private System.Nullable<decimal> _ItemDebit;
		
		private string _ChangedBy;
		
		public Tmp_ContractItemLatestChangeType()
		{
		}
		
		[Column(Storage="_ContractItemId", DbType="Int")]
		public System.Nullable<int> ContractItemId
		{
			get
			{
				return this._ContractItemId;
			}
			set
			{
				if ((this._ContractItemId != value))
				{
					this._ContractItemId = value;
				}
			}
		}
		
		[Column(Name="changedate", Storage="_Changedate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Changedate
		{
			get
			{
				return this._Changedate;
			}
			set
			{
				if ((this._Changedate != value))
				{
					this._Changedate = value;
				}
			}
		}
		
		[Column(Storage="_ChangeType", DbType="VarChar(80)")]
		public string ChangeType
		{
			get
			{
				return this._ChangeType;
			}
			set
			{
				if ((this._ChangeType != value))
				{
					this._ChangeType = value;
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="VarChar(1028)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[Column(Storage="_ItemCredit", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> ItemCredit
		{
			get
			{
				return this._ItemCredit;
			}
			set
			{
				if ((this._ItemCredit != value))
				{
					this._ItemCredit = value;
				}
			}
		}
		
		[Column(Storage="_ItemDebit", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> ItemDebit
		{
			get
			{
				return this._ItemDebit;
			}
			set
			{
				if ((this._ItemDebit != value))
				{
					this._ItemDebit = value;
				}
			}
		}
		
		[Column(Storage="_ChangedBy", DbType="VarChar(50)")]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this._ChangedBy = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_contractlength")]
	public partial class Tmp_contractlength
	{
		
		private System.Nullable<int> _Accountid;
		
		private System.Nullable<System.DateTime> _Startdate;
		
		private System.Nullable<System.DateTime> _Expirydate;
		
		private System.Nullable<int> _Contractlength;
		
		public Tmp_contractlength()
		{
		}
		
		[Column(Name="accountid", Storage="_Accountid", DbType="Int")]
		public System.Nullable<int> Accountid
		{
			get
			{
				return this._Accountid;
			}
			set
			{
				if ((this._Accountid != value))
				{
					this._Accountid = value;
				}
			}
		}
		
		[Column(Name="startdate", Storage="_Startdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Startdate
		{
			get
			{
				return this._Startdate;
			}
			set
			{
				if ((this._Startdate != value))
				{
					this._Startdate = value;
				}
			}
		}
		
		[Column(Name="expirydate", Storage="_Expirydate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Expirydate
		{
			get
			{
				return this._Expirydate;
			}
			set
			{
				if ((this._Expirydate != value))
				{
					this._Expirydate = value;
				}
			}
		}
		
		[Column(Name="contractlength", Storage="_Contractlength", DbType="Int")]
		public System.Nullable<int> Contractlength
		{
			get
			{
				return this._Contractlength;
			}
			set
			{
				if ((this._Contractlength != value))
				{
					this._Contractlength = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_current_contracts")]
	public partial class Tmp_current_contracts
	{
		
		private System.Nullable<int> _Account;
		
		private System.Nullable<int> _Contract;
		
		private System.Nullable<System.DateTime> _Expiry;
		
		private System.Nullable<decimal> _Value;
		
		public Tmp_current_contracts()
		{
		}
		
		[Column(Name="account", Storage="_Account", DbType="Int")]
		public System.Nullable<int> Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this._Account = value;
				}
			}
		}
		
		[Column(Name="contract", Storage="_Contract", DbType="Int")]
		public System.Nullable<int> Contract
		{
			get
			{
				return this._Contract;
			}
			set
			{
				if ((this._Contract != value))
				{
					this._Contract = value;
				}
			}
		}
		
		[Column(Name="expiry", Storage="_Expiry", DbType="DateTime")]
		public System.Nullable<System.DateTime> Expiry
		{
			get
			{
				return this._Expiry;
			}
			set
			{
				if ((this._Expiry != value))
				{
					this._Expiry = value;
				}
			}
		}
		
		[Column(Name="value", Storage="_Value", DbType="Money")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_Customer Engineer")]
	public partial class Tmp_CustomerEngineer
	{
		
		private System.Nullable<double> _BillingID;
		
		private string _F2;
		
		public Tmp_CustomerEngineer()
		{
		}
		
		[Column(Name="Billing ID", Storage="_BillingID", DbType="Float")]
		public System.Nullable<double> BillingID
		{
			get
			{
				return this._BillingID;
			}
			set
			{
				if ((this._BillingID != value))
				{
					this._BillingID = value;
				}
			}
		}
		
		[Column(Storage="_F2", DbType="NVarChar(255)")]
		public string F2
		{
			get
			{
				return this._F2;
			}
			set
			{
				if ((this._F2 != value))
				{
					this._F2 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_dailyauditrevcat")]
	public partial class Tmp_dailyauditrevcat
	{
		
		private string _Invno;
		
		public Tmp_dailyauditrevcat()
		{
		}
		
		[Column(Name="invno", Storage="_Invno", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Invno
		{
			get
			{
				return this._Invno;
			}
			set
			{
				if ((this._Invno != value))
				{
					this._Invno = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_Device Engineer")]
	public partial class Tmp_DeviceEngineer
	{
		
		private System.Nullable<double> _ContractItemID;
		
		private string _NewDeviceEngineer;
		
		public Tmp_DeviceEngineer()
		{
		}
		
		[Column(Name="Contract Item ID", Storage="_ContractItemID", DbType="Float")]
		public System.Nullable<double> ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this._ContractItemID = value;
				}
			}
		}
		
		[Column(Name="New Device Engineer", Storage="_NewDeviceEngineer", DbType="NVarChar(255)")]
		public string NewDeviceEngineer
		{
			get
			{
				return this._NewDeviceEngineer;
			}
			set
			{
				if ((this._NewDeviceEngineer != value))
				{
					this._NewDeviceEngineer = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_DRMissingDeviceCodes")]
	public partial class Tmp_DRMissingDeviceCodes
	{
		
		private string _DeviceCode;
		
		public Tmp_DRMissingDeviceCodes()
		{
		}
		
		[Column(Storage="_DeviceCode", DbType="VarChar(255)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_duplicates")]
	public partial class Tmp_duplicates
	{
		
		private System.Nullable<double> _Accountid;
		
		private string _Displaycode;
		
		private string _Serialno;
		
		private System.Nullable<double> _Count;
		
		public Tmp_duplicates()
		{
		}
		
		[Column(Name="accountid", Storage="_Accountid", DbType="Float")]
		public System.Nullable<double> Accountid
		{
			get
			{
				return this._Accountid;
			}
			set
			{
				if ((this._Accountid != value))
				{
					this._Accountid = value;
				}
			}
		}
		
		[Column(Name="displaycode", Storage="_Displaycode", DbType="NVarChar(255)")]
		public string Displaycode
		{
			get
			{
				return this._Displaycode;
			}
			set
			{
				if ((this._Displaycode != value))
				{
					this._Displaycode = value;
				}
			}
		}
		
		[Column(Name="serialno", Storage="_Serialno", DbType="NVarChar(255)")]
		public string Serialno
		{
			get
			{
				return this._Serialno;
			}
			set
			{
				if ((this._Serialno != value))
				{
					this._Serialno = value;
				}
			}
		}
		
		[Column(Name="count", Storage="_Count", DbType="Float")]
		public System.Nullable<double> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_FinancialCodes")]
	public partial class Tmp_FinancialCodes
	{
		
		private string _GLAccount;
		
		private string _GLDescription;
		
		private string _RevenueCategoryDescription;
		
		private System.Nullable<int> _RevenueCategoryId;
		
		private string _ContractLocation;
		
		public Tmp_FinancialCodes()
		{
		}
		
		[Column(Storage="_GLAccount", DbType="NVarChar(255)")]
		public string GLAccount
		{
			get
			{
				return this._GLAccount;
			}
			set
			{
				if ((this._GLAccount != value))
				{
					this._GLAccount = value;
				}
			}
		}
		
		[Column(Storage="_GLDescription", DbType="NVarChar(255)")]
		public string GLDescription
		{
			get
			{
				return this._GLDescription;
			}
			set
			{
				if ((this._GLDescription != value))
				{
					this._GLDescription = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategoryDescription", DbType="NVarChar(255)")]
		public string RevenueCategoryDescription
		{
			get
			{
				return this._RevenueCategoryDescription;
			}
			set
			{
				if ((this._RevenueCategoryDescription != value))
				{
					this._RevenueCategoryDescription = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategoryId", DbType="Int")]
		public System.Nullable<int> RevenueCategoryId
		{
			get
			{
				return this._RevenueCategoryId;
			}
			set
			{
				if ((this._RevenueCategoryId != value))
				{
					this._RevenueCategoryId = value;
				}
			}
		}
		
		[Column(Storage="_ContractLocation", DbType="NVarChar(255)")]
		public string ContractLocation
		{
			get
			{
				return this._ContractLocation;
			}
			set
			{
				if ((this._ContractLocation != value))
				{
					this._ContractLocation = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_FutureDevices")]
	public partial class Tmp_FutureDevices
	{
		
		private System.Nullable<int> _BillingId;
		
		private string _CompanyName;
		
		private System.Nullable<int> _Location;
		
		private System.Nullable<int> _Contract;
		
		private string _DeviceCode;
		
		private string _SerialNo;
		
		private string _DeviceName;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _Qty;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private System.Nullable<System.DateTime> _Month_Year;
		
		public Tmp_FutureDevices()
		{
		}
		
		[Column(Name="Billing Id", Storage="_BillingId", DbType="Int")]
		public System.Nullable<int> BillingId
		{
			get
			{
				return this._BillingId;
			}
			set
			{
				if ((this._BillingId != value))
				{
					this._BillingId = value;
				}
			}
		}
		
		[Column(Name="Company Name", Storage="_CompanyName", DbType="NVarChar(255)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[Column(Storage="_Location", DbType="Int")]
		public System.Nullable<int> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[Column(Storage="_Contract", DbType="Int")]
		public System.Nullable<int> Contract
		{
			get
			{
				return this._Contract;
			}
			set
			{
				if ((this._Contract != value))
				{
					this._Contract = value;
				}
			}
		}
		
		[Column(Name="Device Code", Storage="_DeviceCode", DbType="NVarChar(255)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
		
		[Column(Name="Serial No", Storage="_SerialNo", DbType="NVarChar(255)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this._SerialNo = value;
				}
			}
		}
		
		[Column(Name="Device name", Storage="_DeviceName", DbType="NVarChar(255)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this._DeviceName = value;
				}
			}
		}
		
		[Column(Name="Start Date", Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[Column(Name="End Date", Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this._Qty = value;
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[Column(Name="Total Price", Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[Column(Name="Month-Year", Storage="_Month_Year", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Month_Year
		{
			get
			{
				return this._Month_Year;
			}
			set
			{
				if ((this._Month_Year != value))
				{
					this._Month_Year = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_GetPOData")]
	public partial class Tmp_GetPOData
	{
		
		private string _PartNo;
		
		private System.Nullable<decimal> _DollarValue;
		
		private int _RecId;
		
		public Tmp_GetPOData()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_DollarValue", DbType="Money")]
		public System.Nullable<decimal> DollarValue
		{
			get
			{
				return this._DollarValue;
			}
			set
			{
				if ((this._DollarValue != value))
				{
					this._DollarValue = value;
				}
			}
		}
		
		[Column(Storage="_RecId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TMP_HEAT90060")]
	public partial class TMP_HEAT90060
	{
		
		private System.Nullable<int> _RecId;
		
		private string _ContractItemId;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<int> _LocationID;
		
		private string _LocationName;
		
		private string _LocationState;
		
		private string _ProdCode;
		
		private string _SerialNo;
		
		private string _UnderMaint_;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<decimal> @__3rdParyPrice;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _ServiceDescription;
		
		private string _Revenuecategorydescription;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		public TMP_HEAT90060()
		{
		}
		
		[Column(Storage="_RecId", DbType="Int")]
		public System.Nullable<int> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
		
		[Column(Storage="_ContractItemId", DbType="NVarChar(255)")]
		public string ContractItemId
		{
			get
			{
				return this._ContractItemId;
			}
			set
			{
				if ((this._ContractItemId != value))
				{
					this._ContractItemId = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_LocationID", DbType="Int")]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[Column(Storage="_LocationName", DbType="NVarChar(255)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[Column(Storage="_LocationState", DbType="NVarChar(255)")]
		public string LocationState
		{
			get
			{
				return this._LocationState;
			}
			set
			{
				if ((this._LocationState != value))
				{
					this._LocationState = value;
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="NVarChar(255)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="NVarChar(255)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this._SerialNo = value;
				}
			}
		}
		
		[Column(Name="Under Maint?", Storage="_UnderMaint_", DbType="NVarChar(255)")]
		public string UnderMaint_
		{
			get
			{
				return this._UnderMaint_;
			}
			set
			{
				if ((this._UnderMaint_ != value))
				{
					this._UnderMaint_ = value;
				}
			}
		}
		
		[Column(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Money")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[Column(Name="3rd Pary Price", Storage="__3rdParyPrice", DbType="Money")]
		public System.Nullable<decimal> _3rdParyPrice
		{
			get
			{
				return this.@__3rdParyPrice;
			}
			set
			{
				if ((this.@__3rdParyPrice != value))
				{
					this.@__3rdParyPrice = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Storage="_ServiceDescription", DbType="NVarChar(255)")]
		public string ServiceDescription
		{
			get
			{
				return this._ServiceDescription;
			}
			set
			{
				if ((this._ServiceDescription != value))
				{
					this._ServiceDescription = value;
				}
			}
		}
		
		[Column(Name="revenuecategorydescription", Storage="_Revenuecategorydescription", DbType="NVarChar(255)")]
		public string Revenuecategorydescription
		{
			get
			{
				return this._Revenuecategorydescription;
			}
			set
			{
				if ((this._Revenuecategorydescription != value))
				{
					this._Revenuecategorydescription = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_HEAT92662")]
	public partial class Tmp_HEAT92662
	{
		
		private string _DeviceCode;
		
		public Tmp_HEAT92662()
		{
		}
		
		[Column(Storage="_DeviceCode", DbType="NVarChar(255)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TMP_Intercompany")]
	public partial class TMP_Intercompany
	{
		
		private System.Nullable<int> _AccountID;
		
		private string _Company;
		
		private string _Add1;
		
		private string _Add2;
		
		private System.Nullable<int> _Parent;
		
		private string _SiteEngineer;
		
		private System.Nullable<byte> _CompanyNum;
		
		public TMP_Intercompany()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_Add1", DbType="VarChar(50)")]
		public string Add1
		{
			get
			{
				return this._Add1;
			}
			set
			{
				if ((this._Add1 != value))
				{
					this._Add1 = value;
				}
			}
		}
		
		[Column(Storage="_Add2", DbType="VarChar(50)")]
		public string Add2
		{
			get
			{
				return this._Add2;
			}
			set
			{
				if ((this._Add2 != value))
				{
					this._Add2 = value;
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this._Parent = value;
				}
			}
		}
		
		[Column(Storage="_SiteEngineer", DbType="VarChar(25)")]
		public string SiteEngineer
		{
			get
			{
				return this._SiteEngineer;
			}
			set
			{
				if ((this._SiteEngineer != value))
				{
					this._SiteEngineer = value;
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_invno")]
	public partial class Tmp_invno
	{
		
		private int _Ordnum;
		
		public Tmp_invno()
		{
		}
		
		[Column(Name="ordnum", Storage="_Ordnum", DbType="Int NOT NULL")]
		public int Ordnum
		{
			get
			{
				return this._Ordnum;
			}
			set
			{
				if ((this._Ordnum != value))
				{
					this._Ordnum = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_LiveAccountsNotBilledinDec$")]
	public partial class Tmp_LiveAccountsNotBilledinDec_
	{
		
		private System.Nullable<int> _LiveDevices;
		
		private string _F2;
		
		private string _Overlap;
		
		public Tmp_LiveAccountsNotBilledinDec_()
		{
		}
		
		[Column(Name="Live devices", Storage="_LiveDevices", DbType="Int")]
		public System.Nullable<int> LiveDevices
		{
			get
			{
				return this._LiveDevices;
			}
			set
			{
				if ((this._LiveDevices != value))
				{
					this._LiveDevices = value;
				}
			}
		}
		
		[Column(Storage="_F2", DbType="NVarChar(255)")]
		public string F2
		{
			get
			{
				return this._F2;
			}
			set
			{
				if ((this._F2 != value))
				{
					this._F2 = value;
				}
			}
		}
		
		[Column(Storage="_Overlap", DbType="NVarChar(255)")]
		public string Overlap
		{
			get
			{
				return this._Overlap;
			}
			set
			{
				if ((this._Overlap != value))
				{
					this._Overlap = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_Location Engineer")]
	public partial class Tmp_LocationEngineer
	{
		
		private System.Nullable<double> _LocationID;
		
		private string _NewLocationEngineer;
		
		public Tmp_LocationEngineer()
		{
		}
		
		[Column(Name="Location ID", Storage="_LocationID", DbType="Float")]
		public System.Nullable<double> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[Column(Name="New Location Engineer", Storage="_NewLocationEngineer", DbType="NVarChar(255)")]
		public string NewLocationEngineer
		{
			get
			{
				return this._NewLocationEngineer;
			}
			set
			{
				if ((this._NewLocationEngineer != value))
				{
					this._NewLocationEngineer = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_Location_Engineer")]
	public partial class Tmp_Location_Engineer
	{
		
		private System.Nullable<double> _LocationID;
		
		private string _NewLocationEngineer;
		
		public Tmp_Location_Engineer()
		{
		}
		
		[Column(Name="Location ID", Storage="_LocationID", DbType="Float")]
		public System.Nullable<double> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[Column(Name="New Location Engineer", Storage="_NewLocationEngineer", DbType="NVarChar(255)")]
		public string NewLocationEngineer
		{
			get
			{
				return this._NewLocationEngineer;
			}
			set
			{
				if ((this._NewLocationEngineer != value))
				{
					this._NewLocationEngineer = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_new_tel_nos")]
	public partial class Tmp_new_tel_nos
	{
		
		private System.Nullable<int> _AccountId;
		
		private string _State;
		
		private string _Phone;
		
		private string _PhoneAftrHrs;
		
		private string _Fax;
		
		public Tmp_new_tel_nos()
		{
		}
		
		[Column(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[Column(Storage="_PhoneAftrHrs", DbType="VarChar(20)")]
		public string PhoneAftrHrs
		{
			get
			{
				return this._PhoneAftrHrs;
			}
			set
			{
				if ((this._PhoneAftrHrs != value))
				{
					this._PhoneAftrHrs = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TMP_NewCustomerList")]
	public partial class TMP_NewCustomerList
	{
		
		private System.Nullable<int> _BILLING;
		
		private string _CUSTOMER;
		
		public TMP_NewCustomerList()
		{
		}
		
		[Column(Name="BILLING ", Storage="_BILLING", DbType="Int")]
		public System.Nullable<int> BILLING
		{
			get
			{
				return this._BILLING;
			}
			set
			{
				if ((this._BILLING != value))
				{
					this._BILLING = value;
				}
			}
		}
		
		[Column(Storage="_CUSTOMER", DbType="NVarChar(255)")]
		public string CUSTOMER
		{
			get
			{
				return this._CUSTOMER;
			}
			set
			{
				if ((this._CUSTOMER != value))
				{
					this._CUSTOMER = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_NewDRDeviceCodes")]
	public partial class Tmp_NewDRDeviceCodes
	{
		
		private string _PartNo;
		
		private string _DeviceCode;
		
		private System.Nullable<int> _RevenueCategory;
		
		public Tmp_NewDRDeviceCodes()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="NVarChar(255)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this._RevenueCategory = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_NewStock")]
	public partial class Tmp_NewStock
	{
		
		private string _State;
		
		private string _OldProdcode;
		
		private string _NewProdcode;
		
		private string _SerialNo;
		
		private string _FC;
		
		private string _Brand;
		
		private string _Description;
		
		private string _MachineType;
		
		private string _Model;
		
		private string _DeviceCode;
		
		private System.Nullable<int> _RevCat;
		
		private string _RevCatDescription;
		
		private string _F13;
		
		private string _F14;
		
		private string _F15;
		
		private string _F16;
		
		private string _F17;
		
		private string _F18;
		
		private string _F19;
		
		private string _F20;
		
		private string _F21;
		
		private string _F22;
		
		private string _F23;
		
		private string _F24;
		
		private string _F25;
		
		private string _F26;
		
		private string _F27;
		
		private string _F28;
		
		private string _F29;
		
		private string _F30;
		
		private string _F31;
		
		private string _F32;
		
		private string _F33;
		
		private string _F34;
		
		private string _F35;
		
		private string _F36;
		
		private string _F37;
		
		private string _F38;
		
		private string _F39;
		
		private string _F40;
		
		private string _F41;
		
		private string _F42;
		
		private string _F43;
		
		private string _F44;
		
		private string _F45;
		
		private string _F46;
		
		private string _F47;
		
		private string _F48;
		
		private string _F49;
		
		private string _F50;
		
		private string _F51;
		
		private string _F52;
		
		private string _F53;
		
		private string _F54;
		
		private string _F55;
		
		private string _F56;
		
		private string _F57;
		
		private string _F58;
		
		public Tmp_NewStock()
		{
		}
		
		[Column(Storage="_State", DbType="NVarChar(255)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_OldProdcode", DbType="NVarChar(255)")]
		public string OldProdcode
		{
			get
			{
				return this._OldProdcode;
			}
			set
			{
				if ((this._OldProdcode != value))
				{
					this._OldProdcode = value;
				}
			}
		}
		
		[Column(Storage="_NewProdcode", DbType="NVarChar(255)")]
		public string NewProdcode
		{
			get
			{
				return this._NewProdcode;
			}
			set
			{
				if ((this._NewProdcode != value))
				{
					this._NewProdcode = value;
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="NVarChar(255)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this._SerialNo = value;
				}
			}
		}
		
		[Column(Storage="_FC", DbType="NVarChar(255)")]
		public string FC
		{
			get
			{
				return this._FC;
			}
			set
			{
				if ((this._FC != value))
				{
					this._FC = value;
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="NVarChar(255)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_MachineType", DbType="NVarChar(255)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this._MachineType = value;
				}
			}
		}
		
		[Column(Storage="_Model", DbType="NVarChar(255)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="NVarChar(255)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
		
		[Column(Storage="_RevCat", DbType="Int")]
		public System.Nullable<int> RevCat
		{
			get
			{
				return this._RevCat;
			}
			set
			{
				if ((this._RevCat != value))
				{
					this._RevCat = value;
				}
			}
		}
		
		[Column(Name="RevCat Description", Storage="_RevCatDescription", DbType="NVarChar(255)")]
		public string RevCatDescription
		{
			get
			{
				return this._RevCatDescription;
			}
			set
			{
				if ((this._RevCatDescription != value))
				{
					this._RevCatDescription = value;
				}
			}
		}
		
		[Column(Storage="_F13", DbType="NVarChar(255)")]
		public string F13
		{
			get
			{
				return this._F13;
			}
			set
			{
				if ((this._F13 != value))
				{
					this._F13 = value;
				}
			}
		}
		
		[Column(Storage="_F14", DbType="NVarChar(255)")]
		public string F14
		{
			get
			{
				return this._F14;
			}
			set
			{
				if ((this._F14 != value))
				{
					this._F14 = value;
				}
			}
		}
		
		[Column(Storage="_F15", DbType="NVarChar(255)")]
		public string F15
		{
			get
			{
				return this._F15;
			}
			set
			{
				if ((this._F15 != value))
				{
					this._F15 = value;
				}
			}
		}
		
		[Column(Storage="_F16", DbType="NVarChar(255)")]
		public string F16
		{
			get
			{
				return this._F16;
			}
			set
			{
				if ((this._F16 != value))
				{
					this._F16 = value;
				}
			}
		}
		
		[Column(Storage="_F17", DbType="NVarChar(255)")]
		public string F17
		{
			get
			{
				return this._F17;
			}
			set
			{
				if ((this._F17 != value))
				{
					this._F17 = value;
				}
			}
		}
		
		[Column(Storage="_F18", DbType="NVarChar(255)")]
		public string F18
		{
			get
			{
				return this._F18;
			}
			set
			{
				if ((this._F18 != value))
				{
					this._F18 = value;
				}
			}
		}
		
		[Column(Storage="_F19", DbType="NVarChar(255)")]
		public string F19
		{
			get
			{
				return this._F19;
			}
			set
			{
				if ((this._F19 != value))
				{
					this._F19 = value;
				}
			}
		}
		
		[Column(Storage="_F20", DbType="NVarChar(255)")]
		public string F20
		{
			get
			{
				return this._F20;
			}
			set
			{
				if ((this._F20 != value))
				{
					this._F20 = value;
				}
			}
		}
		
		[Column(Storage="_F21", DbType="NVarChar(255)")]
		public string F21
		{
			get
			{
				return this._F21;
			}
			set
			{
				if ((this._F21 != value))
				{
					this._F21 = value;
				}
			}
		}
		
		[Column(Storage="_F22", DbType="NVarChar(255)")]
		public string F22
		{
			get
			{
				return this._F22;
			}
			set
			{
				if ((this._F22 != value))
				{
					this._F22 = value;
				}
			}
		}
		
		[Column(Storage="_F23", DbType="NVarChar(255)")]
		public string F23
		{
			get
			{
				return this._F23;
			}
			set
			{
				if ((this._F23 != value))
				{
					this._F23 = value;
				}
			}
		}
		
		[Column(Storage="_F24", DbType="NVarChar(255)")]
		public string F24
		{
			get
			{
				return this._F24;
			}
			set
			{
				if ((this._F24 != value))
				{
					this._F24 = value;
				}
			}
		}
		
		[Column(Storage="_F25", DbType="NVarChar(255)")]
		public string F25
		{
			get
			{
				return this._F25;
			}
			set
			{
				if ((this._F25 != value))
				{
					this._F25 = value;
				}
			}
		}
		
		[Column(Storage="_F26", DbType="NVarChar(255)")]
		public string F26
		{
			get
			{
				return this._F26;
			}
			set
			{
				if ((this._F26 != value))
				{
					this._F26 = value;
				}
			}
		}
		
		[Column(Storage="_F27", DbType="NVarChar(255)")]
		public string F27
		{
			get
			{
				return this._F27;
			}
			set
			{
				if ((this._F27 != value))
				{
					this._F27 = value;
				}
			}
		}
		
		[Column(Storage="_F28", DbType="NVarChar(255)")]
		public string F28
		{
			get
			{
				return this._F28;
			}
			set
			{
				if ((this._F28 != value))
				{
					this._F28 = value;
				}
			}
		}
		
		[Column(Storage="_F29", DbType="NVarChar(255)")]
		public string F29
		{
			get
			{
				return this._F29;
			}
			set
			{
				if ((this._F29 != value))
				{
					this._F29 = value;
				}
			}
		}
		
		[Column(Storage="_F30", DbType="NVarChar(255)")]
		public string F30
		{
			get
			{
				return this._F30;
			}
			set
			{
				if ((this._F30 != value))
				{
					this._F30 = value;
				}
			}
		}
		
		[Column(Storage="_F31", DbType="NVarChar(255)")]
		public string F31
		{
			get
			{
				return this._F31;
			}
			set
			{
				if ((this._F31 != value))
				{
					this._F31 = value;
				}
			}
		}
		
		[Column(Storage="_F32", DbType="NVarChar(255)")]
		public string F32
		{
			get
			{
				return this._F32;
			}
			set
			{
				if ((this._F32 != value))
				{
					this._F32 = value;
				}
			}
		}
		
		[Column(Storage="_F33", DbType="NVarChar(255)")]
		public string F33
		{
			get
			{
				return this._F33;
			}
			set
			{
				if ((this._F33 != value))
				{
					this._F33 = value;
				}
			}
		}
		
		[Column(Storage="_F34", DbType="NVarChar(255)")]
		public string F34
		{
			get
			{
				return this._F34;
			}
			set
			{
				if ((this._F34 != value))
				{
					this._F34 = value;
				}
			}
		}
		
		[Column(Storage="_F35", DbType="NVarChar(255)")]
		public string F35
		{
			get
			{
				return this._F35;
			}
			set
			{
				if ((this._F35 != value))
				{
					this._F35 = value;
				}
			}
		}
		
		[Column(Storage="_F36", DbType="NVarChar(255)")]
		public string F36
		{
			get
			{
				return this._F36;
			}
			set
			{
				if ((this._F36 != value))
				{
					this._F36 = value;
				}
			}
		}
		
		[Column(Storage="_F37", DbType="NVarChar(255)")]
		public string F37
		{
			get
			{
				return this._F37;
			}
			set
			{
				if ((this._F37 != value))
				{
					this._F37 = value;
				}
			}
		}
		
		[Column(Storage="_F38", DbType="NVarChar(255)")]
		public string F38
		{
			get
			{
				return this._F38;
			}
			set
			{
				if ((this._F38 != value))
				{
					this._F38 = value;
				}
			}
		}
		
		[Column(Storage="_F39", DbType="NVarChar(255)")]
		public string F39
		{
			get
			{
				return this._F39;
			}
			set
			{
				if ((this._F39 != value))
				{
					this._F39 = value;
				}
			}
		}
		
		[Column(Storage="_F40", DbType="NVarChar(255)")]
		public string F40
		{
			get
			{
				return this._F40;
			}
			set
			{
				if ((this._F40 != value))
				{
					this._F40 = value;
				}
			}
		}
		
		[Column(Storage="_F41", DbType="NVarChar(255)")]
		public string F41
		{
			get
			{
				return this._F41;
			}
			set
			{
				if ((this._F41 != value))
				{
					this._F41 = value;
				}
			}
		}
		
		[Column(Storage="_F42", DbType="NVarChar(255)")]
		public string F42
		{
			get
			{
				return this._F42;
			}
			set
			{
				if ((this._F42 != value))
				{
					this._F42 = value;
				}
			}
		}
		
		[Column(Storage="_F43", DbType="NVarChar(255)")]
		public string F43
		{
			get
			{
				return this._F43;
			}
			set
			{
				if ((this._F43 != value))
				{
					this._F43 = value;
				}
			}
		}
		
		[Column(Storage="_F44", DbType="NVarChar(255)")]
		public string F44
		{
			get
			{
				return this._F44;
			}
			set
			{
				if ((this._F44 != value))
				{
					this._F44 = value;
				}
			}
		}
		
		[Column(Storage="_F45", DbType="NVarChar(255)")]
		public string F45
		{
			get
			{
				return this._F45;
			}
			set
			{
				if ((this._F45 != value))
				{
					this._F45 = value;
				}
			}
		}
		
		[Column(Storage="_F46", DbType="NVarChar(255)")]
		public string F46
		{
			get
			{
				return this._F46;
			}
			set
			{
				if ((this._F46 != value))
				{
					this._F46 = value;
				}
			}
		}
		
		[Column(Storage="_F47", DbType="NVarChar(255)")]
		public string F47
		{
			get
			{
				return this._F47;
			}
			set
			{
				if ((this._F47 != value))
				{
					this._F47 = value;
				}
			}
		}
		
		[Column(Storage="_F48", DbType="NVarChar(255)")]
		public string F48
		{
			get
			{
				return this._F48;
			}
			set
			{
				if ((this._F48 != value))
				{
					this._F48 = value;
				}
			}
		}
		
		[Column(Storage="_F49", DbType="NVarChar(255)")]
		public string F49
		{
			get
			{
				return this._F49;
			}
			set
			{
				if ((this._F49 != value))
				{
					this._F49 = value;
				}
			}
		}
		
		[Column(Storage="_F50", DbType="NVarChar(255)")]
		public string F50
		{
			get
			{
				return this._F50;
			}
			set
			{
				if ((this._F50 != value))
				{
					this._F50 = value;
				}
			}
		}
		
		[Column(Storage="_F51", DbType="NVarChar(255)")]
		public string F51
		{
			get
			{
				return this._F51;
			}
			set
			{
				if ((this._F51 != value))
				{
					this._F51 = value;
				}
			}
		}
		
		[Column(Storage="_F52", DbType="NVarChar(255)")]
		public string F52
		{
			get
			{
				return this._F52;
			}
			set
			{
				if ((this._F52 != value))
				{
					this._F52 = value;
				}
			}
		}
		
		[Column(Storage="_F53", DbType="NVarChar(255)")]
		public string F53
		{
			get
			{
				return this._F53;
			}
			set
			{
				if ((this._F53 != value))
				{
					this._F53 = value;
				}
			}
		}
		
		[Column(Storage="_F54", DbType="NVarChar(255)")]
		public string F54
		{
			get
			{
				return this._F54;
			}
			set
			{
				if ((this._F54 != value))
				{
					this._F54 = value;
				}
			}
		}
		
		[Column(Storage="_F55", DbType="NVarChar(255)")]
		public string F55
		{
			get
			{
				return this._F55;
			}
			set
			{
				if ((this._F55 != value))
				{
					this._F55 = value;
				}
			}
		}
		
		[Column(Storage="_F56", DbType="NVarChar(255)")]
		public string F56
		{
			get
			{
				return this._F56;
			}
			set
			{
				if ((this._F56 != value))
				{
					this._F56 = value;
				}
			}
		}
		
		[Column(Storage="_F57", DbType="NVarChar(255)")]
		public string F57
		{
			get
			{
				return this._F57;
			}
			set
			{
				if ((this._F57 != value))
				{
					this._F57 = value;
				}
			}
		}
		
		[Column(Storage="_F58", DbType="NVarChar(255)")]
		public string F58
		{
			get
			{
				return this._F58;
			}
			set
			{
				if ((this._F58 != value))
				{
					this._F58 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_NSW")]
	public partial class Tmp_NSW
	{
		
		private System.Nullable<int> _AccountID;
		
		public Tmp_NSW()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TMP_PENDING_DEVICES_PAID")]
	public partial class TMP_PENDING_DEVICES_PAID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractItemID;
		
		private string _PaidDescription;
		
		private bool _Paid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractItemIDChanging(int value);
    partial void OnContractItemIDChanged();
    partial void OnPaidDescriptionChanging(string value);
    partial void OnPaidDescriptionChanged();
    partial void OnPaidChanging(bool value);
    partial void OnPaidChanged();
    #endregion
		
		public TMP_PENDING_DEVICES_PAID()
		{
			OnCreated();
		}
		
		[Column(Storage="_ContractItemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this.OnContractItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContractItemID = value;
					this.SendPropertyChanged("ContractItemID");
					this.OnContractItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_PaidDescription", DbType="VarChar(100)")]
		public string PaidDescription
		{
			get
			{
				return this._PaidDescription;
			}
			set
			{
				if ((this._PaidDescription != value))
				{
					this.OnPaidDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PaidDescription = value;
					this.SendPropertyChanged("PaidDescription");
					this.OnPaidDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Paid", DbType="Bit NOT NULL")]
		public bool Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Tmp_prod_revcat")]
	public partial class Tmp_prod_revcat
	{
		
		private string _Prodcode;
		
		private string _RevenueCategoryDescription;
		
		public Tmp_prod_revcat()
		{
		}
		
		[Column(Storage="_Prodcode", DbType="VarChar(35)")]
		public string Prodcode
		{
			get
			{
				return this._Prodcode;
			}
			set
			{
				if ((this._Prodcode != value))
				{
					this._Prodcode = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategoryDescription", DbType="VarChar(50)")]
		public string RevenueCategoryDescription
		{
			get
			{
				return this._RevenueCategoryDescription;
			}
			set
			{
				if ((this._RevenueCategoryDescription != value))
				{
					this._RevenueCategoryDescription = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_projectbudget")]
	public partial class Tmp_projectbudget
	{
		
		private int _Projectid;
		
		private System.Nullable<decimal> _Capexbudget;
		
		private System.Nullable<decimal> _Opexbudget;
		
		public Tmp_projectbudget()
		{
		}
		
		[Column(Name="projectid", Storage="_Projectid", DbType="Int NOT NULL")]
		public int Projectid
		{
			get
			{
				return this._Projectid;
			}
			set
			{
				if ((this._Projectid != value))
				{
					this._Projectid = value;
				}
			}
		}
		
		[Column(Name="capexbudget", Storage="_Capexbudget", DbType="Money")]
		public System.Nullable<decimal> Capexbudget
		{
			get
			{
				return this._Capexbudget;
			}
			set
			{
				if ((this._Capexbudget != value))
				{
					this._Capexbudget = value;
				}
			}
		}
		
		[Column(Name="opexbudget", Storage="_Opexbudget", DbType="Money")]
		public System.Nullable<decimal> Opexbudget
		{
			get
			{
				return this._Opexbudget;
			}
			set
			{
				if ((this._Opexbudget != value))
				{
					this._Opexbudget = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_RequiredCreditors$")]
	public partial class Tmp_RequiredCreditors_
	{
		
		private System.Nullable<int> _Accountid;
		
		private System.Nullable<byte> _CompanyNum;
		
		private string _Company;
		
		private System.Nullable<byte> _TransferTo;
		
		private System.Nullable<int> _ID;
		
		public Tmp_RequiredCreditors_()
		{
		}
		
		[Column(Storage="_Accountid", DbType="Int")]
		public System.Nullable<int> Accountid
		{
			get
			{
				return this._Accountid;
			}
			set
			{
				if ((this._Accountid != value))
				{
					this._Accountid = value;
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(55)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Name="Transfer to", Storage="_TransferTo", DbType="TinyInt")]
		public System.Nullable<byte> TransferTo
		{
			get
			{
				return this._TransferTo;
			}
			set
			{
				if ((this._TransferTo != value))
				{
					this._TransferTo = value;
				}
			}
		}
		
		[Column(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_REVCAT_TO_GL")]
	public partial class Tmp_REVCAT_TO_GL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RevCatGLId;
		
		private string _GLAccount;
		
		private string _GLDescription;
		
		private string _RevenueCategoryDescription;
		
		private System.Nullable<int> _RevenueCategoryId;
		
		private string _ContractLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRevCatGLIdChanging(int value);
    partial void OnRevCatGLIdChanged();
    partial void OnGLAccountChanging(string value);
    partial void OnGLAccountChanged();
    partial void OnGLDescriptionChanging(string value);
    partial void OnGLDescriptionChanged();
    partial void OnRevenueCategoryDescriptionChanging(string value);
    partial void OnRevenueCategoryDescriptionChanged();
    partial void OnRevenueCategoryIdChanging(System.Nullable<int> value);
    partial void OnRevenueCategoryIdChanged();
    partial void OnContractLocationChanging(string value);
    partial void OnContractLocationChanged();
    #endregion
		
		public Tmp_REVCAT_TO_GL()
		{
			OnCreated();
		}
		
		[Column(Storage="_RevCatGLId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RevCatGLId
		{
			get
			{
				return this._RevCatGLId;
			}
			set
			{
				if ((this._RevCatGLId != value))
				{
					this.OnRevCatGLIdChanging(value);
					this.SendPropertyChanging();
					this._RevCatGLId = value;
					this.SendPropertyChanged("RevCatGLId");
					this.OnRevCatGLIdChanged();
				}
			}
		}
		
		[Column(Storage="_GLAccount", DbType="VarChar(255)")]
		public string GLAccount
		{
			get
			{
				return this._GLAccount;
			}
			set
			{
				if ((this._GLAccount != value))
				{
					this.OnGLAccountChanging(value);
					this.SendPropertyChanging();
					this._GLAccount = value;
					this.SendPropertyChanged("GLAccount");
					this.OnGLAccountChanged();
				}
			}
		}
		
		[Column(Storage="_GLDescription", DbType="VarChar(255)")]
		public string GLDescription
		{
			get
			{
				return this._GLDescription;
			}
			set
			{
				if ((this._GLDescription != value))
				{
					this.OnGLDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GLDescription = value;
					this.SendPropertyChanged("GLDescription");
					this.OnGLDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategoryDescription", DbType="VarChar(255)")]
		public string RevenueCategoryDescription
		{
			get
			{
				return this._RevenueCategoryDescription;
			}
			set
			{
				if ((this._RevenueCategoryDescription != value))
				{
					this.OnRevenueCategoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategoryDescription = value;
					this.SendPropertyChanged("RevenueCategoryDescription");
					this.OnRevenueCategoryDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategoryId", DbType="Int")]
		public System.Nullable<int> RevenueCategoryId
		{
			get
			{
				return this._RevenueCategoryId;
			}
			set
			{
				if ((this._RevenueCategoryId != value))
				{
					this.OnRevenueCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategoryId = value;
					this.SendPropertyChanged("RevenueCategoryId");
					this.OnRevenueCategoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_ContractLocation", DbType="VarChar(255)")]
		public string ContractLocation
		{
			get
			{
				return this._ContractLocation;
			}
			set
			{
				if ((this._ContractLocation != value))
				{
					this.OnContractLocationChanging(value);
					this.SendPropertyChanging();
					this._ContractLocation = value;
					this.SendPropertyChanged("ContractLocation");
					this.OnContractLocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Tmp_SAIM")]
	public partial class Tmp_SAIM
	{
		
		private string _PartNo;
		
		private System.Nullable<double> _DollarValue;
		
		private System.Nullable<double> _RecId;
		
		public Tmp_SAIM()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_DollarValue", DbType="Float")]
		public System.Nullable<double> DollarValue
		{
			get
			{
				return this._DollarValue;
			}
			set
			{
				if ((this._DollarValue != value))
				{
					this._DollarValue = value;
				}
			}
		}
		
		[Column(Storage="_RecId", DbType="Float")]
		public System.Nullable<double> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_SAIP")]
	public partial class Tmp_SAIP
	{
		
		private string _PartNo;
		
		private System.Nullable<double> _Dollarvalue;
		
		private System.Nullable<double> _RecId;
		
		public Tmp_SAIP()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_Dollarvalue", DbType="Float")]
		public System.Nullable<double> Dollarvalue
		{
			get
			{
				return this._Dollarvalue;
			}
			set
			{
				if ((this._Dollarvalue != value))
				{
					this._Dollarvalue = value;
				}
			}
		}
		
		[Column(Name="Rec Id", Storage="_RecId", DbType="Float")]
		public System.Nullable<double> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_samecontracts")]
	public partial class Tmp_samecontracts
	{
		
		private System.Nullable<int> _Accountid;
		
		private string _Company;
		
		private System.Nullable<int> _Contractid;
		
		private System.Nullable<System.DateTime> _Startdate;
		
		private System.Nullable<System.DateTime> _Expirydate;
		
		private string _Debtorponumber;
		
		private string _Agreetype;
		
		private System.Nullable<int> _Invfreq;
		
		public Tmp_samecontracts()
		{
		}
		
		[Column(Name="accountid", Storage="_Accountid", DbType="Int")]
		public System.Nullable<int> Accountid
		{
			get
			{
				return this._Accountid;
			}
			set
			{
				if ((this._Accountid != value))
				{
					this._Accountid = value;
				}
			}
		}
		
		[Column(Name="company", Storage="_Company", DbType="VarChar(200)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Name="contractid", Storage="_Contractid", DbType="Int")]
		public System.Nullable<int> Contractid
		{
			get
			{
				return this._Contractid;
			}
			set
			{
				if ((this._Contractid != value))
				{
					this._Contractid = value;
				}
			}
		}
		
		[Column(Name="startdate", Storage="_Startdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Startdate
		{
			get
			{
				return this._Startdate;
			}
			set
			{
				if ((this._Startdate != value))
				{
					this._Startdate = value;
				}
			}
		}
		
		[Column(Name="expirydate", Storage="_Expirydate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Expirydate
		{
			get
			{
				return this._Expirydate;
			}
			set
			{
				if ((this._Expirydate != value))
				{
					this._Expirydate = value;
				}
			}
		}
		
		[Column(Name="debtorponumber", Storage="_Debtorponumber", DbType="VarChar(100)")]
		public string Debtorponumber
		{
			get
			{
				return this._Debtorponumber;
			}
			set
			{
				if ((this._Debtorponumber != value))
				{
					this._Debtorponumber = value;
				}
			}
		}
		
		[Column(Name="agreetype", Storage="_Agreetype", DbType="VarChar(10)")]
		public string Agreetype
		{
			get
			{
				return this._Agreetype;
			}
			set
			{
				if ((this._Agreetype != value))
				{
					this._Agreetype = value;
				}
			}
		}
		
		[Column(Name="invfreq", Storage="_Invfreq", DbType="Int")]
		public System.Nullable<int> Invfreq
		{
			get
			{
				return this._Invfreq;
			}
			set
			{
				if ((this._Invfreq != value))
				{
					this._Invfreq = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_serialnoupdate")]
	public partial class Tmp_serialnoupdate
	{
		
		private System.Nullable<double> _AccountID;
		
		private string _Company;
		
		private System.Nullable<double> _LocationID;
		
		private System.Nullable<double> _ContractItemId;
		
		private string _ProdCode;
		
		private string _SerialNo;
		
		private System.Nullable<double> _Qty;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<decimal> _TotalValue;
		
		public Tmp_serialnoupdate()
		{
		}
		
		[Column(Name="Account ID", Storage="_AccountID", DbType="Float")]
		public System.Nullable<double> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="NVarChar(255)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Name="Location ID", Storage="_LocationID", DbType="Float")]
		public System.Nullable<double> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[Column(Storage="_ContractItemId", DbType="Float")]
		public System.Nullable<double> ContractItemId
		{
			get
			{
				return this._ContractItemId;
			}
			set
			{
				if ((this._ContractItemId != value))
				{
					this._ContractItemId = value;
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="NVarChar(255)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="NVarChar(255)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this._SerialNo = value;
				}
			}
		}
		
		[Column(Storage="_Qty", DbType="Float")]
		public System.Nullable<double> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this._Qty = value;
				}
			}
		}
		
		[Column(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[Column(Name="Start Date", Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[Column(Name="End Date", Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Name="Total Value", Storage="_TotalValue", DbType="Money")]
		public System.Nullable<decimal> TotalValue
		{
			get
			{
				return this._TotalValue;
			}
			set
			{
				if ((this._TotalValue != value))
				{
					this._TotalValue = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_ServerDesc")]
	public partial class Tmp_ServerDesc
	{
		
		private string _Description;
		
		public Tmp_ServerDesc()
		{
		}
		
		[Column(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_SiteEngineer")]
	public partial class Tmp_SiteEngineer
	{
		
		private System.Nullable<double> _LocationID;
		
		private string _NewSiteEngineer;
		
		public Tmp_SiteEngineer()
		{
		}
		
		[Column(Storage="_LocationID", DbType="Float")]
		public System.Nullable<double> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this._LocationID = value;
				}
			}
		}
		
		[Column(Name="New Site Engineer", Storage="_NewSiteEngineer", DbType="NVarChar(255)")]
		public string NewSiteEngineer
		{
			get
			{
				return this._NewSiteEngineer;
			}
			set
			{
				if ((this._NewSiteEngineer != value))
				{
					this._NewSiteEngineer = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TMP_SNAPSHOT_REC")]
	public partial class TMP_SNAPSHOT_REC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private string _Company;
		
		private System.Nullable<int> _ContractID;
		
		private System.Nullable<int> _AccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnContractIDChanging(System.Nullable<int> value);
    partial void OnContractIDChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    #endregion
		
		public TMP_SNAPSHOT_REC()
		{
			OnCreated();
		}
		
		[Column(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tmp_SnapshotItemLatestChangeType")]
	public partial class Tmp_SnapshotItemLatestChangeType
	{
		
		private System.Nullable<int> _ContractItemId;
		
		private System.Nullable<System.DateTime> _Changedate;
		
		private string _ChangeType;
		
		private string _Comment;
		
		private System.Nullable<decimal> _ItemCredit;
		
		private System.Nullable<decimal> _ItemDebit;
		
		private string _ChangedBy;
		
		public Tmp_SnapshotItemLatestChangeType()
		{
		}
		
		[Column(Storage="_ContractItemId", DbType="Int")]
		public System.Nullable<int> ContractItemId
		{
			get
			{
				return this._ContractItemId;
			}
			set
			{
				if ((this._ContractItemId != value))
				{
					this._ContractItemId = value;
				}
			}
		}
		
		[Column(Name="changedate", Storage="_Changedate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Changedate
		{
			get
			{
				return this._Changedate;
			}
			set
			{
				if ((this._Changedate != value))
				{
					this._Changedate = value;
				}
			}
		}
		
		[Column(Storage="_ChangeType", DbType="VarChar(80)")]
		public string ChangeType
		{
			get
			{
				return this._ChangeType;
			}
			set
			{
				if ((this._ChangeType != value))
				{
					this._ChangeType = value;
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="VarChar(1028)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[Column(Storage="_ItemCredit", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> ItemCredit
		{
			get
			{
				return this._ItemCredit;
			}
			set
			{
				if ((this._ItemCredit != value))
				{
					this._ItemCredit = value;
				}
			}
		}
		
		[Column(Storage="_ItemDebit", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> ItemDebit
		{
			get
			{
				return this._ItemDebit;
			}
			set
			{
				if ((this._ItemDebit != value))
				{
					this._ItemDebit = value;
				}
			}
		}
		
		[Column(Storage="_ChangedBy", DbType="VarChar(50)")]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this._ChangedBy = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TMP_STAT_REV_CREDITS")]
	public partial class TMP_STAT_REV_CREDITS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceId;
		
		private System.Nullable<int> _OrdNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnOrdNumChanging(System.Nullable<int> value);
    partial void OnOrdNumChanged();
    #endregion
		
		public TMP_STAT_REV_CREDITS()
		{
			OnCreated();
		}
		
		[Column(Storage="_InvoiceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TMP_STAT_REV_INVOICES")]
	public partial class TMP_STAT_REV_INVOICES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceId;
		
		private System.Nullable<int> _OrdNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnOrdNumChanging(System.Nullable<int> value);
    partial void OnOrdNumChanged();
    #endregion
		
		public TMP_STAT_REV_INVOICES()
		{
			OnCreated();
		}
		
		[Column(Storage="_InvoiceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this.OnOrdNumChanging(value);
					this.SendPropertyChanging();
					this._OrdNum = value;
					this.SendPropertyChanged("OrdNum");
					this.OnOrdNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TMP_STOCK_MERGE")]
	public partial class TMP_STOCK_MERGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MergeItemNum;
		
		private string _ProdCode;
		
		private string _NewProdCode;
		
		private string _Brand;
		
		private string _XRefCode;
		
		private string _MachineType;
		
		private string _Model;
		
		private string _DeviceCode;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMergeItemNumChanging(int value);
    partial void OnMergeItemNumChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnNewProdCodeChanging(string value);
    partial void OnNewProdCodeChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnXRefCodeChanging(string value);
    partial void OnXRefCodeChanged();
    partial void OnMachineTypeChanging(string value);
    partial void OnMachineTypeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnDeviceCodeChanging(string value);
    partial void OnDeviceCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TMP_STOCK_MERGE()
		{
			OnCreated();
		}
		
		[Column(Storage="_MergeItemNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MergeItemNum
		{
			get
			{
				return this._MergeItemNum;
			}
			set
			{
				if ((this._MergeItemNum != value))
				{
					this.OnMergeItemNumChanging(value);
					this.SendPropertyChanging();
					this._MergeItemNum = value;
					this.SendPropertyChanged("MergeItemNum");
					this.OnMergeItemNumChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_NewProdCode", DbType="VarChar(35)")]
		public string NewProdCode
		{
			get
			{
				return this._NewProdCode;
			}
			set
			{
				if ((this._NewProdCode != value))
				{
					this.OnNewProdCodeChanging(value);
					this.SendPropertyChanging();
					this._NewProdCode = value;
					this.SendPropertyChanged("NewProdCode");
					this.OnNewProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="VarChar(35)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[Column(Storage="_XRefCode", DbType="VarChar(35)")]
		public string XRefCode
		{
			get
			{
				return this._XRefCode;
			}
			set
			{
				if ((this._XRefCode != value))
				{
					this.OnXRefCodeChanging(value);
					this.SendPropertyChanging();
					this._XRefCode = value;
					this.SendPropertyChanged("XRefCode");
					this.OnXRefCodeChanged();
				}
			}
		}
		
		[Column(Storage="_MachineType", DbType="VarChar(50)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this.OnMachineTypeChanging(value);
					this.SendPropertyChanging();
					this._MachineType = value;
					this.SendPropertyChanged("MachineType");
					this.OnMachineTypeChanged();
				}
			}
		}
		
		[Column(Name="model", Storage="_Model", DbType="VarChar(35)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="VarChar(35)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this.OnDeviceCodeChanging(value);
					this.SendPropertyChanging();
					this._DeviceCode = value;
					this.SendPropertyChanged("DeviceCode");
					this.OnDeviceCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tmp_StockApprovals")]
	public partial class Tmp_StockApprovals
	{
		
		private string _Name;
		
		private string _Approval;
		
		private string _Warehouse;
		
		public Tmp_StockApprovals()
		{
		}
		
		[Column(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Approval", DbType="VarChar(50)")]
		public string Approval
		{
			get
			{
				return this._Approval;
			}
			set
			{
				if ((this._Approval != value))
				{
					this._Approval = value;
				}
			}
		}
		
		[Column(Storage="_Warehouse", DbType="VarChar(20)")]
		public string Warehouse
		{
			get
			{
				return this._Warehouse;
			}
			set
			{
				if ((this._Warehouse != value))
				{
					this._Warehouse = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_StockCardUpdate")]
	public partial class Tmp_StockCardUpdate
	{
		
		private string _ProdCode;
		
		private string _XRefCode;
		
		private string _Brand;
		
		private string _MachineType;
		
		private string _Model;
		
		private System.Nullable<int> _RevenueCategory;
		
		public Tmp_StockCardUpdate()
		{
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Storage="_XRefCode", DbType="VarChar(35)")]
		public string XRefCode
		{
			get
			{
				return this._XRefCode;
			}
			set
			{
				if ((this._XRefCode != value))
				{
					this._XRefCode = value;
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="VarChar(35)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[Column(Storage="_MachineType", DbType="VarChar(50)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this._MachineType = value;
				}
			}
		}
		
		[Column(Name="model", Storage="_Model", DbType="VarChar(35)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this._RevenueCategory = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_StockCardUpdate_2")]
	public partial class Tmp_StockCardUpdate_2
	{
		
		private string _ProdCode;
		
		private string _XRefCode;
		
		private string _Brand;
		
		private string _MachineType;
		
		private string _Model;
		
		private System.Nullable<int> _RevenueCategory;
		
		private string _Description;
		
		public Tmp_StockCardUpdate_2()
		{
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Storage="_XRefCode", DbType="VarChar(35)")]
		public string XRefCode
		{
			get
			{
				return this._XRefCode;
			}
			set
			{
				if ((this._XRefCode != value))
				{
					this._XRefCode = value;
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="VarChar(35)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[Column(Storage="_MachineType", DbType="VarChar(50)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this._MachineType = value;
				}
			}
		}
		
		[Column(Name="model", Storage="_Model", DbType="VarChar(35)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this._RevenueCategory = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_SydIM")]
	public partial class Tmp_SydIM
	{
		
		private string _PartNo;
		
		private System.Nullable<decimal> _Dollarvalue;
		
		private System.Nullable<double> _RecId;
		
		public Tmp_SydIM()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_Dollarvalue", DbType="Money")]
		public System.Nullable<decimal> Dollarvalue
		{
			get
			{
				return this._Dollarvalue;
			}
			set
			{
				if ((this._Dollarvalue != value))
				{
					this._Dollarvalue = value;
				}
			}
		}
		
		[Column(Name="Rec Id", Storage="_RecId", DbType="Float")]
		public System.Nullable<double> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_table")]
	public partial class Tmp_table
	{
		
		private string _Username;
		
		public Tmp_table()
		{
		}
		
		[Column(Name="username", Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmp_UpdateEMCRevCat")]
	public partial class Tmp_UpdateEMCRevCat
	{
		
		private string _PartNo;
		
		private System.Nullable<double> _RevenueCategory;
		
		public Tmp_UpdateEMCRevCat()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Float")]
		public System.Nullable<double> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this._RevenueCategory = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_UpdateEngineers")]
	public partial class Tmp_UpdateEngineers
	{
		
		private System.Nullable<int> _LocationId;
		
		private string _Customer;
		
		private string _LocationState;
		
		private string _RM;
		
		private string _Engineer;
		
		private System.Nullable<int> _ContractItemId;
		
		private string _PartNo;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		public Tmp_UpdateEngineers()
		{
		}
		
		[Column(Name="Location Id", Storage="_LocationId", DbType="Int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this._LocationId = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="NVarChar(255)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Name="Location State", Storage="_LocationState", DbType="NVarChar(255)")]
		public string LocationState
		{
			get
			{
				return this._LocationState;
			}
			set
			{
				if ((this._LocationState != value))
				{
					this._LocationState = value;
				}
			}
		}
		
		[Column(Storage="_RM", DbType="NVarChar(255)")]
		public string RM
		{
			get
			{
				return this._RM;
			}
			set
			{
				if ((this._RM != value))
				{
					this._RM = value;
				}
			}
		}
		
		[Column(Storage="_Engineer", DbType="NVarChar(255)")]
		public string Engineer
		{
			get
			{
				return this._Engineer;
			}
			set
			{
				if ((this._Engineer != value))
				{
					this._Engineer = value;
				}
			}
		}
		
		[Column(Storage="_ContractItemId", DbType="Int")]
		public System.Nullable<int> ContractItemId
		{
			get
			{
				return this._ContractItemId;
			}
			set
			{
				if ((this._ContractItemId != value))
				{
					this._ContractItemId = value;
				}
			}
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Name="Start Date", Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[Column(Name="End Date", Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_VIC")]
	public partial class Tmp_VIC
	{
		
		private System.Nullable<int> _AccountID;
		
		public Tmp_VIC()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_VicIM")]
	public partial class Tmp_VicIM
	{
		
		private string _PartNo;
		
		private System.Nullable<decimal> _DollarValue;
		
		private System.Nullable<double> _RecId;
		
		public Tmp_VicIM()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_DollarValue", DbType="Money")]
		public System.Nullable<decimal> DollarValue
		{
			get
			{
				return this._DollarValue;
			}
			set
			{
				if ((this._DollarValue != value))
				{
					this._DollarValue = value;
				}
			}
		}
		
		[Column(Name="Rec Id", Storage="_RecId", DbType="Float")]
		public System.Nullable<double> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_VicIP")]
	public partial class Tmp_VicIP
	{
		
		private string _PartNo;
		
		private System.Nullable<decimal> _Dollarvalue;
		
		private System.Nullable<double> _RecId;
		
		public Tmp_VicIP()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_Dollarvalue", DbType="Money")]
		public System.Nullable<decimal> Dollarvalue
		{
			get
			{
				return this._Dollarvalue;
			}
			set
			{
				if ((this._Dollarvalue != value))
				{
					this._Dollarvalue = value;
				}
			}
		}
		
		[Column(Name="Rec Id", Storage="_RecId", DbType="Float")]
		public System.Nullable<double> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_WAIM")]
	public partial class Tmp_WAIM
	{
		
		private string _PartNo;
		
		private System.Nullable<decimal> _DollarValue;
		
		private System.Nullable<double> _RecId;
		
		public Tmp_WAIM()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_DollarValue", DbType="Money")]
		public System.Nullable<decimal> DollarValue
		{
			get
			{
				return this._DollarValue;
			}
			set
			{
				if ((this._DollarValue != value))
				{
					this._DollarValue = value;
				}
			}
		}
		
		[Column(Name="Rec Id", Storage="_RecId", DbType="Float")]
		public System.Nullable<double> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp_WAIP")]
	public partial class Tmp_WAIP
	{
		
		private string _PartNo;
		
		private System.Nullable<decimal> _DollarValue;
		
		private System.Nullable<double> _RecId;
		
		public Tmp_WAIP()
		{
		}
		
		[Column(Name="Part No", Storage="_PartNo", DbType="NVarChar(255)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_DollarValue", DbType="Money")]
		public System.Nullable<decimal> DollarValue
		{
			get
			{
				return this._DollarValue;
			}
			set
			{
				if ((this._DollarValue != value))
				{
					this._DollarValue = value;
				}
			}
		}
		
		[Column(Name="Rec Id", Storage="_RecId", DbType="Float")]
		public System.Nullable<double> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp2002Customers")]
	public partial class Tmp2002Customers
	{
		
		private System.Nullable<int> _CustId;
		
		private string _Customer;
		
		private System.Nullable<int> _ContractId;
		
		private System.Nullable<int> _NewCustId;
		
		public Tmp2002Customers()
		{
		}
		
		[Column(Storage="_CustId", DbType="Int")]
		public System.Nullable<int> CustId
		{
			get
			{
				return this._CustId;
			}
			set
			{
				if ((this._CustId != value))
				{
					this._CustId = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="NVarChar(255)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_ContractId", DbType="Int")]
		public System.Nullable<int> ContractId
		{
			get
			{
				return this._ContractId;
			}
			set
			{
				if ((this._ContractId != value))
				{
					this._ContractId = value;
				}
			}
		}
		
		[Column(Storage="_NewCustId", DbType="Int")]
		public System.Nullable<int> NewCustId
		{
			get
			{
				return this._NewCustId;
			}
			set
			{
				if ((this._NewCustId != value))
				{
					this._NewCustId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Tmp2003Customers")]
	public partial class Tmp2003Customers
	{
		
		private System.Nullable<int> _CustId;
		
		private string _Customer;
		
		private System.Nullable<int> _ContractId;
		
		private System.Nullable<int> _NewCustId;
		
		public Tmp2003Customers()
		{
		}
		
		[Column(Storage="_CustId", DbType="Int")]
		public System.Nullable<int> CustId
		{
			get
			{
				return this._CustId;
			}
			set
			{
				if ((this._CustId != value))
				{
					this._CustId = value;
				}
			}
		}
		
		[Column(Storage="_Customer", DbType="VarChar(255)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[Column(Storage="_ContractId", DbType="Int")]
		public System.Nullable<int> ContractId
		{
			get
			{
				return this._ContractId;
			}
			set
			{
				if ((this._ContractId != value))
				{
					this._ContractId = value;
				}
			}
		}
		
		[Column(Storage="_NewCustId", DbType="Int")]
		public System.Nullable<int> NewCustId
		{
			get
			{
				return this._NewCustId;
			}
			set
			{
				if ((this._NewCustId != value))
				{
					this._NewCustId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TmpLastFourWeeks")]
	public partial class TmpLastFourWeeks
	{
		
		private System.Nullable<System.DateTime> _Week;
		
		public TmpLastFourWeeks()
		{
		}
		
		[Column(Storage="_Week", DbType="DateTime")]
		public System.Nullable<System.DateTime> Week
		{
			get
			{
				return this._Week;
			}
			set
			{
				if ((this._Week != value))
				{
					this._Week = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tmpSTOCK_RevCat_Orig_DD")]
	public partial class TmpSTOCK_RevCat_Orig_DD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemNum;
		
		private string _ProdCode;
		
		private string _DeviceCode;
		
		private string _RevenueCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemNumChanging(int value);
    partial void OnItemNumChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnDeviceCodeChanging(string value);
    partial void OnDeviceCodeChanged();
    partial void OnRevenueCategoryChanging(string value);
    partial void OnRevenueCategoryChanged();
    #endregion
		
		public TmpSTOCK_RevCat_Orig_DD()
		{
			OnCreated();
		}
		
		[Column(Storage="_ItemNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemNum
		{
			get
			{
				return this._ItemNum;
			}
			set
			{
				if ((this._ItemNum != value))
				{
					this.OnItemNumChanging(value);
					this.SendPropertyChanging();
					this._ItemNum = value;
					this.SendPropertyChanged("ItemNum");
					this.OnItemNumChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="VarChar(35)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this.OnDeviceCodeChanging(value);
					this.SendPropertyChanging();
					this._DeviceCode = value;
					this.SendPropertyChanged("DeviceCode");
					this.OnDeviceCodeChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="VarChar(32)")]
		public string RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this.OnRevenueCategoryChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategory = value;
					this.SendPropertyChanged("RevenueCategory");
					this.OnRevenueCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tmpSTOCK_RevCat_Updated_DD")]
	public partial class TmpSTOCK_RevCat_Updated_DD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemNum;
		
		private string _ProdCode;
		
		private string _DeviceCode;
		
		private string _RevenueCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemNumChanging(int value);
    partial void OnItemNumChanged();
    partial void OnProdCodeChanging(string value);
    partial void OnProdCodeChanged();
    partial void OnDeviceCodeChanging(string value);
    partial void OnDeviceCodeChanged();
    partial void OnRevenueCategoryChanging(string value);
    partial void OnRevenueCategoryChanged();
    #endregion
		
		public TmpSTOCK_RevCat_Updated_DD()
		{
			OnCreated();
		}
		
		[Column(Storage="_ItemNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemNum
		{
			get
			{
				return this._ItemNum;
			}
			set
			{
				if ((this._ItemNum != value))
				{
					this.OnItemNumChanging(value);
					this.SendPropertyChanging();
					this._ItemNum = value;
					this.SendPropertyChanged("ItemNum");
					this.OnItemNumChanged();
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this.OnProdCodeChanging(value);
					this.SendPropertyChanging();
					this._ProdCode = value;
					this.SendPropertyChanged("ProdCode");
					this.OnProdCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="VarChar(35)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this.OnDeviceCodeChanging(value);
					this.SendPropertyChanging();
					this._DeviceCode = value;
					this.SendPropertyChanged("DeviceCode");
					this.OnDeviceCodeChanged();
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="VarChar(32)")]
		public string RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this.OnRevenueCategoryChanging(value);
					this.SendPropertyChanging();
					this._RevenueCategory = value;
					this.SendPropertyChanged("RevenueCategory");
					this.OnRevenueCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.trans")]
	public partial class Trans
	{
		
		private System.Nullable<decimal> _Trantype;
		
		private System.Nullable<decimal> _Ledgerno;
		
		private string _Accountid;
		
		private System.Nullable<decimal> _Userno;
		
		private System.Nullable<System.DateTime> _Entrydate;
		
		private System.Nullable<decimal> _Entrytime;
		
		private System.Nullable<decimal> _Lineno;
		
		private System.Nullable<System.DateTime> _Trandate;
		
		private System.Nullable<decimal> _Periodno;
		
		private System.Nullable<decimal> _Batchno;
		
		private string _Internref;
		
		private string _Externref;
		
		private string _Hedgecode;
		
		private System.Nullable<bool> _Logged;
		
		private string _Descriptn;
		
		private string _Payee;
		
		private System.Nullable<decimal> _Presented;
		
		private System.Nullable<bool> _Held;
		
		private System.Nullable<bool> _Previous;
		
		private System.Nullable<bool> _Ositem;
		
		private System.Nullable<decimal> _Ledger2;
		
		private string _Account2;
		
		private string _Taxtype1;
		
		private System.Nullable<decimal> _Taxcode1;
		
		private System.Nullable<decimal> _Taxamount1;
		
		private string _Taxtype2;
		
		private System.Nullable<decimal> _Taxcode2;
		
		private System.Nullable<decimal> _Taxamount2;
		
		private string _Taxtype3;
		
		private System.Nullable<decimal> _Taxcode3;
		
		private System.Nullable<decimal> _Taxamount3;
		
		private System.Nullable<decimal> _Salescode;
		
		private string _Costcode;
		
		private string _Stage;
		
		private System.Nullable<decimal> _Branch;
		
		private System.Nullable<System.DateTime> _Delivery;
		
		private System.Nullable<decimal> _Quantity1;
		
		private System.Nullable<decimal> _Quantity2;
		
		private System.Nullable<decimal> _Quantity3;
		
		private System.Nullable<decimal> _Amount1;
		
		private System.Nullable<decimal> _Amount2;
		
		private System.Nullable<decimal> _Amount3;
		
		private System.Nullable<decimal> _Amount4;
		
		private System.Nullable<decimal> _Amount5;
		
		private System.Nullable<decimal> _Cncycode;
		
		private System.Nullable<decimal> _Exchange;
		
		private System.Nullable<decimal> _Netvarnce;
		
		private System.Nullable<decimal> _Netgain;
		
		private System.Nullable<decimal> _Netloss;
		
		private System.Nullable<decimal> _Taxrebate;
		
		private System.Nullable<System.DateTime> _Duedate;
		
		private string _Rateid;
		
		private string _Staffid;
		
		private System.Nullable<decimal> _Complqty;
		
		private System.Nullable<decimal> _Ppsrate;
		
		private System.Nullable<decimal> _Purchtype;
		
		private System.Nullable<bool> _Isjobquote;
		
		private System.Nullable<decimal> _Rpsgross;
		
		private System.Nullable<decimal> _Recordno;
		
		private System.Nullable<decimal> _Temppres;
		
		private System.Nullable<bool> _Changed;
		
		private System.Nullable<decimal> _Discperc;
		
		private System.Nullable<decimal> _Taxperiod;
		
		public Trans()
		{
		}
		
		[Column(Name="trantype", Storage="_Trantype", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> Trantype
		{
			get
			{
				return this._Trantype;
			}
			set
			{
				if ((this._Trantype != value))
				{
					this._Trantype = value;
				}
			}
		}
		
		[Column(Name="ledgerno", Storage="_Ledgerno", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> Ledgerno
		{
			get
			{
				return this._Ledgerno;
			}
			set
			{
				if ((this._Ledgerno != value))
				{
					this._Ledgerno = value;
				}
			}
		}
		
		[Column(Name="accountid", Storage="_Accountid", DbType="VarChar(50)")]
		public string Accountid
		{
			get
			{
				return this._Accountid;
			}
			set
			{
				if ((this._Accountid != value))
				{
					this._Accountid = value;
				}
			}
		}
		
		[Column(Name="userno", Storage="_Userno", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> Userno
		{
			get
			{
				return this._Userno;
			}
			set
			{
				if ((this._Userno != value))
				{
					this._Userno = value;
				}
			}
		}
		
		[Column(Name="entrydate", Storage="_Entrydate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Entrydate
		{
			get
			{
				return this._Entrydate;
			}
			set
			{
				if ((this._Entrydate != value))
				{
					this._Entrydate = value;
				}
			}
		}
		
		[Column(Name="entrytime", Storage="_Entrytime", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> Entrytime
		{
			get
			{
				return this._Entrytime;
			}
			set
			{
				if ((this._Entrytime != value))
				{
					this._Entrytime = value;
				}
			}
		}
		
		[Column(Name="lineno", Storage="_Lineno", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> Lineno
		{
			get
			{
				return this._Lineno;
			}
			set
			{
				if ((this._Lineno != value))
				{
					this._Lineno = value;
				}
			}
		}
		
		[Column(Name="trandate", Storage="_Trandate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Trandate
		{
			get
			{
				return this._Trandate;
			}
			set
			{
				if ((this._Trandate != value))
				{
					this._Trandate = value;
				}
			}
		}
		
		[Column(Name="periodno", Storage="_Periodno", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> Periodno
		{
			get
			{
				return this._Periodno;
			}
			set
			{
				if ((this._Periodno != value))
				{
					this._Periodno = value;
				}
			}
		}
		
		[Column(Name="batchno", Storage="_Batchno", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> Batchno
		{
			get
			{
				return this._Batchno;
			}
			set
			{
				if ((this._Batchno != value))
				{
					this._Batchno = value;
				}
			}
		}
		
		[Column(Name="internref", Storage="_Internref", DbType="VarChar(12)")]
		public string Internref
		{
			get
			{
				return this._Internref;
			}
			set
			{
				if ((this._Internref != value))
				{
					this._Internref = value;
				}
			}
		}
		
		[Column(Name="externref", Storage="_Externref", DbType="VarChar(10)")]
		public string Externref
		{
			get
			{
				return this._Externref;
			}
			set
			{
				if ((this._Externref != value))
				{
					this._Externref = value;
				}
			}
		}
		
		[Column(Name="hedgecode", Storage="_Hedgecode", DbType="VarChar(50)")]
		public string Hedgecode
		{
			get
			{
				return this._Hedgecode;
			}
			set
			{
				if ((this._Hedgecode != value))
				{
					this._Hedgecode = value;
				}
			}
		}
		
		[Column(Name="logged", Storage="_Logged", DbType="Bit")]
		public System.Nullable<bool> Logged
		{
			get
			{
				return this._Logged;
			}
			set
			{
				if ((this._Logged != value))
				{
					this._Logged = value;
				}
			}
		}
		
		[Column(Name="descriptn", Storage="_Descriptn", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descriptn
		{
			get
			{
				return this._Descriptn;
			}
			set
			{
				if ((this._Descriptn != value))
				{
					this._Descriptn = value;
				}
			}
		}
		
		[Column(Name="payee", Storage="_Payee", DbType="VarChar(50)")]
		public string Payee
		{
			get
			{
				return this._Payee;
			}
			set
			{
				if ((this._Payee != value))
				{
					this._Payee = value;
				}
			}
		}
		
		[Column(Name="presented", Storage="_Presented", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> Presented
		{
			get
			{
				return this._Presented;
			}
			set
			{
				if ((this._Presented != value))
				{
					this._Presented = value;
				}
			}
		}
		
		[Column(Name="held", Storage="_Held", DbType="Bit")]
		public System.Nullable<bool> Held
		{
			get
			{
				return this._Held;
			}
			set
			{
				if ((this._Held != value))
				{
					this._Held = value;
				}
			}
		}
		
		[Column(Name="previous", Storage="_Previous", DbType="Bit")]
		public System.Nullable<bool> Previous
		{
			get
			{
				return this._Previous;
			}
			set
			{
				if ((this._Previous != value))
				{
					this._Previous = value;
				}
			}
		}
		
		[Column(Name="ositem", Storage="_Ositem", DbType="Bit")]
		public System.Nullable<bool> Ositem
		{
			get
			{
				return this._Ositem;
			}
			set
			{
				if ((this._Ositem != value))
				{
					this._Ositem = value;
				}
			}
		}
		
		[Column(Name="ledger2", Storage="_Ledger2", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> Ledger2
		{
			get
			{
				return this._Ledger2;
			}
			set
			{
				if ((this._Ledger2 != value))
				{
					this._Ledger2 = value;
				}
			}
		}
		
		[Column(Name="account2", Storage="_Account2", DbType="VarChar(50)")]
		public string Account2
		{
			get
			{
				return this._Account2;
			}
			set
			{
				if ((this._Account2 != value))
				{
					this._Account2 = value;
				}
			}
		}
		
		[Column(Name="taxtype1", Storage="_Taxtype1", DbType="VarChar(50)")]
		public string Taxtype1
		{
			get
			{
				return this._Taxtype1;
			}
			set
			{
				if ((this._Taxtype1 != value))
				{
					this._Taxtype1 = value;
				}
			}
		}
		
		[Column(Name="taxcode1", Storage="_Taxcode1", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> Taxcode1
		{
			get
			{
				return this._Taxcode1;
			}
			set
			{
				if ((this._Taxcode1 != value))
				{
					this._Taxcode1 = value;
				}
			}
		}
		
		[Column(Name="taxamount1", Storage="_Taxamount1", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Taxamount1
		{
			get
			{
				return this._Taxamount1;
			}
			set
			{
				if ((this._Taxamount1 != value))
				{
					this._Taxamount1 = value;
				}
			}
		}
		
		[Column(Name="taxtype2", Storage="_Taxtype2", DbType="VarChar(50)")]
		public string Taxtype2
		{
			get
			{
				return this._Taxtype2;
			}
			set
			{
				if ((this._Taxtype2 != value))
				{
					this._Taxtype2 = value;
				}
			}
		}
		
		[Column(Name="taxcode2", Storage="_Taxcode2", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> Taxcode2
		{
			get
			{
				return this._Taxcode2;
			}
			set
			{
				if ((this._Taxcode2 != value))
				{
					this._Taxcode2 = value;
				}
			}
		}
		
		[Column(Name="taxamount2", Storage="_Taxamount2", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Taxamount2
		{
			get
			{
				return this._Taxamount2;
			}
			set
			{
				if ((this._Taxamount2 != value))
				{
					this._Taxamount2 = value;
				}
			}
		}
		
		[Column(Name="taxtype3", Storage="_Taxtype3", DbType="VarChar(50)")]
		public string Taxtype3
		{
			get
			{
				return this._Taxtype3;
			}
			set
			{
				if ((this._Taxtype3 != value))
				{
					this._Taxtype3 = value;
				}
			}
		}
		
		[Column(Name="taxcode3", Storage="_Taxcode3", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> Taxcode3
		{
			get
			{
				return this._Taxcode3;
			}
			set
			{
				if ((this._Taxcode3 != value))
				{
					this._Taxcode3 = value;
				}
			}
		}
		
		[Column(Name="taxamount3", Storage="_Taxamount3", DbType="Decimal(16,4)")]
		public System.Nullable<decimal> Taxamount3
		{
			get
			{
				return this._Taxamount3;
			}
			set
			{
				if ((this._Taxamount3 != value))
				{
					this._Taxamount3 = value;
				}
			}
		}
		
		[Column(Name="salescode", Storage="_Salescode", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> Salescode
		{
			get
			{
				return this._Salescode;
			}
			set
			{
				if ((this._Salescode != value))
				{
					this._Salescode = value;
				}
			}
		}
		
		[Column(Name="costcode", Storage="_Costcode", DbType="VarChar(50)")]
		public string Costcode
		{
			get
			{
				return this._Costcode;
			}
			set
			{
				if ((this._Costcode != value))
				{
					this._Costcode = value;
				}
			}
		}
		
		[Column(Name="stage", Storage="_Stage", DbType="VarChar(50)")]
		public string Stage
		{
			get
			{
				return this._Stage;
			}
			set
			{
				if ((this._Stage != value))
				{
					this._Stage = value;
				}
			}
		}
		
		[Column(Name="branch", Storage="_Branch", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this._Branch = value;
				}
			}
		}
		
		[Column(Name="delivery", Storage="_Delivery", DbType="DateTime")]
		public System.Nullable<System.DateTime> Delivery
		{
			get
			{
				return this._Delivery;
			}
			set
			{
				if ((this._Delivery != value))
				{
					this._Delivery = value;
				}
			}
		}
		
		[Column(Name="quantity1", Storage="_Quantity1", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Quantity1
		{
			get
			{
				return this._Quantity1;
			}
			set
			{
				if ((this._Quantity1 != value))
				{
					this._Quantity1 = value;
				}
			}
		}
		
		[Column(Name="quantity2", Storage="_Quantity2", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Quantity2
		{
			get
			{
				return this._Quantity2;
			}
			set
			{
				if ((this._Quantity2 != value))
				{
					this._Quantity2 = value;
				}
			}
		}
		
		[Column(Name="quantity3", Storage="_Quantity3", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Quantity3
		{
			get
			{
				return this._Quantity3;
			}
			set
			{
				if ((this._Quantity3 != value))
				{
					this._Quantity3 = value;
				}
			}
		}
		
		[Column(Name="amount1", Storage="_Amount1", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Amount1
		{
			get
			{
				return this._Amount1;
			}
			set
			{
				if ((this._Amount1 != value))
				{
					this._Amount1 = value;
				}
			}
		}
		
		[Column(Name="amount2", Storage="_Amount2", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Amount2
		{
			get
			{
				return this._Amount2;
			}
			set
			{
				if ((this._Amount2 != value))
				{
					this._Amount2 = value;
				}
			}
		}
		
		[Column(Name="amount3", Storage="_Amount3", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Amount3
		{
			get
			{
				return this._Amount3;
			}
			set
			{
				if ((this._Amount3 != value))
				{
					this._Amount3 = value;
				}
			}
		}
		
		[Column(Name="amount4", Storage="_Amount4", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Amount4
		{
			get
			{
				return this._Amount4;
			}
			set
			{
				if ((this._Amount4 != value))
				{
					this._Amount4 = value;
				}
			}
		}
		
		[Column(Name="amount5", Storage="_Amount5", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Amount5
		{
			get
			{
				return this._Amount5;
			}
			set
			{
				if ((this._Amount5 != value))
				{
					this._Amount5 = value;
				}
			}
		}
		
		[Column(Name="cncycode", Storage="_Cncycode", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> Cncycode
		{
			get
			{
				return this._Cncycode;
			}
			set
			{
				if ((this._Cncycode != value))
				{
					this._Cncycode = value;
				}
			}
		}
		
		[Column(Name="exchange", Storage="_Exchange", DbType="Decimal(20,9)")]
		public System.Nullable<decimal> Exchange
		{
			get
			{
				return this._Exchange;
			}
			set
			{
				if ((this._Exchange != value))
				{
					this._Exchange = value;
				}
			}
		}
		
		[Column(Name="netvarnce", Storage="_Netvarnce", DbType="Decimal(20,9)")]
		public System.Nullable<decimal> Netvarnce
		{
			get
			{
				return this._Netvarnce;
			}
			set
			{
				if ((this._Netvarnce != value))
				{
					this._Netvarnce = value;
				}
			}
		}
		
		[Column(Name="netgain", Storage="_Netgain", DbType="Decimal(20,9)")]
		public System.Nullable<decimal> Netgain
		{
			get
			{
				return this._Netgain;
			}
			set
			{
				if ((this._Netgain != value))
				{
					this._Netgain = value;
				}
			}
		}
		
		[Column(Name="netloss", Storage="_Netloss", DbType="Decimal(20,9)")]
		public System.Nullable<decimal> Netloss
		{
			get
			{
				return this._Netloss;
			}
			set
			{
				if ((this._Netloss != value))
				{
					this._Netloss = value;
				}
			}
		}
		
		[Column(Name="taxrebate", Storage="_Taxrebate", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Taxrebate
		{
			get
			{
				return this._Taxrebate;
			}
			set
			{
				if ((this._Taxrebate != value))
				{
					this._Taxrebate = value;
				}
			}
		}
		
		[Column(Name="duedate", Storage="_Duedate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Duedate
		{
			get
			{
				return this._Duedate;
			}
			set
			{
				if ((this._Duedate != value))
				{
					this._Duedate = value;
				}
			}
		}
		
		[Column(Name="rateid", Storage="_Rateid", DbType="VarChar(50)")]
		public string Rateid
		{
			get
			{
				return this._Rateid;
			}
			set
			{
				if ((this._Rateid != value))
				{
					this._Rateid = value;
				}
			}
		}
		
		[Column(Name="staffid", Storage="_Staffid", DbType="VarChar(50)")]
		public string Staffid
		{
			get
			{
				return this._Staffid;
			}
			set
			{
				if ((this._Staffid != value))
				{
					this._Staffid = value;
				}
			}
		}
		
		[Column(Name="complqty", Storage="_Complqty", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Complqty
		{
			get
			{
				return this._Complqty;
			}
			set
			{
				if ((this._Complqty != value))
				{
					this._Complqty = value;
				}
			}
		}
		
		[Column(Name="ppsrate", Storage="_Ppsrate", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Ppsrate
		{
			get
			{
				return this._Ppsrate;
			}
			set
			{
				if ((this._Ppsrate != value))
				{
					this._Ppsrate = value;
				}
			}
		}
		
		[Column(Name="purchtype", Storage="_Purchtype", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> Purchtype
		{
			get
			{
				return this._Purchtype;
			}
			set
			{
				if ((this._Purchtype != value))
				{
					this._Purchtype = value;
				}
			}
		}
		
		[Column(Name="isjobquote", Storage="_Isjobquote", DbType="Bit")]
		public System.Nullable<bool> Isjobquote
		{
			get
			{
				return this._Isjobquote;
			}
			set
			{
				if ((this._Isjobquote != value))
				{
					this._Isjobquote = value;
				}
			}
		}
		
		[Column(Name="rpsgross", Storage="_Rpsgross", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Rpsgross
		{
			get
			{
				return this._Rpsgross;
			}
			set
			{
				if ((this._Rpsgross != value))
				{
					this._Rpsgross = value;
				}
			}
		}
		
		[Column(Name="recordno", Storage="_Recordno", DbType="Decimal(8,0)")]
		public System.Nullable<decimal> Recordno
		{
			get
			{
				return this._Recordno;
			}
			set
			{
				if ((this._Recordno != value))
				{
					this._Recordno = value;
				}
			}
		}
		
		[Column(Name="temppres", Storage="_Temppres", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> Temppres
		{
			get
			{
				return this._Temppres;
			}
			set
			{
				if ((this._Temppres != value))
				{
					this._Temppres = value;
				}
			}
		}
		
		[Column(Name="changed", Storage="_Changed", DbType="Bit")]
		public System.Nullable<bool> Changed
		{
			get
			{
				return this._Changed;
			}
			set
			{
				if ((this._Changed != value))
				{
					this._Changed = value;
				}
			}
		}
		
		[Column(Name="discperc", Storage="_Discperc", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> Discperc
		{
			get
			{
				return this._Discperc;
			}
			set
			{
				if ((this._Discperc != value))
				{
					this._Discperc = value;
				}
			}
		}
		
		[Column(Name="taxperiod", Storage="_Taxperiod", DbType="Decimal(5,0)")]
		public System.Nullable<decimal> Taxperiod
		{
			get
			{
				return this._Taxperiod;
			}
			set
			{
				if ((this._Taxperiod != value))
				{
					this._Taxperiod = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.WHAT")]
	public partial class WHAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WKEY;
		
		private string _ID;
		
		private string _GROUP;
		
		private string _SECT;
		
		private string _SUBJECT;
		
		private string _WHERE;
		
		private System.Nullable<System.DateTime> _WHEN;
		
		private System.Nullable<System.DateTime> _EXPIRY;
		
		private string _SOURCE;
		
		private System.Nullable<System.DateTime> _DATE;
		
		private string _DATA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWKEYChanging(string value);
    partial void OnWKEYChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnGROUPChanging(string value);
    partial void OnGROUPChanged();
    partial void OnSECTChanging(string value);
    partial void OnSECTChanged();
    partial void OnSUBJECTChanging(string value);
    partial void OnSUBJECTChanged();
    partial void OnWHEREChanging(string value);
    partial void OnWHEREChanged();
    partial void OnWHENChanging(System.Nullable<System.DateTime> value);
    partial void OnWHENChanged();
    partial void OnEXPIRYChanging(System.Nullable<System.DateTime> value);
    partial void OnEXPIRYChanged();
    partial void OnSOURCEChanging(string value);
    partial void OnSOURCEChanged();
    partial void OnDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEChanged();
    partial void OnDATAChanging(string value);
    partial void OnDATAChanged();
    #endregion
		
		public WHAT()
		{
			OnCreated();
		}
		
		[Column(Storage="_WKEY", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WKEY
		{
			get
			{
				return this._WKEY;
			}
			set
			{
				if ((this._WKEY != value))
				{
					this.OnWKEYChanging(value);
					this.SendPropertyChanging();
					this._WKEY = value;
					this.SendPropertyChanged("WKEY");
					this.OnWKEYChanged();
				}
			}
		}
		
		[Column(Storage="_ID", DbType="VarChar(50)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_GROUP", DbType="VarChar(50)")]
		public string GROUP
		{
			get
			{
				return this._GROUP;
			}
			set
			{
				if ((this._GROUP != value))
				{
					this.OnGROUPChanging(value);
					this.SendPropertyChanging();
					this._GROUP = value;
					this.SendPropertyChanged("GROUP");
					this.OnGROUPChanged();
				}
			}
		}
		
		[Column(Storage="_SECT", DbType="VarChar(50)")]
		public string SECT
		{
			get
			{
				return this._SECT;
			}
			set
			{
				if ((this._SECT != value))
				{
					this.OnSECTChanging(value);
					this.SendPropertyChanging();
					this._SECT = value;
					this.SendPropertyChanged("SECT");
					this.OnSECTChanged();
				}
			}
		}
		
		[Column(Storage="_SUBJECT", DbType="VarChar(128)")]
		public string SUBJECT
		{
			get
			{
				return this._SUBJECT;
			}
			set
			{
				if ((this._SUBJECT != value))
				{
					this.OnSUBJECTChanging(value);
					this.SendPropertyChanging();
					this._SUBJECT = value;
					this.SendPropertyChanged("SUBJECT");
					this.OnSUBJECTChanged();
				}
			}
		}
		
		[Column(Storage="_WHERE", DbType="VarChar(50)")]
		public string WHERE
		{
			get
			{
				return this._WHERE;
			}
			set
			{
				if ((this._WHERE != value))
				{
					this.OnWHEREChanging(value);
					this.SendPropertyChanging();
					this._WHERE = value;
					this.SendPropertyChanged("WHERE");
					this.OnWHEREChanged();
				}
			}
		}
		
		[Column(Storage="_WHEN", DbType="DateTime")]
		public System.Nullable<System.DateTime> WHEN
		{
			get
			{
				return this._WHEN;
			}
			set
			{
				if ((this._WHEN != value))
				{
					this.OnWHENChanging(value);
					this.SendPropertyChanging();
					this._WHEN = value;
					this.SendPropertyChanged("WHEN");
					this.OnWHENChanged();
				}
			}
		}
		
		[Column(Storage="_EXPIRY", DbType="DateTime")]
		public System.Nullable<System.DateTime> EXPIRY
		{
			get
			{
				return this._EXPIRY;
			}
			set
			{
				if ((this._EXPIRY != value))
				{
					this.OnEXPIRYChanging(value);
					this.SendPropertyChanging();
					this._EXPIRY = value;
					this.SendPropertyChanged("EXPIRY");
					this.OnEXPIRYChanged();
				}
			}
		}
		
		[Column(Storage="_SOURCE", DbType="VarChar(50)")]
		public string SOURCE
		{
			get
			{
				return this._SOURCE;
			}
			set
			{
				if ((this._SOURCE != value))
				{
					this.OnSOURCEChanging(value);
					this.SendPropertyChanging();
					this._SOURCE = value;
					this.SendPropertyChanged("SOURCE");
					this.OnSOURCEChanged();
				}
			}
		}
		
		[Column(Storage="_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[Column(Storage="_DATA", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DATA
		{
			get
			{
				return this._DATA;
			}
			set
			{
				if ((this._DATA != value))
				{
					this.OnDATAChanging(value);
					this.SendPropertyChanging();
					this._DATA = value;
					this.SendPropertyChanged("DATA");
					this.OnDATAChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class AuditDebtorBalResult1
	{
		
		private System.Nullable<decimal> _TotalInv;
		
		public AuditDebtorBalResult1()
		{
		}
		
		[Column(Storage="_TotalInv", DbType="Money")]
		public System.Nullable<decimal> TotalInv
		{
			get
			{
				return this._TotalInv;
			}
			set
			{
				if ((this._TotalInv != value))
				{
					this._TotalInv = value;
				}
			}
		}
	}
	
	public partial class AuditDebtorBalResult2
	{
		
		private System.Nullable<decimal> _TotalReceipt;
		
		private System.Nullable<decimal> _TotalDiscount;
		
		public AuditDebtorBalResult2()
		{
		}
		
		[Column(Storage="_TotalReceipt", DbType="Money")]
		public System.Nullable<decimal> TotalReceipt
		{
			get
			{
				return this._TotalReceipt;
			}
			set
			{
				if ((this._TotalReceipt != value))
				{
					this._TotalReceipt = value;
				}
			}
		}
		
		[Column(Storage="_TotalDiscount", DbType="Money")]
		public System.Nullable<decimal> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this._TotalDiscount = value;
				}
			}
		}
	}
	
	public partial class AuditDebtorBalResult3
	{
		
		private System.Nullable<decimal> _TotalJnl;
		
		public AuditDebtorBalResult3()
		{
		}
		
		[Column(Storage="_TotalJnl", DbType="Money")]
		public System.Nullable<decimal> TotalJnl
		{
			get
			{
				return this._TotalJnl;
			}
			set
			{
				if ((this._TotalJnl != value))
				{
					this._TotalJnl = value;
				}
			}
		}
	}
	
	public partial class AuditDebtorBFResult
	{
		
		private System.Nullable<int> _ToAudit;
		
		private System.Nullable<decimal> _ClosingBal;
		
		public AuditDebtorBFResult()
		{
		}
		
		[Column(Storage="_ToAudit", DbType="Int")]
		public System.Nullable<int> ToAudit
		{
			get
			{
				return this._ToAudit;
			}
			set
			{
				if ((this._ToAudit != value))
				{
					this._ToAudit = value;
				}
			}
		}
		
		[Column(Storage="_ClosingBal", DbType="Money")]
		public System.Nullable<decimal> ClosingBal
		{
			get
			{
				return this._ClosingBal;
			}
			set
			{
				if ((this._ClosingBal != value))
				{
					this._ClosingBal = value;
				}
			}
		}
	}
	
	public partial class AuditFirstFiscalResult
	{
		
		private System.Nullable<decimal> _OpenBal;
		
		private System.Nullable<int> _FromAudit;
		
		public AuditFirstFiscalResult()
		{
		}
		
		[Column(Storage="_OpenBal", DbType="Money")]
		public System.Nullable<decimal> OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this._OpenBal = value;
				}
			}
		}
		
		[Column(Storage="_FromAudit", DbType="Int")]
		public System.Nullable<int> FromAudit
		{
			get
			{
				return this._FromAudit;
			}
			set
			{
				if ((this._FromAudit != value))
				{
					this._FromAudit = value;
				}
			}
		}
	}
	
	public partial class AuditFirstFiscalJULTOJUNResult
	{
		
		private System.Nullable<decimal> _OpenBal;
		
		private System.Nullable<int> _FromAudit;
		
		public AuditFirstFiscalJULTOJUNResult()
		{
		}
		
		[Column(Storage="_OpenBal", DbType="Money")]
		public System.Nullable<decimal> OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this._OpenBal = value;
				}
			}
		}
		
		[Column(Storage="_FromAudit", DbType="Int")]
		public System.Nullable<int> FromAudit
		{
			get
			{
				return this._FromAudit;
			}
			set
			{
				if ((this._FromAudit != value))
				{
					this._FromAudit = value;
				}
			}
		}
	}
	
	public partial class AuditFirstRecResult
	{
		
		private System.Nullable<decimal> _OpenBal;
		
		private System.Nullable<int> _FromAudit;
		
		public AuditFirstRecResult()
		{
		}
		
		[Column(Storage="_OpenBal", DbType="Money")]
		public System.Nullable<decimal> OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this._OpenBal = value;
				}
			}
		}
		
		[Column(Storage="_FromAudit", DbType="Int")]
		public System.Nullable<int> FromAudit
		{
			get
			{
				return this._FromAudit;
			}
			set
			{
				if ((this._FromAudit != value))
				{
					this._FromAudit = value;
				}
			}
		}
	}
	
	public partial class AuditInvTotalsResult1
	{
		
		private System.Nullable<decimal> _Deb;
		
		public AuditInvTotalsResult1()
		{
		}
		
		[Column(Storage="_Deb", DbType="Money")]
		public System.Nullable<decimal> Deb
		{
			get
			{
				return this._Deb;
			}
			set
			{
				if ((this._Deb != value))
				{
					this._Deb = value;
				}
			}
		}
	}
	
	public partial class AuditInvTotalsResult2
	{
		
		private System.Nullable<decimal> _Cred;
		
		public AuditInvTotalsResult2()
		{
		}
		
		[Column(Storage="_Cred", DbType="Money")]
		public System.Nullable<decimal> Cred
		{
			get
			{
				return this._Cred;
			}
			set
			{
				if ((this._Cred != value))
				{
					this._Cred = value;
				}
			}
		}
	}
	
	public partial class AuditInvTotalsExportResult1
	{
		
		private System.Nullable<decimal> _Deb;
		
		public AuditInvTotalsExportResult1()
		{
		}
		
		[Column(Storage="_Deb", DbType="Money")]
		public System.Nullable<decimal> Deb
		{
			get
			{
				return this._Deb;
			}
			set
			{
				if ((this._Deb != value))
				{
					this._Deb = value;
				}
			}
		}
	}
	
	public partial class AuditInvTotalsExportResult2
	{
		
		private System.Nullable<decimal> _Cred;
		
		public AuditInvTotalsExportResult2()
		{
		}
		
		[Column(Storage="_Cred", DbType="Money")]
		public System.Nullable<decimal> Cred
		{
			get
			{
				return this._Cred;
			}
			set
			{
				if ((this._Cred != value))
				{
					this._Cred = value;
				}
			}
		}
	}
	
	public partial class AuditLastDebtorResult
	{
		
		private System.Nullable<int> _LastAudit;
		
		public AuditLastDebtorResult()
		{
		}
		
		[Column(Storage="_LastAudit", DbType="Int")]
		public System.Nullable<int> LastAudit
		{
			get
			{
				return this._LastAudit;
			}
			set
			{
				if ((this._LastAudit != value))
				{
					this._LastAudit = value;
				}
			}
		}
	}
	
	public partial class AuditLastRecResult
	{
		
		private System.Nullable<int> _LastAudit;
		
		public AuditLastRecResult()
		{
		}
		
		[Column(Storage="_LastAudit", DbType="Int")]
		public System.Nullable<int> LastAudit
		{
			get
			{
				return this._LastAudit;
			}
			set
			{
				if ((this._LastAudit != value))
				{
					this._LastAudit = value;
				}
			}
		}
	}
	
	public partial class Bank_Count_ChequesResult
	{
		
		private System.Nullable<int> _NumOfCheques;
		
		public Bank_Count_ChequesResult()
		{
		}
		
		[Column(Storage="_NumOfCheques", DbType="Int")]
		public System.Nullable<int> NumOfCheques
		{
			get
			{
				return this._NumOfCheques;
			}
			set
			{
				if ((this._NumOfCheques != value))
				{
					this._NumOfCheques = value;
				}
			}
		}
	}
	
	public partial class Bank_Count_Cheques2Result
	{
		
		private System.Nullable<int> _NumOfCheques2;
		
		public Bank_Count_Cheques2Result()
		{
		}
		
		[Column(Storage="_NumOfCheques2", DbType="Int")]
		public System.Nullable<int> NumOfCheques2
		{
			get
			{
				return this._NumOfCheques2;
			}
			set
			{
				if ((this._NumOfCheques2 != value))
				{
					this._NumOfCheques2 = value;
				}
			}
		}
	}
	
	public partial class BANK_DebtorDepositCardsResult
	{
		
		private System.Nullable<decimal> _TotalCards;
		
		public BANK_DebtorDepositCardsResult()
		{
		}
		
		[Column(Storage="_TotalCards", DbType="Money")]
		public System.Nullable<decimal> TotalCards
		{
			get
			{
				return this._TotalCards;
			}
			set
			{
				if ((this._TotalCards != value))
				{
					this._TotalCards = value;
				}
			}
		}
	}
	
	public partial class BANK_DebtorDepositCashResult
	{
		
		private System.Nullable<decimal> _TotalCash;
		
		public BANK_DebtorDepositCashResult()
		{
		}
		
		[Column(Storage="_TotalCash", DbType="Money")]
		public System.Nullable<decimal> TotalCash
		{
			get
			{
				return this._TotalCash;
			}
			set
			{
				if ((this._TotalCash != value))
				{
					this._TotalCash = value;
				}
			}
		}
	}
	
	public partial class BANK_DebtorDepositChequesResult
	{
		
		private System.Nullable<decimal> _TotalCheques;
		
		public BANK_DebtorDepositChequesResult()
		{
		}
		
		[Column(Storage="_TotalCheques", DbType="Money")]
		public System.Nullable<decimal> TotalCheques
		{
			get
			{
				return this._TotalCheques;
			}
			set
			{
				if ((this._TotalCheques != value))
				{
					this._TotalCheques = value;
				}
			}
		}
	}
	
	public partial class Calc_Gl_AccountTotalResult
	{
		
		private System.Nullable<decimal> _TotalAccount;
		
		public Calc_Gl_AccountTotalResult()
		{
		}
		
		[Column(Storage="_TotalAccount", DbType="Money")]
		public System.Nullable<decimal> TotalAccount
		{
			get
			{
				return this._TotalAccount;
			}
			set
			{
				if ((this._TotalAccount != value))
				{
					this._TotalAccount = value;
				}
			}
		}
	}
	
	public partial class ChequeAmtWriterResult
	{
		
		private string _Words;
		
		public ChequeAmtWriterResult()
		{
		}
		
		[Column(Storage="_Words", DbType="VarChar(128)")]
		public string Words
		{
			get
			{
				return this._Words;
			}
			set
			{
				if ((this._Words != value))
				{
					this._Words = value;
				}
			}
		}
	}
	
	public partial class CompanyMerge_GetOldContractStartDateResult
	{
		
		private System.Nullable<System.DateTime> _StartDate;
		
		public CompanyMerge_GetOldContractStartDateResult()
		{
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
	}
	
	public partial class CompanyRepPrepResult
	{
		
		private string _RepPrep;
		
		public CompanyRepPrepResult()
		{
		}
		
		[Column(Storage="_RepPrep", DbType="VarChar(50)")]
		public string RepPrep
		{
			get
			{
				return this._RepPrep;
			}
			set
			{
				if ((this._RepPrep != value))
				{
					this._RepPrep = value;
				}
			}
		}
	}
	
	public partial class Creditor_AuditLastResult
	{
		
		private System.Nullable<int> _LastAudit;
		
		public Creditor_AuditLastResult()
		{
		}
		
		[Column(Storage="_LastAudit", DbType="Int")]
		public System.Nullable<int> LastAudit
		{
			get
			{
				return this._LastAudit;
			}
			set
			{
				if ((this._LastAudit != value))
				{
					this._LastAudit = value;
				}
			}
		}
	}
	
	public partial class CreditorContactFromIDResult
	{
		
		private string _Name;
		
		private string _Email;
		
		private string _Phone;
		
		public CreditorContactFromIDResult()
		{
		}
		
		[Column(Storage="_Name", DbType="VarChar(41)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
	}
	
	public partial class CreditorContactsResult
	{
		
		private string _Name;
		
		private string _JobTitle;
		
		private string _Phone;
		
		private string _AfterHours;
		
		private string _Mobile;
		
		private string _Email;
		
		private System.Nullable<int> _ContactID;
		
		public CreditorContactsResult()
		{
		}
		
		[Column(Storage="_Name", DbType="VarChar(41)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_JobTitle", DbType="VarChar(30)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this._JobTitle = value;
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[Column(Storage="_AfterHours", DbType="VarChar(15)")]
		public string AfterHours
		{
			get
			{
				return this._AfterHours;
			}
			set
			{
				if ((this._AfterHours != value))
				{
					this._AfterHours = value;
				}
			}
		}
		
		[Column(Storage="_Mobile", DbType="VarChar(15)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_ContactID", DbType="Int")]
		public System.Nullable<int> ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this._ContactID = value;
				}
			}
		}
	}
	
	public partial class CreditorInfoResult
	{
		
		private System.Nullable<int> _AccountID;
		
		private string _Company;
		
		private System.Nullable<byte> _CompanyNum;
		
		private System.Nullable<byte> _AreaCode;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private System.Nullable<decimal> _Current;
		
		private System.Nullable<decimal> @__30days;
		
		private System.Nullable<decimal> @__60Days;
		
		private System.Nullable<decimal> @__90Days;
		
		private System.Nullable<byte> _NumDaysCredit;
		
		private string _TermsMethod;
		
		private System.Nullable<byte> _PaymentMethod;
		
		private string _GST_Type;
		
		private string _PurchCtrlAccGL;
		
		private string _Currency;
		
		public CreditorInfoResult()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(55)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_AreaCode", DbType="TinyInt")]
		public System.Nullable<byte> AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					this._AreaCode = value;
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(30)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(25)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(25)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(3)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_Current", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Name="30days", Storage="__30days", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> _30days
		{
			get
			{
				return this.@__30days;
			}
			set
			{
				if ((this.@__30days != value))
				{
					this.@__30days = value;
				}
			}
		}
		
		[Column(Name="60Days", Storage="__60Days", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> _60Days
		{
			get
			{
				return this.@__60Days;
			}
			set
			{
				if ((this.@__60Days != value))
				{
					this.@__60Days = value;
				}
			}
		}
		
		[Column(Name="90Days", Storage="__90Days", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> _90Days
		{
			get
			{
				return this.@__90Days;
			}
			set
			{
				if ((this.@__90Days != value))
				{
					this.@__90Days = value;
				}
			}
		}
		
		[Column(Storage="_NumDaysCredit", DbType="TinyInt")]
		public System.Nullable<byte> NumDaysCredit
		{
			get
			{
				return this._NumDaysCredit;
			}
			set
			{
				if ((this._NumDaysCredit != value))
				{
					this._NumDaysCredit = value;
				}
			}
		}
		
		[Column(Storage="_TermsMethod", DbType="Char(1)")]
		public string TermsMethod
		{
			get
			{
				return this._TermsMethod;
			}
			set
			{
				if ((this._TermsMethod != value))
				{
					this._TermsMethod = value;
				}
			}
		}
		
		[Column(Storage="_PaymentMethod", DbType="TinyInt")]
		public System.Nullable<byte> PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this._PaymentMethod = value;
				}
			}
		}
		
		[Column(Storage="_GST_Type", DbType="Char(1)")]
		public string GST_Type
		{
			get
			{
				return this._GST_Type;
			}
			set
			{
				if ((this._GST_Type != value))
				{
					this._GST_Type = value;
				}
			}
		}
		
		[Column(Storage="_PurchCtrlAccGL", DbType="VarChar(16)")]
		public string PurchCtrlAccGL
		{
			get
			{
				return this._PurchCtrlAccGL;
			}
			set
			{
				if ((this._PurchCtrlAccGL != value))
				{
					this._PurchCtrlAccGL = value;
				}
			}
		}
		
		[Column(Storage="_Currency", DbType="VarChar(5)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
	}
	
	public partial class CreditorJournalResult
	{
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _Audit;
		
		private string _Type;
		
		private string _Ref;
		
		private string _Particulars;
		
		private System.Nullable<byte> _Age;
		
		private string _DR;
		
		private string _CR;
		
		public CreditorJournalResult()
		{
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Audit", DbType="Int")]
		public System.Nullable<int> Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this._Audit = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(3)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_Ref", DbType="VarChar(20)")]
		public string Ref
		{
			get
			{
				return this._Ref;
			}
			set
			{
				if ((this._Ref != value))
				{
					this._Ref = value;
				}
			}
		}
		
		[Column(Storage="_Particulars", DbType="VarChar(32)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this._Particulars = value;
				}
			}
		}
		
		[Column(Storage="_Age", DbType="TinyInt")]
		public System.Nullable<byte> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this._Age = value;
				}
			}
		}
		
		[Column(Storage="_DR", DbType="VarChar(10)")]
		public string DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this._DR = value;
				}
			}
		}
		
		[Column(Storage="_CR", DbType="VarChar(10)")]
		public string CR
		{
			get
			{
				return this._CR;
			}
			set
			{
				if ((this._CR != value))
				{
					this._CR = value;
				}
			}
		}
	}
	
	public partial class CreditorJournal_DUMMYResult
	{
		
		private System.Nullable<int> _Date;
		
		private System.Nullable<int> _Audit;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<int> _DR;
		
		private System.Nullable<int> _CR;
		
		public CreditorJournal_DUMMYResult()
		{
		}
		
		[Column(Storage="_Date", DbType="Int")]
		public System.Nullable<int> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Audit", DbType="Int")]
		public System.Nullable<int> Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this._Audit = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this._Age = value;
				}
			}
		}
		
		[Column(Storage="_DR", DbType="Int")]
		public System.Nullable<int> DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this._DR = value;
				}
			}
		}
		
		[Column(Storage="_CR", DbType="Int")]
		public System.Nullable<int> CR
		{
			get
			{
				return this._CR;
			}
			set
			{
				if ((this._CR != value))
				{
					this._CR = value;
				}
			}
		}
	}
	
	public partial class CreditorPurchasesResult
	{
		
		private string _Date;
		
		private System.Nullable<int> _OrdNum;
		
		private string _InvNum;
		
		private System.Nullable<System.DateTime> _DateReceived;
		
		private string _Amount;
		
		private string _Completed;
		
		public CreditorPurchasesResult()
		{
		}
		
		[Column(Storage="_Date", DbType="VarChar(15)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this._OrdNum = value;
				}
			}
		}
		
		[Column(Storage="_InvNum", DbType="VarChar(16)")]
		public string InvNum
		{
			get
			{
				return this._InvNum;
			}
			set
			{
				if ((this._InvNum != value))
				{
					this._InvNum = value;
				}
			}
		}
		
		[Column(Storage="_DateReceived", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateReceived
		{
			get
			{
				return this._DateReceived;
			}
			set
			{
				if ((this._DateReceived != value))
				{
					this._DateReceived = value;
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="VarChar(10)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[Column(Storage="_Completed", DbType="VarChar(3)")]
		public string Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
	}
	
	public partial class Creditors_BalancesResult
	{
		
		private System.Nullable<decimal> _OpenBal;
		
		private System.Nullable<decimal> _CloseBal;
		
		private System.Nullable<decimal> _Current;
		
		private System.Nullable<decimal> _ThirtyDays;
		
		private System.Nullable<decimal> _SixtyDays;
		
		private System.Nullable<decimal> _NinetyDays;
		
		private System.Nullable<decimal> _SumDr;
		
		private System.Nullable<decimal> _SumCr;
		
		public Creditors_BalancesResult()
		{
		}
		
		[Column(Storage="_OpenBal", DbType="Money")]
		public System.Nullable<decimal> OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this._OpenBal = value;
				}
			}
		}
		
		[Column(Storage="_CloseBal", DbType="Money")]
		public System.Nullable<decimal> CloseBal
		{
			get
			{
				return this._CloseBal;
			}
			set
			{
				if ((this._CloseBal != value))
				{
					this._CloseBal = value;
				}
			}
		}
		
		[Column(Storage="_Current", DbType="Money")]
		public System.Nullable<decimal> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Storage="_ThirtyDays", DbType="Money")]
		public System.Nullable<decimal> ThirtyDays
		{
			get
			{
				return this._ThirtyDays;
			}
			set
			{
				if ((this._ThirtyDays != value))
				{
					this._ThirtyDays = value;
				}
			}
		}
		
		[Column(Storage="_SixtyDays", DbType="Money")]
		public System.Nullable<decimal> SixtyDays
		{
			get
			{
				return this._SixtyDays;
			}
			set
			{
				if ((this._SixtyDays != value))
				{
					this._SixtyDays = value;
				}
			}
		}
		
		[Column(Storage="_NinetyDays", DbType="Money")]
		public System.Nullable<decimal> NinetyDays
		{
			get
			{
				return this._NinetyDays;
			}
			set
			{
				if ((this._NinetyDays != value))
				{
					this._NinetyDays = value;
				}
			}
		}
		
		[Column(Storage="_SumDr", DbType="Money")]
		public System.Nullable<decimal> SumDr
		{
			get
			{
				return this._SumDr;
			}
			set
			{
				if ((this._SumDr != value))
				{
					this._SumDr = value;
				}
			}
		}
		
		[Column(Storage="_SumCr", DbType="Money")]
		public System.Nullable<decimal> SumCr
		{
			get
			{
				return this._SumCr;
			}
			set
			{
				if ((this._SumCr != value))
				{
					this._SumCr = value;
				}
			}
		}
	}
	
	public partial class Creditors_ContactFromIDResult
	{
		
		private string _Name;
		
		private string _Email;
		
		public Creditors_ContactFromIDResult()
		{
		}
		
		[Column(Storage="_Name", DbType="VarChar(41)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	public partial class Creditors_CurrentPeriodResult
	{
		
		private System.Nullable<short> _Year;
		
		private System.Nullable<byte> _Month;
		
		private string _Heading;
		
		private System.Nullable<byte> _CompanyNum;
		
		public Creditors_CurrentPeriodResult()
		{
		}
		
		[Column(Storage="_Year", DbType="SmallInt")]
		public System.Nullable<short> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt")]
		public System.Nullable<byte> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[Column(Storage="_Heading", DbType="VarChar(16)")]
		public string Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this._Heading = value;
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
	}
	
	public partial class Creditors_GetBankDetailsResult
	{
		
		private string _BankBSB;
		
		private string _BankAcctNum;
		
		public Creditors_GetBankDetailsResult()
		{
		}
		
		[Column(Storage="_BankBSB", DbType="VarChar(10)")]
		public string BankBSB
		{
			get
			{
				return this._BankBSB;
			}
			set
			{
				if ((this._BankBSB != value))
				{
					this._BankBSB = value;
				}
			}
		}
		
		[Column(Storage="_BankAcctNum", DbType="VarChar(9)")]
		public string BankAcctNum
		{
			get
			{
				return this._BankAcctNum;
			}
			set
			{
				if ((this._BankAcctNum != value))
				{
					this._BankAcctNum = value;
				}
			}
		}
	}
	
	public partial class Creditors_GetLastAuditResult
	{
		
		private System.Nullable<int> _JnlKey;
		
		public Creditors_GetLastAuditResult()
		{
		}
		
		[Column(Storage="_JnlKey", DbType="Int")]
		public System.Nullable<int> JnlKey
		{
			get
			{
				return this._JnlKey;
			}
			set
			{
				if ((this._JnlKey != value))
				{
					this._JnlKey = value;
				}
			}
		}
	}
	
	public partial class Creditors_GetLastCreditorResult
	{
		
		private System.Nullable<int> _AccountID;
		
		public Creditors_GetLastCreditorResult()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
	}
	
	public partial class Creditors_GetStatsResult
	{
		
		private System.Nullable<int> _Num;
		
		private System.Nullable<decimal> _Sum;
		
		public Creditors_GetStatsResult()
		{
		}
		
		[Column(Storage="_Num", DbType="Int")]
		public System.Nullable<int> Num
		{
			get
			{
				return this._Num;
			}
			set
			{
				if ((this._Num != value))
				{
					this._Num = value;
				}
			}
		}
		
		[Column(Storage="_Sum", DbType="Decimal(11,2)")]
		public System.Nullable<decimal> Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this._Sum = value;
				}
			}
		}
	}
	
	public partial class Creditors_PostEftPaymentsDetailResult
	{
		
		private string _RecType;
		
		private string _CreditBSB;
		
		private string _CreditActNum;
		
		private string _INDICATOR;
		
		private string _TransCode;
		
		private string _Amount;
		
		private string _CreditActName;
		
		private string _LodgementRef;
		
		private string _DebitBSB;
		
		private string _DebitActNum;
		
		private string _UserName;
		
		private string _WithholdTax;
		
		private string _TotalCount;
		
		public Creditors_PostEftPaymentsDetailResult()
		{
		}
		
		[Column(Storage="_RecType", DbType="VarChar(1)")]
		public string RecType
		{
			get
			{
				return this._RecType;
			}
			set
			{
				if ((this._RecType != value))
				{
					this._RecType = value;
				}
			}
		}
		
		[Column(Storage="_CreditBSB", DbType="Char(7)")]
		public string CreditBSB
		{
			get
			{
				return this._CreditBSB;
			}
			set
			{
				if ((this._CreditBSB != value))
				{
					this._CreditBSB = value;
				}
			}
		}
		
		[Column(Storage="_CreditActNum", DbType="Char(9)")]
		public string CreditActNum
		{
			get
			{
				return this._CreditActNum;
			}
			set
			{
				if ((this._CreditActNum != value))
				{
					this._CreditActNum = value;
				}
			}
		}
		
		[Column(Storage="_INDICATOR", DbType="Char(1)")]
		public string INDICATOR
		{
			get
			{
				return this._INDICATOR;
			}
			set
			{
				if ((this._INDICATOR != value))
				{
					this._INDICATOR = value;
				}
			}
		}
		
		[Column(Storage="_TransCode", DbType="Char(2)")]
		public string TransCode
		{
			get
			{
				return this._TransCode;
			}
			set
			{
				if ((this._TransCode != value))
				{
					this._TransCode = value;
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Char(10)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[Column(Storage="_CreditActName", DbType="Char(32)")]
		public string CreditActName
		{
			get
			{
				return this._CreditActName;
			}
			set
			{
				if ((this._CreditActName != value))
				{
					this._CreditActName = value;
				}
			}
		}
		
		[Column(Storage="_LodgementRef", DbType="Char(18)")]
		public string LodgementRef
		{
			get
			{
				return this._LodgementRef;
			}
			set
			{
				if ((this._LodgementRef != value))
				{
					this._LodgementRef = value;
				}
			}
		}
		
		[Column(Storage="_DebitBSB", DbType="Char(7)")]
		public string DebitBSB
		{
			get
			{
				return this._DebitBSB;
			}
			set
			{
				if ((this._DebitBSB != value))
				{
					this._DebitBSB = value;
				}
			}
		}
		
		[Column(Storage="_DebitActNum", DbType="Char(9)")]
		public string DebitActNum
		{
			get
			{
				return this._DebitActNum;
			}
			set
			{
				if ((this._DebitActNum != value))
				{
					this._DebitActNum = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="Char(16)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_WithholdTax", DbType="Char(8)")]
		public string WithholdTax
		{
			get
			{
				return this._WithholdTax;
			}
			set
			{
				if ((this._WithholdTax != value))
				{
					this._WithholdTax = value;
				}
			}
		}
		
		[Column(Storage="_TotalCount", DbType="Char(6)")]
		public string TotalCount
		{
			get
			{
				return this._TotalCount;
			}
			set
			{
				if ((this._TotalCount != value))
				{
					this._TotalCount = value;
				}
			}
		}
	}
	
	public partial class Creditors_PostEftPaymentsDetailFooterResult
	{
		
		private string _RecType;
		
		private string _CreditBSB;
		
		private string _CreditActNum;
		
		private string _INDICATOR;
		
		private string _TransCode;
		
		private string _Amount;
		
		private string _CreditActName;
		
		private string _LodgementRef;
		
		private string _DebitBSB;
		
		private string _DebitActNum;
		
		private string _UserName;
		
		private string _WithholdTax;
		
		public Creditors_PostEftPaymentsDetailFooterResult()
		{
		}
		
		[Column(Storage="_RecType", DbType="VarChar(1)")]
		public string RecType
		{
			get
			{
				return this._RecType;
			}
			set
			{
				if ((this._RecType != value))
				{
					this._RecType = value;
				}
			}
		}
		
		[Column(Storage="_CreditBSB", DbType="Char(7)")]
		public string CreditBSB
		{
			get
			{
				return this._CreditBSB;
			}
			set
			{
				if ((this._CreditBSB != value))
				{
					this._CreditBSB = value;
				}
			}
		}
		
		[Column(Storage="_CreditActNum", DbType="Char(9)")]
		public string CreditActNum
		{
			get
			{
				return this._CreditActNum;
			}
			set
			{
				if ((this._CreditActNum != value))
				{
					this._CreditActNum = value;
				}
			}
		}
		
		[Column(Storage="_INDICATOR", DbType="Char(1)")]
		public string INDICATOR
		{
			get
			{
				return this._INDICATOR;
			}
			set
			{
				if ((this._INDICATOR != value))
				{
					this._INDICATOR = value;
				}
			}
		}
		
		[Column(Storage="_TransCode", DbType="Char(2)")]
		public string TransCode
		{
			get
			{
				return this._TransCode;
			}
			set
			{
				if ((this._TransCode != value))
				{
					this._TransCode = value;
				}
			}
		}
		
		[Column(Storage="_Amount", DbType="Char(10)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[Column(Storage="_CreditActName", DbType="Char(32)")]
		public string CreditActName
		{
			get
			{
				return this._CreditActName;
			}
			set
			{
				if ((this._CreditActName != value))
				{
					this._CreditActName = value;
				}
			}
		}
		
		[Column(Storage="_LodgementRef", DbType="Char(18)")]
		public string LodgementRef
		{
			get
			{
				return this._LodgementRef;
			}
			set
			{
				if ((this._LodgementRef != value))
				{
					this._LodgementRef = value;
				}
			}
		}
		
		[Column(Storage="_DebitBSB", DbType="Char(7)")]
		public string DebitBSB
		{
			get
			{
				return this._DebitBSB;
			}
			set
			{
				if ((this._DebitBSB != value))
				{
					this._DebitBSB = value;
				}
			}
		}
		
		[Column(Storage="_DebitActNum", DbType="Char(9)")]
		public string DebitActNum
		{
			get
			{
				return this._DebitActNum;
			}
			set
			{
				if ((this._DebitActNum != value))
				{
					this._DebitActNum = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="Char(16)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_WithholdTax", DbType="Char(8)")]
		public string WithholdTax
		{
			get
			{
				return this._WithholdTax;
			}
			set
			{
				if ((this._WithholdTax != value))
				{
					this._WithholdTax = value;
				}
			}
		}
	}
	
	public partial class Creditors_PostEftPaymentsFooterResult
	{
		
		private string _RecType;
		
		private string _BSB;
		
		private string _Unused4;
		
		private string _NetAmount;
		
		private string _CreditAmount;
		
		private string _DebitAmount;
		
		private string _Unused5;
		
		private string _Unused6;
		
		public Creditors_PostEftPaymentsFooterResult()
		{
		}
		
		[Column(Storage="_RecType", DbType="Char(1)")]
		public string RecType
		{
			get
			{
				return this._RecType;
			}
			set
			{
				if ((this._RecType != value))
				{
					this._RecType = value;
				}
			}
		}
		
		[Column(Storage="_BSB", DbType="Char(7)")]
		public string BSB
		{
			get
			{
				return this._BSB;
			}
			set
			{
				if ((this._BSB != value))
				{
					this._BSB = value;
				}
			}
		}
		
		[Column(Storage="_Unused4", DbType="Char(12)")]
		public string Unused4
		{
			get
			{
				return this._Unused4;
			}
			set
			{
				if ((this._Unused4 != value))
				{
					this._Unused4 = value;
				}
			}
		}
		
		[Column(Storage="_NetAmount", DbType="Char(10)")]
		public string NetAmount
		{
			get
			{
				return this._NetAmount;
			}
			set
			{
				if ((this._NetAmount != value))
				{
					this._NetAmount = value;
				}
			}
		}
		
		[Column(Storage="_CreditAmount", DbType="Char(10)")]
		public string CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this._CreditAmount = value;
				}
			}
		}
		
		[Column(Storage="_DebitAmount", DbType="Char(10)")]
		public string DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this._DebitAmount = value;
				}
			}
		}
		
		[Column(Storage="_Unused5", DbType="Char(24)")]
		public string Unused5
		{
			get
			{
				return this._Unused5;
			}
			set
			{
				if ((this._Unused5 != value))
				{
					this._Unused5 = value;
				}
			}
		}
		
		[Column(Storage="_Unused6", DbType="Char(40)")]
		public string Unused6
		{
			get
			{
				return this._Unused6;
			}
			set
			{
				if ((this._Unused6 != value))
				{
					this._Unused6 = value;
				}
			}
		}
	}
	
	public partial class Creditors_PostEftPaymentsHeaderResult
	{
		
		private string _RecType;
		
		private string _Unused1;
		
		private string _ReelSeqNumber;
		
		private string _UserBank;
		
		private string _Unused2;
		
		private string _UserName;
		
		private string _UserNumber;
		
		private string _DESCRIPTION;
		
		private string _ProcessingDate;
		
		private string _UNUSED3;
		
		public Creditors_PostEftPaymentsHeaderResult()
		{
		}
		
		[Column(Storage="_RecType", DbType="VarChar(1)")]
		public string RecType
		{
			get
			{
				return this._RecType;
			}
			set
			{
				if ((this._RecType != value))
				{
					this._RecType = value;
				}
			}
		}
		
		[Column(Storage="_Unused1", DbType="Char(17)")]
		public string Unused1
		{
			get
			{
				return this._Unused1;
			}
			set
			{
				if ((this._Unused1 != value))
				{
					this._Unused1 = value;
				}
			}
		}
		
		[Column(Storage="_ReelSeqNumber", DbType="VarChar(2)")]
		public string ReelSeqNumber
		{
			get
			{
				return this._ReelSeqNumber;
			}
			set
			{
				if ((this._ReelSeqNumber != value))
				{
					this._ReelSeqNumber = value;
				}
			}
		}
		
		[Column(Storage="_UserBank", DbType="VarChar(3)")]
		public string UserBank
		{
			get
			{
				return this._UserBank;
			}
			set
			{
				if ((this._UserBank != value))
				{
					this._UserBank = value;
				}
			}
		}
		
		[Column(Storage="_Unused2", DbType="Char(7)")]
		public string Unused2
		{
			get
			{
				return this._Unused2;
			}
			set
			{
				if ((this._Unused2 != value))
				{
					this._Unused2 = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="Char(26)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_UserNumber", DbType="Char(6)")]
		public string UserNumber
		{
			get
			{
				return this._UserNumber;
			}
			set
			{
				if ((this._UserNumber != value))
				{
					this._UserNumber = value;
				}
			}
		}
		
		[Column(Storage="_DESCRIPTION", DbType="Char(12)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this._DESCRIPTION = value;
				}
			}
		}
		
		[Column(Storage="_ProcessingDate", DbType="Char(6)")]
		public string ProcessingDate
		{
			get
			{
				return this._ProcessingDate;
			}
			set
			{
				if ((this._ProcessingDate != value))
				{
					this._ProcessingDate = value;
				}
			}
		}
		
		[Column(Storage="_UNUSED3", DbType="Char(40)")]
		public string UNUSED3
		{
			get
			{
				return this._UNUSED3;
			}
			set
			{
				if ((this._UNUSED3 != value))
				{
					this._UNUSED3 = value;
				}
			}
		}
	}
	
	public partial class CreditorsTransBalResult
	{
		
		private System.Nullable<decimal> _Column1;
		
		public CreditorsTransBalResult()
		{
		}
		
		[Column(Name="", Storage="_Column1", DbType="Money")]
		public System.Nullable<decimal> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CTRAC_CheckBSGDeliveryStatusResult
	{
		
		private System.Nullable<int> _ContractItemID;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		public CTRAC_CheckBSGDeliveryStatusResult()
		{
		}
		
		[Column(Storage="_ContractItemID", DbType="Int")]
		public System.Nullable<int> ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this._ContractItemID = value;
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
	}
	
	public partial class DateNumbersResult
	{
		
		private System.Nullable<short> _Year;
		
		private System.Nullable<byte> _Month;
		
		public DateNumbersResult()
		{
		}
		
		[Column(Storage="_Year", DbType="SmallInt")]
		public System.Nullable<short> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt")]
		public System.Nullable<byte> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
	}
	
	public partial class DB_AuditFirstRecResult
	{
		
		private System.Nullable<decimal> _OpenBal;
		
		private System.Nullable<int> _FromAudit;
		
		public DB_AuditFirstRecResult()
		{
		}
		
		[Column(Storage="_OpenBal", DbType="Money")]
		public System.Nullable<decimal> OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this._OpenBal = value;
				}
			}
		}
		
		[Column(Storage="_FromAudit", DbType="Int")]
		public System.Nullable<int> FromAudit
		{
			get
			{
				return this._FromAudit;
			}
			set
			{
				if ((this._FromAudit != value))
				{
					this._FromAudit = value;
				}
			}
		}
	}
	
	public partial class DB_AuditLastRecResult
	{
		
		private System.Nullable<int> _LastAudit;
		
		public DB_AuditLastRecResult()
		{
		}
		
		[Column(Storage="_LastAudit", DbType="Int")]
		public System.Nullable<int> LastAudit
		{
			get
			{
				return this._LastAudit;
			}
			set
			{
				if ((this._LastAudit != value))
				{
					this._LastAudit = value;
				}
			}
		}
	}
	
	public partial class DB_EOM_GetTrialBalanceTotalsResult
	{
		
		private System.Nullable<decimal> _SumTotal;
		
		private System.Nullable<decimal> _SumCurrent;
		
		private System.Nullable<decimal> _Sum30Days;
		
		private System.Nullable<decimal> _Sum60Days;
		
		private System.Nullable<decimal> _Sum90Days;
		
		private System.Nullable<decimal> _PercentCurrent;
		
		private System.Nullable<decimal> _Percent30Days;
		
		private System.Nullable<decimal> _Percent60Days;
		
		private System.Nullable<decimal> _Percent90Days;
		
		private System.Nullable<int> _CountAll;
		
		private System.Nullable<int> _CountCurrent;
		
		private System.Nullable<int> _Count30Days;
		
		private System.Nullable<int> _Count60Days;
		
		private System.Nullable<int> _Count90Days;
		
		public DB_EOM_GetTrialBalanceTotalsResult()
		{
		}
		
		[Column(Storage="_SumTotal", DbType="Money")]
		public System.Nullable<decimal> SumTotal
		{
			get
			{
				return this._SumTotal;
			}
			set
			{
				if ((this._SumTotal != value))
				{
					this._SumTotal = value;
				}
			}
		}
		
		[Column(Storage="_SumCurrent", DbType="Money")]
		public System.Nullable<decimal> SumCurrent
		{
			get
			{
				return this._SumCurrent;
			}
			set
			{
				if ((this._SumCurrent != value))
				{
					this._SumCurrent = value;
				}
			}
		}
		
		[Column(Storage="_Sum30Days", DbType="Money")]
		public System.Nullable<decimal> Sum30Days
		{
			get
			{
				return this._Sum30Days;
			}
			set
			{
				if ((this._Sum30Days != value))
				{
					this._Sum30Days = value;
				}
			}
		}
		
		[Column(Storage="_Sum60Days", DbType="Money")]
		public System.Nullable<decimal> Sum60Days
		{
			get
			{
				return this._Sum60Days;
			}
			set
			{
				if ((this._Sum60Days != value))
				{
					this._Sum60Days = value;
				}
			}
		}
		
		[Column(Storage="_Sum90Days", DbType="Money")]
		public System.Nullable<decimal> Sum90Days
		{
			get
			{
				return this._Sum90Days;
			}
			set
			{
				if ((this._Sum90Days != value))
				{
					this._Sum90Days = value;
				}
			}
		}
		
		[Column(Storage="_PercentCurrent", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PercentCurrent
		{
			get
			{
				return this._PercentCurrent;
			}
			set
			{
				if ((this._PercentCurrent != value))
				{
					this._PercentCurrent = value;
				}
			}
		}
		
		[Column(Storage="_Percent30Days", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Percent30Days
		{
			get
			{
				return this._Percent30Days;
			}
			set
			{
				if ((this._Percent30Days != value))
				{
					this._Percent30Days = value;
				}
			}
		}
		
		[Column(Storage="_Percent60Days", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Percent60Days
		{
			get
			{
				return this._Percent60Days;
			}
			set
			{
				if ((this._Percent60Days != value))
				{
					this._Percent60Days = value;
				}
			}
		}
		
		[Column(Storage="_Percent90Days", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Percent90Days
		{
			get
			{
				return this._Percent90Days;
			}
			set
			{
				if ((this._Percent90Days != value))
				{
					this._Percent90Days = value;
				}
			}
		}
		
		[Column(Storage="_CountAll", DbType="Int")]
		public System.Nullable<int> CountAll
		{
			get
			{
				return this._CountAll;
			}
			set
			{
				if ((this._CountAll != value))
				{
					this._CountAll = value;
				}
			}
		}
		
		[Column(Storage="_CountCurrent", DbType="Int")]
		public System.Nullable<int> CountCurrent
		{
			get
			{
				return this._CountCurrent;
			}
			set
			{
				if ((this._CountCurrent != value))
				{
					this._CountCurrent = value;
				}
			}
		}
		
		[Column(Storage="_Count30Days", DbType="Int")]
		public System.Nullable<int> Count30Days
		{
			get
			{
				return this._Count30Days;
			}
			set
			{
				if ((this._Count30Days != value))
				{
					this._Count30Days = value;
				}
			}
		}
		
		[Column(Storage="_Count60Days", DbType="Int")]
		public System.Nullable<int> Count60Days
		{
			get
			{
				return this._Count60Days;
			}
			set
			{
				if ((this._Count60Days != value))
				{
					this._Count60Days = value;
				}
			}
		}
		
		[Column(Storage="_Count90Days", DbType="Int")]
		public System.Nullable<int> Count90Days
		{
			get
			{
				return this._Count90Days;
			}
			set
			{
				if ((this._Count90Days != value))
				{
					this._Count90Days = value;
				}
			}
		}
	}
	
	public partial class DB_GetNextInvoiceResult
	{
		
		private System.Nullable<int> _OrdNum;
		
		public DB_GetNextInvoiceResult()
		{
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this._OrdNum = value;
				}
			}
		}
	}
	
	public partial class Debtor_ContactsResult
	{
		
		private string _Name;
		
		private string _JobTitle;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _AfterHours;
		
		private string _Mobile;
		
		private string _Email;
		
		private System.Nullable<int> _ContactID;
		
		public Debtor_ContactsResult()
		{
		}
		
		[Column(Storage="_Name", DbType="VarChar(41)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_JobTitle", DbType="VarChar(30)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this._JobTitle = value;
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_AfterHours", DbType="VarChar(15)")]
		public string AfterHours
		{
			get
			{
				return this._AfterHours;
			}
			set
			{
				if ((this._AfterHours != value))
				{
					this._AfterHours = value;
				}
			}
		}
		
		[Column(Storage="_Mobile", DbType="VarChar(15)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_ContactID", DbType="Int")]
		public System.Nullable<int> ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this._ContactID = value;
				}
			}
		}
	}
	
	public partial class DEBTOR_InfoResult
	{
		
		private System.Nullable<int> _AccountID;
		
		private string _OldAccount;
		
		private System.Nullable<int> _Parent;
		
		private string _Child;
		
		private string _Company;
		
		private System.Nullable<int> _PrimaryContact;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Type;
		
		private string _AccountStatus;
		
		private System.Nullable<bool> _COD;
		
		private System.Nullable<bool> _Industrial;
		
		private System.Nullable<bool> _BO;
		
		private System.Nullable<bool> _FO;
		
		private string _Group;
		
		private System.Nullable<bool> _ByDepartment;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Address4;
		
		private string _City;
		
		private string _State;
		
		private string _PostCode;
		
		private string _Phone;
		
		private string _PhoneAfterHrs;
		
		private string _Fax;
		
		private string _WebSite;
		
		private string _Email;
		
		private System.Nullable<int> _Courier;
		
		private System.Nullable<short> _RepArea1;
		
		private System.Nullable<short> _RepArea2;
		
		private string _BankAcctName;
		
		private string _BankName;
		
		private string _BankSuburb;
		
		private string _BankBSB;
		
		private string _BankAcct;
		
		private string _CreditCardName;
		
		private string _CreditCardType;
		
		private string _CreditCardNo;
		
		private System.Nullable<System.DateTime> _CreditCardExpire;
		
		private System.Nullable<byte> _SpecialPrice;
		
		private System.Nullable<byte> _SpecialDelivery;
		
		private System.Nullable<byte> _Urgent;
		
		private System.Nullable<byte> _Local;
		
		private System.Nullable<short> _Discount1;
		
		private System.Nullable<short> _Discount2;
		
		private System.Nullable<byte> _PriceLevel;
		
		private string _AccountClass;
		
		private System.Nullable<decimal> _OpenBal;
		
		private System.Nullable<decimal> _Current;
		
		private System.Nullable<decimal> @__30Days;
		
		private System.Nullable<decimal> @__60Days;
		
		private System.Nullable<decimal> @__90Days;
		
		private string _Terms;
		
		private System.Nullable<byte> _NumDaysCredit;
		
		private System.Nullable<decimal> _CreditLimit;
		
		private System.Nullable<int> _LastInvNum;
		
		private System.Nullable<System.DateTime> _LastInvDate;
		
		private System.Nullable<decimal> _LastInvAmt;
		
		private System.Nullable<System.DateTime> _LastPayDate;
		
		private System.Nullable<decimal> _LastPayAmt;
		
		private System.Nullable<System.DateTime> _LastPick;
		
		private string _StaxNum;
		
		private string _WebLogin;
		
		private string _WebPassword;
		
		private System.Nullable<decimal> _MTD;
		
		private System.Nullable<decimal> _YTD;
		
		private System.Nullable<decimal> _LY;
		
		private System.Nullable<decimal> _JAN;
		
		private System.Nullable<decimal> _FEB;
		
		private System.Nullable<decimal> _MAR;
		
		private System.Nullable<decimal> _APR;
		
		private System.Nullable<decimal> _MAY;
		
		private System.Nullable<decimal> _JUN;
		
		private System.Nullable<decimal> _JUL;
		
		private System.Nullable<decimal> _AUG;
		
		private System.Nullable<decimal> _SEP;
		
		private System.Nullable<decimal> _OCT;
		
		private System.Nullable<decimal> _NOV;
		
		private System.Nullable<decimal> _DEC;
		
		private string _AbbrevName;
		
		private System.Nullable<bool> _PrintInvoice;
		
		private System.Nullable<int> _InvoiceQty;
		
		private System.Nullable<bool> _PrintPackSlip;
		
		private System.Nullable<int> _PackSlipQty;
		
		private System.Nullable<byte> _RRPType;
		
		private System.Nullable<int> _RRPQty;
		
		private System.Nullable<decimal> _RRPMarkup1;
		
		private System.Nullable<decimal> _RRPMarkup2;
		
		private System.Nullable<bool> _International;
		
		private string _Country;
		
		private string _CurrencyType;
		
		private System.Nullable<bool> _CIF;
		
		private System.Nullable<bool> _FIS;
		
		private System.Nullable<bool> _FOB;
		
		private System.Nullable<byte> _CompanyNum;
		
		private string _SpecialReq;
		
		private string _InvMsg;
		
		private string _SalesNotes;
		
		private string _Remarks;
		
		private System.Nullable<decimal> _FwdVal;
		
		private System.Nullable<bool> _SDI;
		
		private System.Nullable<bool> _OpenItem;
		
		private System.Nullable<decimal> _CurrentInv;
		
		private System.Nullable<decimal> _CurrentRec;
		
		private System.Nullable<decimal> _CurrentDisc;
		
		private System.Nullable<decimal> _CurrentJnl;
		
		private string _FlagMsg;
		
		private string _SalesRep;
		
		private string _SalesRep2;
		
		private string _StatementNotes;
		
		private string _ABN;
		
		private System.Nullable<int> _OrdNumOK;
		
		private string _ShipBy;
		
		private System.Nullable<bool> _PrintLabel;
		
		private System.Nullable<bool> _GotCalls;
		
		private System.Nullable<System.DateTime> _NextCall;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<bool> _InActive;
		
		private System.Nullable<bool> _CreditHold;
		
		private string _Selector;
		
		private System.Nullable<decimal> _FwdDateAmount;
		
		private System.Nullable<decimal> _Rebate;
		
		private System.Nullable<decimal> _LY2;
		
		private System.Nullable<byte> _PmFrequency;
		
		private System.Nullable<byte> _PmPeriod;
		
		private System.Nullable<System.DateTime> _PmLastVisit;
		
		private System.Nullable<System.DateTime> _PMNextVisit;
		
		private string _OldParent;
		
		private System.Nullable<byte> _DefaultInvStyle;
		
		private System.Nullable<byte> _InvoiceFreq;
		
		private string _SalesCtrlAccGL;
		
		private string _SalesAccGL;
		
		private System.Nullable<decimal> _LJAN;
		
		private System.Nullable<decimal> _LFEB;
		
		private System.Nullable<decimal> _LMAR;
		
		private System.Nullable<decimal> _LAPR;
		
		private System.Nullable<decimal> _LMAY;
		
		private System.Nullable<decimal> _LJUN;
		
		private System.Nullable<decimal> _LJUL;
		
		private System.Nullable<decimal> _LAUG;
		
		private System.Nullable<decimal> _LSEP;
		
		private System.Nullable<decimal> _LOCT;
		
		private System.Nullable<decimal> _LNOV;
		
		private System.Nullable<decimal> _LDEC;
		
		private System.Nullable<bool> _NoCreditLimit;
		
		private System.Nullable<int> _StockLocation;
		
		private string _SiteEngineer;
		
		private string _LastCallBy;
		
		private string _TMInvAccGL;
		
		private System.Nullable<decimal> _OverpayBucket;
		
		private System.Nullable<bool> _InterCompany;
		
		private System.Nullable<bool> _Merged;
		
		private System.Nullable<bool> _PreMerged;
		
		private string _ContractLocation;
		
		private string _IMRep;
		
		private string _IPRep;
		
		private string _RM1;
		
		private string _RM2;
		
		private System.Nullable<int> _SeparateBatchPrint;
		
		private System.Nullable<bool> _SoftInvoice;
		
		private string _SoftInvoicePath;
		
		private System.Nullable<int> _ReportingGroupID;
		
		private System.Nullable<bool> _MixedInternational;
		
		private System.Nullable<bool> _PDFInvoice;
		
		private string _PDFInvoiceEmail;
		
		private string _BSGTechnicalOwner;
		
		private string _SalesRepBSG;
		
		private System.Nullable<int> _BillingMethod;
		
		private System.Nullable<bool> _BillToLocation;
		
		private System.Nullable<bool> _PrintAlways;
		
		private System.Nullable<System.DateTime> _OriginalAccountDate;
		
		private System.Nullable<bool> _PDFInvoiceToContacts;
		
		private System.Nullable<int> _PrimaryFinanceContact;
		
		private string _FinancePhone;
		
		private string _FinanceFax;
		
		private string _FinancePhoneAfterHrs;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private System.Nullable<bool> _Issue;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _EngineerNotes;
		
		private string _TechnicalAccountManager;
		
		private System.Nullable<int> _GLState;
		
		private System.Nullable<bool> _ExcludeFromCarbonTax;
		
		public DEBTOR_InfoResult()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_OldAccount", DbType="VarChar(12)")]
		public string OldAccount
		{
			get
			{
				return this._OldAccount;
			}
			set
			{
				if ((this._OldAccount != value))
				{
					this._OldAccount = value;
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this._Parent = value;
				}
			}
		}
		
		[Column(Storage="_Child", DbType="VarChar(4)")]
		public string Child
		{
			get
			{
				return this._Child;
			}
			set
			{
				if ((this._Child != value))
				{
					this._Child = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_PrimaryContact", DbType="Int")]
		public System.Nullable<int> PrimaryContact
		{
			get
			{
				return this._PrimaryContact;
			}
			set
			{
				if ((this._PrimaryContact != value))
				{
					this._PrimaryContact = value;
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(7)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_AccountStatus", DbType="VarChar(7)")]
		public string AccountStatus
		{
			get
			{
				return this._AccountStatus;
			}
			set
			{
				if ((this._AccountStatus != value))
				{
					this._AccountStatus = value;
				}
			}
		}
		
		[Column(Storage="_COD", DbType="Bit")]
		public System.Nullable<bool> COD
		{
			get
			{
				return this._COD;
			}
			set
			{
				if ((this._COD != value))
				{
					this._COD = value;
				}
			}
		}
		
		[Column(Storage="_Industrial", DbType="Bit")]
		public System.Nullable<bool> Industrial
		{
			get
			{
				return this._Industrial;
			}
			set
			{
				if ((this._Industrial != value))
				{
					this._Industrial = value;
				}
			}
		}
		
		[Column(Storage="_BO", DbType="Bit")]
		public System.Nullable<bool> BO
		{
			get
			{
				return this._BO;
			}
			set
			{
				if ((this._BO != value))
				{
					this._BO = value;
				}
			}
		}
		
		[Column(Storage="_FO", DbType="Bit")]
		public System.Nullable<bool> FO
		{
			get
			{
				return this._FO;
			}
			set
			{
				if ((this._FO != value))
				{
					this._FO = value;
				}
			}
		}
		
		[Column(Storage="_Group", DbType="VarChar(12)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this._Group = value;
				}
			}
		}
		
		[Column(Storage="_ByDepartment", DbType="Bit")]
		public System.Nullable<bool> ByDepartment
		{
			get
			{
				return this._ByDepartment;
			}
			set
			{
				if ((this._ByDepartment != value))
				{
					this._ByDepartment = value;
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[Column(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this._Address3 = value;
				}
			}
		}
		
		[Column(Storage="_Address4", DbType="VarChar(50)")]
		public string Address4
		{
			get
			{
				return this._Address4;
			}
			set
			{
				if ((this._Address4 != value))
				{
					this._Address4 = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(25)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_PostCode", DbType="VarChar(6)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this._PostCode = value;
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[Column(Storage="_PhoneAfterHrs", DbType="VarChar(20)")]
		public string PhoneAfterHrs
		{
			get
			{
				return this._PhoneAfterHrs;
			}
			set
			{
				if ((this._PhoneAfterHrs != value))
				{
					this._PhoneAfterHrs = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_WebSite", DbType="VarChar(40)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this._WebSite = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(70)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Courier", DbType="Int")]
		public System.Nullable<int> Courier
		{
			get
			{
				return this._Courier;
			}
			set
			{
				if ((this._Courier != value))
				{
					this._Courier = value;
				}
			}
		}
		
		[Column(Storage="_RepArea1", DbType="SmallInt")]
		public System.Nullable<short> RepArea1
		{
			get
			{
				return this._RepArea1;
			}
			set
			{
				if ((this._RepArea1 != value))
				{
					this._RepArea1 = value;
				}
			}
		}
		
		[Column(Storage="_RepArea2", DbType="SmallInt")]
		public System.Nullable<short> RepArea2
		{
			get
			{
				return this._RepArea2;
			}
			set
			{
				if ((this._RepArea2 != value))
				{
					this._RepArea2 = value;
				}
			}
		}
		
		[Column(Storage="_BankAcctName", DbType="VarChar(50)")]
		public string BankAcctName
		{
			get
			{
				return this._BankAcctName;
			}
			set
			{
				if ((this._BankAcctName != value))
				{
					this._BankAcctName = value;
				}
			}
		}
		
		[Column(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[Column(Storage="_BankSuburb", DbType="VarChar(25)")]
		public string BankSuburb
		{
			get
			{
				return this._BankSuburb;
			}
			set
			{
				if ((this._BankSuburb != value))
				{
					this._BankSuburb = value;
				}
			}
		}
		
		[Column(Storage="_BankBSB", DbType="VarChar(10)")]
		public string BankBSB
		{
			get
			{
				return this._BankBSB;
			}
			set
			{
				if ((this._BankBSB != value))
				{
					this._BankBSB = value;
				}
			}
		}
		
		[Column(Storage="_BankAcct", DbType="VarChar(12)")]
		public string BankAcct
		{
			get
			{
				return this._BankAcct;
			}
			set
			{
				if ((this._BankAcct != value))
				{
					this._BankAcct = value;
				}
			}
		}
		
		[Column(Storage="_CreditCardName", DbType="VarChar(30)")]
		public string CreditCardName
		{
			get
			{
				return this._CreditCardName;
			}
			set
			{
				if ((this._CreditCardName != value))
				{
					this._CreditCardName = value;
				}
			}
		}
		
		[Column(Storage="_CreditCardType", DbType="VarChar(20)")]
		public string CreditCardType
		{
			get
			{
				return this._CreditCardType;
			}
			set
			{
				if ((this._CreditCardType != value))
				{
					this._CreditCardType = value;
				}
			}
		}
		
		[Column(Storage="_CreditCardNo", DbType="VarChar(30)")]
		public string CreditCardNo
		{
			get
			{
				return this._CreditCardNo;
			}
			set
			{
				if ((this._CreditCardNo != value))
				{
					this._CreditCardNo = value;
				}
			}
		}
		
		[Column(Storage="_CreditCardExpire", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreditCardExpire
		{
			get
			{
				return this._CreditCardExpire;
			}
			set
			{
				if ((this._CreditCardExpire != value))
				{
					this._CreditCardExpire = value;
				}
			}
		}
		
		[Column(Storage="_SpecialPrice", DbType="TinyInt")]
		public System.Nullable<byte> SpecialPrice
		{
			get
			{
				return this._SpecialPrice;
			}
			set
			{
				if ((this._SpecialPrice != value))
				{
					this._SpecialPrice = value;
				}
			}
		}
		
		[Column(Storage="_SpecialDelivery", DbType="TinyInt")]
		public System.Nullable<byte> SpecialDelivery
		{
			get
			{
				return this._SpecialDelivery;
			}
			set
			{
				if ((this._SpecialDelivery != value))
				{
					this._SpecialDelivery = value;
				}
			}
		}
		
		[Column(Storage="_Urgent", DbType="TinyInt")]
		public System.Nullable<byte> Urgent
		{
			get
			{
				return this._Urgent;
			}
			set
			{
				if ((this._Urgent != value))
				{
					this._Urgent = value;
				}
			}
		}
		
		[Column(Storage="_Local", DbType="TinyInt")]
		public System.Nullable<byte> Local
		{
			get
			{
				return this._Local;
			}
			set
			{
				if ((this._Local != value))
				{
					this._Local = value;
				}
			}
		}
		
		[Column(Storage="_Discount1", DbType="SmallInt")]
		public System.Nullable<short> Discount1
		{
			get
			{
				return this._Discount1;
			}
			set
			{
				if ((this._Discount1 != value))
				{
					this._Discount1 = value;
				}
			}
		}
		
		[Column(Storage="_Discount2", DbType="SmallInt")]
		public System.Nullable<short> Discount2
		{
			get
			{
				return this._Discount2;
			}
			set
			{
				if ((this._Discount2 != value))
				{
					this._Discount2 = value;
				}
			}
		}
		
		[Column(Storage="_PriceLevel", DbType="TinyInt")]
		public System.Nullable<byte> PriceLevel
		{
			get
			{
				return this._PriceLevel;
			}
			set
			{
				if ((this._PriceLevel != value))
				{
					this._PriceLevel = value;
				}
			}
		}
		
		[Column(Storage="_AccountClass", DbType="VarChar(50)")]
		public string AccountClass
		{
			get
			{
				return this._AccountClass;
			}
			set
			{
				if ((this._AccountClass != value))
				{
					this._AccountClass = value;
				}
			}
		}
		
		[Column(Storage="_OpenBal", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this._OpenBal = value;
				}
			}
		}
		
		[Column(Storage="_Current", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Name="30Days", Storage="__30Days", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> _30Days
		{
			get
			{
				return this.@__30Days;
			}
			set
			{
				if ((this.@__30Days != value))
				{
					this.@__30Days = value;
				}
			}
		}
		
		[Column(Name="60Days", Storage="__60Days", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> _60Days
		{
			get
			{
				return this.@__60Days;
			}
			set
			{
				if ((this.@__60Days != value))
				{
					this.@__60Days = value;
				}
			}
		}
		
		[Column(Name="90Days", Storage="__90Days", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> _90Days
		{
			get
			{
				return this.@__90Days;
			}
			set
			{
				if ((this.@__90Days != value))
				{
					this.@__90Days = value;
				}
			}
		}
		
		[Column(Storage="_Terms", DbType="VarChar(196)")]
		public string Terms
		{
			get
			{
				return this._Terms;
			}
			set
			{
				if ((this._Terms != value))
				{
					this._Terms = value;
				}
			}
		}
		
		[Column(Storage="_NumDaysCredit", DbType="TinyInt")]
		public System.Nullable<byte> NumDaysCredit
		{
			get
			{
				return this._NumDaysCredit;
			}
			set
			{
				if ((this._NumDaysCredit != value))
				{
					this._NumDaysCredit = value;
				}
			}
		}
		
		[Column(Storage="_CreditLimit", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this._CreditLimit = value;
				}
			}
		}
		
		[Column(Storage="_LastInvNum", DbType="Int")]
		public System.Nullable<int> LastInvNum
		{
			get
			{
				return this._LastInvNum;
			}
			set
			{
				if ((this._LastInvNum != value))
				{
					this._LastInvNum = value;
				}
			}
		}
		
		[Column(Storage="_LastInvDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastInvDate
		{
			get
			{
				return this._LastInvDate;
			}
			set
			{
				if ((this._LastInvDate != value))
				{
					this._LastInvDate = value;
				}
			}
		}
		
		[Column(Storage="_LastInvAmt", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LastInvAmt
		{
			get
			{
				return this._LastInvAmt;
			}
			set
			{
				if ((this._LastInvAmt != value))
				{
					this._LastInvAmt = value;
				}
			}
		}
		
		[Column(Storage="_LastPayDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPayDate
		{
			get
			{
				return this._LastPayDate;
			}
			set
			{
				if ((this._LastPayDate != value))
				{
					this._LastPayDate = value;
				}
			}
		}
		
		[Column(Storage="_LastPayAmt", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LastPayAmt
		{
			get
			{
				return this._LastPayAmt;
			}
			set
			{
				if ((this._LastPayAmt != value))
				{
					this._LastPayAmt = value;
				}
			}
		}
		
		[Column(Storage="_LastPick", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPick
		{
			get
			{
				return this._LastPick;
			}
			set
			{
				if ((this._LastPick != value))
				{
					this._LastPick = value;
				}
			}
		}
		
		[Column(Storage="_StaxNum", DbType="VarChar(10)")]
		public string StaxNum
		{
			get
			{
				return this._StaxNum;
			}
			set
			{
				if ((this._StaxNum != value))
				{
					this._StaxNum = value;
				}
			}
		}
		
		[Column(Storage="_WebLogin", DbType="VarChar(20)")]
		public string WebLogin
		{
			get
			{
				return this._WebLogin;
			}
			set
			{
				if ((this._WebLogin != value))
				{
					this._WebLogin = value;
				}
			}
		}
		
		[Column(Storage="_WebPassword", DbType="VarChar(15)")]
		public string WebPassword
		{
			get
			{
				return this._WebPassword;
			}
			set
			{
				if ((this._WebPassword != value))
				{
					this._WebPassword = value;
				}
			}
		}
		
		[Column(Storage="_MTD", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MTD
		{
			get
			{
				return this._MTD;
			}
			set
			{
				if ((this._MTD != value))
				{
					this._MTD = value;
				}
			}
		}
		
		[Column(Storage="_YTD", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> YTD
		{
			get
			{
				return this._YTD;
			}
			set
			{
				if ((this._YTD != value))
				{
					this._YTD = value;
				}
			}
		}
		
		[Column(Storage="_LY", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LY
		{
			get
			{
				return this._LY;
			}
			set
			{
				if ((this._LY != value))
				{
					this._LY = value;
				}
			}
		}
		
		[Column(Storage="_JAN", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> JAN
		{
			get
			{
				return this._JAN;
			}
			set
			{
				if ((this._JAN != value))
				{
					this._JAN = value;
				}
			}
		}
		
		[Column(Storage="_FEB", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FEB
		{
			get
			{
				return this._FEB;
			}
			set
			{
				if ((this._FEB != value))
				{
					this._FEB = value;
				}
			}
		}
		
		[Column(Storage="_MAR", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MAR
		{
			get
			{
				return this._MAR;
			}
			set
			{
				if ((this._MAR != value))
				{
					this._MAR = value;
				}
			}
		}
		
		[Column(Storage="_APR", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> APR
		{
			get
			{
				return this._APR;
			}
			set
			{
				if ((this._APR != value))
				{
					this._APR = value;
				}
			}
		}
		
		[Column(Storage="_MAY", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MAY
		{
			get
			{
				return this._MAY;
			}
			set
			{
				if ((this._MAY != value))
				{
					this._MAY = value;
				}
			}
		}
		
		[Column(Storage="_JUN", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> JUN
		{
			get
			{
				return this._JUN;
			}
			set
			{
				if ((this._JUN != value))
				{
					this._JUN = value;
				}
			}
		}
		
		[Column(Storage="_JUL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> JUL
		{
			get
			{
				return this._JUL;
			}
			set
			{
				if ((this._JUL != value))
				{
					this._JUL = value;
				}
			}
		}
		
		[Column(Storage="_AUG", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AUG
		{
			get
			{
				return this._AUG;
			}
			set
			{
				if ((this._AUG != value))
				{
					this._AUG = value;
				}
			}
		}
		
		[Column(Storage="_SEP", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SEP
		{
			get
			{
				return this._SEP;
			}
			set
			{
				if ((this._SEP != value))
				{
					this._SEP = value;
				}
			}
		}
		
		[Column(Storage="_OCT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OCT
		{
			get
			{
				return this._OCT;
			}
			set
			{
				if ((this._OCT != value))
				{
					this._OCT = value;
				}
			}
		}
		
		[Column(Storage="_NOV", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NOV
		{
			get
			{
				return this._NOV;
			}
			set
			{
				if ((this._NOV != value))
				{
					this._NOV = value;
				}
			}
		}
		
		[Column(Storage="_DEC", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DEC
		{
			get
			{
				return this._DEC;
			}
			set
			{
				if ((this._DEC != value))
				{
					this._DEC = value;
				}
			}
		}
		
		[Column(Storage="_AbbrevName", DbType="VarChar(20)")]
		public string AbbrevName
		{
			get
			{
				return this._AbbrevName;
			}
			set
			{
				if ((this._AbbrevName != value))
				{
					this._AbbrevName = value;
				}
			}
		}
		
		[Column(Storage="_PrintInvoice", DbType="Bit")]
		public System.Nullable<bool> PrintInvoice
		{
			get
			{
				return this._PrintInvoice;
			}
			set
			{
				if ((this._PrintInvoice != value))
				{
					this._PrintInvoice = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceQty", DbType="Int")]
		public System.Nullable<int> InvoiceQty
		{
			get
			{
				return this._InvoiceQty;
			}
			set
			{
				if ((this._InvoiceQty != value))
				{
					this._InvoiceQty = value;
				}
			}
		}
		
		[Column(Storage="_PrintPackSlip", DbType="Bit")]
		public System.Nullable<bool> PrintPackSlip
		{
			get
			{
				return this._PrintPackSlip;
			}
			set
			{
				if ((this._PrintPackSlip != value))
				{
					this._PrintPackSlip = value;
				}
			}
		}
		
		[Column(Storage="_PackSlipQty", DbType="Int")]
		public System.Nullable<int> PackSlipQty
		{
			get
			{
				return this._PackSlipQty;
			}
			set
			{
				if ((this._PackSlipQty != value))
				{
					this._PackSlipQty = value;
				}
			}
		}
		
		[Column(Storage="_RRPType", DbType="TinyInt")]
		public System.Nullable<byte> RRPType
		{
			get
			{
				return this._RRPType;
			}
			set
			{
				if ((this._RRPType != value))
				{
					this._RRPType = value;
				}
			}
		}
		
		[Column(Storage="_RRPQty", DbType="Int")]
		public System.Nullable<int> RRPQty
		{
			get
			{
				return this._RRPQty;
			}
			set
			{
				if ((this._RRPQty != value))
				{
					this._RRPQty = value;
				}
			}
		}
		
		[Column(Storage="_RRPMarkup1", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> RRPMarkup1
		{
			get
			{
				return this._RRPMarkup1;
			}
			set
			{
				if ((this._RRPMarkup1 != value))
				{
					this._RRPMarkup1 = value;
				}
			}
		}
		
		[Column(Storage="_RRPMarkup2", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> RRPMarkup2
		{
			get
			{
				return this._RRPMarkup2;
			}
			set
			{
				if ((this._RRPMarkup2 != value))
				{
					this._RRPMarkup2 = value;
				}
			}
		}
		
		[Column(Storage="_International", DbType="Bit")]
		public System.Nullable<bool> International
		{
			get
			{
				return this._International;
			}
			set
			{
				if ((this._International != value))
				{
					this._International = value;
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(25)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[Column(Storage="_CurrencyType", DbType="VarChar(5)")]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this._CurrencyType = value;
				}
			}
		}
		
		[Column(Storage="_CIF", DbType="Bit")]
		public System.Nullable<bool> CIF
		{
			get
			{
				return this._CIF;
			}
			set
			{
				if ((this._CIF != value))
				{
					this._CIF = value;
				}
			}
		}
		
		[Column(Storage="_FIS", DbType="Bit")]
		public System.Nullable<bool> FIS
		{
			get
			{
				return this._FIS;
			}
			set
			{
				if ((this._FIS != value))
				{
					this._FIS = value;
				}
			}
		}
		
		[Column(Storage="_FOB", DbType="Bit")]
		public System.Nullable<bool> FOB
		{
			get
			{
				return this._FOB;
			}
			set
			{
				if ((this._FOB != value))
				{
					this._FOB = value;
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_SpecialReq", DbType="Text")]
		public string SpecialReq
		{
			get
			{
				return this._SpecialReq;
			}
			set
			{
				if ((this._SpecialReq != value))
				{
					this._SpecialReq = value;
				}
			}
		}
		
		[Column(Storage="_InvMsg", DbType="VarChar(120)")]
		public string InvMsg
		{
			get
			{
				return this._InvMsg;
			}
			set
			{
				if ((this._InvMsg != value))
				{
					this._InvMsg = value;
				}
			}
		}
		
		[Column(Storage="_SalesNotes", DbType="Text")]
		public string SalesNotes
		{
			get
			{
				return this._SalesNotes;
			}
			set
			{
				if ((this._SalesNotes != value))
				{
					this._SalesNotes = value;
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="Text")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
		
		[Column(Storage="_FwdVal", DbType="Money")]
		public System.Nullable<decimal> FwdVal
		{
			get
			{
				return this._FwdVal;
			}
			set
			{
				if ((this._FwdVal != value))
				{
					this._FwdVal = value;
				}
			}
		}
		
		[Column(Storage="_SDI", DbType="Bit")]
		public System.Nullable<bool> SDI
		{
			get
			{
				return this._SDI;
			}
			set
			{
				if ((this._SDI != value))
				{
					this._SDI = value;
				}
			}
		}
		
		[Column(Storage="_OpenItem", DbType="Bit")]
		public System.Nullable<bool> OpenItem
		{
			get
			{
				return this._OpenItem;
			}
			set
			{
				if ((this._OpenItem != value))
				{
					this._OpenItem = value;
				}
			}
		}
		
		[Column(Storage="_CurrentInv", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> CurrentInv
		{
			get
			{
				return this._CurrentInv;
			}
			set
			{
				if ((this._CurrentInv != value))
				{
					this._CurrentInv = value;
				}
			}
		}
		
		[Column(Storage="_CurrentRec", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> CurrentRec
		{
			get
			{
				return this._CurrentRec;
			}
			set
			{
				if ((this._CurrentRec != value))
				{
					this._CurrentRec = value;
				}
			}
		}
		
		[Column(Storage="_CurrentDisc", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> CurrentDisc
		{
			get
			{
				return this._CurrentDisc;
			}
			set
			{
				if ((this._CurrentDisc != value))
				{
					this._CurrentDisc = value;
				}
			}
		}
		
		[Column(Storage="_CurrentJnl", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> CurrentJnl
		{
			get
			{
				return this._CurrentJnl;
			}
			set
			{
				if ((this._CurrentJnl != value))
				{
					this._CurrentJnl = value;
				}
			}
		}
		
		[Column(Storage="_FlagMsg", DbType="VarChar(20)")]
		public string FlagMsg
		{
			get
			{
				return this._FlagMsg;
			}
			set
			{
				if ((this._FlagMsg != value))
				{
					this._FlagMsg = value;
				}
			}
		}
		
		[Column(Storage="_SalesRep", DbType="VarChar(25)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					this._SalesRep = value;
				}
			}
		}
		
		[Column(Storage="_SalesRep2", DbType="VarChar(25)")]
		public string SalesRep2
		{
			get
			{
				return this._SalesRep2;
			}
			set
			{
				if ((this._SalesRep2 != value))
				{
					this._SalesRep2 = value;
				}
			}
		}
		
		[Column(Storage="_StatementNotes", DbType="Text")]
		public string StatementNotes
		{
			get
			{
				return this._StatementNotes;
			}
			set
			{
				if ((this._StatementNotes != value))
				{
					this._StatementNotes = value;
				}
			}
		}
		
		[Column(Storage="_ABN", DbType="VarChar(15)")]
		public string ABN
		{
			get
			{
				return this._ABN;
			}
			set
			{
				if ((this._ABN != value))
				{
					this._ABN = value;
				}
			}
		}
		
		[Column(Storage="_OrdNumOK", DbType="Int")]
		public System.Nullable<int> OrdNumOK
		{
			get
			{
				return this._OrdNumOK;
			}
			set
			{
				if ((this._OrdNumOK != value))
				{
					this._OrdNumOK = value;
				}
			}
		}
		
		[Column(Storage="_ShipBy", DbType="VarChar(40)")]
		public string ShipBy
		{
			get
			{
				return this._ShipBy;
			}
			set
			{
				if ((this._ShipBy != value))
				{
					this._ShipBy = value;
				}
			}
		}
		
		[Column(Storage="_PrintLabel", DbType="Bit")]
		public System.Nullable<bool> PrintLabel
		{
			get
			{
				return this._PrintLabel;
			}
			set
			{
				if ((this._PrintLabel != value))
				{
					this._PrintLabel = value;
				}
			}
		}
		
		[Column(Storage="_GotCalls", DbType="Bit")]
		public System.Nullable<bool> GotCalls
		{
			get
			{
				return this._GotCalls;
			}
			set
			{
				if ((this._GotCalls != value))
				{
					this._GotCalls = value;
				}
			}
		}
		
		[Column(Storage="_NextCall", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextCall
		{
			get
			{
				return this._NextCall;
			}
			set
			{
				if ((this._NextCall != value))
				{
					this._NextCall = value;
				}
			}
		}
		
		[Column(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this._DateAdded = value;
				}
			}
		}
		
		[Column(Storage="_InActive", DbType="Bit")]
		public System.Nullable<bool> InActive
		{
			get
			{
				return this._InActive;
			}
			set
			{
				if ((this._InActive != value))
				{
					this._InActive = value;
				}
			}
		}
		
		[Column(Storage="_CreditHold", DbType="Bit")]
		public System.Nullable<bool> CreditHold
		{
			get
			{
				return this._CreditHold;
			}
			set
			{
				if ((this._CreditHold != value))
				{
					this._CreditHold = value;
				}
			}
		}
		
		[Column(Storage="_Selector", DbType="VarChar(5)")]
		public string Selector
		{
			get
			{
				return this._Selector;
			}
			set
			{
				if ((this._Selector != value))
				{
					this._Selector = value;
				}
			}
		}
		
		[Column(Storage="_FwdDateAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FwdDateAmount
		{
			get
			{
				return this._FwdDateAmount;
			}
			set
			{
				if ((this._FwdDateAmount != value))
				{
					this._FwdDateAmount = value;
				}
			}
		}
		
		[Column(Storage="_Rebate", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Rebate
		{
			get
			{
				return this._Rebate;
			}
			set
			{
				if ((this._Rebate != value))
				{
					this._Rebate = value;
				}
			}
		}
		
		[Column(Storage="_LY2", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LY2
		{
			get
			{
				return this._LY2;
			}
			set
			{
				if ((this._LY2 != value))
				{
					this._LY2 = value;
				}
			}
		}
		
		[Column(Storage="_PmFrequency", DbType="TinyInt")]
		public System.Nullable<byte> PmFrequency
		{
			get
			{
				return this._PmFrequency;
			}
			set
			{
				if ((this._PmFrequency != value))
				{
					this._PmFrequency = value;
				}
			}
		}
		
		[Column(Storage="_PmPeriod", DbType="TinyInt")]
		public System.Nullable<byte> PmPeriod
		{
			get
			{
				return this._PmPeriod;
			}
			set
			{
				if ((this._PmPeriod != value))
				{
					this._PmPeriod = value;
				}
			}
		}
		
		[Column(Storage="_PmLastVisit", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PmLastVisit
		{
			get
			{
				return this._PmLastVisit;
			}
			set
			{
				if ((this._PmLastVisit != value))
				{
					this._PmLastVisit = value;
				}
			}
		}
		
		[Column(Storage="_PMNextVisit", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PMNextVisit
		{
			get
			{
				return this._PMNextVisit;
			}
			set
			{
				if ((this._PMNextVisit != value))
				{
					this._PMNextVisit = value;
				}
			}
		}
		
		[Column(Storage="_OldParent", DbType="VarChar(12)")]
		public string OldParent
		{
			get
			{
				return this._OldParent;
			}
			set
			{
				if ((this._OldParent != value))
				{
					this._OldParent = value;
				}
			}
		}
		
		[Column(Storage="_DefaultInvStyle", DbType="TinyInt")]
		public System.Nullable<byte> DefaultInvStyle
		{
			get
			{
				return this._DefaultInvStyle;
			}
			set
			{
				if ((this._DefaultInvStyle != value))
				{
					this._DefaultInvStyle = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceFreq", DbType="TinyInt")]
		public System.Nullable<byte> InvoiceFreq
		{
			get
			{
				return this._InvoiceFreq;
			}
			set
			{
				if ((this._InvoiceFreq != value))
				{
					this._InvoiceFreq = value;
				}
			}
		}
		
		[Column(Storage="_SalesCtrlAccGL", DbType="VarChar(16)")]
		public string SalesCtrlAccGL
		{
			get
			{
				return this._SalesCtrlAccGL;
			}
			set
			{
				if ((this._SalesCtrlAccGL != value))
				{
					this._SalesCtrlAccGL = value;
				}
			}
		}
		
		[Column(Storage="_SalesAccGL", DbType="VarChar(16)")]
		public string SalesAccGL
		{
			get
			{
				return this._SalesAccGL;
			}
			set
			{
				if ((this._SalesAccGL != value))
				{
					this._SalesAccGL = value;
				}
			}
		}
		
		[Column(Storage="_LJAN", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LJAN
		{
			get
			{
				return this._LJAN;
			}
			set
			{
				if ((this._LJAN != value))
				{
					this._LJAN = value;
				}
			}
		}
		
		[Column(Storage="_LFEB", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LFEB
		{
			get
			{
				return this._LFEB;
			}
			set
			{
				if ((this._LFEB != value))
				{
					this._LFEB = value;
				}
			}
		}
		
		[Column(Storage="_LMAR", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LMAR
		{
			get
			{
				return this._LMAR;
			}
			set
			{
				if ((this._LMAR != value))
				{
					this._LMAR = value;
				}
			}
		}
		
		[Column(Storage="_LAPR", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LAPR
		{
			get
			{
				return this._LAPR;
			}
			set
			{
				if ((this._LAPR != value))
				{
					this._LAPR = value;
				}
			}
		}
		
		[Column(Storage="_LMAY", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LMAY
		{
			get
			{
				return this._LMAY;
			}
			set
			{
				if ((this._LMAY != value))
				{
					this._LMAY = value;
				}
			}
		}
		
		[Column(Storage="_LJUN", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LJUN
		{
			get
			{
				return this._LJUN;
			}
			set
			{
				if ((this._LJUN != value))
				{
					this._LJUN = value;
				}
			}
		}
		
		[Column(Storage="_LJUL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LJUL
		{
			get
			{
				return this._LJUL;
			}
			set
			{
				if ((this._LJUL != value))
				{
					this._LJUL = value;
				}
			}
		}
		
		[Column(Storage="_LAUG", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LAUG
		{
			get
			{
				return this._LAUG;
			}
			set
			{
				if ((this._LAUG != value))
				{
					this._LAUG = value;
				}
			}
		}
		
		[Column(Storage="_LSEP", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LSEP
		{
			get
			{
				return this._LSEP;
			}
			set
			{
				if ((this._LSEP != value))
				{
					this._LSEP = value;
				}
			}
		}
		
		[Column(Storage="_LOCT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LOCT
		{
			get
			{
				return this._LOCT;
			}
			set
			{
				if ((this._LOCT != value))
				{
					this._LOCT = value;
				}
			}
		}
		
		[Column(Storage="_LNOV", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LNOV
		{
			get
			{
				return this._LNOV;
			}
			set
			{
				if ((this._LNOV != value))
				{
					this._LNOV = value;
				}
			}
		}
		
		[Column(Storage="_LDEC", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LDEC
		{
			get
			{
				return this._LDEC;
			}
			set
			{
				if ((this._LDEC != value))
				{
					this._LDEC = value;
				}
			}
		}
		
		[Column(Storage="_NoCreditLimit", DbType="Bit")]
		public System.Nullable<bool> NoCreditLimit
		{
			get
			{
				return this._NoCreditLimit;
			}
			set
			{
				if ((this._NoCreditLimit != value))
				{
					this._NoCreditLimit = value;
				}
			}
		}
		
		[Column(Storage="_StockLocation", DbType="Int")]
		public System.Nullable<int> StockLocation
		{
			get
			{
				return this._StockLocation;
			}
			set
			{
				if ((this._StockLocation != value))
				{
					this._StockLocation = value;
				}
			}
		}
		
		[Column(Storage="_SiteEngineer", DbType="Char(25)")]
		public string SiteEngineer
		{
			get
			{
				return this._SiteEngineer;
			}
			set
			{
				if ((this._SiteEngineer != value))
				{
					this._SiteEngineer = value;
				}
			}
		}
		
		[Column(Storage="_LastCallBy", DbType="VarChar(25)")]
		public string LastCallBy
		{
			get
			{
				return this._LastCallBy;
			}
			set
			{
				if ((this._LastCallBy != value))
				{
					this._LastCallBy = value;
				}
			}
		}
		
		[Column(Storage="_TMInvAccGL", DbType="VarChar(16)")]
		public string TMInvAccGL
		{
			get
			{
				return this._TMInvAccGL;
			}
			set
			{
				if ((this._TMInvAccGL != value))
				{
					this._TMInvAccGL = value;
				}
			}
		}
		
		[Column(Storage="_OverpayBucket", DbType="Money")]
		public System.Nullable<decimal> OverpayBucket
		{
			get
			{
				return this._OverpayBucket;
			}
			set
			{
				if ((this._OverpayBucket != value))
				{
					this._OverpayBucket = value;
				}
			}
		}
		
		[Column(Storage="_InterCompany", DbType="Bit")]
		public System.Nullable<bool> InterCompany
		{
			get
			{
				return this._InterCompany;
			}
			set
			{
				if ((this._InterCompany != value))
				{
					this._InterCompany = value;
				}
			}
		}
		
		[Column(Storage="_Merged", DbType="Bit")]
		public System.Nullable<bool> Merged
		{
			get
			{
				return this._Merged;
			}
			set
			{
				if ((this._Merged != value))
				{
					this._Merged = value;
				}
			}
		}
		
		[Column(Storage="_PreMerged", DbType="Bit")]
		public System.Nullable<bool> PreMerged
		{
			get
			{
				return this._PreMerged;
			}
			set
			{
				if ((this._PreMerged != value))
				{
					this._PreMerged = value;
				}
			}
		}
		
		[Column(Storage="_ContractLocation", DbType="VarChar(5)")]
		public string ContractLocation
		{
			get
			{
				return this._ContractLocation;
			}
			set
			{
				if ((this._ContractLocation != value))
				{
					this._ContractLocation = value;
				}
			}
		}
		
		[Column(Storage="_IMRep", DbType="VarChar(25)")]
		public string IMRep
		{
			get
			{
				return this._IMRep;
			}
			set
			{
				if ((this._IMRep != value))
				{
					this._IMRep = value;
				}
			}
		}
		
		[Column(Storage="_IPRep", DbType="VarChar(25)")]
		public string IPRep
		{
			get
			{
				return this._IPRep;
			}
			set
			{
				if ((this._IPRep != value))
				{
					this._IPRep = value;
				}
			}
		}
		
		[Column(Storage="_RM1", DbType="VarChar(25)")]
		public string RM1
		{
			get
			{
				return this._RM1;
			}
			set
			{
				if ((this._RM1 != value))
				{
					this._RM1 = value;
				}
			}
		}
		
		[Column(Storage="_RM2", DbType="VarChar(25)")]
		public string RM2
		{
			get
			{
				return this._RM2;
			}
			set
			{
				if ((this._RM2 != value))
				{
					this._RM2 = value;
				}
			}
		}
		
		[Column(Storage="_SeparateBatchPrint", DbType="Int")]
		public System.Nullable<int> SeparateBatchPrint
		{
			get
			{
				return this._SeparateBatchPrint;
			}
			set
			{
				if ((this._SeparateBatchPrint != value))
				{
					this._SeparateBatchPrint = value;
				}
			}
		}
		
		[Column(Storage="_SoftInvoice", DbType="Bit")]
		public System.Nullable<bool> SoftInvoice
		{
			get
			{
				return this._SoftInvoice;
			}
			set
			{
				if ((this._SoftInvoice != value))
				{
					this._SoftInvoice = value;
				}
			}
		}
		
		[Column(Storage="_SoftInvoicePath", DbType="VarChar(100)")]
		public string SoftInvoicePath
		{
			get
			{
				return this._SoftInvoicePath;
			}
			set
			{
				if ((this._SoftInvoicePath != value))
				{
					this._SoftInvoicePath = value;
				}
			}
		}
		
		[Column(Storage="_ReportingGroupID", DbType="Int")]
		public System.Nullable<int> ReportingGroupID
		{
			get
			{
				return this._ReportingGroupID;
			}
			set
			{
				if ((this._ReportingGroupID != value))
				{
					this._ReportingGroupID = value;
				}
			}
		}
		
		[Column(Storage="_MixedInternational", DbType="Bit")]
		public System.Nullable<bool> MixedInternational
		{
			get
			{
				return this._MixedInternational;
			}
			set
			{
				if ((this._MixedInternational != value))
				{
					this._MixedInternational = value;
				}
			}
		}
		
		[Column(Storage="_PDFInvoice", DbType="Bit")]
		public System.Nullable<bool> PDFInvoice
		{
			get
			{
				return this._PDFInvoice;
			}
			set
			{
				if ((this._PDFInvoice != value))
				{
					this._PDFInvoice = value;
				}
			}
		}
		
		[Column(Storage="_PDFInvoiceEmail", DbType="VarChar(100)")]
		public string PDFInvoiceEmail
		{
			get
			{
				return this._PDFInvoiceEmail;
			}
			set
			{
				if ((this._PDFInvoiceEmail != value))
				{
					this._PDFInvoiceEmail = value;
				}
			}
		}
		
		[Column(Storage="_BSGTechnicalOwner", DbType="VarChar(25)")]
		public string BSGTechnicalOwner
		{
			get
			{
				return this._BSGTechnicalOwner;
			}
			set
			{
				if ((this._BSGTechnicalOwner != value))
				{
					this._BSGTechnicalOwner = value;
				}
			}
		}
		
		[Column(Storage="_SalesRepBSG", DbType="VarChar(25)")]
		public string SalesRepBSG
		{
			get
			{
				return this._SalesRepBSG;
			}
			set
			{
				if ((this._SalesRepBSG != value))
				{
					this._SalesRepBSG = value;
				}
			}
		}
		
		[Column(Storage="_BillingMethod", DbType="Int")]
		public System.Nullable<int> BillingMethod
		{
			get
			{
				return this._BillingMethod;
			}
			set
			{
				if ((this._BillingMethod != value))
				{
					this._BillingMethod = value;
				}
			}
		}
		
		[Column(Storage="_BillToLocation", DbType="Bit")]
		public System.Nullable<bool> BillToLocation
		{
			get
			{
				return this._BillToLocation;
			}
			set
			{
				if ((this._BillToLocation != value))
				{
					this._BillToLocation = value;
				}
			}
		}
		
		[Column(Storage="_PrintAlways", DbType="Bit")]
		public System.Nullable<bool> PrintAlways
		{
			get
			{
				return this._PrintAlways;
			}
			set
			{
				if ((this._PrintAlways != value))
				{
					this._PrintAlways = value;
				}
			}
		}
		
		[Column(Storage="_OriginalAccountDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OriginalAccountDate
		{
			get
			{
				return this._OriginalAccountDate;
			}
			set
			{
				if ((this._OriginalAccountDate != value))
				{
					this._OriginalAccountDate = value;
				}
			}
		}
		
		[Column(Storage="_PDFInvoiceToContacts", DbType="Bit")]
		public System.Nullable<bool> PDFInvoiceToContacts
		{
			get
			{
				return this._PDFInvoiceToContacts;
			}
			set
			{
				if ((this._PDFInvoiceToContacts != value))
				{
					this._PDFInvoiceToContacts = value;
				}
			}
		}
		
		[Column(Storage="_PrimaryFinanceContact", DbType="Int")]
		public System.Nullable<int> PrimaryFinanceContact
		{
			get
			{
				return this._PrimaryFinanceContact;
			}
			set
			{
				if ((this._PrimaryFinanceContact != value))
				{
					this._PrimaryFinanceContact = value;
				}
			}
		}
		
		[Column(Storage="_FinancePhone", DbType="VarChar(20)")]
		public string FinancePhone
		{
			get
			{
				return this._FinancePhone;
			}
			set
			{
				if ((this._FinancePhone != value))
				{
					this._FinancePhone = value;
				}
			}
		}
		
		[Column(Storage="_FinanceFax", DbType="VarChar(20)")]
		public string FinanceFax
		{
			get
			{
				return this._FinanceFax;
			}
			set
			{
				if ((this._FinanceFax != value))
				{
					this._FinanceFax = value;
				}
			}
		}
		
		[Column(Storage="_FinancePhoneAfterHrs", DbType="VarChar(20)")]
		public string FinancePhoneAfterHrs
		{
			get
			{
				return this._FinancePhoneAfterHrs;
			}
			set
			{
				if ((this._FinancePhoneAfterHrs != value))
				{
					this._FinancePhoneAfterHrs = value;
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Decimal(10,7)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Decimal(10,7)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[Column(Storage="_Issue", DbType="Bit")]
		public System.Nullable<bool> Issue
		{
			get
			{
				return this._Issue;
			}
			set
			{
				if ((this._Issue != value))
				{
					this._Issue = value;
				}
			}
		}
		
		[Column(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this._IssueDate = value;
				}
			}
		}
		
		[Column(Storage="_EngineerNotes", DbType="Text")]
		public string EngineerNotes
		{
			get
			{
				return this._EngineerNotes;
			}
			set
			{
				if ((this._EngineerNotes != value))
				{
					this._EngineerNotes = value;
				}
			}
		}
		
		[Column(Storage="_TechnicalAccountManager", DbType="VarChar(25)")]
		public string TechnicalAccountManager
		{
			get
			{
				return this._TechnicalAccountManager;
			}
			set
			{
				if ((this._TechnicalAccountManager != value))
				{
					this._TechnicalAccountManager = value;
				}
			}
		}
		
		[Column(Storage="_GLState", DbType="Int")]
		public System.Nullable<int> GLState
		{
			get
			{
				return this._GLState;
			}
			set
			{
				if ((this._GLState != value))
				{
					this._GLState = value;
				}
			}
		}
		
		[Column(Storage="_ExcludeFromCarbonTax", DbType="Bit")]
		public System.Nullable<bool> ExcludeFromCarbonTax
		{
			get
			{
				return this._ExcludeFromCarbonTax;
			}
			set
			{
				if ((this._ExcludeFromCarbonTax != value))
				{
					this._ExcludeFromCarbonTax = value;
				}
			}
		}
	}
	
	public partial class DebtorBalancesResult
	{
		
		private System.Nullable<decimal> _OpenBal;
		
		private System.Nullable<decimal> _CloseBal;
		
		private System.Nullable<decimal> _Current;
		
		private System.Nullable<decimal> _ThirtyDays;
		
		private System.Nullable<decimal> _SixtyDays;
		
		private System.Nullable<decimal> _NinetyDays;
		
		private System.Nullable<decimal> _SumDr;
		
		private System.Nullable<decimal> _SumCr;
		
		public DebtorBalancesResult()
		{
		}
		
		[Column(Storage="_OpenBal", DbType="Money")]
		public System.Nullable<decimal> OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this._OpenBal = value;
				}
			}
		}
		
		[Column(Storage="_CloseBal", DbType="Money")]
		public System.Nullable<decimal> CloseBal
		{
			get
			{
				return this._CloseBal;
			}
			set
			{
				if ((this._CloseBal != value))
				{
					this._CloseBal = value;
				}
			}
		}
		
		[Column(Storage="_Current", DbType="Money")]
		public System.Nullable<decimal> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Storage="_ThirtyDays", DbType="Money")]
		public System.Nullable<decimal> ThirtyDays
		{
			get
			{
				return this._ThirtyDays;
			}
			set
			{
				if ((this._ThirtyDays != value))
				{
					this._ThirtyDays = value;
				}
			}
		}
		
		[Column(Storage="_SixtyDays", DbType="Money")]
		public System.Nullable<decimal> SixtyDays
		{
			get
			{
				return this._SixtyDays;
			}
			set
			{
				if ((this._SixtyDays != value))
				{
					this._SixtyDays = value;
				}
			}
		}
		
		[Column(Storage="_NinetyDays", DbType="Money")]
		public System.Nullable<decimal> NinetyDays
		{
			get
			{
				return this._NinetyDays;
			}
			set
			{
				if ((this._NinetyDays != value))
				{
					this._NinetyDays = value;
				}
			}
		}
		
		[Column(Storage="_SumDr", DbType="Money")]
		public System.Nullable<decimal> SumDr
		{
			get
			{
				return this._SumDr;
			}
			set
			{
				if ((this._SumDr != value))
				{
					this._SumDr = value;
				}
			}
		}
		
		[Column(Storage="_SumCr", DbType="Money")]
		public System.Nullable<decimal> SumCr
		{
			get
			{
				return this._SumCr;
			}
			set
			{
				if ((this._SumCr != value))
				{
					this._SumCr = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_3P_AGREEMENTS_CheckForDuplicateSarIDsResult1
	{
		
		private System.Nullable<int> _AccountId;
		
		public DEBTORS_3P_AGREEMENTS_CheckForDuplicateSarIDsResult1()
		{
		}
		
		[Column(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_3P_AGREEMENTS_CheckForDuplicateSarIDsResult2
	{
		
		private System.Nullable<int> _AccountID;
		
		public DEBTORS_3P_AGREEMENTS_CheckForDuplicateSarIDsResult2()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
	}
	
	public partial class Debtors_CurrentPeriodResult
	{
		
		private System.Nullable<short> _Year;
		
		private System.Nullable<byte> _Month;
		
		private string _Heading;
		
		public Debtors_CurrentPeriodResult()
		{
		}
		
		[Column(Storage="_Year", DbType="SmallInt")]
		public System.Nullable<short> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt")]
		public System.Nullable<byte> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[Column(Storage="_Heading", DbType="VarChar(16)")]
		public string Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this._Heading = value;
				}
			}
		}
	}
	
	public partial class Debtors_GetNewResult
	{
		
		private System.Nullable<int> _AccountID;
		
		public Debtors_GetNewResult()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueCreditsResult
	{
		
		private System.Nullable<int> _OrderNumber;
		
		private System.Nullable<System.DateTime> _InvoicePrinted;
		
		private System.Nullable<int> _AccountID;
		
		private string _CompanyName;
		
		private string _InvoiceType;
		
		private System.Nullable<decimal> _InvoiceTotal;
		
		private System.Nullable<decimal> _Tax;
		
		private System.Nullable<decimal> _Net;
		
		private System.Nullable<int> _InvoiceNumber;
		
		private string _CreditedInvoiceType;
		
		private string _RevenueCategory;
		
		private System.Nullable<decimal> _PastNet;
		
		private System.Nullable<decimal> _CurrentNet;
		
		private System.Nullable<decimal> _FutureNet;
		
		private System.Nullable<decimal> _Total;
		
		public DEBTORS_StatRevenueCreditsResult()
		{
		}
		
		[Column(Name="Order Number", Storage="_OrderNumber", DbType="Int")]
		public System.Nullable<int> OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this._OrderNumber = value;
				}
			}
		}
		
		[Column(Name="invoice Printed", Storage="_InvoicePrinted", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InvoicePrinted
		{
			get
			{
				return this._InvoicePrinted;
			}
			set
			{
				if ((this._InvoicePrinted != value))
				{
					this._InvoicePrinted = value;
				}
			}
		}
		
		[Column(Name="Account ID", Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Name="Company Name", Storage="_CompanyName", DbType="VarChar(80)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[Column(Name="Invoice Type", Storage="_InvoiceType", DbType="VarChar(11)")]
		public string InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[Column(Name="Invoice Total", Storage="_InvoiceTotal", DbType="Money")]
		public System.Nullable<decimal> InvoiceTotal
		{
			get
			{
				return this._InvoiceTotal;
			}
			set
			{
				if ((this._InvoiceTotal != value))
				{
					this._InvoiceTotal = value;
				}
			}
		}
		
		[Column(Storage="_Tax", DbType="Money")]
		public System.Nullable<decimal> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this._Tax = value;
				}
			}
		}
		
		[Column(Storage="_Net", DbType="Money")]
		public System.Nullable<decimal> Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this._Net = value;
				}
			}
		}
		
		[Column(Name="Invoice Number", Storage="_InvoiceNumber", DbType="Int")]
		public System.Nullable<int> InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[Column(Name="Credited Invoice Type", Storage="_CreditedInvoiceType", DbType="VarChar(11)")]
		public string CreditedInvoiceType
		{
			get
			{
				return this._CreditedInvoiceType;
			}
			set
			{
				if ((this._CreditedInvoiceType != value))
				{
					this._CreditedInvoiceType = value;
				}
			}
		}
		
		[Column(Name="Revenue Category", Storage="_RevenueCategory", DbType="VarChar(32)")]
		public string RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this._RevenueCategory = value;
				}
			}
		}
		
		[Column(Name="Past Net", Storage="_PastNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> PastNet
		{
			get
			{
				return this._PastNet;
			}
			set
			{
				if ((this._PastNet != value))
				{
					this._PastNet = value;
				}
			}
		}
		
		[Column(Name="Current Net", Storage="_CurrentNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> CurrentNet
		{
			get
			{
				return this._CurrentNet;
			}
			set
			{
				if ((this._CurrentNet != value))
				{
					this._CurrentNet = value;
				}
			}
		}
		
		[Column(Name="Future Net", Storage="_FutureNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> FutureNet
		{
			get
			{
				return this._FutureNet;
			}
			set
			{
				if ((this._FutureNet != value))
				{
					this._FutureNet = value;
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueCredits_InvoiceLevelResult
	{
		
		private System.Nullable<int> _InvoiceNumber;
		
		private System.Nullable<System.DateTime> _InvoicePrinted;
		
		private System.Nullable<int> _AccountID;
		
		private string _CompanyName;
		
		private string _InvoiceType;
		
		private System.Nullable<decimal> _PastNet;
		
		private System.Nullable<decimal> _CurrentNet;
		
		private System.Nullable<decimal> _FutureNet;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<int> _CreditNoteNumber;
		
		private System.Nullable<decimal> _CRPastNet;
		
		private System.Nullable<decimal> _CRCurrentNet;
		
		private System.Nullable<decimal> _CRFutureNet;
		
		private System.Nullable<decimal> _CRTotal;
		
		public DEBTORS_StatRevenueCredits_InvoiceLevelResult()
		{
		}
		
		[Column(Name="Invoice Number", Storage="_InvoiceNumber", DbType="Int")]
		public System.Nullable<int> InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[Column(Name="Invoice Printed", Storage="_InvoicePrinted", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InvoicePrinted
		{
			get
			{
				return this._InvoicePrinted;
			}
			set
			{
				if ((this._InvoicePrinted != value))
				{
					this._InvoicePrinted = value;
				}
			}
		}
		
		[Column(Name="Account ID", Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Name="Company Name", Storage="_CompanyName", DbType="VarChar(80)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[Column(Name="Invoice Type", Storage="_InvoiceType", DbType="VarChar(11)")]
		public string InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[Column(Name="Past Net", Storage="_PastNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> PastNet
		{
			get
			{
				return this._PastNet;
			}
			set
			{
				if ((this._PastNet != value))
				{
					this._PastNet = value;
				}
			}
		}
		
		[Column(Name="Current Net", Storage="_CurrentNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> CurrentNet
		{
			get
			{
				return this._CurrentNet;
			}
			set
			{
				if ((this._CurrentNet != value))
				{
					this._CurrentNet = value;
				}
			}
		}
		
		[Column(Name="Future Net", Storage="_FutureNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> FutureNet
		{
			get
			{
				return this._FutureNet;
			}
			set
			{
				if ((this._FutureNet != value))
				{
					this._FutureNet = value;
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[Column(Name="Credit Note Number", Storage="_CreditNoteNumber", DbType="Int")]
		public System.Nullable<int> CreditNoteNumber
		{
			get
			{
				return this._CreditNoteNumber;
			}
			set
			{
				if ((this._CreditNoteNumber != value))
				{
					this._CreditNoteNumber = value;
				}
			}
		}
		
		[Column(Name="CR Past Net", Storage="_CRPastNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> CRPastNet
		{
			get
			{
				return this._CRPastNet;
			}
			set
			{
				if ((this._CRPastNet != value))
				{
					this._CRPastNet = value;
				}
			}
		}
		
		[Column(Name="CR Current Net", Storage="_CRCurrentNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> CRCurrentNet
		{
			get
			{
				return this._CRCurrentNet;
			}
			set
			{
				if ((this._CRCurrentNet != value))
				{
					this._CRCurrentNet = value;
				}
			}
		}
		
		[Column(Name="CR Future Net", Storage="_CRFutureNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> CRFutureNet
		{
			get
			{
				return this._CRFutureNet;
			}
			set
			{
				if ((this._CRFutureNet != value))
				{
					this._CRFutureNet = value;
				}
			}
		}
		
		[Column(Name="CR Total", Storage="_CRTotal", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> CRTotal
		{
			get
			{
				return this._CRTotal;
			}
			set
			{
				if ((this._CRTotal != value))
				{
					this._CRTotal = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueCreditsManualResult
	{
		
		private System.Nullable<int> _OrderNumber;
		
		private System.Nullable<System.DateTime> _InvPrinted;
		
		private System.Nullable<int> _AccountID;
		
		private string _CompanyName;
		
		private string _InvoiceType;
		
		private System.Nullable<decimal> _InvoiceTotal;
		
		private System.Nullable<decimal> _Tax;
		
		private System.Nullable<decimal> _Net;
		
		private System.Nullable<int> _CreditedInvoiceNumber;
		
		private string _CreditedInvoiceType;
		
		private System.Nullable<int> _ItemNumber;
		
		private string _Column12;
		
		private System.Nullable<decimal> _ItemAmount;
		
		public DEBTORS_StatRevenueCreditsManualResult()
		{
		}
		
		[Column(Name="Order Number", Storage="_OrderNumber", DbType="Int")]
		public System.Nullable<int> OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this._OrderNumber = value;
				}
			}
		}
		
		[Column(Storage="_InvPrinted", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InvPrinted
		{
			get
			{
				return this._InvPrinted;
			}
			set
			{
				if ((this._InvPrinted != value))
				{
					this._InvPrinted = value;
				}
			}
		}
		
		[Column(Name="Account ID", Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Name="Company Name", Storage="_CompanyName", DbType="VarChar(80)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[Column(Name="Invoice Type", Storage="_InvoiceType", DbType="VarChar(11)")]
		public string InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[Column(Name="Invoice Total", Storage="_InvoiceTotal", DbType="Money")]
		public System.Nullable<decimal> InvoiceTotal
		{
			get
			{
				return this._InvoiceTotal;
			}
			set
			{
				if ((this._InvoiceTotal != value))
				{
					this._InvoiceTotal = value;
				}
			}
		}
		
		[Column(Storage="_Tax", DbType="Money")]
		public System.Nullable<decimal> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this._Tax = value;
				}
			}
		}
		
		[Column(Storage="_Net", DbType="Money")]
		public System.Nullable<decimal> Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this._Net = value;
				}
			}
		}
		
		[Column(Name="Credited Invoice Number", Storage="_CreditedInvoiceNumber", DbType="Int")]
		public System.Nullable<int> CreditedInvoiceNumber
		{
			get
			{
				return this._CreditedInvoiceNumber;
			}
			set
			{
				if ((this._CreditedInvoiceNumber != value))
				{
					this._CreditedInvoiceNumber = value;
				}
			}
		}
		
		[Column(Name="Credited Invoice Type", Storage="_CreditedInvoiceType", DbType="VarChar(11)")]
		public string CreditedInvoiceType
		{
			get
			{
				return this._CreditedInvoiceType;
			}
			set
			{
				if ((this._CreditedInvoiceType != value))
				{
					this._CreditedInvoiceType = value;
				}
			}
		}
		
		[Column(Name="Item Number", Storage="_ItemNumber", DbType="Int")]
		public System.Nullable<int> ItemNumber
		{
			get
			{
				return this._ItemNumber;
			}
			set
			{
				if ((this._ItemNumber != value))
				{
					this._ItemNumber = value;
				}
			}
		}
		
		[Column(Name="", Storage="_Column12", DbType="VarChar(8000)")]
		public string Column12
		{
			get
			{
				return this._Column12;
			}
			set
			{
				if ((this._Column12 != value))
				{
					this._Column12 = value;
				}
			}
		}
		
		[Column(Name="Item Amount", Storage="_ItemAmount", DbType="Decimal(29,6)")]
		public System.Nullable<decimal> ItemAmount
		{
			get
			{
				return this._ItemAmount;
			}
			set
			{
				if ((this._ItemAmount != value))
				{
					this._ItemAmount = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueInvoicesResult
	{
		
		private System.Nullable<int> _InvoiceNumber;
		
		private System.Nullable<System.DateTime> _InvoicePrinted;
		
		private System.Nullable<int> _AccountID;
		
		private string _CompanyName;
		
		private string _InvoiceType;
		
		private System.Nullable<decimal> _InvoiceTotal;
		
		private System.Nullable<decimal> _Tax;
		
		private System.Nullable<decimal> _Net;
		
		private string _RevenueCategory;
		
		private System.Nullable<decimal> _PastNet;
		
		private System.Nullable<decimal> _CurrentNet;
		
		private System.Nullable<decimal> _FutureNet;
		
		private System.Nullable<decimal> _Total;
		
		public DEBTORS_StatRevenueInvoicesResult()
		{
		}
		
		[Column(Name="Invoice Number", Storage="_InvoiceNumber", DbType="Int")]
		public System.Nullable<int> InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[Column(Name="Invoice Printed", Storage="_InvoicePrinted", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InvoicePrinted
		{
			get
			{
				return this._InvoicePrinted;
			}
			set
			{
				if ((this._InvoicePrinted != value))
				{
					this._InvoicePrinted = value;
				}
			}
		}
		
		[Column(Name="Account ID", Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Name="Company Name", Storage="_CompanyName", DbType="VarChar(80)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[Column(Name="Invoice Type", Storage="_InvoiceType", DbType="VarChar(11)")]
		public string InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[Column(Name="Invoice Total", Storage="_InvoiceTotal", DbType="Money")]
		public System.Nullable<decimal> InvoiceTotal
		{
			get
			{
				return this._InvoiceTotal;
			}
			set
			{
				if ((this._InvoiceTotal != value))
				{
					this._InvoiceTotal = value;
				}
			}
		}
		
		[Column(Storage="_Tax", DbType="Money")]
		public System.Nullable<decimal> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this._Tax = value;
				}
			}
		}
		
		[Column(Storage="_Net", DbType="Money")]
		public System.Nullable<decimal> Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this._Net = value;
				}
			}
		}
		
		[Column(Name="Revenue Category", Storage="_RevenueCategory", DbType="VarChar(32)")]
		public string RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this._RevenueCategory = value;
				}
			}
		}
		
		[Column(Name="Past Net", Storage="_PastNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> PastNet
		{
			get
			{
				return this._PastNet;
			}
			set
			{
				if ((this._PastNet != value))
				{
					this._PastNet = value;
				}
			}
		}
		
		[Column(Name="Current Net", Storage="_CurrentNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> CurrentNet
		{
			get
			{
				return this._CurrentNet;
			}
			set
			{
				if ((this._CurrentNet != value))
				{
					this._CurrentNet = value;
				}
			}
		}
		
		[Column(Name="Future Net", Storage="_FutureNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> FutureNet
		{
			get
			{
				return this._FutureNet;
			}
			set
			{
				if ((this._FutureNet != value))
				{
					this._FutureNet = value;
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueInvoices_InvoiceLevelResult
	{
		
		private System.Nullable<int> _InvoiceNumber;
		
		private System.Nullable<System.DateTime> _InvoicePrinted;
		
		private System.Nullable<int> _AccountID;
		
		private string _CompanyName;
		
		private string _InvoiceType;
		
		private System.Nullable<decimal> _PastNet;
		
		private System.Nullable<decimal> _CurrentNet;
		
		private System.Nullable<decimal> _FutureNet;
		
		private System.Nullable<decimal> _Total;
		
		public DEBTORS_StatRevenueInvoices_InvoiceLevelResult()
		{
		}
		
		[Column(Name="Invoice Number", Storage="_InvoiceNumber", DbType="Int")]
		public System.Nullable<int> InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[Column(Name="Invoice Printed", Storage="_InvoicePrinted", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InvoicePrinted
		{
			get
			{
				return this._InvoicePrinted;
			}
			set
			{
				if ((this._InvoicePrinted != value))
				{
					this._InvoicePrinted = value;
				}
			}
		}
		
		[Column(Name="Account ID", Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Name="Company Name", Storage="_CompanyName", DbType="VarChar(80)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[Column(Name="Invoice Type", Storage="_InvoiceType", DbType="VarChar(11)")]
		public string InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[Column(Name="Past Net", Storage="_PastNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> PastNet
		{
			get
			{
				return this._PastNet;
			}
			set
			{
				if ((this._PastNet != value))
				{
					this._PastNet = value;
				}
			}
		}
		
		[Column(Name="Current Net", Storage="_CurrentNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> CurrentNet
		{
			get
			{
				return this._CurrentNet;
			}
			set
			{
				if ((this._CurrentNet != value))
				{
					this._CurrentNet = value;
				}
			}
		}
		
		[Column(Name="Future Net", Storage="_FutureNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> FutureNet
		{
			get
			{
				return this._FutureNet;
			}
			set
			{
				if ((this._FutureNet != value))
				{
					this._FutureNet = value;
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueInvoicesManualResult
	{
		
		private System.Nullable<int> _OrderNumber;
		
		private System.Nullable<System.DateTime> _InvoicePrinted;
		
		private System.Nullable<int> _AccountID;
		
		private string _CompanyName;
		
		private string _InvoiceType;
		
		private System.Nullable<decimal> _InvoiceTotal;
		
		private System.Nullable<decimal> _Tax;
		
		private System.Nullable<decimal> _Net;
		
		private System.Nullable<int> _ItemNumber;
		
		private string _Column10;
		
		private System.Nullable<decimal> _ItemAmount;
		
		public DEBTORS_StatRevenueInvoicesManualResult()
		{
		}
		
		[Column(Name="Order Number", Storage="_OrderNumber", DbType="Int")]
		public System.Nullable<int> OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this._OrderNumber = value;
				}
			}
		}
		
		[Column(Name="Invoice Printed", Storage="_InvoicePrinted", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InvoicePrinted
		{
			get
			{
				return this._InvoicePrinted;
			}
			set
			{
				if ((this._InvoicePrinted != value))
				{
					this._InvoicePrinted = value;
				}
			}
		}
		
		[Column(Name="Account ID", Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Name="Company Name", Storage="_CompanyName", DbType="VarChar(80)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[Column(Name="Invoice Type", Storage="_InvoiceType", DbType="VarChar(11)")]
		public string InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[Column(Name="Invoice Total", Storage="_InvoiceTotal", DbType="Money")]
		public System.Nullable<decimal> InvoiceTotal
		{
			get
			{
				return this._InvoiceTotal;
			}
			set
			{
				if ((this._InvoiceTotal != value))
				{
					this._InvoiceTotal = value;
				}
			}
		}
		
		[Column(Storage="_Tax", DbType="Money")]
		public System.Nullable<decimal> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this._Tax = value;
				}
			}
		}
		
		[Column(Storage="_Net", DbType="Money")]
		public System.Nullable<decimal> Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this._Net = value;
				}
			}
		}
		
		[Column(Name="Item Number", Storage="_ItemNumber", DbType="Int")]
		public System.Nullable<int> ItemNumber
		{
			get
			{
				return this._ItemNumber;
			}
			set
			{
				if ((this._ItemNumber != value))
				{
					this._ItemNumber = value;
				}
			}
		}
		
		[Column(Name="", Storage="_Column10", DbType="VarChar(8000)")]
		public string Column10
		{
			get
			{
				return this._Column10;
			}
			set
			{
				if ((this._Column10 != value))
				{
					this._Column10 = value;
				}
			}
		}
		
		[Column(Name="Item Amount", Storage="_ItemAmount", DbType="Decimal(29,6)")]
		public System.Nullable<decimal> ItemAmount
		{
			get
			{
				return this._ItemAmount;
			}
			set
			{
				if ((this._ItemAmount != value))
				{
					this._ItemAmount = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueInvoicesManual_InvoiceLevelResult
	{
		
		private System.Nullable<int> _InvoiceNumber;
		
		private System.Nullable<System.DateTime> _InvoicePrinted;
		
		private System.Nullable<int> _AccountID;
		
		private string _CompanyName;
		
		private string _InvoiceType;
		
		private System.Nullable<decimal> _CurrentNet;
		
		private System.Nullable<decimal> _Total;
		
		public DEBTORS_StatRevenueInvoicesManual_InvoiceLevelResult()
		{
		}
		
		[Column(Name="Invoice Number", Storage="_InvoiceNumber", DbType="Int")]
		public System.Nullable<int> InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[Column(Name="Invoice Printed", Storage="_InvoicePrinted", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InvoicePrinted
		{
			get
			{
				return this._InvoicePrinted;
			}
			set
			{
				if ((this._InvoicePrinted != value))
				{
					this._InvoicePrinted = value;
				}
			}
		}
		
		[Column(Name="Account ID", Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Name="Company Name", Storage="_CompanyName", DbType="VarChar(80)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[Column(Name="Invoice Type", Storage="_InvoiceType", DbType="VarChar(11)")]
		public string InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[Column(Name="Current Net", Storage="_CurrentNet", DbType="Money")]
		public System.Nullable<decimal> CurrentNet
		{
			get
			{
				return this._CurrentNet;
			}
			set
			{
				if ((this._CurrentNet != value))
				{
					this._CurrentNet = value;
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Money")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueSummaryAdvanceResult
	{
		
		private System.Nullable<decimal> _TotalNet;
		
		private System.Nullable<int> _PastNet;
		
		public DEBTORS_StatRevenueSummaryAdvanceResult()
		{
		}
		
		[Column(Storage="_TotalNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> TotalNet
		{
			get
			{
				return this._TotalNet;
			}
			set
			{
				if ((this._TotalNet != value))
				{
					this._TotalNet = value;
				}
			}
		}
		
		[Column(Storage="_PastNet", DbType="Int")]
		public System.Nullable<int> PastNet
		{
			get
			{
				return this._PastNet;
			}
			set
			{
				if ((this._PastNet != value))
				{
					this._PastNet = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueSummaryAdvanceCreditsResult
	{
		
		private System.Nullable<decimal> _TotalNet;
		
		private System.Nullable<int> _PastNet;
		
		public DEBTORS_StatRevenueSummaryAdvanceCreditsResult()
		{
		}
		
		[Column(Storage="_TotalNet", DbType="Decimal(38,10)")]
		public System.Nullable<decimal> TotalNet
		{
			get
			{
				return this._TotalNet;
			}
			set
			{
				if ((this._TotalNet != value))
				{
					this._TotalNet = value;
				}
			}
		}
		
		[Column(Storage="_PastNet", DbType="Int")]
		public System.Nullable<int> PastNet
		{
			get
			{
				return this._PastNet;
			}
			set
			{
				if ((this._PastNet != value))
				{
					this._PastNet = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueSummaryCreditsManualResult
	{
		
		private System.Nullable<decimal> _TotalNet;
		
		public DEBTORS_StatRevenueSummaryCreditsManualResult()
		{
		}
		
		[Column(Storage="_TotalNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> TotalNet
		{
			get
			{
				return this._TotalNet;
			}
			set
			{
				if ((this._TotalNet != value))
				{
					this._TotalNet = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueSummaryCurrentResult
	{
		
		private System.Nullable<decimal> _TotalNet;
		
		public DEBTORS_StatRevenueSummaryCurrentResult()
		{
		}
		
		[Column(Storage="_TotalNet", DbType="Money")]
		public System.Nullable<decimal> TotalNet
		{
			get
			{
				return this._TotalNet;
			}
			set
			{
				if ((this._TotalNet != value))
				{
					this._TotalNet = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueSummaryCurrentCreditsResult
	{
		
		private System.Nullable<decimal> _TotalNet;
		
		public DEBTORS_StatRevenueSummaryCurrentCreditsResult()
		{
		}
		
		[Column(Storage="_TotalNet", DbType="Money")]
		public System.Nullable<decimal> TotalNet
		{
			get
			{
				return this._TotalNet;
			}
			set
			{
				if ((this._TotalNet != value))
				{
					this._TotalNet = value;
				}
			}
		}
	}
	
	public partial class DEBTORS_StatRevenueSummaryInvoicesManualResult
	{
		
		private System.Nullable<decimal> _TotalNet;
		
		public DEBTORS_StatRevenueSummaryInvoicesManualResult()
		{
		}
		
		[Column(Storage="_TotalNet", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> TotalNet
		{
			get
			{
				return this._TotalNet;
			}
			set
			{
				if ((this._TotalNet != value))
				{
					this._TotalNet = value;
				}
			}
		}
	}
	
	public partial class DebtorsSnapshotPeriodsResult
	{
		
		private string _Date;
		
		private string _Period;
		
		public DebtorsSnapshotPeriodsResult()
		{
		}
		
		[Column(Storage="_Date", DbType="VarChar(7)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Period", DbType="VarChar(14)")]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
	}
	
	public partial class DebtorStatementResult1
	{
		
		private System.Nullable<decimal> _TotalInv;
		
		public DebtorStatementResult1()
		{
		}
		
		[Column(Storage="_TotalInv", DbType="Money")]
		public System.Nullable<decimal> TotalInv
		{
			get
			{
				return this._TotalInv;
			}
			set
			{
				if ((this._TotalInv != value))
				{
					this._TotalInv = value;
				}
			}
		}
	}
	
	public partial class DebtorStatementResult2
	{
		
		private System.Nullable<decimal> _TotalReceipt;
		
		private System.Nullable<decimal> _TotalDiscount;
		
		public DebtorStatementResult2()
		{
		}
		
		[Column(Storage="_TotalReceipt", DbType="Money")]
		public System.Nullable<decimal> TotalReceipt
		{
			get
			{
				return this._TotalReceipt;
			}
			set
			{
				if ((this._TotalReceipt != value))
				{
					this._TotalReceipt = value;
				}
			}
		}
		
		[Column(Storage="_TotalDiscount", DbType="Money")]
		public System.Nullable<decimal> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this._TotalDiscount = value;
				}
			}
		}
	}
	
	public partial class DebtorStatsResult
	{
		
		private string _AccountID;
		
		private System.Nullable<int> _DN;
		
		private string _MonthEnding;
		
		private string _Company;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Address4;
		
		private string _City;
		
		private string _State;
		
		private string _PostCode;
		
		private System.Nullable<byte> _TransType;
		
		private System.Nullable<int> _TransID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Particulars;
		
		private System.Nullable<decimal> _DR;
		
		private System.Nullable<decimal> _CR;
		
		private System.Nullable<decimal> _OpenBal;
		
		private System.Nullable<decimal> _CloseBal;
		
		private System.Nullable<decimal> _OpenCurrent;
		
		private System.Nullable<decimal> _Open30Days;
		
		private System.Nullable<decimal> _Open60Days;
		
		private System.Nullable<decimal> _Open90Days;
		
		public DebtorStatsResult()
		{
		}
		
		[Column(Storage="_AccountID", DbType="VarChar(5)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_DN", DbType="Int")]
		public System.Nullable<int> DN
		{
			get
			{
				return this._DN;
			}
			set
			{
				if ((this._DN != value))
				{
					this._DN = value;
				}
			}
		}
		
		[Column(Storage="_MonthEnding", DbType="VarChar(24)")]
		public string MonthEnding
		{
			get
			{
				return this._MonthEnding;
			}
			set
			{
				if ((this._MonthEnding != value))
				{
					this._MonthEnding = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[Column(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this._Address3 = value;
				}
			}
		}
		
		[Column(Storage="_Address4", DbType="VarChar(50)")]
		public string Address4
		{
			get
			{
				return this._Address4;
			}
			set
			{
				if ((this._Address4 != value))
				{
					this._Address4 = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(25)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_PostCode", DbType="VarChar(6)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this._PostCode = value;
				}
			}
		}
		
		[Column(Storage="_TransType", DbType="TinyInt")]
		public System.Nullable<byte> TransType
		{
			get
			{
				return this._TransType;
			}
			set
			{
				if ((this._TransType != value))
				{
					this._TransType = value;
				}
			}
		}
		
		[Column(Storage="_TransID", DbType="Int")]
		public System.Nullable<int> TransID
		{
			get
			{
				return this._TransID;
			}
			set
			{
				if ((this._TransID != value))
				{
					this._TransID = value;
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Particulars", DbType="VarChar(32)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this._Particulars = value;
				}
			}
		}
		
		[Column(Storage="_DR", DbType="Money")]
		public System.Nullable<decimal> DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this._DR = value;
				}
			}
		}
		
		[Column(Storage="_CR", DbType="Money")]
		public System.Nullable<decimal> CR
		{
			get
			{
				return this._CR;
			}
			set
			{
				if ((this._CR != value))
				{
					this._CR = value;
				}
			}
		}
		
		[Column(Storage="_OpenBal", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> OpenBal
		{
			get
			{
				return this._OpenBal;
			}
			set
			{
				if ((this._OpenBal != value))
				{
					this._OpenBal = value;
				}
			}
		}
		
		[Column(Storage="_CloseBal", DbType="Money")]
		public System.Nullable<decimal> CloseBal
		{
			get
			{
				return this._CloseBal;
			}
			set
			{
				if ((this._CloseBal != value))
				{
					this._CloseBal = value;
				}
			}
		}
		
		[Column(Storage="_OpenCurrent", DbType="Money")]
		public System.Nullable<decimal> OpenCurrent
		{
			get
			{
				return this._OpenCurrent;
			}
			set
			{
				if ((this._OpenCurrent != value))
				{
					this._OpenCurrent = value;
				}
			}
		}
		
		[Column(Storage="_Open30Days", DbType="Money")]
		public System.Nullable<decimal> Open30Days
		{
			get
			{
				return this._Open30Days;
			}
			set
			{
				if ((this._Open30Days != value))
				{
					this._Open30Days = value;
				}
			}
		}
		
		[Column(Storage="_Open60Days", DbType="Money")]
		public System.Nullable<decimal> Open60Days
		{
			get
			{
				return this._Open60Days;
			}
			set
			{
				if ((this._Open60Days != value))
				{
					this._Open60Days = value;
				}
			}
		}
		
		[Column(Storage="_Open90Days", DbType="Money")]
		public System.Nullable<decimal> Open90Days
		{
			get
			{
				return this._Open90Days;
			}
			set
			{
				if ((this._Open90Days != value))
				{
					this._Open90Days = value;
				}
			}
		}
	}
	
	public partial class DebtorTaxCodeResult
	{
		
		private string _STaxNum;
		
		public DebtorTaxCodeResult()
		{
		}
		
		[Column(Storage="_STaxNum", DbType="VarChar(10)")]
		public string STaxNum
		{
			get
			{
				return this._STaxNum;
			}
			set
			{
				if ((this._STaxNum != value))
				{
					this._STaxNum = value;
				}
			}
		}
	}
	
	public partial class DebtorTransactionsResult
	{
		
		private string _Date;
		
		private string _TransID;
		
		private string _Particulars;
		
		private string _DN;
		
		private System.Nullable<byte> _Age;
		
		private string _DR;
		
		private string _CR;
		
		private string _InvType;
		
		public DebtorTransactionsResult()
		{
		}
		
		[Column(Storage="_Date", DbType="VarChar(15)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_TransID", DbType="VarChar(30)")]
		public string TransID
		{
			get
			{
				return this._TransID;
			}
			set
			{
				if ((this._TransID != value))
				{
					this._TransID = value;
				}
			}
		}
		
		[Column(Storage="_Particulars", DbType="VarChar(42)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this._Particulars = value;
				}
			}
		}
		
		[Column(Storage="_DN", DbType="VarChar(12)")]
		public string DN
		{
			get
			{
				return this._DN;
			}
			set
			{
				if ((this._DN != value))
				{
					this._DN = value;
				}
			}
		}
		
		[Column(Storage="_Age", DbType="TinyInt")]
		public System.Nullable<byte> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this._Age = value;
				}
			}
		}
		
		[Column(Storage="_DR", DbType="VarChar(10)")]
		public string DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this._DR = value;
				}
			}
		}
		
		[Column(Storage="_CR", DbType="VarChar(10)")]
		public string CR
		{
			get
			{
				return this._CR;
			}
			set
			{
				if ((this._CR != value))
				{
					this._CR = value;
				}
			}
		}
		
		[Column(Storage="_InvType", DbType="VarChar(1)")]
		public string InvType
		{
			get
			{
				return this._InvType;
			}
			set
			{
				if ((this._InvType != value))
				{
					this._InvType = value;
				}
			}
		}
	}
	
	public partial class DebtorTransactions_TEMPResult
	{
		
		private string _Date;
		
		private string _TransID;
		
		private string _Particulars;
		
		private string _DN;
		
		private System.Nullable<byte> _Age;
		
		private string _DR;
		
		private string _CR;
		
		private string _InvType;
		
		public DebtorTransactions_TEMPResult()
		{
		}
		
		[Column(Storage="_Date", DbType="VarChar(15)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_TransID", DbType="VarChar(30)")]
		public string TransID
		{
			get
			{
				return this._TransID;
			}
			set
			{
				if ((this._TransID != value))
				{
					this._TransID = value;
				}
			}
		}
		
		[Column(Storage="_Particulars", DbType="VarChar(42)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this._Particulars = value;
				}
			}
		}
		
		[Column(Storage="_DN", DbType="VarChar(12)")]
		public string DN
		{
			get
			{
				return this._DN;
			}
			set
			{
				if ((this._DN != value))
				{
					this._DN = value;
				}
			}
		}
		
		[Column(Storage="_Age", DbType="TinyInt")]
		public System.Nullable<byte> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this._Age = value;
				}
			}
		}
		
		[Column(Storage="_DR", DbType="VarChar(10)")]
		public string DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this._DR = value;
				}
			}
		}
		
		[Column(Storage="_CR", DbType="VarChar(10)")]
		public string CR
		{
			get
			{
				return this._CR;
			}
			set
			{
				if ((this._CR != value))
				{
					this._CR = value;
				}
			}
		}
		
		[Column(Storage="_InvType", DbType="VarChar(1)")]
		public string InvType
		{
			get
			{
				return this._InvType;
			}
			set
			{
				if ((this._InvType != value))
				{
					this._InvType = value;
				}
			}
		}
	}
	
	public partial class DebtorTransactionsDummyResult
	{
		
		private System.Nullable<int> _Date;
		
		private System.Nullable<int> _TransID;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<int> _DR;
		
		private System.Nullable<int> _CR;
		
		private System.Nullable<int> _InvType;
		
		private System.Nullable<int> _DN;
		
		public DebtorTransactionsDummyResult()
		{
		}
		
		[Column(Storage="_Date", DbType="Int")]
		public System.Nullable<int> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_TransID", DbType="Int")]
		public System.Nullable<int> TransID
		{
			get
			{
				return this._TransID;
			}
			set
			{
				if ((this._TransID != value))
				{
					this._TransID = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this._Age = value;
				}
			}
		}
		
		[Column(Storage="_DR", DbType="Int")]
		public System.Nullable<int> DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this._DR = value;
				}
			}
		}
		
		[Column(Storage="_CR", DbType="Int")]
		public System.Nullable<int> CR
		{
			get
			{
				return this._CR;
			}
			set
			{
				if ((this._CR != value))
				{
					this._CR = value;
				}
			}
		}
		
		[Column(Storage="_InvType", DbType="Int")]
		public System.Nullable<int> InvType
		{
			get
			{
				return this._InvType;
			}
			set
			{
				if ((this._InvType != value))
				{
					this._InvType = value;
				}
			}
		}
		
		[Column(Storage="_DN", DbType="Int")]
		public System.Nullable<int> DN
		{
			get
			{
				return this._DN;
			}
			set
			{
				if ((this._DN != value))
				{
					this._DN = value;
				}
			}
		}
	}
	
	public partial class DebtorTrialBalanceTotalsResult
	{
		
		private System.Nullable<decimal> _SumTotal;
		
		private System.Nullable<decimal> _SumCurrent;
		
		private System.Nullable<decimal> _Sum30Days;
		
		private System.Nullable<decimal> _Sum60Days;
		
		private System.Nullable<decimal> _Sum90Days;
		
		private System.Nullable<decimal> _PercentCurrent;
		
		private System.Nullable<decimal> _Percent30Days;
		
		private System.Nullable<decimal> _Percent60Days;
		
		private System.Nullable<decimal> _Percent90Days;
		
		private System.Nullable<int> _CountAll;
		
		private System.Nullable<int> _CountCurrent;
		
		private System.Nullable<int> _Count30Days;
		
		private System.Nullable<int> _Count60Days;
		
		private System.Nullable<int> _Count90Days;
		
		public DebtorTrialBalanceTotalsResult()
		{
		}
		
		[Column(Storage="_SumTotal", DbType="Money")]
		public System.Nullable<decimal> SumTotal
		{
			get
			{
				return this._SumTotal;
			}
			set
			{
				if ((this._SumTotal != value))
				{
					this._SumTotal = value;
				}
			}
		}
		
		[Column(Storage="_SumCurrent", DbType="Money")]
		public System.Nullable<decimal> SumCurrent
		{
			get
			{
				return this._SumCurrent;
			}
			set
			{
				if ((this._SumCurrent != value))
				{
					this._SumCurrent = value;
				}
			}
		}
		
		[Column(Storage="_Sum30Days", DbType="Money")]
		public System.Nullable<decimal> Sum30Days
		{
			get
			{
				return this._Sum30Days;
			}
			set
			{
				if ((this._Sum30Days != value))
				{
					this._Sum30Days = value;
				}
			}
		}
		
		[Column(Storage="_Sum60Days", DbType="Money")]
		public System.Nullable<decimal> Sum60Days
		{
			get
			{
				return this._Sum60Days;
			}
			set
			{
				if ((this._Sum60Days != value))
				{
					this._Sum60Days = value;
				}
			}
		}
		
		[Column(Storage="_Sum90Days", DbType="Money")]
		public System.Nullable<decimal> Sum90Days
		{
			get
			{
				return this._Sum90Days;
			}
			set
			{
				if ((this._Sum90Days != value))
				{
					this._Sum90Days = value;
				}
			}
		}
		
		[Column(Storage="_PercentCurrent", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PercentCurrent
		{
			get
			{
				return this._PercentCurrent;
			}
			set
			{
				if ((this._PercentCurrent != value))
				{
					this._PercentCurrent = value;
				}
			}
		}
		
		[Column(Storage="_Percent30Days", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Percent30Days
		{
			get
			{
				return this._Percent30Days;
			}
			set
			{
				if ((this._Percent30Days != value))
				{
					this._Percent30Days = value;
				}
			}
		}
		
		[Column(Storage="_Percent60Days", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Percent60Days
		{
			get
			{
				return this._Percent60Days;
			}
			set
			{
				if ((this._Percent60Days != value))
				{
					this._Percent60Days = value;
				}
			}
		}
		
		[Column(Storage="_Percent90Days", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Percent90Days
		{
			get
			{
				return this._Percent90Days;
			}
			set
			{
				if ((this._Percent90Days != value))
				{
					this._Percent90Days = value;
				}
			}
		}
		
		[Column(Storage="_CountAll", DbType="Int")]
		public System.Nullable<int> CountAll
		{
			get
			{
				return this._CountAll;
			}
			set
			{
				if ((this._CountAll != value))
				{
					this._CountAll = value;
				}
			}
		}
		
		[Column(Storage="_CountCurrent", DbType="Int")]
		public System.Nullable<int> CountCurrent
		{
			get
			{
				return this._CountCurrent;
			}
			set
			{
				if ((this._CountCurrent != value))
				{
					this._CountCurrent = value;
				}
			}
		}
		
		[Column(Storage="_Count30Days", DbType="Int")]
		public System.Nullable<int> Count30Days
		{
			get
			{
				return this._Count30Days;
			}
			set
			{
				if ((this._Count30Days != value))
				{
					this._Count30Days = value;
				}
			}
		}
		
		[Column(Storage="_Count60Days", DbType="Int")]
		public System.Nullable<int> Count60Days
		{
			get
			{
				return this._Count60Days;
			}
			set
			{
				if ((this._Count60Days != value))
				{
					this._Count60Days = value;
				}
			}
		}
		
		[Column(Storage="_Count90Days", DbType="Int")]
		public System.Nullable<int> Count90Days
		{
			get
			{
				return this._Count90Days;
			}
			set
			{
				if ((this._Count90Days != value))
				{
					this._Count90Days = value;
				}
			}
		}
	}
	
	public partial class DebtorTrialBalanceTotals_DATEResult
	{
		
		private System.Nullable<decimal> _SumTotal;
		
		private System.Nullable<decimal> _SumCurrent;
		
		private System.Nullable<decimal> _Sum30Days;
		
		private System.Nullable<decimal> _Sum60Days;
		
		private System.Nullable<decimal> _Sum90Days;
		
		private System.Nullable<decimal> _PercentCurrent;
		
		private System.Nullable<decimal> _Percent30Days;
		
		private System.Nullable<decimal> _Percent60Days;
		
		private System.Nullable<decimal> _Percent90Days;
		
		private System.Nullable<int> _CountAll;
		
		private System.Nullable<int> _CountCurrent;
		
		private System.Nullable<int> _Count30Days;
		
		private System.Nullable<int> _Count60Days;
		
		private System.Nullable<int> _Count90Days;
		
		public DebtorTrialBalanceTotals_DATEResult()
		{
		}
		
		[Column(Storage="_SumTotal", DbType="Money")]
		public System.Nullable<decimal> SumTotal
		{
			get
			{
				return this._SumTotal;
			}
			set
			{
				if ((this._SumTotal != value))
				{
					this._SumTotal = value;
				}
			}
		}
		
		[Column(Storage="_SumCurrent", DbType="Money")]
		public System.Nullable<decimal> SumCurrent
		{
			get
			{
				return this._SumCurrent;
			}
			set
			{
				if ((this._SumCurrent != value))
				{
					this._SumCurrent = value;
				}
			}
		}
		
		[Column(Storage="_Sum30Days", DbType="Money")]
		public System.Nullable<decimal> Sum30Days
		{
			get
			{
				return this._Sum30Days;
			}
			set
			{
				if ((this._Sum30Days != value))
				{
					this._Sum30Days = value;
				}
			}
		}
		
		[Column(Storage="_Sum60Days", DbType="Money")]
		public System.Nullable<decimal> Sum60Days
		{
			get
			{
				return this._Sum60Days;
			}
			set
			{
				if ((this._Sum60Days != value))
				{
					this._Sum60Days = value;
				}
			}
		}
		
		[Column(Storage="_Sum90Days", DbType="Money")]
		public System.Nullable<decimal> Sum90Days
		{
			get
			{
				return this._Sum90Days;
			}
			set
			{
				if ((this._Sum90Days != value))
				{
					this._Sum90Days = value;
				}
			}
		}
		
		[Column(Storage="_PercentCurrent", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PercentCurrent
		{
			get
			{
				return this._PercentCurrent;
			}
			set
			{
				if ((this._PercentCurrent != value))
				{
					this._PercentCurrent = value;
				}
			}
		}
		
		[Column(Storage="_Percent30Days", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Percent30Days
		{
			get
			{
				return this._Percent30Days;
			}
			set
			{
				if ((this._Percent30Days != value))
				{
					this._Percent30Days = value;
				}
			}
		}
		
		[Column(Storage="_Percent60Days", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Percent60Days
		{
			get
			{
				return this._Percent60Days;
			}
			set
			{
				if ((this._Percent60Days != value))
				{
					this._Percent60Days = value;
				}
			}
		}
		
		[Column(Storage="_Percent90Days", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Percent90Days
		{
			get
			{
				return this._Percent90Days;
			}
			set
			{
				if ((this._Percent90Days != value))
				{
					this._Percent90Days = value;
				}
			}
		}
		
		[Column(Storage="_CountAll", DbType="Int")]
		public System.Nullable<int> CountAll
		{
			get
			{
				return this._CountAll;
			}
			set
			{
				if ((this._CountAll != value))
				{
					this._CountAll = value;
				}
			}
		}
		
		[Column(Storage="_CountCurrent", DbType="Int")]
		public System.Nullable<int> CountCurrent
		{
			get
			{
				return this._CountCurrent;
			}
			set
			{
				if ((this._CountCurrent != value))
				{
					this._CountCurrent = value;
				}
			}
		}
		
		[Column(Storage="_Count30Days", DbType="Int")]
		public System.Nullable<int> Count30Days
		{
			get
			{
				return this._Count30Days;
			}
			set
			{
				if ((this._Count30Days != value))
				{
					this._Count30Days = value;
				}
			}
		}
		
		[Column(Storage="_Count60Days", DbType="Int")]
		public System.Nullable<int> Count60Days
		{
			get
			{
				return this._Count60Days;
			}
			set
			{
				if ((this._Count60Days != value))
				{
					this._Count60Days = value;
				}
			}
		}
		
		[Column(Storage="_Count90Days", DbType="Int")]
		public System.Nullable<int> Count90Days
		{
			get
			{
				return this._Count90Days;
			}
			set
			{
				if ((this._Count90Days != value))
				{
					this._Count90Days = value;
				}
			}
		}
	}
	
	public partial class GetAuditPeriodsResult
	{
		
		private string _Date;
		
		private string _Period;
		
		public GetAuditPeriodsResult()
		{
		}
		
		[Column(Storage="_Date", DbType="VarChar(7)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Period", DbType="VarChar(14)")]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
	}
	
	public partial class GetContactFromIDResult
	{
		
		private string _Name;
		
		private string _Email;
		
		public GetContactFromIDResult()
		{
		}
		
		[Column(Storage="_Name", DbType="VarChar(41)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Name="email", Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	public partial class Gl_AccountTotalResult
	{
		
		private System.Nullable<decimal> _TotalAccount;
		
		public Gl_AccountTotalResult()
		{
		}
		
		[Column(Storage="_TotalAccount", DbType="Money")]
		public System.Nullable<decimal> TotalAccount
		{
			get
			{
				return this._TotalAccount;
			}
			set
			{
				if ((this._TotalAccount != value))
				{
					this._TotalAccount = value;
				}
			}
		}
	}
	
	public partial class GL_GetAccountDetailsResult
	{
		
		private string _AccountName;
		
		public GL_GetAccountDetailsResult()
		{
		}
		
		[Column(Storage="_AccountName", DbType="VarChar(50)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
	}
	
	public partial class GL_GetExchangeRateResult
	{
		
		private System.Nullable<decimal> _ExchangeRate;
		
		public GL_GetExchangeRateResult()
		{
		}
		
		[Column(Storage="_ExchangeRate", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this._ExchangeRate = value;
				}
			}
		}
	}
	
	public partial class GL_MiscToolsResult
	{
		
		private string _JournalCode;
		
		private System.Nullable<int> _Audit;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<byte> _Month;
		
		public GL_MiscToolsResult()
		{
		}
		
		[Column(Storage="_JournalCode", DbType="VarChar(16)")]
		public string JournalCode
		{
			get
			{
				return this._JournalCode;
			}
			set
			{
				if ((this._JournalCode != value))
				{
					this._JournalCode = value;
				}
			}
		}
		
		[Column(Storage="_Audit", DbType="Int")]
		public System.Nullable<int> Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this._Audit = value;
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Month", DbType="TinyInt")]
		public System.Nullable<byte> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
	}
	
	public partial class GL1Result1
	{
		
		private System.Nullable<byte> _CompanyNum;
		
		private string _COmpanyID;
		
		public GL1Result1()
		{
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_COmpanyID", DbType="VarChar(5)")]
		public string COmpanyID
		{
			get
			{
				return this._COmpanyID;
			}
			set
			{
				if ((this._COmpanyID != value))
				{
					this._COmpanyID = value;
				}
			}
		}
	}
	
	public partial class GL1Result2
	{
		
		private string _CompanyID;
		
		public GL1Result2()
		{
		}
		
		[Column(Storage="_CompanyID", DbType="VarChar(5)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
	}
	
	public partial class GL1Result3
	{
		
		private System.Nullable<byte> _CompanyNum;
		
		public GL1Result3()
		{
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
	}
	
	public partial class GL1Result4
	{
		
		private System.Nullable<int> _Column1;
		
		public GL1Result4()
		{
		}
		
		[Column(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class INT_BUSINESSUNIT_SnapshotComparisonReportResult
	{
		
		private string _ContractLocation;
		
		private System.Nullable<int> _AccountID;
		
		private string _Company;
		
		private System.Nullable<int> _ItemCount;
		
		private System.Nullable<decimal> _LineTotal;
		
		private System.Nullable<decimal> _LineTotalDiff;
		
		private System.Nullable<decimal> _ItemsAdded;
		
		private System.Nullable<decimal> _LineTotalAdded;
		
		private System.Nullable<System.DateTime> _CurrentDate;
		
		private System.Nullable<decimal> _ItemCount2;
		
		private System.Nullable<decimal> _LineTotal2;
		
		private System.Nullable<decimal> _ItemsDeleted;
		
		private System.Nullable<decimal> _LineTotalDeleted;
		
		private System.Nullable<System.DateTime> _SnapShotDate;
		
		public INT_BUSINESSUNIT_SnapshotComparisonReportResult()
		{
		}
		
		[Column(Storage="_ContractLocation", DbType="VarChar(5)")]
		public string ContractLocation
		{
			get
			{
				return this._ContractLocation;
			}
			set
			{
				if ((this._ContractLocation != value))
				{
					this._ContractLocation = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_ItemCount", DbType="Int")]
		public System.Nullable<int> ItemCount
		{
			get
			{
				return this._ItemCount;
			}
			set
			{
				if ((this._ItemCount != value))
				{
					this._ItemCount = value;
				}
			}
		}
		
		[Column(Storage="_LineTotal", DbType="Money")]
		public System.Nullable<decimal> LineTotal
		{
			get
			{
				return this._LineTotal;
			}
			set
			{
				if ((this._LineTotal != value))
				{
					this._LineTotal = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalDiff", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalDiff
		{
			get
			{
				return this._LineTotalDiff;
			}
			set
			{
				if ((this._LineTotalDiff != value))
				{
					this._LineTotalDiff = value;
				}
			}
		}
		
		[Column(Storage="_ItemsAdded", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemsAdded
		{
			get
			{
				return this._ItemsAdded;
			}
			set
			{
				if ((this._ItemsAdded != value))
				{
					this._ItemsAdded = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalAdded", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalAdded
		{
			get
			{
				return this._LineTotalAdded;
			}
			set
			{
				if ((this._LineTotalAdded != value))
				{
					this._LineTotalAdded = value;
				}
			}
		}
		
		[Column(Storage="_CurrentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CurrentDate
		{
			get
			{
				return this._CurrentDate;
			}
			set
			{
				if ((this._CurrentDate != value))
				{
					this._CurrentDate = value;
				}
			}
		}
		
		[Column(Storage="_ItemCount2", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemCount2
		{
			get
			{
				return this._ItemCount2;
			}
			set
			{
				if ((this._ItemCount2 != value))
				{
					this._ItemCount2 = value;
				}
			}
		}
		
		[Column(Storage="_LineTotal2", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotal2
		{
			get
			{
				return this._LineTotal2;
			}
			set
			{
				if ((this._LineTotal2 != value))
				{
					this._LineTotal2 = value;
				}
			}
		}
		
		[Column(Storage="_ItemsDeleted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemsDeleted
		{
			get
			{
				return this._ItemsDeleted;
			}
			set
			{
				if ((this._ItemsDeleted != value))
				{
					this._ItemsDeleted = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalDeleted", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalDeleted
		{
			get
			{
				return this._LineTotalDeleted;
			}
			set
			{
				if ((this._LineTotalDeleted != value))
				{
					this._LineTotalDeleted = value;
				}
			}
		}
		
		[Column(Storage="_SnapShotDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SnapShotDate
		{
			get
			{
				return this._SnapShotDate;
			}
			set
			{
				if ((this._SnapShotDate != value))
				{
					this._SnapShotDate = value;
				}
			}
		}
	}
	
	public partial class INT_BUSINESSUNIT_SnapshotComparisonReport_BACKUPResult
	{
		
		private string _ContractLocation;
		
		private System.Nullable<int> _AccountID;
		
		private string _Company;
		
		private string _Message;
		
		private System.Nullable<int> _ItemCount;
		
		private System.Nullable<decimal> _LineTotal;
		
		private System.Nullable<decimal> _LineTotalDiff;
		
		private System.Nullable<decimal> _ItemsAdded;
		
		private System.Nullable<decimal> _LineTotalAdded;
		
		private System.Nullable<System.DateTime> _CurrentDate;
		
		private System.Nullable<decimal> _ItemCount2;
		
		private System.Nullable<decimal> _LineTotal2;
		
		private System.Nullable<decimal> _ItemsDeleted;
		
		private System.Nullable<decimal> _LineTotalDeleted;
		
		private System.Nullable<System.DateTime> _SnapShotDate;
		
		public INT_BUSINESSUNIT_SnapshotComparisonReport_BACKUPResult()
		{
		}
		
		[Column(Storage="_ContractLocation", DbType="VarChar(50)")]
		public string ContractLocation
		{
			get
			{
				return this._ContractLocation;
			}
			set
			{
				if ((this._ContractLocation != value))
				{
					this._ContractLocation = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_Message", DbType="VarChar(9)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[Column(Storage="_ItemCount", DbType="Int")]
		public System.Nullable<int> ItemCount
		{
			get
			{
				return this._ItemCount;
			}
			set
			{
				if ((this._ItemCount != value))
				{
					this._ItemCount = value;
				}
			}
		}
		
		[Column(Storage="_LineTotal", DbType="Money")]
		public System.Nullable<decimal> LineTotal
		{
			get
			{
				return this._LineTotal;
			}
			set
			{
				if ((this._LineTotal != value))
				{
					this._LineTotal = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalDiff", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalDiff
		{
			get
			{
				return this._LineTotalDiff;
			}
			set
			{
				if ((this._LineTotalDiff != value))
				{
					this._LineTotalDiff = value;
				}
			}
		}
		
		[Column(Storage="_ItemsAdded", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemsAdded
		{
			get
			{
				return this._ItemsAdded;
			}
			set
			{
				if ((this._ItemsAdded != value))
				{
					this._ItemsAdded = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalAdded", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalAdded
		{
			get
			{
				return this._LineTotalAdded;
			}
			set
			{
				if ((this._LineTotalAdded != value))
				{
					this._LineTotalAdded = value;
				}
			}
		}
		
		[Column(Storage="_CurrentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CurrentDate
		{
			get
			{
				return this._CurrentDate;
			}
			set
			{
				if ((this._CurrentDate != value))
				{
					this._CurrentDate = value;
				}
			}
		}
		
		[Column(Storage="_ItemCount2", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemCount2
		{
			get
			{
				return this._ItemCount2;
			}
			set
			{
				if ((this._ItemCount2 != value))
				{
					this._ItemCount2 = value;
				}
			}
		}
		
		[Column(Storage="_LineTotal2", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotal2
		{
			get
			{
				return this._LineTotal2;
			}
			set
			{
				if ((this._LineTotal2 != value))
				{
					this._LineTotal2 = value;
				}
			}
		}
		
		[Column(Storage="_ItemsDeleted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemsDeleted
		{
			get
			{
				return this._ItemsDeleted;
			}
			set
			{
				if ((this._ItemsDeleted != value))
				{
					this._ItemsDeleted = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalDeleted", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalDeleted
		{
			get
			{
				return this._LineTotalDeleted;
			}
			set
			{
				if ((this._LineTotalDeleted != value))
				{
					this._LineTotalDeleted = value;
				}
			}
		}
		
		[Column(Storage="_SnapShotDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SnapShotDate
		{
			get
			{
				return this._SnapShotDate;
			}
			set
			{
				if ((this._SnapShotDate != value))
				{
					this._SnapShotDate = value;
				}
			}
		}
	}
	
	public partial class INT_BUSINESSUNIT_SnapshotComparisonReport_BACKUP_OLDResult
	{
		
		private string _BusinessUnitGroup;
		
		private System.Nullable<int> _AccountID;
		
		private string _Company;
		
		private string _Message;
		
		private System.Nullable<int> _ItemCount;
		
		private System.Nullable<decimal> _LineTotal;
		
		private System.Nullable<decimal> _LineTotalDiff;
		
		private System.Nullable<decimal> _ItemsAdded;
		
		private System.Nullable<decimal> _LineTotalAdded;
		
		private System.Nullable<System.DateTime> _CurrentDate;
		
		private System.Nullable<decimal> _ItemCount2;
		
		private System.Nullable<decimal> _LineTotal2;
		
		private System.Nullable<decimal> _ItemsDeleted;
		
		private System.Nullable<decimal> _LineTotalDeleted;
		
		private System.Nullable<System.DateTime> _SnapShotDate;
		
		public INT_BUSINESSUNIT_SnapshotComparisonReport_BACKUP_OLDResult()
		{
		}
		
		[Column(Storage="_BusinessUnitGroup", DbType="VarChar(5)")]
		public string BusinessUnitGroup
		{
			get
			{
				return this._BusinessUnitGroup;
			}
			set
			{
				if ((this._BusinessUnitGroup != value))
				{
					this._BusinessUnitGroup = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_Message", DbType="VarChar(9)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[Column(Storage="_ItemCount", DbType="Int")]
		public System.Nullable<int> ItemCount
		{
			get
			{
				return this._ItemCount;
			}
			set
			{
				if ((this._ItemCount != value))
				{
					this._ItemCount = value;
				}
			}
		}
		
		[Column(Storage="_LineTotal", DbType="Money")]
		public System.Nullable<decimal> LineTotal
		{
			get
			{
				return this._LineTotal;
			}
			set
			{
				if ((this._LineTotal != value))
				{
					this._LineTotal = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalDiff", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalDiff
		{
			get
			{
				return this._LineTotalDiff;
			}
			set
			{
				if ((this._LineTotalDiff != value))
				{
					this._LineTotalDiff = value;
				}
			}
		}
		
		[Column(Storage="_ItemsAdded", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemsAdded
		{
			get
			{
				return this._ItemsAdded;
			}
			set
			{
				if ((this._ItemsAdded != value))
				{
					this._ItemsAdded = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalAdded", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalAdded
		{
			get
			{
				return this._LineTotalAdded;
			}
			set
			{
				if ((this._LineTotalAdded != value))
				{
					this._LineTotalAdded = value;
				}
			}
		}
		
		[Column(Storage="_CurrentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CurrentDate
		{
			get
			{
				return this._CurrentDate;
			}
			set
			{
				if ((this._CurrentDate != value))
				{
					this._CurrentDate = value;
				}
			}
		}
		
		[Column(Storage="_ItemCount2", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemCount2
		{
			get
			{
				return this._ItemCount2;
			}
			set
			{
				if ((this._ItemCount2 != value))
				{
					this._ItemCount2 = value;
				}
			}
		}
		
		[Column(Storage="_LineTotal2", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotal2
		{
			get
			{
				return this._LineTotal2;
			}
			set
			{
				if ((this._LineTotal2 != value))
				{
					this._LineTotal2 = value;
				}
			}
		}
		
		[Column(Storage="_ItemsDeleted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemsDeleted
		{
			get
			{
				return this._ItemsDeleted;
			}
			set
			{
				if ((this._ItemsDeleted != value))
				{
					this._ItemsDeleted = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalDeleted", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalDeleted
		{
			get
			{
				return this._LineTotalDeleted;
			}
			set
			{
				if ((this._LineTotalDeleted != value))
				{
					this._LineTotalDeleted = value;
				}
			}
		}
		
		[Column(Storage="_SnapShotDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SnapShotDate
		{
			get
			{
				return this._SnapShotDate;
			}
			set
			{
				if ((this._SnapShotDate != value))
				{
					this._SnapShotDate = value;
				}
			}
		}
	}
	
	public partial class INT_BUSINESSUNIT_SnapshotComparisonReport_ByDeviceLocationResult
	{
		
		private string _DeviceLocation;
		
		private System.Nullable<int> _AccountID;
		
		private string _Company;
		
		private System.Nullable<int> _ItemCount;
		
		private System.Nullable<decimal> _LineTotal;
		
		private System.Nullable<decimal> _LineTotalDiff;
		
		private System.Nullable<decimal> _ItemsAdded;
		
		private System.Nullable<decimal> _LineTotalAdded;
		
		private System.Nullable<System.DateTime> _CurrentDate;
		
		private System.Nullable<decimal> _ItemCount2;
		
		private System.Nullable<decimal> _LineTotal2;
		
		private System.Nullable<decimal> _ItemsDeleted;
		
		private System.Nullable<decimal> _LineTotalDeleted;
		
		private System.Nullable<System.DateTime> _SnapShotDate;
		
		public INT_BUSINESSUNIT_SnapshotComparisonReport_ByDeviceLocationResult()
		{
		}
		
		[Column(Storage="_DeviceLocation", DbType="VarChar(5)")]
		public string DeviceLocation
		{
			get
			{
				return this._DeviceLocation;
			}
			set
			{
				if ((this._DeviceLocation != value))
				{
					this._DeviceLocation = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_ItemCount", DbType="Int")]
		public System.Nullable<int> ItemCount
		{
			get
			{
				return this._ItemCount;
			}
			set
			{
				if ((this._ItemCount != value))
				{
					this._ItemCount = value;
				}
			}
		}
		
		[Column(Storage="_LineTotal", DbType="Money")]
		public System.Nullable<decimal> LineTotal
		{
			get
			{
				return this._LineTotal;
			}
			set
			{
				if ((this._LineTotal != value))
				{
					this._LineTotal = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalDiff", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalDiff
		{
			get
			{
				return this._LineTotalDiff;
			}
			set
			{
				if ((this._LineTotalDiff != value))
				{
					this._LineTotalDiff = value;
				}
			}
		}
		
		[Column(Storage="_ItemsAdded", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemsAdded
		{
			get
			{
				return this._ItemsAdded;
			}
			set
			{
				if ((this._ItemsAdded != value))
				{
					this._ItemsAdded = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalAdded", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalAdded
		{
			get
			{
				return this._LineTotalAdded;
			}
			set
			{
				if ((this._LineTotalAdded != value))
				{
					this._LineTotalAdded = value;
				}
			}
		}
		
		[Column(Storage="_CurrentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CurrentDate
		{
			get
			{
				return this._CurrentDate;
			}
			set
			{
				if ((this._CurrentDate != value))
				{
					this._CurrentDate = value;
				}
			}
		}
		
		[Column(Storage="_ItemCount2", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemCount2
		{
			get
			{
				return this._ItemCount2;
			}
			set
			{
				if ((this._ItemCount2 != value))
				{
					this._ItemCount2 = value;
				}
			}
		}
		
		[Column(Storage="_LineTotal2", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotal2
		{
			get
			{
				return this._LineTotal2;
			}
			set
			{
				if ((this._LineTotal2 != value))
				{
					this._LineTotal2 = value;
				}
			}
		}
		
		[Column(Storage="_ItemsDeleted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemsDeleted
		{
			get
			{
				return this._ItemsDeleted;
			}
			set
			{
				if ((this._ItemsDeleted != value))
				{
					this._ItemsDeleted = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalDeleted", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalDeleted
		{
			get
			{
				return this._LineTotalDeleted;
			}
			set
			{
				if ((this._LineTotalDeleted != value))
				{
					this._LineTotalDeleted = value;
				}
			}
		}
		
		[Column(Storage="_SnapShotDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SnapShotDate
		{
			get
			{
				return this._SnapShotDate;
			}
			set
			{
				if ((this._SnapShotDate != value))
				{
					this._SnapShotDate = value;
				}
			}
		}
	}
	
	public partial class INT_BUSINESSUNIT_SnapshotComparisonReport_ByRptGrpResult
	{
		
		private string _ContractLocation;
		
		private System.Nullable<int> _ReportingGroupID;
		
		private string _ReportingGroupName;
		
		private System.Nullable<int> _ItemCount;
		
		private System.Nullable<decimal> _LineTotal;
		
		private System.Nullable<decimal> _LineTotalDiff;
		
		private System.Nullable<decimal> _ItemsAdded;
		
		private System.Nullable<decimal> _LineTotalAdded;
		
		private System.Nullable<System.DateTime> _CurrentDate;
		
		private System.Nullable<decimal> _ItemCount2;
		
		private System.Nullable<decimal> _LineTotal2;
		
		private System.Nullable<decimal> _ItemsDeleted;
		
		private System.Nullable<decimal> _LineTotalDeleted;
		
		private System.Nullable<System.DateTime> _SnapShotDate;
		
		public INT_BUSINESSUNIT_SnapshotComparisonReport_ByRptGrpResult()
		{
		}
		
		[Column(Storage="_ContractLocation", DbType="VarChar(5)")]
		public string ContractLocation
		{
			get
			{
				return this._ContractLocation;
			}
			set
			{
				if ((this._ContractLocation != value))
				{
					this._ContractLocation = value;
				}
			}
		}
		
		[Column(Storage="_ReportingGroupID", DbType="Int")]
		public System.Nullable<int> ReportingGroupID
		{
			get
			{
				return this._ReportingGroupID;
			}
			set
			{
				if ((this._ReportingGroupID != value))
				{
					this._ReportingGroupID = value;
				}
			}
		}
		
		[Column(Storage="_ReportingGroupName", DbType="VarChar(80)")]
		public string ReportingGroupName
		{
			get
			{
				return this._ReportingGroupName;
			}
			set
			{
				if ((this._ReportingGroupName != value))
				{
					this._ReportingGroupName = value;
				}
			}
		}
		
		[Column(Storage="_ItemCount", DbType="Int")]
		public System.Nullable<int> ItemCount
		{
			get
			{
				return this._ItemCount;
			}
			set
			{
				if ((this._ItemCount != value))
				{
					this._ItemCount = value;
				}
			}
		}
		
		[Column(Storage="_LineTotal", DbType="Money")]
		public System.Nullable<decimal> LineTotal
		{
			get
			{
				return this._LineTotal;
			}
			set
			{
				if ((this._LineTotal != value))
				{
					this._LineTotal = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalDiff", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalDiff
		{
			get
			{
				return this._LineTotalDiff;
			}
			set
			{
				if ((this._LineTotalDiff != value))
				{
					this._LineTotalDiff = value;
				}
			}
		}
		
		[Column(Storage="_ItemsAdded", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemsAdded
		{
			get
			{
				return this._ItemsAdded;
			}
			set
			{
				if ((this._ItemsAdded != value))
				{
					this._ItemsAdded = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalAdded", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalAdded
		{
			get
			{
				return this._LineTotalAdded;
			}
			set
			{
				if ((this._LineTotalAdded != value))
				{
					this._LineTotalAdded = value;
				}
			}
		}
		
		[Column(Storage="_CurrentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CurrentDate
		{
			get
			{
				return this._CurrentDate;
			}
			set
			{
				if ((this._CurrentDate != value))
				{
					this._CurrentDate = value;
				}
			}
		}
		
		[Column(Storage="_ItemCount2", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemCount2
		{
			get
			{
				return this._ItemCount2;
			}
			set
			{
				if ((this._ItemCount2 != value))
				{
					this._ItemCount2 = value;
				}
			}
		}
		
		[Column(Storage="_LineTotal2", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotal2
		{
			get
			{
				return this._LineTotal2;
			}
			set
			{
				if ((this._LineTotal2 != value))
				{
					this._LineTotal2 = value;
				}
			}
		}
		
		[Column(Storage="_ItemsDeleted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemsDeleted
		{
			get
			{
				return this._ItemsDeleted;
			}
			set
			{
				if ((this._ItemsDeleted != value))
				{
					this._ItemsDeleted = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalDeleted", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalDeleted
		{
			get
			{
				return this._LineTotalDeleted;
			}
			set
			{
				if ((this._LineTotalDeleted != value))
				{
					this._LineTotalDeleted = value;
				}
			}
		}
		
		[Column(Storage="_SnapShotDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SnapShotDate
		{
			get
			{
				return this._SnapShotDate;
			}
			set
			{
				if ((this._SnapShotDate != value))
				{
					this._SnapShotDate = value;
				}
			}
		}
	}
	
	public partial class INT_CE_COMMISSION_REVCATResult
	{
		
		private string _InvoiceMonth;
		
		private System.Nullable<short> _InvYear;
		
		private System.Nullable<byte> _InvMonth;
		
		private string _Engineer;
		
		private System.Nullable<byte> _CompanyNum;
		
		private string _Company;
		
		private string _EmployeeName;
		
		private string _ReportingState;
		
		private string _EngineerGroup;
		
		private System.Nullable<decimal> _RevCatHPIntel;
		
		private System.Nullable<decimal> _RevCatIBMIntel;
		
		private System.Nullable<decimal> _RevCatDellIntel;
		
		private System.Nullable<decimal> _RevCatIntelOther;
		
		private System.Nullable<decimal> _RevCatToshibaIntel;
		
		private System.Nullable<decimal> _RevCatIBMiSeries;
		
		private System.Nullable<decimal> _RevCatIBMpSeries;
		
		private System.Nullable<decimal> _RevCatIBMzSeries;
		
		private System.Nullable<decimal> _RevCatSUN;
		
		private System.Nullable<decimal> _RevCatNetApp;
		
		private System.Nullable<decimal> _RevCatCisco;
		
		private System.Nullable<decimal> _RevCatProfessionalServices;
		
		private System.Nullable<decimal> _RevCatSoftwareSupport;
		
		private System.Nullable<decimal> _RevCatBRS;
		
		private System.Nullable<decimal> _RevCatTape;
		
		private System.Nullable<decimal> _RevCatStorage;
		
		private System.Nullable<decimal> _RevCatPrinter;
		
		private System.Nullable<decimal> _RevCatUPS;
		
		private System.Nullable<decimal> _RevCatOther;
		
		private System.Nullable<decimal> @__5PercComm;
		
		public INT_CE_COMMISSION_REVCATResult()
		{
		}
		
		[Column(Name="Invoice Month", Storage="_InvoiceMonth", DbType="NVarChar(35)")]
		public string InvoiceMonth
		{
			get
			{
				return this._InvoiceMonth;
			}
			set
			{
				if ((this._InvoiceMonth != value))
				{
					this._InvoiceMonth = value;
				}
			}
		}
		
		[Column(Storage="_InvYear", DbType="SmallInt")]
		public System.Nullable<short> InvYear
		{
			get
			{
				return this._InvYear;
			}
			set
			{
				if ((this._InvYear != value))
				{
					this._InvYear = value;
				}
			}
		}
		
		[Column(Storage="_InvMonth", DbType="TinyInt")]
		public System.Nullable<byte> InvMonth
		{
			get
			{
				return this._InvMonth;
			}
			set
			{
				if ((this._InvMonth != value))
				{
					this._InvMonth = value;
				}
			}
		}
		
		[Column(Storage="_Engineer", DbType="VarChar(25)")]
		public string Engineer
		{
			get
			{
				return this._Engineer;
			}
			set
			{
				if ((this._Engineer != value))
				{
					this._Engineer = value;
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(5)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_EmployeeName", DbType="VarChar(51)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[Column(Storage="_ReportingState", DbType="VarChar(5)")]
		public string ReportingState
		{
			get
			{
				return this._ReportingState;
			}
			set
			{
				if ((this._ReportingState != value))
				{
					this._ReportingState = value;
				}
			}
		}
		
		[Column(Storage="_EngineerGroup", DbType="VarChar(15)")]
		public string EngineerGroup
		{
			get
			{
				return this._EngineerGroup;
			}
			set
			{
				if ((this._EngineerGroup != value))
				{
					this._EngineerGroup = value;
				}
			}
		}
		
		[Column(Storage="_RevCatHPIntel", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatHPIntel
		{
			get
			{
				return this._RevCatHPIntel;
			}
			set
			{
				if ((this._RevCatHPIntel != value))
				{
					this._RevCatHPIntel = value;
				}
			}
		}
		
		[Column(Storage="_RevCatIBMIntel", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatIBMIntel
		{
			get
			{
				return this._RevCatIBMIntel;
			}
			set
			{
				if ((this._RevCatIBMIntel != value))
				{
					this._RevCatIBMIntel = value;
				}
			}
		}
		
		[Column(Storage="_RevCatDellIntel", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatDellIntel
		{
			get
			{
				return this._RevCatDellIntel;
			}
			set
			{
				if ((this._RevCatDellIntel != value))
				{
					this._RevCatDellIntel = value;
				}
			}
		}
		
		[Column(Storage="_RevCatIntelOther", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatIntelOther
		{
			get
			{
				return this._RevCatIntelOther;
			}
			set
			{
				if ((this._RevCatIntelOther != value))
				{
					this._RevCatIntelOther = value;
				}
			}
		}
		
		[Column(Storage="_RevCatToshibaIntel", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatToshibaIntel
		{
			get
			{
				return this._RevCatToshibaIntel;
			}
			set
			{
				if ((this._RevCatToshibaIntel != value))
				{
					this._RevCatToshibaIntel = value;
				}
			}
		}
		
		[Column(Storage="_RevCatIBMiSeries", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatIBMiSeries
		{
			get
			{
				return this._RevCatIBMiSeries;
			}
			set
			{
				if ((this._RevCatIBMiSeries != value))
				{
					this._RevCatIBMiSeries = value;
				}
			}
		}
		
		[Column(Storage="_RevCatIBMpSeries", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatIBMpSeries
		{
			get
			{
				return this._RevCatIBMpSeries;
			}
			set
			{
				if ((this._RevCatIBMpSeries != value))
				{
					this._RevCatIBMpSeries = value;
				}
			}
		}
		
		[Column(Storage="_RevCatIBMzSeries", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatIBMzSeries
		{
			get
			{
				return this._RevCatIBMzSeries;
			}
			set
			{
				if ((this._RevCatIBMzSeries != value))
				{
					this._RevCatIBMzSeries = value;
				}
			}
		}
		
		[Column(Storage="_RevCatSUN", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatSUN
		{
			get
			{
				return this._RevCatSUN;
			}
			set
			{
				if ((this._RevCatSUN != value))
				{
					this._RevCatSUN = value;
				}
			}
		}
		
		[Column(Storage="_RevCatNetApp", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatNetApp
		{
			get
			{
				return this._RevCatNetApp;
			}
			set
			{
				if ((this._RevCatNetApp != value))
				{
					this._RevCatNetApp = value;
				}
			}
		}
		
		[Column(Storage="_RevCatCisco", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatCisco
		{
			get
			{
				return this._RevCatCisco;
			}
			set
			{
				if ((this._RevCatCisco != value))
				{
					this._RevCatCisco = value;
				}
			}
		}
		
		[Column(Storage="_RevCatProfessionalServices", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatProfessionalServices
		{
			get
			{
				return this._RevCatProfessionalServices;
			}
			set
			{
				if ((this._RevCatProfessionalServices != value))
				{
					this._RevCatProfessionalServices = value;
				}
			}
		}
		
		[Column(Storage="_RevCatSoftwareSupport", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatSoftwareSupport
		{
			get
			{
				return this._RevCatSoftwareSupport;
			}
			set
			{
				if ((this._RevCatSoftwareSupport != value))
				{
					this._RevCatSoftwareSupport = value;
				}
			}
		}
		
		[Column(Storage="_RevCatBRS", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatBRS
		{
			get
			{
				return this._RevCatBRS;
			}
			set
			{
				if ((this._RevCatBRS != value))
				{
					this._RevCatBRS = value;
				}
			}
		}
		
		[Column(Storage="_RevCatTape", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatTape
		{
			get
			{
				return this._RevCatTape;
			}
			set
			{
				if ((this._RevCatTape != value))
				{
					this._RevCatTape = value;
				}
			}
		}
		
		[Column(Storage="_RevCatStorage", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatStorage
		{
			get
			{
				return this._RevCatStorage;
			}
			set
			{
				if ((this._RevCatStorage != value))
				{
					this._RevCatStorage = value;
				}
			}
		}
		
		[Column(Storage="_RevCatPrinter", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatPrinter
		{
			get
			{
				return this._RevCatPrinter;
			}
			set
			{
				if ((this._RevCatPrinter != value))
				{
					this._RevCatPrinter = value;
				}
			}
		}
		
		[Column(Storage="_RevCatUPS", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatUPS
		{
			get
			{
				return this._RevCatUPS;
			}
			set
			{
				if ((this._RevCatUPS != value))
				{
					this._RevCatUPS = value;
				}
			}
		}
		
		[Column(Storage="_RevCatOther", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> RevCatOther
		{
			get
			{
				return this._RevCatOther;
			}
			set
			{
				if ((this._RevCatOther != value))
				{
					this._RevCatOther = value;
				}
			}
		}
		
		[Column(Name="5PercComm", Storage="__5PercComm", DbType="Decimal(18,9)")]
		public System.Nullable<decimal> _5PercComm
		{
			get
			{
				return this.@__5PercComm;
			}
			set
			{
				if ((this.@__5PercComm != value))
				{
					this.@__5PercComm = value;
				}
			}
		}
	}
	
	public partial class INT_CheckCtracForDuplicatesResult1
	{
		
		private System.Nullable<int> _AccountId;
		
		public INT_CheckCtracForDuplicatesResult1()
		{
		}
		
		[Column(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
	}
	
	public partial class INT_CheckCtracForDuplicatesResult2
	{
		
		private System.Nullable<int> _AccountID;
		
		public INT_CheckCtracForDuplicatesResult2()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
	}
	
	public partial class INT_CheckCtracForDuplicates_BACKUPResult1
	{
		
		private System.Nullable<int> _AccountId;
		
		public INT_CheckCtracForDuplicates_BACKUPResult1()
		{
		}
		
		[Column(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
	}
	
	public partial class INT_CheckCtracForDuplicates_BACKUPResult2
	{
		
		private System.Nullable<int> _AccountID;
		
		public INT_CheckCtracForDuplicates_BACKUPResult2()
		{
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
	}
	
	public partial class INT_DebtorTransactions_DUMMYResult
	{
		
		private System.Nullable<int> _Date;
		
		private System.Nullable<int> _TransID;
		
		private System.Nullable<int> _Particulars;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<int> _DR;
		
		private System.Nullable<int> _CR;
		
		private System.Nullable<int> _INT_TM_Invoice;
		
		public INT_DebtorTransactions_DUMMYResult()
		{
		}
		
		[Column(Name="date", Storage="_Date", DbType="Int")]
		public System.Nullable<int> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_TransID", DbType="Int")]
		public System.Nullable<int> TransID
		{
			get
			{
				return this._TransID;
			}
			set
			{
				if ((this._TransID != value))
				{
					this._TransID = value;
				}
			}
		}
		
		[Column(Storage="_Particulars", DbType="Int")]
		public System.Nullable<int> Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this._Particulars = value;
				}
			}
		}
		
		[Column(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this._Age = value;
				}
			}
		}
		
		[Column(Storage="_DR", DbType="Int")]
		public System.Nullable<int> DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this._DR = value;
				}
			}
		}
		
		[Column(Storage="_CR", DbType="Int")]
		public System.Nullable<int> CR
		{
			get
			{
				return this._CR;
			}
			set
			{
				if ((this._CR != value))
				{
					this._CR = value;
				}
			}
		}
		
		[Column(Storage="_INT_TM_Invoice", DbType="Int")]
		public System.Nullable<int> INT_TM_Invoice
		{
			get
			{
				return this._INT_TM_Invoice;
			}
			set
			{
				if ((this._INT_TM_Invoice != value))
				{
					this._INT_TM_Invoice = value;
				}
			}
		}
	}
	
	public partial class INT_GetLocationNamesResult
	{
		
		private string _FromLoc;
		
		private string _FromState;
		
		private string _ToLoc;
		
		private string _ToState;
		
		public INT_GetLocationNamesResult()
		{
		}
		
		[Column(Storage="_FromLoc", DbType="VarChar(50)")]
		public string FromLoc
		{
			get
			{
				return this._FromLoc;
			}
			set
			{
				if ((this._FromLoc != value))
				{
					this._FromLoc = value;
				}
			}
		}
		
		[Column(Storage="_FromState", DbType="VarChar(5)")]
		public string FromState
		{
			get
			{
				return this._FromState;
			}
			set
			{
				if ((this._FromState != value))
				{
					this._FromState = value;
				}
			}
		}
		
		[Column(Storage="_ToLoc", DbType="VarChar(50)")]
		public string ToLoc
		{
			get
			{
				return this._ToLoc;
			}
			set
			{
				if ((this._ToLoc != value))
				{
					this._ToLoc = value;
				}
			}
		}
		
		[Column(Storage="_ToState", DbType="VarChar(5)")]
		public string ToState
		{
			get
			{
				return this._ToState;
			}
			set
			{
				if ((this._ToState != value))
				{
					this._ToState = value;
				}
			}
		}
	}
	
	public partial class INT_GetShelfLocationNamesResult
	{
		
		private string _FromLoc;
		
		private string _FromShelf;
		
		private string _ToLoc;
		
		private string _ToShelf;
		
		public INT_GetShelfLocationNamesResult()
		{
		}
		
		[Column(Storage="_FromLoc", DbType="VarChar(50)")]
		public string FromLoc
		{
			get
			{
				return this._FromLoc;
			}
			set
			{
				if ((this._FromLoc != value))
				{
					this._FromLoc = value;
				}
			}
		}
		
		[Column(Storage="_FromShelf", DbType="VarChar(99)")]
		public string FromShelf
		{
			get
			{
				return this._FromShelf;
			}
			set
			{
				if ((this._FromShelf != value))
				{
					this._FromShelf = value;
				}
			}
		}
		
		[Column(Storage="_ToLoc", DbType="VarChar(50)")]
		public string ToLoc
		{
			get
			{
				return this._ToLoc;
			}
			set
			{
				if ((this._ToLoc != value))
				{
					this._ToLoc = value;
				}
			}
		}
		
		[Column(Storage="_ToShelf", DbType="VarChar(99)")]
		public string ToShelf
		{
			get
			{
				return this._ToShelf;
			}
			set
			{
				if ((this._ToShelf != value))
				{
					this._ToShelf = value;
				}
			}
		}
	}
	
	public partial class INT_MonthlyFiguresResult
	{
		
		private System.Nullable<int> _CustID;
		
		private string _CUst;
		
		private System.Nullable<int> _LocID;
		
		private string _Loc;
		
		private string _LocSuburb;
		
		private string _PartNo;
		
		private string _SerialNo;
		
		private System.Nullable<short> _Quantity;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<decimal> _ItemPrice;
		
		private System.Nullable<decimal> _ItemCost;
		
		private System.Nullable<byte> _CompanyNum;
		
		private string _CompanyID;
		
		private string _ContractType;
		
		private string _LocationName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _City;
		
		private string _State;
		
		private string _Postcode;
		
		private string _ServiceTypeID;
		
		private string _AccMgr;
		
		private string _Rep;
		
		private string _CE;
		
		private string _ContractID;
		
		private System.Nullable<System.DateTime> _InvFrom;
		
		private System.Nullable<System.DateTime> _InvTo;
		
		private System.Nullable<decimal> _Billed;
		
		private System.Nullable<decimal> _CostToInt;
		
		private string _VariationText;
		
		private System.Nullable<int> _ContractItemID;
		
		private string _Phone;
		
		private System.Nullable<bool> _Merged;
		
		private System.Nullable<byte> _FromCompanyNum;
		
		private System.Nullable<int> _RevenueCategory;
		
		private System.Nullable<int> _OldContractID;
		
		private System.Nullable<System.DateTime> _OriginalStartDate;
		
		private string _ContractLocation;
		
		private string _ServiceLevelDescription;
		
		private System.Nullable<byte> _ResponseTime;
		
		private string _CoverageLimits;
		
		public INT_MonthlyFiguresResult()
		{
		}
		
		[Column(Storage="_CustID", DbType="Int")]
		public System.Nullable<int> CustID
		{
			get
			{
				return this._CustID;
			}
			set
			{
				if ((this._CustID != value))
				{
					this._CustID = value;
				}
			}
		}
		
		[Column(Storage="_CUst", DbType="VarChar(80)")]
		public string CUst
		{
			get
			{
				return this._CUst;
			}
			set
			{
				if ((this._CUst != value))
				{
					this._CUst = value;
				}
			}
		}
		
		[Column(Storage="_LocID", DbType="Int")]
		public System.Nullable<int> LocID
		{
			get
			{
				return this._LocID;
			}
			set
			{
				if ((this._LocID != value))
				{
					this._LocID = value;
				}
			}
		}
		
		[Column(Storage="_Loc", DbType="VarChar(80)")]
		public string Loc
		{
			get
			{
				return this._Loc;
			}
			set
			{
				if ((this._Loc != value))
				{
					this._Loc = value;
				}
			}
		}
		
		[Column(Storage="_LocSuburb", DbType="VarChar(25)")]
		public string LocSuburb
		{
			get
			{
				return this._LocSuburb;
			}
			set
			{
				if ((this._LocSuburb != value))
				{
					this._LocSuburb = value;
				}
			}
		}
		
		[Column(Storage="_PartNo", DbType="VarChar(35)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="VarChar(64)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this._SerialNo = value;
				}
			}
		}
		
		[Column(Storage="_Quantity", DbType="SmallInt")]
		public System.Nullable<short> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Storage="_ItemPrice", DbType="Money")]
		public System.Nullable<decimal> ItemPrice
		{
			get
			{
				return this._ItemPrice;
			}
			set
			{
				if ((this._ItemPrice != value))
				{
					this._ItemPrice = value;
				}
			}
		}
		
		[Column(Storage="_ItemCost", DbType="Money")]
		public System.Nullable<decimal> ItemCost
		{
			get
			{
				return this._ItemCost;
			}
			set
			{
				if ((this._ItemCost != value))
				{
					this._ItemCost = value;
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_CompanyID", DbType="VarChar(5)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[Column(Storage="_ContractType", DbType="VarChar(32)")]
		public string ContractType
		{
			get
			{
				return this._ContractType;
			}
			set
			{
				if ((this._ContractType != value))
				{
					this._ContractType = value;
				}
			}
		}
		
		[Column(Storage="_LocationName", DbType="VarChar(80)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[Column(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this._Address3 = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(25)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_Postcode", DbType="VarChar(6)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this._Postcode = value;
				}
			}
		}
		
		[Column(Storage="_ServiceTypeID", DbType="VarChar(32)")]
		public string ServiceTypeID
		{
			get
			{
				return this._ServiceTypeID;
			}
			set
			{
				if ((this._ServiceTypeID != value))
				{
					this._ServiceTypeID = value;
				}
			}
		}
		
		[Column(Storage="_AccMgr", DbType="VarChar(25)")]
		public string AccMgr
		{
			get
			{
				return this._AccMgr;
			}
			set
			{
				if ((this._AccMgr != value))
				{
					this._AccMgr = value;
				}
			}
		}
		
		[Column(Storage="_Rep", DbType="VarChar(25)")]
		public string Rep
		{
			get
			{
				return this._Rep;
			}
			set
			{
				if ((this._Rep != value))
				{
					this._Rep = value;
				}
			}
		}
		
		[Column(Storage="_CE", DbType="Char(25)")]
		public string CE
		{
			get
			{
				return this._CE;
			}
			set
			{
				if ((this._CE != value))
				{
					this._CE = value;
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="VarChar(255)")]
		public string ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this._ContractID = value;
				}
			}
		}
		
		[Column(Storage="_InvFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvFrom
		{
			get
			{
				return this._InvFrom;
			}
			set
			{
				if ((this._InvFrom != value))
				{
					this._InvFrom = value;
				}
			}
		}
		
		[Column(Storage="_InvTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvTo
		{
			get
			{
				return this._InvTo;
			}
			set
			{
				if ((this._InvTo != value))
				{
					this._InvTo = value;
				}
			}
		}
		
		[Column(Storage="_Billed", DbType="Money")]
		public System.Nullable<decimal> Billed
		{
			get
			{
				return this._Billed;
			}
			set
			{
				if ((this._Billed != value))
				{
					this._Billed = value;
				}
			}
		}
		
		[Column(Storage="_CostToInt", DbType="Money")]
		public System.Nullable<decimal> CostToInt
		{
			get
			{
				return this._CostToInt;
			}
			set
			{
				if ((this._CostToInt != value))
				{
					this._CostToInt = value;
				}
			}
		}
		
		[Column(Storage="_VariationText", DbType="VarChar(256)")]
		public string VariationText
		{
			get
			{
				return this._VariationText;
			}
			set
			{
				if ((this._VariationText != value))
				{
					this._VariationText = value;
				}
			}
		}
		
		[Column(Storage="_ContractItemID", DbType="Int")]
		public System.Nullable<int> ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this._ContractItemID = value;
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[Column(Storage="_Merged", DbType="Bit")]
		public System.Nullable<bool> Merged
		{
			get
			{
				return this._Merged;
			}
			set
			{
				if ((this._Merged != value))
				{
					this._Merged = value;
				}
			}
		}
		
		[Column(Storage="_FromCompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> FromCompanyNum
		{
			get
			{
				return this._FromCompanyNum;
			}
			set
			{
				if ((this._FromCompanyNum != value))
				{
					this._FromCompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this._RevenueCategory = value;
				}
			}
		}
		
		[Column(Storage="_OldContractID", DbType="Int")]
		public System.Nullable<int> OldContractID
		{
			get
			{
				return this._OldContractID;
			}
			set
			{
				if ((this._OldContractID != value))
				{
					this._OldContractID = value;
				}
			}
		}
		
		[Column(Storage="_OriginalStartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OriginalStartDate
		{
			get
			{
				return this._OriginalStartDate;
			}
			set
			{
				if ((this._OriginalStartDate != value))
				{
					this._OriginalStartDate = value;
				}
			}
		}
		
		[Column(Storage="_ContractLocation", DbType="VarChar(5)")]
		public string ContractLocation
		{
			get
			{
				return this._ContractLocation;
			}
			set
			{
				if ((this._ContractLocation != value))
				{
					this._ContractLocation = value;
				}
			}
		}
		
		[Column(Storage="_ServiceLevelDescription", DbType="VarChar(12)")]
		public string ServiceLevelDescription
		{
			get
			{
				return this._ServiceLevelDescription;
			}
			set
			{
				if ((this._ServiceLevelDescription != value))
				{
					this._ServiceLevelDescription = value;
				}
			}
		}
		
		[Column(Storage="_ResponseTime", DbType="TinyInt")]
		public System.Nullable<byte> ResponseTime
		{
			get
			{
				return this._ResponseTime;
			}
			set
			{
				if ((this._ResponseTime != value))
				{
					this._ResponseTime = value;
				}
			}
		}
		
		[Column(Storage="_CoverageLimits", DbType="VarChar(32)")]
		public string CoverageLimits
		{
			get
			{
				return this._CoverageLimits;
			}
			set
			{
				if ((this._CoverageLimits != value))
				{
					this._CoverageLimits = value;
				}
			}
		}
	}
	
	public partial class INT_MonthlyFigures_CUSTResult
	{
		
		private System.Nullable<int> _CustID;
		
		private string _CUst;
		
		private System.Nullable<int> _LocID;
		
		private string _Loc;
		
		private string _LocSuburb;
		
		private string _PartNo;
		
		private string _SerialNo;
		
		private System.Nullable<short> _Quantity;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<decimal> _ItemPrice;
		
		private System.Nullable<decimal> _ItemCost;
		
		private System.Nullable<byte> _CompanyNum;
		
		private string _CompanyID;
		
		private string _ContractType;
		
		private string _LocationName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _City;
		
		private string _State;
		
		private string _Postcode;
		
		private string _ServiceTypeID;
		
		private string _AccMgr;
		
		private string _Rep;
		
		private string _CE;
		
		private string _ContractID;
		
		private System.Nullable<System.DateTime> _InvFrom;
		
		private System.Nullable<System.DateTime> _InvTo;
		
		private System.Nullable<decimal> _Billed;
		
		private System.Nullable<decimal> _CostToInt;
		
		private string _VariationText;
		
		private System.Nullable<int> _ContractItemID;
		
		private string _Phone;
		
		public INT_MonthlyFigures_CUSTResult()
		{
		}
		
		[Column(Storage="_CustID", DbType="Int")]
		public System.Nullable<int> CustID
		{
			get
			{
				return this._CustID;
			}
			set
			{
				if ((this._CustID != value))
				{
					this._CustID = value;
				}
			}
		}
		
		[Column(Storage="_CUst", DbType="VarChar(80)")]
		public string CUst
		{
			get
			{
				return this._CUst;
			}
			set
			{
				if ((this._CUst != value))
				{
					this._CUst = value;
				}
			}
		}
		
		[Column(Storage="_LocID", DbType="Int")]
		public System.Nullable<int> LocID
		{
			get
			{
				return this._LocID;
			}
			set
			{
				if ((this._LocID != value))
				{
					this._LocID = value;
				}
			}
		}
		
		[Column(Storage="_Loc", DbType="VarChar(80)")]
		public string Loc
		{
			get
			{
				return this._Loc;
			}
			set
			{
				if ((this._Loc != value))
				{
					this._Loc = value;
				}
			}
		}
		
		[Column(Storage="_LocSuburb", DbType="VarChar(25)")]
		public string LocSuburb
		{
			get
			{
				return this._LocSuburb;
			}
			set
			{
				if ((this._LocSuburb != value))
				{
					this._LocSuburb = value;
				}
			}
		}
		
		[Column(Storage="_PartNo", DbType="VarChar(35)")]
		public string PartNo
		{
			get
			{
				return this._PartNo;
			}
			set
			{
				if ((this._PartNo != value))
				{
					this._PartNo = value;
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="VarChar(64)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this._SerialNo = value;
				}
			}
		}
		
		[Column(Storage="_Quantity", DbType="SmallInt")]
		public System.Nullable<short> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Storage="_ItemPrice", DbType="Money")]
		public System.Nullable<decimal> ItemPrice
		{
			get
			{
				return this._ItemPrice;
			}
			set
			{
				if ((this._ItemPrice != value))
				{
					this._ItemPrice = value;
				}
			}
		}
		
		[Column(Storage="_ItemCost", DbType="Money")]
		public System.Nullable<decimal> ItemCost
		{
			get
			{
				return this._ItemCost;
			}
			set
			{
				if ((this._ItemCost != value))
				{
					this._ItemCost = value;
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_CompanyID", DbType="VarChar(5)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[Column(Storage="_ContractType", DbType="VarChar(32)")]
		public string ContractType
		{
			get
			{
				return this._ContractType;
			}
			set
			{
				if ((this._ContractType != value))
				{
					this._ContractType = value;
				}
			}
		}
		
		[Column(Storage="_LocationName", DbType="VarChar(80)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[Column(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this._Address3 = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(25)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_Postcode", DbType="VarChar(6)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this._Postcode = value;
				}
			}
		}
		
		[Column(Storage="_ServiceTypeID", DbType="VarChar(32)")]
		public string ServiceTypeID
		{
			get
			{
				return this._ServiceTypeID;
			}
			set
			{
				if ((this._ServiceTypeID != value))
				{
					this._ServiceTypeID = value;
				}
			}
		}
		
		[Column(Storage="_AccMgr", DbType="VarChar(25)")]
		public string AccMgr
		{
			get
			{
				return this._AccMgr;
			}
			set
			{
				if ((this._AccMgr != value))
				{
					this._AccMgr = value;
				}
			}
		}
		
		[Column(Storage="_Rep", DbType="VarChar(25)")]
		public string Rep
		{
			get
			{
				return this._Rep;
			}
			set
			{
				if ((this._Rep != value))
				{
					this._Rep = value;
				}
			}
		}
		
		[Column(Storage="_CE", DbType="Char(25)")]
		public string CE
		{
			get
			{
				return this._CE;
			}
			set
			{
				if ((this._CE != value))
				{
					this._CE = value;
				}
			}
		}
		
		[Column(Storage="_ContractID", DbType="VarChar(255)")]
		public string ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this._ContractID = value;
				}
			}
		}
		
		[Column(Storage="_InvFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvFrom
		{
			get
			{
				return this._InvFrom;
			}
			set
			{
				if ((this._InvFrom != value))
				{
					this._InvFrom = value;
				}
			}
		}
		
		[Column(Storage="_InvTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvTo
		{
			get
			{
				return this._InvTo;
			}
			set
			{
				if ((this._InvTo != value))
				{
					this._InvTo = value;
				}
			}
		}
		
		[Column(Storage="_Billed", DbType="Money")]
		public System.Nullable<decimal> Billed
		{
			get
			{
				return this._Billed;
			}
			set
			{
				if ((this._Billed != value))
				{
					this._Billed = value;
				}
			}
		}
		
		[Column(Storage="_CostToInt", DbType="Money")]
		public System.Nullable<decimal> CostToInt
		{
			get
			{
				return this._CostToInt;
			}
			set
			{
				if ((this._CostToInt != value))
				{
					this._CostToInt = value;
				}
			}
		}
		
		[Column(Storage="_VariationText", DbType="VarChar(256)")]
		public string VariationText
		{
			get
			{
				return this._VariationText;
			}
			set
			{
				if ((this._VariationText != value))
				{
					this._VariationText = value;
				}
			}
		}
		
		[Column(Storage="_ContractItemID", DbType="Int")]
		public System.Nullable<int> ContractItemID
		{
			get
			{
				return this._ContractItemID;
			}
			set
			{
				if ((this._ContractItemID != value))
				{
					this._ContractItemID = value;
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
	}
	
	public partial class INT_PDFInvoicesResult
	{
		
		private System.Nullable<int> _OrdNum;
		
		private System.Nullable<byte> _DefaultInvStyle;
		
		private System.Nullable<int> _HasProRata;
		
		private string _PDFInvoiceEmail;
		
		private string _PDFInvoicePath;
		
		private string _InvoiceDate;
		
		private string _RM;
		
		private string _EmailAddress;
		
		private string _OfficePhone;
		
		private string _RemittanceEmail;
		
		private string _NationalCreditManager;
		
		private string _CreditPhone;
		
		public INT_PDFInvoicesResult()
		{
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this._OrdNum = value;
				}
			}
		}
		
		[Column(Storage="_DefaultInvStyle", DbType="TinyInt")]
		public System.Nullable<byte> DefaultInvStyle
		{
			get
			{
				return this._DefaultInvStyle;
			}
			set
			{
				if ((this._DefaultInvStyle != value))
				{
					this._DefaultInvStyle = value;
				}
			}
		}
		
		[Column(Storage="_HasProRata", DbType="Int")]
		public System.Nullable<int> HasProRata
		{
			get
			{
				return this._HasProRata;
			}
			set
			{
				if ((this._HasProRata != value))
				{
					this._HasProRata = value;
				}
			}
		}
		
		[Column(Storage="_PDFInvoiceEmail", DbType="VarChar(1000)")]
		public string PDFInvoiceEmail
		{
			get
			{
				return this._PDFInvoiceEmail;
			}
			set
			{
				if ((this._PDFInvoiceEmail != value))
				{
					this._PDFInvoiceEmail = value;
				}
			}
		}
		
		[Column(Storage="_PDFInvoicePath", DbType="VarChar(114)")]
		public string PDFInvoicePath
		{
			get
			{
				return this._PDFInvoicePath;
			}
			set
			{
				if ((this._PDFInvoicePath != value))
				{
					this._PDFInvoicePath = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceDate", DbType="VarChar(10)")]
		public string InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[Column(Storage="_RM", DbType="VarChar(51)")]
		public string RM
		{
			get
			{
				return this._RM;
			}
			set
			{
				if ((this._RM != value))
				{
					this._RM = value;
				}
			}
		}
		
		[Column(Storage="_EmailAddress", DbType="VarChar(100)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this._EmailAddress = value;
				}
			}
		}
		
		[Column(Storage="_OfficePhone", DbType="VarChar(24)")]
		public string OfficePhone
		{
			get
			{
				return this._OfficePhone;
			}
			set
			{
				if ((this._OfficePhone != value))
				{
					this._OfficePhone = value;
				}
			}
		}
		
		[Column(Storage="_RemittanceEmail", DbType="VarChar(100)")]
		public string RemittanceEmail
		{
			get
			{
				return this._RemittanceEmail;
			}
			set
			{
				if ((this._RemittanceEmail != value))
				{
					this._RemittanceEmail = value;
				}
			}
		}
		
		[Column(Storage="_NationalCreditManager", DbType="VarChar(51)")]
		public string NationalCreditManager
		{
			get
			{
				return this._NationalCreditManager;
			}
			set
			{
				if ((this._NationalCreditManager != value))
				{
					this._NationalCreditManager = value;
				}
			}
		}
		
		[Column(Storage="_CreditPhone", DbType="VarChar(50)")]
		public string CreditPhone
		{
			get
			{
				return this._CreditPhone;
			}
			set
			{
				if ((this._CreditPhone != value))
				{
					this._CreditPhone = value;
				}
			}
		}
	}
	
	public partial class INT_PDFSingleInvoiceResult1
	{
		
		private System.Nullable<bool> _INT_TM_Invoice;
		
		private string _PDFInvoiceEmail;
		
		private string _PDFInvoicePath;
		
		private string _InvoiceDate;
		
		private string _RM;
		
		private string _EmailAddress;
		
		private string _OfficePhone;
		
		private string _RemittanceEmail;
		
		private System.Nullable<decimal> _InvTotal;
		
		private string _NationalCreditManager;
		
		private string _CreditPhone;
		
		public INT_PDFSingleInvoiceResult1()
		{
		}
		
		[Column(Storage="_INT_TM_Invoice", DbType="Bit")]
		public System.Nullable<bool> INT_TM_Invoice
		{
			get
			{
				return this._INT_TM_Invoice;
			}
			set
			{
				if ((this._INT_TM_Invoice != value))
				{
					this._INT_TM_Invoice = value;
				}
			}
		}
		
		[Column(Storage="_PDFInvoiceEmail", DbType="VarChar(1000)")]
		public string PDFInvoiceEmail
		{
			get
			{
				return this._PDFInvoiceEmail;
			}
			set
			{
				if ((this._PDFInvoiceEmail != value))
				{
					this._PDFInvoiceEmail = value;
				}
			}
		}
		
		[Column(Storage="_PDFInvoicePath", DbType="VarChar(114)")]
		public string PDFInvoicePath
		{
			get
			{
				return this._PDFInvoicePath;
			}
			set
			{
				if ((this._PDFInvoicePath != value))
				{
					this._PDFInvoicePath = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceDate", DbType="VarChar(10)")]
		public string InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[Column(Storage="_RM", DbType="VarChar(51)")]
		public string RM
		{
			get
			{
				return this._RM;
			}
			set
			{
				if ((this._RM != value))
				{
					this._RM = value;
				}
			}
		}
		
		[Column(Storage="_EmailAddress", DbType="VarChar(100)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this._EmailAddress = value;
				}
			}
		}
		
		[Column(Storage="_OfficePhone", DbType="VarChar(24)")]
		public string OfficePhone
		{
			get
			{
				return this._OfficePhone;
			}
			set
			{
				if ((this._OfficePhone != value))
				{
					this._OfficePhone = value;
				}
			}
		}
		
		[Column(Storage="_RemittanceEmail", DbType="VarChar(100)")]
		public string RemittanceEmail
		{
			get
			{
				return this._RemittanceEmail;
			}
			set
			{
				if ((this._RemittanceEmail != value))
				{
					this._RemittanceEmail = value;
				}
			}
		}
		
		[Column(Storage="_InvTotal", DbType="Money")]
		public System.Nullable<decimal> InvTotal
		{
			get
			{
				return this._InvTotal;
			}
			set
			{
				if ((this._InvTotal != value))
				{
					this._InvTotal = value;
				}
			}
		}
		
		[Column(Storage="_NationalCreditManager", DbType="VarChar(51)")]
		public string NationalCreditManager
		{
			get
			{
				return this._NationalCreditManager;
			}
			set
			{
				if ((this._NationalCreditManager != value))
				{
					this._NationalCreditManager = value;
				}
			}
		}
		
		[Column(Storage="_CreditPhone", DbType="VarChar(50)")]
		public string CreditPhone
		{
			get
			{
				return this._CreditPhone;
			}
			set
			{
				if ((this._CreditPhone != value))
				{
					this._CreditPhone = value;
				}
			}
		}
	}
	
	public partial class INT_PDFSingleInvoiceResult2
	{
		
		private System.Nullable<bool> _INT_TM_Invoice;
		
		private string _PDFInvoiceEmail;
		
		private string _PDFInvoicePath;
		
		private string _RM;
		
		private string _EmailAddress;
		
		private string _OfficePhone;
		
		private string _RemittanceEmail;
		
		private System.Nullable<decimal> _InvTotal;
		
		private string _NationalCreditManager;
		
		private string _CreditPhone;
		
		public INT_PDFSingleInvoiceResult2()
		{
		}
		
		[Column(Storage="_INT_TM_Invoice", DbType="Bit")]
		public System.Nullable<bool> INT_TM_Invoice
		{
			get
			{
				return this._INT_TM_Invoice;
			}
			set
			{
				if ((this._INT_TM_Invoice != value))
				{
					this._INT_TM_Invoice = value;
				}
			}
		}
		
		[Column(Storage="_PDFInvoiceEmail", DbType="VarChar(1000)")]
		public string PDFInvoiceEmail
		{
			get
			{
				return this._PDFInvoiceEmail;
			}
			set
			{
				if ((this._PDFInvoiceEmail != value))
				{
					this._PDFInvoiceEmail = value;
				}
			}
		}
		
		[Column(Storage="_PDFInvoicePath", DbType="VarChar(114)")]
		public string PDFInvoicePath
		{
			get
			{
				return this._PDFInvoicePath;
			}
			set
			{
				if ((this._PDFInvoicePath != value))
				{
					this._PDFInvoicePath = value;
				}
			}
		}
		
		[Column(Storage="_RM", DbType="VarChar(51)")]
		public string RM
		{
			get
			{
				return this._RM;
			}
			set
			{
				if ((this._RM != value))
				{
					this._RM = value;
				}
			}
		}
		
		[Column(Storage="_EmailAddress", DbType="VarChar(100)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this._EmailAddress = value;
				}
			}
		}
		
		[Column(Storage="_OfficePhone", DbType="VarChar(24)")]
		public string OfficePhone
		{
			get
			{
				return this._OfficePhone;
			}
			set
			{
				if ((this._OfficePhone != value))
				{
					this._OfficePhone = value;
				}
			}
		}
		
		[Column(Storage="_RemittanceEmail", DbType="VarChar(100)")]
		public string RemittanceEmail
		{
			get
			{
				return this._RemittanceEmail;
			}
			set
			{
				if ((this._RemittanceEmail != value))
				{
					this._RemittanceEmail = value;
				}
			}
		}
		
		[Column(Storage="_InvTotal", DbType="Money")]
		public System.Nullable<decimal> InvTotal
		{
			get
			{
				return this._InvTotal;
			}
			set
			{
				if ((this._InvTotal != value))
				{
					this._InvTotal = value;
				}
			}
		}
		
		[Column(Storage="_NationalCreditManager", DbType="VarChar(51)")]
		public string NationalCreditManager
		{
			get
			{
				return this._NationalCreditManager;
			}
			set
			{
				if ((this._NationalCreditManager != value))
				{
					this._NationalCreditManager = value;
				}
			}
		}
		
		[Column(Storage="_CreditPhone", DbType="VarChar(50)")]
		public string CreditPhone
		{
			get
			{
				return this._CreditPhone;
			}
			set
			{
				if ((this._CreditPhone != value))
				{
					this._CreditPhone = value;
				}
			}
		}
	}
	
	public partial class INT_Snapshot_RevenueGrowthReportUsingSnapshotResult
	{
		
		private System.Nullable<int> _SnapshotID;
		
		private System.Nullable<System.DateTime> _SnapShotDate;
		
		private System.Nullable<byte> _CompanyNum;
		
		private string _Company;
		
		private string _State;
		
		private System.Nullable<int> _SalesTeam;
		
		private string _SalesTeamName;
		
		private System.Nullable<decimal> _MonthlyTarget;
		
		private System.Nullable<decimal> _QuarterlyTarget;
		
		private System.Nullable<decimal> _YTDTarget;
		
		private string _SalesRep;
		
		private string _SalesRepName;
		
		private System.Nullable<int> _AccountID;
		
		private string _CustomerName;
		
		private string _RM;
		
		private string _RMName;
		
		private System.Nullable<decimal> _LastSnapshotTotal;
		
		private System.Nullable<decimal> _StateLastSnapshotTotal;
		
		private System.Nullable<decimal> _CompanyLastSnapshotTotal;
		
		private System.Nullable<decimal> _QuarterFirstSnapshotTotal;
		
		private System.Nullable<decimal> _StateQuarterFirstSnapshotTotal;
		
		private System.Nullable<decimal> _CompanyQuarterFirstSnapshotTotal;
		
		private System.Nullable<decimal> _YTDFirstSnapshotTotal;
		
		private System.Nullable<decimal> _StateYTDFirstSnapshotTotal;
		
		private System.Nullable<decimal> _CompanyYTDFirstSnapshotTotal;
		
		private System.Nullable<decimal> _MonthlyNonEndDateGrowth;
		
		private System.Nullable<decimal> _MonthlyEndDateGrowth;
		
		private System.Nullable<decimal> _QuarterlyNonEndDateGrowth;
		
		private System.Nullable<decimal> _QuarterlyEndDateGrowth;
		
		private System.Nullable<decimal> _YTDNonEndDateGrowth;
		
		private System.Nullable<decimal> _YTDEndDateGrowth;
		
		public INT_Snapshot_RevenueGrowthReportUsingSnapshotResult()
		{
		}
		
		[Column(Storage="_SnapshotID", DbType="Int")]
		public System.Nullable<int> SnapshotID
		{
			get
			{
				return this._SnapshotID;
			}
			set
			{
				if ((this._SnapshotID != value))
				{
					this._SnapshotID = value;
				}
			}
		}
		
		[Column(Storage="_SnapShotDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SnapShotDate
		{
			get
			{
				return this._SnapShotDate;
			}
			set
			{
				if ((this._SnapShotDate != value))
				{
					this._SnapShotDate = value;
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(55)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_SalesTeam", DbType="Int")]
		public System.Nullable<int> SalesTeam
		{
			get
			{
				return this._SalesTeam;
			}
			set
			{
				if ((this._SalesTeam != value))
				{
					this._SalesTeam = value;
				}
			}
		}
		
		[Column(Storage="_SalesTeamName", DbType="VarChar(50)")]
		public string SalesTeamName
		{
			get
			{
				return this._SalesTeamName;
			}
			set
			{
				if ((this._SalesTeamName != value))
				{
					this._SalesTeamName = value;
				}
			}
		}
		
		[Column(Storage="_MonthlyTarget", DbType="Money")]
		public System.Nullable<decimal> MonthlyTarget
		{
			get
			{
				return this._MonthlyTarget;
			}
			set
			{
				if ((this._MonthlyTarget != value))
				{
					this._MonthlyTarget = value;
				}
			}
		}
		
		[Column(Storage="_QuarterlyTarget", DbType="Money")]
		public System.Nullable<decimal> QuarterlyTarget
		{
			get
			{
				return this._QuarterlyTarget;
			}
			set
			{
				if ((this._QuarterlyTarget != value))
				{
					this._QuarterlyTarget = value;
				}
			}
		}
		
		[Column(Storage="_YTDTarget", DbType="Money")]
		public System.Nullable<decimal> YTDTarget
		{
			get
			{
				return this._YTDTarget;
			}
			set
			{
				if ((this._YTDTarget != value))
				{
					this._YTDTarget = value;
				}
			}
		}
		
		[Column(Storage="_SalesRep", DbType="VarChar(25)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					this._SalesRep = value;
				}
			}
		}
		
		[Column(Storage="_SalesRepName", DbType="VarChar(51)")]
		public string SalesRepName
		{
			get
			{
				return this._SalesRepName;
			}
			set
			{
				if ((this._SalesRepName != value))
				{
					this._SalesRepName = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_CustomerName", DbType="VarChar(80)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[Column(Storage="_RM", DbType="VarChar(25)")]
		public string RM
		{
			get
			{
				return this._RM;
			}
			set
			{
				if ((this._RM != value))
				{
					this._RM = value;
				}
			}
		}
		
		[Column(Storage="_RMName", DbType="VarChar(51)")]
		public string RMName
		{
			get
			{
				return this._RMName;
			}
			set
			{
				if ((this._RMName != value))
				{
					this._RMName = value;
				}
			}
		}
		
		[Column(Storage="_LastSnapshotTotal", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LastSnapshotTotal
		{
			get
			{
				return this._LastSnapshotTotal;
			}
			set
			{
				if ((this._LastSnapshotTotal != value))
				{
					this._LastSnapshotTotal = value;
				}
			}
		}
		
		[Column(Storage="_StateLastSnapshotTotal", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> StateLastSnapshotTotal
		{
			get
			{
				return this._StateLastSnapshotTotal;
			}
			set
			{
				if ((this._StateLastSnapshotTotal != value))
				{
					this._StateLastSnapshotTotal = value;
				}
			}
		}
		
		[Column(Storage="_CompanyLastSnapshotTotal", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> CompanyLastSnapshotTotal
		{
			get
			{
				return this._CompanyLastSnapshotTotal;
			}
			set
			{
				if ((this._CompanyLastSnapshotTotal != value))
				{
					this._CompanyLastSnapshotTotal = value;
				}
			}
		}
		
		[Column(Storage="_QuarterFirstSnapshotTotal", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> QuarterFirstSnapshotTotal
		{
			get
			{
				return this._QuarterFirstSnapshotTotal;
			}
			set
			{
				if ((this._QuarterFirstSnapshotTotal != value))
				{
					this._QuarterFirstSnapshotTotal = value;
				}
			}
		}
		
		[Column(Storage="_StateQuarterFirstSnapshotTotal", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> StateQuarterFirstSnapshotTotal
		{
			get
			{
				return this._StateQuarterFirstSnapshotTotal;
			}
			set
			{
				if ((this._StateQuarterFirstSnapshotTotal != value))
				{
					this._StateQuarterFirstSnapshotTotal = value;
				}
			}
		}
		
		[Column(Storage="_CompanyQuarterFirstSnapshotTotal", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> CompanyQuarterFirstSnapshotTotal
		{
			get
			{
				return this._CompanyQuarterFirstSnapshotTotal;
			}
			set
			{
				if ((this._CompanyQuarterFirstSnapshotTotal != value))
				{
					this._CompanyQuarterFirstSnapshotTotal = value;
				}
			}
		}
		
		[Column(Storage="_YTDFirstSnapshotTotal", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> YTDFirstSnapshotTotal
		{
			get
			{
				return this._YTDFirstSnapshotTotal;
			}
			set
			{
				if ((this._YTDFirstSnapshotTotal != value))
				{
					this._YTDFirstSnapshotTotal = value;
				}
			}
		}
		
		[Column(Storage="_StateYTDFirstSnapshotTotal", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> StateYTDFirstSnapshotTotal
		{
			get
			{
				return this._StateYTDFirstSnapshotTotal;
			}
			set
			{
				if ((this._StateYTDFirstSnapshotTotal != value))
				{
					this._StateYTDFirstSnapshotTotal = value;
				}
			}
		}
		
		[Column(Storage="_CompanyYTDFirstSnapshotTotal", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> CompanyYTDFirstSnapshotTotal
		{
			get
			{
				return this._CompanyYTDFirstSnapshotTotal;
			}
			set
			{
				if ((this._CompanyYTDFirstSnapshotTotal != value))
				{
					this._CompanyYTDFirstSnapshotTotal = value;
				}
			}
		}
		
		[Column(Storage="_MonthlyNonEndDateGrowth", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MonthlyNonEndDateGrowth
		{
			get
			{
				return this._MonthlyNonEndDateGrowth;
			}
			set
			{
				if ((this._MonthlyNonEndDateGrowth != value))
				{
					this._MonthlyNonEndDateGrowth = value;
				}
			}
		}
		
		[Column(Storage="_MonthlyEndDateGrowth", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MonthlyEndDateGrowth
		{
			get
			{
				return this._MonthlyEndDateGrowth;
			}
			set
			{
				if ((this._MonthlyEndDateGrowth != value))
				{
					this._MonthlyEndDateGrowth = value;
				}
			}
		}
		
		[Column(Storage="_QuarterlyNonEndDateGrowth", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> QuarterlyNonEndDateGrowth
		{
			get
			{
				return this._QuarterlyNonEndDateGrowth;
			}
			set
			{
				if ((this._QuarterlyNonEndDateGrowth != value))
				{
					this._QuarterlyNonEndDateGrowth = value;
				}
			}
		}
		
		[Column(Storage="_QuarterlyEndDateGrowth", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> QuarterlyEndDateGrowth
		{
			get
			{
				return this._QuarterlyEndDateGrowth;
			}
			set
			{
				if ((this._QuarterlyEndDateGrowth != value))
				{
					this._QuarterlyEndDateGrowth = value;
				}
			}
		}
		
		[Column(Storage="_YTDNonEndDateGrowth", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> YTDNonEndDateGrowth
		{
			get
			{
				return this._YTDNonEndDateGrowth;
			}
			set
			{
				if ((this._YTDNonEndDateGrowth != value))
				{
					this._YTDNonEndDateGrowth = value;
				}
			}
		}
		
		[Column(Storage="_YTDEndDateGrowth", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> YTDEndDateGrowth
		{
			get
			{
				return this._YTDEndDateGrowth;
			}
			set
			{
				if ((this._YTDEndDateGrowth != value))
				{
					this._YTDEndDateGrowth = value;
				}
			}
		}
	}
	
	public partial class INT_SnapshotComparisonReportResult
	{
		
		private string _CompanyID;
		
		private System.Nullable<byte> _CompanyNum;
		
		private System.Nullable<int> _AccountID;
		
		private string _Company;
		
		private string _Message;
		
		private System.Nullable<int> _ItemCount;
		
		private System.Nullable<decimal> _LineTotal;
		
		private System.Nullable<decimal> _LineTotalDiff;
		
		private System.Nullable<decimal> _ItemsAdded;
		
		private System.Nullable<decimal> _LineTotalAdded;
		
		private System.Nullable<System.DateTime> _CurrentDate;
		
		private System.Nullable<decimal> _ItemCount2;
		
		private System.Nullable<decimal> _LineTotal2;
		
		private System.Nullable<decimal> _ItemsDeleted;
		
		private System.Nullable<decimal> _LineTotalDeleted;
		
		private System.Nullable<System.DateTime> _SnapShotDate;
		
		public INT_SnapshotComparisonReportResult()
		{
		}
		
		[Column(Storage="_CompanyID", DbType="VarChar(5)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[Column(Storage="_CompanyNum", DbType="TinyInt")]
		public System.Nullable<byte> CompanyNum
		{
			get
			{
				return this._CompanyNum;
			}
			set
			{
				if ((this._CompanyNum != value))
				{
					this._CompanyNum = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_Message", DbType="VarChar(9)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[Column(Storage="_ItemCount", DbType="Int")]
		public System.Nullable<int> ItemCount
		{
			get
			{
				return this._ItemCount;
			}
			set
			{
				if ((this._ItemCount != value))
				{
					this._ItemCount = value;
				}
			}
		}
		
		[Column(Storage="_LineTotal", DbType="Money")]
		public System.Nullable<decimal> LineTotal
		{
			get
			{
				return this._LineTotal;
			}
			set
			{
				if ((this._LineTotal != value))
				{
					this._LineTotal = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalDiff", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalDiff
		{
			get
			{
				return this._LineTotalDiff;
			}
			set
			{
				if ((this._LineTotalDiff != value))
				{
					this._LineTotalDiff = value;
				}
			}
		}
		
		[Column(Storage="_ItemsAdded", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemsAdded
		{
			get
			{
				return this._ItemsAdded;
			}
			set
			{
				if ((this._ItemsAdded != value))
				{
					this._ItemsAdded = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalAdded", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalAdded
		{
			get
			{
				return this._LineTotalAdded;
			}
			set
			{
				if ((this._LineTotalAdded != value))
				{
					this._LineTotalAdded = value;
				}
			}
		}
		
		[Column(Storage="_CurrentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CurrentDate
		{
			get
			{
				return this._CurrentDate;
			}
			set
			{
				if ((this._CurrentDate != value))
				{
					this._CurrentDate = value;
				}
			}
		}
		
		[Column(Storage="_ItemCount2", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemCount2
		{
			get
			{
				return this._ItemCount2;
			}
			set
			{
				if ((this._ItemCount2 != value))
				{
					this._ItemCount2 = value;
				}
			}
		}
		
		[Column(Storage="_LineTotal2", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotal2
		{
			get
			{
				return this._LineTotal2;
			}
			set
			{
				if ((this._LineTotal2 != value))
				{
					this._LineTotal2 = value;
				}
			}
		}
		
		[Column(Storage="_ItemsDeleted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ItemsDeleted
		{
			get
			{
				return this._ItemsDeleted;
			}
			set
			{
				if ((this._ItemsDeleted != value))
				{
					this._ItemsDeleted = value;
				}
			}
		}
		
		[Column(Storage="_LineTotalDeleted", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> LineTotalDeleted
		{
			get
			{
				return this._LineTotalDeleted;
			}
			set
			{
				if ((this._LineTotalDeleted != value))
				{
					this._LineTotalDeleted = value;
				}
			}
		}
		
		[Column(Storage="_SnapShotDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SnapShotDate
		{
			get
			{
				return this._SnapShotDate;
			}
			set
			{
				if ((this._SnapShotDate != value))
				{
					this._SnapShotDate = value;
				}
			}
		}
	}
	
	public partial class INT_SoftInvoiceDetailResult
	{
		
		private string _RecordHeader;
		
		private System.Nullable<int> _ItemNum;
		
		private string _ProductCode;
		
		private string _ProductDescription;
		
		private string _UnitofMeasure;
		
		private string _UnitPrice;
		
		private string _Quantity;
		
		private System.Nullable<int> _MaterialDocumentNumber;
		
		private System.Nullable<int> _AccountingDocumentNumber;
		
		private System.Nullable<int> _CustomerPart;
		
		private string _PONumber;
		
		private System.Nullable<int> _POLineNumber;
		
		private System.Nullable<int> _OtherReferenceNumber;
		
		private System.Nullable<int> _ShipDate;
		
		private System.Nullable<int> _LineitemTax;
		
		private string _TotalLineAmount;
		
		private System.Nullable<int> _RailTruck_;
		
		private System.Nullable<int> _InvoiceLineDetail;
		
		private string _InvoiceFrom;
		
		private string _InvoiceTo;
		
		public INT_SoftInvoiceDetailResult()
		{
		}
		
		[Column(Storage="_RecordHeader", DbType="VarChar(1)")]
		public string RecordHeader
		{
			get
			{
				return this._RecordHeader;
			}
			set
			{
				if ((this._RecordHeader != value))
				{
					this._RecordHeader = value;
				}
			}
		}
		
		[Column(Storage="_ItemNum", DbType="Int")]
		public System.Nullable<int> ItemNum
		{
			get
			{
				return this._ItemNum;
			}
			set
			{
				if ((this._ItemNum != value))
				{
					this._ItemNum = value;
				}
			}
		}
		
		[Column(Storage="_ProductCode", DbType="VarChar(35)")]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this._ProductCode = value;
				}
			}
		}
		
		[Column(Storage="_ProductDescription", DbType="VarChar(2048)")]
		public string ProductDescription
		{
			get
			{
				return this._ProductDescription;
			}
			set
			{
				if ((this._ProductDescription != value))
				{
					this._ProductDescription = value;
				}
			}
		}
		
		[Column(Storage="_UnitofMeasure", DbType="VarChar(2)")]
		public string UnitofMeasure
		{
			get
			{
				return this._UnitofMeasure;
			}
			set
			{
				if ((this._UnitofMeasure != value))
				{
					this._UnitofMeasure = value;
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="VarChar(20)")]
		public string UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this._UnitPrice = value;
				}
			}
		}
		
		[Column(Storage="_Quantity", DbType="VarChar(20)")]
		public string Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[Column(Storage="_MaterialDocumentNumber", DbType="Int")]
		public System.Nullable<int> MaterialDocumentNumber
		{
			get
			{
				return this._MaterialDocumentNumber;
			}
			set
			{
				if ((this._MaterialDocumentNumber != value))
				{
					this._MaterialDocumentNumber = value;
				}
			}
		}
		
		[Column(Storage="_AccountingDocumentNumber", DbType="Int")]
		public System.Nullable<int> AccountingDocumentNumber
		{
			get
			{
				return this._AccountingDocumentNumber;
			}
			set
			{
				if ((this._AccountingDocumentNumber != value))
				{
					this._AccountingDocumentNumber = value;
				}
			}
		}
		
		[Column(Storage="_CustomerPart", DbType="Int")]
		public System.Nullable<int> CustomerPart
		{
			get
			{
				return this._CustomerPart;
			}
			set
			{
				if ((this._CustomerPart != value))
				{
					this._CustomerPart = value;
				}
			}
		}
		
		[Column(Storage="_PONumber", DbType="VarChar(64)")]
		public string PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this._PONumber = value;
				}
			}
		}
		
		[Column(Storage="_POLineNumber", DbType="Int")]
		public System.Nullable<int> POLineNumber
		{
			get
			{
				return this._POLineNumber;
			}
			set
			{
				if ((this._POLineNumber != value))
				{
					this._POLineNumber = value;
				}
			}
		}
		
		[Column(Storage="_OtherReferenceNumber", DbType="Int")]
		public System.Nullable<int> OtherReferenceNumber
		{
			get
			{
				return this._OtherReferenceNumber;
			}
			set
			{
				if ((this._OtherReferenceNumber != value))
				{
					this._OtherReferenceNumber = value;
				}
			}
		}
		
		[Column(Storage="_ShipDate", DbType="Int")]
		public System.Nullable<int> ShipDate
		{
			get
			{
				return this._ShipDate;
			}
			set
			{
				if ((this._ShipDate != value))
				{
					this._ShipDate = value;
				}
			}
		}
		
		[Column(Storage="_LineitemTax", DbType="Int")]
		public System.Nullable<int> LineitemTax
		{
			get
			{
				return this._LineitemTax;
			}
			set
			{
				if ((this._LineitemTax != value))
				{
					this._LineitemTax = value;
				}
			}
		}
		
		[Column(Storage="_TotalLineAmount", DbType="VarChar(20)")]
		public string TotalLineAmount
		{
			get
			{
				return this._TotalLineAmount;
			}
			set
			{
				if ((this._TotalLineAmount != value))
				{
					this._TotalLineAmount = value;
				}
			}
		}
		
		[Column(Name="RailTruck#", Storage="_RailTruck_", DbType="Int")]
		public System.Nullable<int> RailTruck_
		{
			get
			{
				return this._RailTruck_;
			}
			set
			{
				if ((this._RailTruck_ != value))
				{
					this._RailTruck_ = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceLineDetail", DbType="Int")]
		public System.Nullable<int> InvoiceLineDetail
		{
			get
			{
				return this._InvoiceLineDetail;
			}
			set
			{
				if ((this._InvoiceLineDetail != value))
				{
					this._InvoiceLineDetail = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceFrom", DbType="VarChar(10)")]
		public string InvoiceFrom
		{
			get
			{
				return this._InvoiceFrom;
			}
			set
			{
				if ((this._InvoiceFrom != value))
				{
					this._InvoiceFrom = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceTo", DbType="VarChar(10)")]
		public string InvoiceTo
		{
			get
			{
				return this._InvoiceTo;
			}
			set
			{
				if ((this._InvoiceTo != value))
				{
					this._InvoiceTo = value;
				}
			}
		}
	}
	
	public partial class INT_SoftInvoiceFooterResult
	{
		
		private string _RecordHeader;
		
		private System.Nullable<int> _OrdNum;
		
		private System.Nullable<int> _FuelAmount;
		
		private System.Nullable<int> _Freight;
		
		private System.Nullable<int> _MiscAmount;
		
		private System.Nullable<int> _DiscountPercentage;
		
		private System.Nullable<int> _DiscountAmount;
		
		private System.Nullable<int> _DiscountDate;
		
		private System.Nullable<decimal> _TaxRate;
		
		private string _TotalAmount;
		
		private string _TotalTaxAmount;
		
		private string _GrossTotal;
		
		public INT_SoftInvoiceFooterResult()
		{
		}
		
		[Column(Storage="_RecordHeader", DbType="VarChar(1)")]
		public string RecordHeader
		{
			get
			{
				return this._RecordHeader;
			}
			set
			{
				if ((this._RecordHeader != value))
				{
					this._RecordHeader = value;
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this._OrdNum = value;
				}
			}
		}
		
		[Column(Storage="_FuelAmount", DbType="Int")]
		public System.Nullable<int> FuelAmount
		{
			get
			{
				return this._FuelAmount;
			}
			set
			{
				if ((this._FuelAmount != value))
				{
					this._FuelAmount = value;
				}
			}
		}
		
		[Column(Storage="_Freight", DbType="Int")]
		public System.Nullable<int> Freight
		{
			get
			{
				return this._Freight;
			}
			set
			{
				if ((this._Freight != value))
				{
					this._Freight = value;
				}
			}
		}
		
		[Column(Storage="_MiscAmount", DbType="Int")]
		public System.Nullable<int> MiscAmount
		{
			get
			{
				return this._MiscAmount;
			}
			set
			{
				if ((this._MiscAmount != value))
				{
					this._MiscAmount = value;
				}
			}
		}
		
		[Column(Storage="_DiscountPercentage", DbType="Int")]
		public System.Nullable<int> DiscountPercentage
		{
			get
			{
				return this._DiscountPercentage;
			}
			set
			{
				if ((this._DiscountPercentage != value))
				{
					this._DiscountPercentage = value;
				}
			}
		}
		
		[Column(Storage="_DiscountAmount", DbType="Int")]
		public System.Nullable<int> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this._DiscountAmount = value;
				}
			}
		}
		
		[Column(Storage="_DiscountDate", DbType="Int")]
		public System.Nullable<int> DiscountDate
		{
			get
			{
				return this._DiscountDate;
			}
			set
			{
				if ((this._DiscountDate != value))
				{
					this._DiscountDate = value;
				}
			}
		}
		
		[Column(Storage="_TaxRate", DbType="Decimal(15,6)")]
		public System.Nullable<decimal> TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this._TaxRate = value;
				}
			}
		}
		
		[Column(Storage="_TotalAmount", DbType="VarChar(20)")]
		public string TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
		
		[Column(Storage="_TotalTaxAmount", DbType="VarChar(20)")]
		public string TotalTaxAmount
		{
			get
			{
				return this._TotalTaxAmount;
			}
			set
			{
				if ((this._TotalTaxAmount != value))
				{
					this._TotalTaxAmount = value;
				}
			}
		}
		
		[Column(Storage="_GrossTotal", DbType="VarChar(20)")]
		public string GrossTotal
		{
			get
			{
				return this._GrossTotal;
			}
			set
			{
				if ((this._GrossTotal != value))
				{
					this._GrossTotal = value;
				}
			}
		}
	}
	
	public partial class INT_SoftInvoiceHeaderResult
	{
		
		private string _SoftInvoicePath;
		
		private string _RecordHeader;
		
		private string _InvoiceCreditNote;
		
		private System.Nullable<int> _InvoiceNumber;
		
		private string _InvoiceDate;
		
		private System.Nullable<int> _ShipDate;
		
		private System.Nullable<int> _InvoiceDueDate;
		
		private System.Nullable<int> _PurchaseOrderNumber;
		
		private System.Nullable<int> _SupplierOrderNumber;
		
		private string _CustomerOB10Number;
		
		private string _BillToCustomerNumber;
		
		private string _BillToCustomerName;
		
		private string _BillToAddress1;
		
		private string _BillToAddress2;
		
		private string _BilltoCity;
		
		private string _BilltoState;
		
		private string _BilltoZipCode;
		
		private System.Nullable<int> _ShiptoAccountNumber;
		
		private string _ShiptoName;
		
		private string _ShiptoAddress1;
		
		private string _ShiptoAddress2;
		
		private string _ShiptoCity;
		
		private string _ShiptoState;
		
		private string _ShiptoZipCode;
		
		private string _CurrencyCode;
		
		private System.Nullable<int> _ProofofDelivery;
		
		private System.Nullable<int> _ShipFromName;
		
		private System.Nullable<int> _ShipFromAddress1;
		
		private System.Nullable<int> _ShipFromAddress2;
		
		private System.Nullable<int> _ShipFromCity;
		
		private System.Nullable<int> _ShipFromState;
		
		private System.Nullable<int> _ShipFromZipCode;
		
		private string _RemittoName;
		
		private string _RemittoAddress1;
		
		private string _RemittoAddress2;
		
		private string _RemittoCity;
		
		private string _RemittoState;
		
		private string _RemittoZipCode;
		
		private string _BankName;
		
		private string _BankAccountNumber;
		
		private string _BankRoutingNumber;
		
		private System.Nullable<int> _InvoiceDetail;
		
		public INT_SoftInvoiceHeaderResult()
		{
		}
		
		[Column(Storage="_SoftInvoicePath", DbType="VarChar(125)")]
		public string SoftInvoicePath
		{
			get
			{
				return this._SoftInvoicePath;
			}
			set
			{
				if ((this._SoftInvoicePath != value))
				{
					this._SoftInvoicePath = value;
				}
			}
		}
		
		[Column(Storage="_RecordHeader", DbType="VarChar(1)")]
		public string RecordHeader
		{
			get
			{
				return this._RecordHeader;
			}
			set
			{
				if ((this._RecordHeader != value))
				{
					this._RecordHeader = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceCreditNote", DbType="VarChar(11)")]
		public string InvoiceCreditNote
		{
			get
			{
				return this._InvoiceCreditNote;
			}
			set
			{
				if ((this._InvoiceCreditNote != value))
				{
					this._InvoiceCreditNote = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceNumber", DbType="Int")]
		public System.Nullable<int> InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceDate", DbType="VarChar(10)")]
		public string InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[Column(Storage="_ShipDate", DbType="Int")]
		public System.Nullable<int> ShipDate
		{
			get
			{
				return this._ShipDate;
			}
			set
			{
				if ((this._ShipDate != value))
				{
					this._ShipDate = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceDueDate", DbType="Int")]
		public System.Nullable<int> InvoiceDueDate
		{
			get
			{
				return this._InvoiceDueDate;
			}
			set
			{
				if ((this._InvoiceDueDate != value))
				{
					this._InvoiceDueDate = value;
				}
			}
		}
		
		[Column(Storage="_PurchaseOrderNumber", DbType="Int")]
		public System.Nullable<int> PurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderNumber;
			}
			set
			{
				if ((this._PurchaseOrderNumber != value))
				{
					this._PurchaseOrderNumber = value;
				}
			}
		}
		
		[Column(Storage="_SupplierOrderNumber", DbType="Int")]
		public System.Nullable<int> SupplierOrderNumber
		{
			get
			{
				return this._SupplierOrderNumber;
			}
			set
			{
				if ((this._SupplierOrderNumber != value))
				{
					this._SupplierOrderNumber = value;
				}
			}
		}
		
		[Column(Storage="_CustomerOB10Number", DbType="VarChar(12)")]
		public string CustomerOB10Number
		{
			get
			{
				return this._CustomerOB10Number;
			}
			set
			{
				if ((this._CustomerOB10Number != value))
				{
					this._CustomerOB10Number = value;
				}
			}
		}
		
		[Column(Storage="_BillToCustomerNumber", DbType="VarChar(12)")]
		public string BillToCustomerNumber
		{
			get
			{
				return this._BillToCustomerNumber;
			}
			set
			{
				if ((this._BillToCustomerNumber != value))
				{
					this._BillToCustomerNumber = value;
				}
			}
		}
		
		[Column(Storage="_BillToCustomerName", DbType="VarChar(29)")]
		public string BillToCustomerName
		{
			get
			{
				return this._BillToCustomerName;
			}
			set
			{
				if ((this._BillToCustomerName != value))
				{
					this._BillToCustomerName = value;
				}
			}
		}
		
		[Column(Storage="_BillToAddress1", DbType="VarChar(16)")]
		public string BillToAddress1
		{
			get
			{
				return this._BillToAddress1;
			}
			set
			{
				if ((this._BillToAddress1 != value))
				{
					this._BillToAddress1 = value;
				}
			}
		}
		
		[Column(Storage="_BillToAddress2", DbType="VarChar(10)")]
		public string BillToAddress2
		{
			get
			{
				return this._BillToAddress2;
			}
			set
			{
				if ((this._BillToAddress2 != value))
				{
					this._BillToAddress2 = value;
				}
			}
		}
		
		[Column(Storage="_BilltoCity", DbType="VarChar(9)")]
		public string BilltoCity
		{
			get
			{
				return this._BilltoCity;
			}
			set
			{
				if ((this._BilltoCity != value))
				{
					this._BilltoCity = value;
				}
			}
		}
		
		[Column(Storage="_BilltoState", DbType="VarChar(3)")]
		public string BilltoState
		{
			get
			{
				return this._BilltoState;
			}
			set
			{
				if ((this._BilltoState != value))
				{
					this._BilltoState = value;
				}
			}
		}
		
		[Column(Storage="_BilltoZipCode", DbType="VarChar(4)")]
		public string BilltoZipCode
		{
			get
			{
				return this._BilltoZipCode;
			}
			set
			{
				if ((this._BilltoZipCode != value))
				{
					this._BilltoZipCode = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoAccountNumber", DbType="Int")]
		public System.Nullable<int> ShiptoAccountNumber
		{
			get
			{
				return this._ShiptoAccountNumber;
			}
			set
			{
				if ((this._ShiptoAccountNumber != value))
				{
					this._ShiptoAccountNumber = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoName", DbType="VarChar(80)")]
		public string ShiptoName
		{
			get
			{
				return this._ShiptoName;
			}
			set
			{
				if ((this._ShiptoName != value))
				{
					this._ShiptoName = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoAddress1", DbType="VarChar(8000)")]
		public string ShiptoAddress1
		{
			get
			{
				return this._ShiptoAddress1;
			}
			set
			{
				if ((this._ShiptoAddress1 != value))
				{
					this._ShiptoAddress1 = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoAddress2", DbType="VarChar(8000)")]
		public string ShiptoAddress2
		{
			get
			{
				return this._ShiptoAddress2;
			}
			set
			{
				if ((this._ShiptoAddress2 != value))
				{
					this._ShiptoAddress2 = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoCity", DbType="VarChar(25)")]
		public string ShiptoCity
		{
			get
			{
				return this._ShiptoCity;
			}
			set
			{
				if ((this._ShiptoCity != value))
				{
					this._ShiptoCity = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoState", DbType="VarChar(5)")]
		public string ShiptoState
		{
			get
			{
				return this._ShiptoState;
			}
			set
			{
				if ((this._ShiptoState != value))
				{
					this._ShiptoState = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoZipCode", DbType="VarChar(6)")]
		public string ShiptoZipCode
		{
			get
			{
				return this._ShiptoZipCode;
			}
			set
			{
				if ((this._ShiptoZipCode != value))
				{
					this._ShiptoZipCode = value;
				}
			}
		}
		
		[Column(Storage="_CurrencyCode", DbType="VarChar(3)")]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this._CurrencyCode = value;
				}
			}
		}
		
		[Column(Storage="_ProofofDelivery", DbType="Int")]
		public System.Nullable<int> ProofofDelivery
		{
			get
			{
				return this._ProofofDelivery;
			}
			set
			{
				if ((this._ProofofDelivery != value))
				{
					this._ProofofDelivery = value;
				}
			}
		}
		
		[Column(Storage="_ShipFromName", DbType="Int")]
		public System.Nullable<int> ShipFromName
		{
			get
			{
				return this._ShipFromName;
			}
			set
			{
				if ((this._ShipFromName != value))
				{
					this._ShipFromName = value;
				}
			}
		}
		
		[Column(Storage="_ShipFromAddress1", DbType="Int")]
		public System.Nullable<int> ShipFromAddress1
		{
			get
			{
				return this._ShipFromAddress1;
			}
			set
			{
				if ((this._ShipFromAddress1 != value))
				{
					this._ShipFromAddress1 = value;
				}
			}
		}
		
		[Column(Storage="_ShipFromAddress2", DbType="Int")]
		public System.Nullable<int> ShipFromAddress2
		{
			get
			{
				return this._ShipFromAddress2;
			}
			set
			{
				if ((this._ShipFromAddress2 != value))
				{
					this._ShipFromAddress2 = value;
				}
			}
		}
		
		[Column(Storage="_ShipFromCity", DbType="Int")]
		public System.Nullable<int> ShipFromCity
		{
			get
			{
				return this._ShipFromCity;
			}
			set
			{
				if ((this._ShipFromCity != value))
				{
					this._ShipFromCity = value;
				}
			}
		}
		
		[Column(Storage="_ShipFromState", DbType="Int")]
		public System.Nullable<int> ShipFromState
		{
			get
			{
				return this._ShipFromState;
			}
			set
			{
				if ((this._ShipFromState != value))
				{
					this._ShipFromState = value;
				}
			}
		}
		
		[Column(Storage="_ShipFromZipCode", DbType="Int")]
		public System.Nullable<int> ShipFromZipCode
		{
			get
			{
				return this._ShipFromZipCode;
			}
			set
			{
				if ((this._ShipFromZipCode != value))
				{
					this._ShipFromZipCode = value;
				}
			}
		}
		
		[Column(Storage="_RemittoName", DbType="VarChar(19)")]
		public string RemittoName
		{
			get
			{
				return this._RemittoName;
			}
			set
			{
				if ((this._RemittoName != value))
				{
					this._RemittoName = value;
				}
			}
		}
		
		[Column(Storage="_RemittoAddress1", DbType="VarChar(26)")]
		public string RemittoAddress1
		{
			get
			{
				return this._RemittoAddress1;
			}
			set
			{
				if ((this._RemittoAddress1 != value))
				{
					this._RemittoAddress1 = value;
				}
			}
		}
		
		[Column(Storage="_RemittoAddress2", DbType="VarChar(11)")]
		public string RemittoAddress2
		{
			get
			{
				return this._RemittoAddress2;
			}
			set
			{
				if ((this._RemittoAddress2 != value))
				{
					this._RemittoAddress2 = value;
				}
			}
		}
		
		[Column(Storage="_RemittoCity", DbType="VarChar(6)")]
		public string RemittoCity
		{
			get
			{
				return this._RemittoCity;
			}
			set
			{
				if ((this._RemittoCity != value))
				{
					this._RemittoCity = value;
				}
			}
		}
		
		[Column(Storage="_RemittoState", DbType="VarChar(3)")]
		public string RemittoState
		{
			get
			{
				return this._RemittoState;
			}
			set
			{
				if ((this._RemittoState != value))
				{
					this._RemittoState = value;
				}
			}
		}
		
		[Column(Storage="_RemittoZipCode", DbType="VarChar(4)")]
		public string RemittoZipCode
		{
			get
			{
				return this._RemittoZipCode;
			}
			set
			{
				if ((this._RemittoZipCode != value))
				{
					this._RemittoZipCode = value;
				}
			}
		}
		
		[Column(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[Column(Storage="_BankAccountNumber", DbType="VarChar(15)")]
		public string BankAccountNumber
		{
			get
			{
				return this._BankAccountNumber;
			}
			set
			{
				if ((this._BankAccountNumber != value))
				{
					this._BankAccountNumber = value;
				}
			}
		}
		
		[Column(Storage="_BankRoutingNumber", DbType="VarChar(15)")]
		public string BankRoutingNumber
		{
			get
			{
				return this._BankRoutingNumber;
			}
			set
			{
				if ((this._BankRoutingNumber != value))
				{
					this._BankRoutingNumber = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceDetail", DbType="Int")]
		public System.Nullable<int> InvoiceDetail
		{
			get
			{
				return this._InvoiceDetail;
			}
			set
			{
				if ((this._InvoiceDetail != value))
				{
					this._InvoiceDetail = value;
				}
			}
		}
	}
	
	public partial class INT_SoftTMInvoiceDetailResult
	{
		
		private string _RecordHeader;
		
		private System.Nullable<int> _ItemNum;
		
		private string _ProductCode;
		
		private string _ProductDescription;
		
		private string _UnitofMeasure;
		
		private string _UnitPrice;
		
		private string _Quantity;
		
		private System.Nullable<int> _MaterialDocumentNumber;
		
		private System.Nullable<int> _AccountingDocumentNumber;
		
		private System.Nullable<int> _CustomerPart;
		
		private System.Nullable<int> _PONumber;
		
		private System.Nullable<int> _POLineNumber;
		
		private System.Nullable<int> _OtherReferenceNumber;
		
		private System.Nullable<int> _ShipDate;
		
		private System.Nullable<int> _LineitemTax;
		
		private string _TotalLineAmount;
		
		private System.Nullable<int> _RailTruck_;
		
		private System.Nullable<int> _InvoiceLineDetail;
		
		private System.Nullable<int> _InvoiceFrom;
		
		private System.Nullable<int> _InvoiceTo;
		
		public INT_SoftTMInvoiceDetailResult()
		{
		}
		
		[Column(Storage="_RecordHeader", DbType="VarChar(1)")]
		public string RecordHeader
		{
			get
			{
				return this._RecordHeader;
			}
			set
			{
				if ((this._RecordHeader != value))
				{
					this._RecordHeader = value;
				}
			}
		}
		
		[Column(Storage="_ItemNum", DbType="Int")]
		public System.Nullable<int> ItemNum
		{
			get
			{
				return this._ItemNum;
			}
			set
			{
				if ((this._ItemNum != value))
				{
					this._ItemNum = value;
				}
			}
		}
		
		[Column(Storage="_ProductCode", DbType="VarChar(16)")]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this._ProductCode = value;
				}
			}
		}
		
		[Column(Storage="_ProductDescription", DbType="VarChar(16)")]
		public string ProductDescription
		{
			get
			{
				return this._ProductDescription;
			}
			set
			{
				if ((this._ProductDescription != value))
				{
					this._ProductDescription = value;
				}
			}
		}
		
		[Column(Storage="_UnitofMeasure", DbType="VarChar(2)")]
		public string UnitofMeasure
		{
			get
			{
				return this._UnitofMeasure;
			}
			set
			{
				if ((this._UnitofMeasure != value))
				{
					this._UnitofMeasure = value;
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="VarChar(20)")]
		public string UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this._UnitPrice = value;
				}
			}
		}
		
		[Column(Storage="_Quantity", DbType="VarChar(20)")]
		public string Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[Column(Storage="_MaterialDocumentNumber", DbType="Int")]
		public System.Nullable<int> MaterialDocumentNumber
		{
			get
			{
				return this._MaterialDocumentNumber;
			}
			set
			{
				if ((this._MaterialDocumentNumber != value))
				{
					this._MaterialDocumentNumber = value;
				}
			}
		}
		
		[Column(Storage="_AccountingDocumentNumber", DbType="Int")]
		public System.Nullable<int> AccountingDocumentNumber
		{
			get
			{
				return this._AccountingDocumentNumber;
			}
			set
			{
				if ((this._AccountingDocumentNumber != value))
				{
					this._AccountingDocumentNumber = value;
				}
			}
		}
		
		[Column(Storage="_CustomerPart", DbType="Int")]
		public System.Nullable<int> CustomerPart
		{
			get
			{
				return this._CustomerPart;
			}
			set
			{
				if ((this._CustomerPart != value))
				{
					this._CustomerPart = value;
				}
			}
		}
		
		[Column(Storage="_PONumber", DbType="Int")]
		public System.Nullable<int> PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this._PONumber = value;
				}
			}
		}
		
		[Column(Storage="_POLineNumber", DbType="Int")]
		public System.Nullable<int> POLineNumber
		{
			get
			{
				return this._POLineNumber;
			}
			set
			{
				if ((this._POLineNumber != value))
				{
					this._POLineNumber = value;
				}
			}
		}
		
		[Column(Storage="_OtherReferenceNumber", DbType="Int")]
		public System.Nullable<int> OtherReferenceNumber
		{
			get
			{
				return this._OtherReferenceNumber;
			}
			set
			{
				if ((this._OtherReferenceNumber != value))
				{
					this._OtherReferenceNumber = value;
				}
			}
		}
		
		[Column(Storage="_ShipDate", DbType="Int")]
		public System.Nullable<int> ShipDate
		{
			get
			{
				return this._ShipDate;
			}
			set
			{
				if ((this._ShipDate != value))
				{
					this._ShipDate = value;
				}
			}
		}
		
		[Column(Storage="_LineitemTax", DbType="Int")]
		public System.Nullable<int> LineitemTax
		{
			get
			{
				return this._LineitemTax;
			}
			set
			{
				if ((this._LineitemTax != value))
				{
					this._LineitemTax = value;
				}
			}
		}
		
		[Column(Storage="_TotalLineAmount", DbType="VarChar(20)")]
		public string TotalLineAmount
		{
			get
			{
				return this._TotalLineAmount;
			}
			set
			{
				if ((this._TotalLineAmount != value))
				{
					this._TotalLineAmount = value;
				}
			}
		}
		
		[Column(Name="RailTruck#", Storage="_RailTruck_", DbType="Int")]
		public System.Nullable<int> RailTruck_
		{
			get
			{
				return this._RailTruck_;
			}
			set
			{
				if ((this._RailTruck_ != value))
				{
					this._RailTruck_ = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceLineDetail", DbType="Int")]
		public System.Nullable<int> InvoiceLineDetail
		{
			get
			{
				return this._InvoiceLineDetail;
			}
			set
			{
				if ((this._InvoiceLineDetail != value))
				{
					this._InvoiceLineDetail = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceFrom", DbType="Int")]
		public System.Nullable<int> InvoiceFrom
		{
			get
			{
				return this._InvoiceFrom;
			}
			set
			{
				if ((this._InvoiceFrom != value))
				{
					this._InvoiceFrom = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceTo", DbType="Int")]
		public System.Nullable<int> InvoiceTo
		{
			get
			{
				return this._InvoiceTo;
			}
			set
			{
				if ((this._InvoiceTo != value))
				{
					this._InvoiceTo = value;
				}
			}
		}
	}
	
	public partial class INT_SoftTMInvoiceFooterResult
	{
		
		private string _RecordHeader;
		
		private System.Nullable<int> _OrdNum;
		
		private System.Nullable<int> _FuelAmount;
		
		private System.Nullable<int> _Freight;
		
		private System.Nullable<int> _MiscAmount;
		
		private System.Nullable<int> _DiscountPercentage;
		
		private System.Nullable<int> _DiscountAmount;
		
		private System.Nullable<int> _DiscountDate;
		
		private System.Nullable<decimal> _TaxRate;
		
		private string _TotalAmount;
		
		private string _TotalTaxAmount;
		
		private string _GrossTotal;
		
		public INT_SoftTMInvoiceFooterResult()
		{
		}
		
		[Column(Storage="_RecordHeader", DbType="VarChar(1)")]
		public string RecordHeader
		{
			get
			{
				return this._RecordHeader;
			}
			set
			{
				if ((this._RecordHeader != value))
				{
					this._RecordHeader = value;
				}
			}
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this._OrdNum = value;
				}
			}
		}
		
		[Column(Storage="_FuelAmount", DbType="Int")]
		public System.Nullable<int> FuelAmount
		{
			get
			{
				return this._FuelAmount;
			}
			set
			{
				if ((this._FuelAmount != value))
				{
					this._FuelAmount = value;
				}
			}
		}
		
		[Column(Storage="_Freight", DbType="Int")]
		public System.Nullable<int> Freight
		{
			get
			{
				return this._Freight;
			}
			set
			{
				if ((this._Freight != value))
				{
					this._Freight = value;
				}
			}
		}
		
		[Column(Storage="_MiscAmount", DbType="Int")]
		public System.Nullable<int> MiscAmount
		{
			get
			{
				return this._MiscAmount;
			}
			set
			{
				if ((this._MiscAmount != value))
				{
					this._MiscAmount = value;
				}
			}
		}
		
		[Column(Storage="_DiscountPercentage", DbType="Int")]
		public System.Nullable<int> DiscountPercentage
		{
			get
			{
				return this._DiscountPercentage;
			}
			set
			{
				if ((this._DiscountPercentage != value))
				{
					this._DiscountPercentage = value;
				}
			}
		}
		
		[Column(Storage="_DiscountAmount", DbType="Int")]
		public System.Nullable<int> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this._DiscountAmount = value;
				}
			}
		}
		
		[Column(Storage="_DiscountDate", DbType="Int")]
		public System.Nullable<int> DiscountDate
		{
			get
			{
				return this._DiscountDate;
			}
			set
			{
				if ((this._DiscountDate != value))
				{
					this._DiscountDate = value;
				}
			}
		}
		
		[Column(Storage="_TaxRate", DbType="Decimal(15,6)")]
		public System.Nullable<decimal> TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this._TaxRate = value;
				}
			}
		}
		
		[Column(Storage="_TotalAmount", DbType="VarChar(20)")]
		public string TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
		
		[Column(Storage="_TotalTaxAmount", DbType="VarChar(20)")]
		public string TotalTaxAmount
		{
			get
			{
				return this._TotalTaxAmount;
			}
			set
			{
				if ((this._TotalTaxAmount != value))
				{
					this._TotalTaxAmount = value;
				}
			}
		}
		
		[Column(Storage="_GrossTotal", DbType="VarChar(20)")]
		public string GrossTotal
		{
			get
			{
				return this._GrossTotal;
			}
			set
			{
				if ((this._GrossTotal != value))
				{
					this._GrossTotal = value;
				}
			}
		}
	}
	
	public partial class INT_SoftTMInvoiceHeaderResult
	{
		
		private string _SoftInvoicePath;
		
		private string _RecordHeader;
		
		private string _InvoiceCreditNote;
		
		private System.Nullable<int> _InvoiceNumber;
		
		private string _InvoiceDate;
		
		private System.Nullable<int> _ShipDate;
		
		private System.Nullable<int> _InvoiceDueDate;
		
		private string _PurchaseOrderNumber;
		
		private System.Nullable<int> _SupplierOrderNumber;
		
		private string _CustomerOB10Number;
		
		private string _BillToCustomerNumber;
		
		private string _BillToCustomerName;
		
		private string _BillToAddress1;
		
		private string _BillToAddress2;
		
		private string _BilltoCity;
		
		private string _BilltoState;
		
		private string _BilltoZipCode;
		
		private System.Nullable<int> _ShiptoAccountNumber;
		
		private string _ShiptoName;
		
		private string _ShiptoAddress1;
		
		private string _ShiptoAddress2;
		
		private string _ShiptoCity;
		
		private string _ShiptoState;
		
		private string _ShiptoZipCode;
		
		private string _CurrencyCode;
		
		private System.Nullable<int> _ProofofDelivery;
		
		private System.Nullable<int> _ShipFromName;
		
		private System.Nullable<int> _ShipFromAddress1;
		
		private System.Nullable<int> _ShipFromAddress2;
		
		private System.Nullable<int> _ShipFromCity;
		
		private System.Nullable<int> _ShipFromState;
		
		private System.Nullable<int> _ShipFromZipCode;
		
		private string _RemittoName;
		
		private string _RemittoAddress1;
		
		private string _RemittoAddress2;
		
		private string _RemittoCity;
		
		private string _RemittoState;
		
		private string _RemittoZipCode;
		
		private string _BankName;
		
		private string _BankAccountNumber;
		
		private string _BankRoutingNumber;
		
		private System.Nullable<int> _InvoiceDetail;
		
		public INT_SoftTMInvoiceHeaderResult()
		{
		}
		
		[Column(Storage="_SoftInvoicePath", DbType="VarChar(125)")]
		public string SoftInvoicePath
		{
			get
			{
				return this._SoftInvoicePath;
			}
			set
			{
				if ((this._SoftInvoicePath != value))
				{
					this._SoftInvoicePath = value;
				}
			}
		}
		
		[Column(Storage="_RecordHeader", DbType="VarChar(1)")]
		public string RecordHeader
		{
			get
			{
				return this._RecordHeader;
			}
			set
			{
				if ((this._RecordHeader != value))
				{
					this._RecordHeader = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceCreditNote", DbType="VarChar(11)")]
		public string InvoiceCreditNote
		{
			get
			{
				return this._InvoiceCreditNote;
			}
			set
			{
				if ((this._InvoiceCreditNote != value))
				{
					this._InvoiceCreditNote = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceNumber", DbType="Int")]
		public System.Nullable<int> InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceDate", DbType="VarChar(10)")]
		public string InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[Column(Storage="_ShipDate", DbType="Int")]
		public System.Nullable<int> ShipDate
		{
			get
			{
				return this._ShipDate;
			}
			set
			{
				if ((this._ShipDate != value))
				{
					this._ShipDate = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceDueDate", DbType="Int")]
		public System.Nullable<int> InvoiceDueDate
		{
			get
			{
				return this._InvoiceDueDate;
			}
			set
			{
				if ((this._InvoiceDueDate != value))
				{
					this._InvoiceDueDate = value;
				}
			}
		}
		
		[Column(Storage="_PurchaseOrderNumber", DbType="VarChar(57)")]
		public string PurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderNumber;
			}
			set
			{
				if ((this._PurchaseOrderNumber != value))
				{
					this._PurchaseOrderNumber = value;
				}
			}
		}
		
		[Column(Storage="_SupplierOrderNumber", DbType="Int")]
		public System.Nullable<int> SupplierOrderNumber
		{
			get
			{
				return this._SupplierOrderNumber;
			}
			set
			{
				if ((this._SupplierOrderNumber != value))
				{
					this._SupplierOrderNumber = value;
				}
			}
		}
		
		[Column(Storage="_CustomerOB10Number", DbType="VarChar(12)")]
		public string CustomerOB10Number
		{
			get
			{
				return this._CustomerOB10Number;
			}
			set
			{
				if ((this._CustomerOB10Number != value))
				{
					this._CustomerOB10Number = value;
				}
			}
		}
		
		[Column(Storage="_BillToCustomerNumber", DbType="VarChar(12)")]
		public string BillToCustomerNumber
		{
			get
			{
				return this._BillToCustomerNumber;
			}
			set
			{
				if ((this._BillToCustomerNumber != value))
				{
					this._BillToCustomerNumber = value;
				}
			}
		}
		
		[Column(Storage="_BillToCustomerName", DbType="VarChar(29)")]
		public string BillToCustomerName
		{
			get
			{
				return this._BillToCustomerName;
			}
			set
			{
				if ((this._BillToCustomerName != value))
				{
					this._BillToCustomerName = value;
				}
			}
		}
		
		[Column(Storage="_BillToAddress1", DbType="VarChar(16)")]
		public string BillToAddress1
		{
			get
			{
				return this._BillToAddress1;
			}
			set
			{
				if ((this._BillToAddress1 != value))
				{
					this._BillToAddress1 = value;
				}
			}
		}
		
		[Column(Storage="_BillToAddress2", DbType="VarChar(10)")]
		public string BillToAddress2
		{
			get
			{
				return this._BillToAddress2;
			}
			set
			{
				if ((this._BillToAddress2 != value))
				{
					this._BillToAddress2 = value;
				}
			}
		}
		
		[Column(Storage="_BilltoCity", DbType="VarChar(9)")]
		public string BilltoCity
		{
			get
			{
				return this._BilltoCity;
			}
			set
			{
				if ((this._BilltoCity != value))
				{
					this._BilltoCity = value;
				}
			}
		}
		
		[Column(Storage="_BilltoState", DbType="VarChar(3)")]
		public string BilltoState
		{
			get
			{
				return this._BilltoState;
			}
			set
			{
				if ((this._BilltoState != value))
				{
					this._BilltoState = value;
				}
			}
		}
		
		[Column(Storage="_BilltoZipCode", DbType="VarChar(4)")]
		public string BilltoZipCode
		{
			get
			{
				return this._BilltoZipCode;
			}
			set
			{
				if ((this._BilltoZipCode != value))
				{
					this._BilltoZipCode = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoAccountNumber", DbType="Int")]
		public System.Nullable<int> ShiptoAccountNumber
		{
			get
			{
				return this._ShiptoAccountNumber;
			}
			set
			{
				if ((this._ShiptoAccountNumber != value))
				{
					this._ShiptoAccountNumber = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoName", DbType="VarChar(80)")]
		public string ShiptoName
		{
			get
			{
				return this._ShiptoName;
			}
			set
			{
				if ((this._ShiptoName != value))
				{
					this._ShiptoName = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoAddress1", DbType="VarChar(8000)")]
		public string ShiptoAddress1
		{
			get
			{
				return this._ShiptoAddress1;
			}
			set
			{
				if ((this._ShiptoAddress1 != value))
				{
					this._ShiptoAddress1 = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoAddress2", DbType="VarChar(8000)")]
		public string ShiptoAddress2
		{
			get
			{
				return this._ShiptoAddress2;
			}
			set
			{
				if ((this._ShiptoAddress2 != value))
				{
					this._ShiptoAddress2 = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoCity", DbType="VarChar(25)")]
		public string ShiptoCity
		{
			get
			{
				return this._ShiptoCity;
			}
			set
			{
				if ((this._ShiptoCity != value))
				{
					this._ShiptoCity = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoState", DbType="VarChar(5)")]
		public string ShiptoState
		{
			get
			{
				return this._ShiptoState;
			}
			set
			{
				if ((this._ShiptoState != value))
				{
					this._ShiptoState = value;
				}
			}
		}
		
		[Column(Storage="_ShiptoZipCode", DbType="VarChar(6)")]
		public string ShiptoZipCode
		{
			get
			{
				return this._ShiptoZipCode;
			}
			set
			{
				if ((this._ShiptoZipCode != value))
				{
					this._ShiptoZipCode = value;
				}
			}
		}
		
		[Column(Storage="_CurrencyCode", DbType="VarChar(3)")]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this._CurrencyCode = value;
				}
			}
		}
		
		[Column(Storage="_ProofofDelivery", DbType="Int")]
		public System.Nullable<int> ProofofDelivery
		{
			get
			{
				return this._ProofofDelivery;
			}
			set
			{
				if ((this._ProofofDelivery != value))
				{
					this._ProofofDelivery = value;
				}
			}
		}
		
		[Column(Storage="_ShipFromName", DbType="Int")]
		public System.Nullable<int> ShipFromName
		{
			get
			{
				return this._ShipFromName;
			}
			set
			{
				if ((this._ShipFromName != value))
				{
					this._ShipFromName = value;
				}
			}
		}
		
		[Column(Storage="_ShipFromAddress1", DbType="Int")]
		public System.Nullable<int> ShipFromAddress1
		{
			get
			{
				return this._ShipFromAddress1;
			}
			set
			{
				if ((this._ShipFromAddress1 != value))
				{
					this._ShipFromAddress1 = value;
				}
			}
		}
		
		[Column(Storage="_ShipFromAddress2", DbType="Int")]
		public System.Nullable<int> ShipFromAddress2
		{
			get
			{
				return this._ShipFromAddress2;
			}
			set
			{
				if ((this._ShipFromAddress2 != value))
				{
					this._ShipFromAddress2 = value;
				}
			}
		}
		
		[Column(Storage="_ShipFromCity", DbType="Int")]
		public System.Nullable<int> ShipFromCity
		{
			get
			{
				return this._ShipFromCity;
			}
			set
			{
				if ((this._ShipFromCity != value))
				{
					this._ShipFromCity = value;
				}
			}
		}
		
		[Column(Storage="_ShipFromState", DbType="Int")]
		public System.Nullable<int> ShipFromState
		{
			get
			{
				return this._ShipFromState;
			}
			set
			{
				if ((this._ShipFromState != value))
				{
					this._ShipFromState = value;
				}
			}
		}
		
		[Column(Storage="_ShipFromZipCode", DbType="Int")]
		public System.Nullable<int> ShipFromZipCode
		{
			get
			{
				return this._ShipFromZipCode;
			}
			set
			{
				if ((this._ShipFromZipCode != value))
				{
					this._ShipFromZipCode = value;
				}
			}
		}
		
		[Column(Storage="_RemittoName", DbType="VarChar(19)")]
		public string RemittoName
		{
			get
			{
				return this._RemittoName;
			}
			set
			{
				if ((this._RemittoName != value))
				{
					this._RemittoName = value;
				}
			}
		}
		
		[Column(Storage="_RemittoAddress1", DbType="VarChar(26)")]
		public string RemittoAddress1
		{
			get
			{
				return this._RemittoAddress1;
			}
			set
			{
				if ((this._RemittoAddress1 != value))
				{
					this._RemittoAddress1 = value;
				}
			}
		}
		
		[Column(Storage="_RemittoAddress2", DbType="VarChar(11)")]
		public string RemittoAddress2
		{
			get
			{
				return this._RemittoAddress2;
			}
			set
			{
				if ((this._RemittoAddress2 != value))
				{
					this._RemittoAddress2 = value;
				}
			}
		}
		
		[Column(Storage="_RemittoCity", DbType="VarChar(6)")]
		public string RemittoCity
		{
			get
			{
				return this._RemittoCity;
			}
			set
			{
				if ((this._RemittoCity != value))
				{
					this._RemittoCity = value;
				}
			}
		}
		
		[Column(Storage="_RemittoState", DbType="VarChar(3)")]
		public string RemittoState
		{
			get
			{
				return this._RemittoState;
			}
			set
			{
				if ((this._RemittoState != value))
				{
					this._RemittoState = value;
				}
			}
		}
		
		[Column(Storage="_RemittoZipCode", DbType="VarChar(4)")]
		public string RemittoZipCode
		{
			get
			{
				return this._RemittoZipCode;
			}
			set
			{
				if ((this._RemittoZipCode != value))
				{
					this._RemittoZipCode = value;
				}
			}
		}
		
		[Column(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[Column(Storage="_BankAccountNumber", DbType="VarChar(15)")]
		public string BankAccountNumber
		{
			get
			{
				return this._BankAccountNumber;
			}
			set
			{
				if ((this._BankAccountNumber != value))
				{
					this._BankAccountNumber = value;
				}
			}
		}
		
		[Column(Storage="_BankRoutingNumber", DbType="VarChar(15)")]
		public string BankRoutingNumber
		{
			get
			{
				return this._BankRoutingNumber;
			}
			set
			{
				if ((this._BankRoutingNumber != value))
				{
					this._BankRoutingNumber = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceDetail", DbType="Int")]
		public System.Nullable<int> InvoiceDetail
		{
			get
			{
				return this._InvoiceDetail;
			}
			set
			{
				if ((this._InvoiceDetail != value))
				{
					this._InvoiceDetail = value;
				}
			}
		}
	}
	
	public partial class INT_STOCK_DUMPResult
	{
		
		private string _PartNumber;
		
		private string _Brand;
		
		private string _Description;
		
		private string _DeviceCode;
		
		private string _FeatureCode;
		
		private string _Model;
		
		private string _Shelf;
		
		private string _SerialNo;
		
		private System.Nullable<short> _ShelfQTY;
		
		private System.Nullable<int> _MaintQTY;
		
		private string _Specifications;
		
		private string _InternalNotes;
		
		private string _WH;
		
		public INT_STOCK_DUMPResult()
		{
		}
		
		[Column(Storage="_PartNumber", DbType="VarChar(35)")]
		public string PartNumber
		{
			get
			{
				return this._PartNumber;
			}
			set
			{
				if ((this._PartNumber != value))
				{
					this._PartNumber = value;
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="VarChar(35)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="VarChar(35)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
		
		[Column(Storage="_FeatureCode", DbType="VarChar(35)")]
		public string FeatureCode
		{
			get
			{
				return this._FeatureCode;
			}
			set
			{
				if ((this._FeatureCode != value))
				{
					this._FeatureCode = value;
				}
			}
		}
		
		[Column(Storage="_Model", DbType="VarChar(35)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[Column(Storage="_Shelf", DbType="VarChar(40)")]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this._Shelf = value;
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="VarChar(28)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this._SerialNo = value;
				}
			}
		}
		
		[Column(Storage="_ShelfQTY", DbType="SmallInt")]
		public System.Nullable<short> ShelfQTY
		{
			get
			{
				return this._ShelfQTY;
			}
			set
			{
				if ((this._ShelfQTY != value))
				{
					this._ShelfQTY = value;
				}
			}
		}
		
		[Column(Storage="_MaintQTY", DbType="Int")]
		public System.Nullable<int> MaintQTY
		{
			get
			{
				return this._MaintQTY;
			}
			set
			{
				if ((this._MaintQTY != value))
				{
					this._MaintQTY = value;
				}
			}
		}
		
		[Column(Storage="_Specifications", DbType="VarChar(2048)")]
		public string Specifications
		{
			get
			{
				return this._Specifications;
			}
			set
			{
				if ((this._Specifications != value))
				{
					this._Specifications = value;
				}
			}
		}
		
		[Column(Storage="_InternalNotes", DbType="VarChar(2048)")]
		public string InternalNotes
		{
			get
			{
				return this._InternalNotes;
			}
			set
			{
				if ((this._InternalNotes != value))
				{
					this._InternalNotes = value;
				}
			}
		}
		
		[Column(Storage="_WH", DbType="VarChar(50)")]
		public string WH
		{
			get
			{
				return this._WH;
			}
			set
			{
				if ((this._WH != value))
				{
					this._WH = value;
				}
			}
		}
	}
	
	public partial class INT_STOCKTREE_LOCATIONSResult
	{
		
		private System.Nullable<int> _LOCGROUPID;
		
		private System.Nullable<int> _LOCATIONID;
		
		private string _NAME;
		
		private System.Nullable<int> _TOTAL;
		
		public INT_STOCKTREE_LOCATIONSResult()
		{
		}
		
		[Column(Storage="_LOCGROUPID", DbType="Int")]
		public System.Nullable<int> LOCGROUPID
		{
			get
			{
				return this._LOCGROUPID;
			}
			set
			{
				if ((this._LOCGROUPID != value))
				{
					this._LOCGROUPID = value;
				}
			}
		}
		
		[Column(Storage="_LOCATIONID", DbType="Int")]
		public System.Nullable<int> LOCATIONID
		{
			get
			{
				return this._LOCATIONID;
			}
			set
			{
				if ((this._LOCATIONID != value))
				{
					this._LOCATIONID = value;
				}
			}
		}
		
		[Column(Storage="_NAME", DbType="VarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
		
		[Column(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
	}
	
	public partial class InvoicePrintOptionsResult
	{
		
		private System.Nullable<bool> _PrintInvoice;
		
		private System.Nullable<int> _InvoiceQty;
		
		private System.Nullable<bool> _PrintPackSlip;
		
		private System.Nullable<int> _PackSlipQty;
		
		private System.Nullable<byte> _RRPType;
		
		private System.Nullable<int> _RRPQty;
		
		private System.Nullable<decimal> _RRPMarkup1;
		
		private System.Nullable<decimal> _RRPMarkup2;
		
		public InvoicePrintOptionsResult()
		{
		}
		
		[Column(Storage="_PrintInvoice", DbType="Bit")]
		public System.Nullable<bool> PrintInvoice
		{
			get
			{
				return this._PrintInvoice;
			}
			set
			{
				if ((this._PrintInvoice != value))
				{
					this._PrintInvoice = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceQty", DbType="Int")]
		public System.Nullable<int> InvoiceQty
		{
			get
			{
				return this._InvoiceQty;
			}
			set
			{
				if ((this._InvoiceQty != value))
				{
					this._InvoiceQty = value;
				}
			}
		}
		
		[Column(Storage="_PrintPackSlip", DbType="Bit")]
		public System.Nullable<bool> PrintPackSlip
		{
			get
			{
				return this._PrintPackSlip;
			}
			set
			{
				if ((this._PrintPackSlip != value))
				{
					this._PrintPackSlip = value;
				}
			}
		}
		
		[Column(Storage="_PackSlipQty", DbType="Int")]
		public System.Nullable<int> PackSlipQty
		{
			get
			{
				return this._PackSlipQty;
			}
			set
			{
				if ((this._PackSlipQty != value))
				{
					this._PackSlipQty = value;
				}
			}
		}
		
		[Column(Storage="_RRPType", DbType="TinyInt")]
		public System.Nullable<byte> RRPType
		{
			get
			{
				return this._RRPType;
			}
			set
			{
				if ((this._RRPType != value))
				{
					this._RRPType = value;
				}
			}
		}
		
		[Column(Storage="_RRPQty", DbType="Int")]
		public System.Nullable<int> RRPQty
		{
			get
			{
				return this._RRPQty;
			}
			set
			{
				if ((this._RRPQty != value))
				{
					this._RRPQty = value;
				}
			}
		}
		
		[Column(Storage="_RRPMarkup1", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> RRPMarkup1
		{
			get
			{
				return this._RRPMarkup1;
			}
			set
			{
				if ((this._RRPMarkup1 != value))
				{
					this._RRPMarkup1 = value;
				}
			}
		}
		
		[Column(Storage="_RRPMarkup2", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> RRPMarkup2
		{
			get
			{
				return this._RRPMarkup2;
			}
			set
			{
				if ((this._RRPMarkup2 != value))
				{
					this._RRPMarkup2 = value;
				}
			}
		}
	}
	
	public partial class InvoiceSaleItemsResult
	{
		
		private string _DetailHeader;
		
		private string _DisplayContractID;
		
		private System.Nullable<int> _AccountID;
		
		private string _Company;
		
		private string _City;
		
		private string _State;
		
		private string _PostCode;
		
		private string _ProdCode;
		
		private string _SerialNo;
		
		private string _DeviceName;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<System.DateTime> _INT_InvFromDate;
		
		private System.Nullable<System.DateTime> _INT_InvToDate;
		
		private System.Nullable<decimal> _CoDetailsExtended;
		
		public InvoiceSaleItemsResult()
		{
		}
		
		[Column(Storage="_DetailHeader", DbType="NVarChar(347)")]
		public string DetailHeader
		{
			get
			{
				return this._DetailHeader;
			}
			set
			{
				if ((this._DetailHeader != value))
				{
					this._DetailHeader = value;
				}
			}
		}
		
		[Column(Storage="_DisplayContractID", DbType="VarChar(255)")]
		public string DisplayContractID
		{
			get
			{
				return this._DisplayContractID;
			}
			set
			{
				if ((this._DisplayContractID != value))
				{
					this._DisplayContractID = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(25)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_PostCode", DbType="VarChar(6)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this._PostCode = value;
				}
			}
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Storage="_SerialNo", DbType="VarChar(64)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this._SerialNo = value;
				}
			}
		}
		
		[Column(Storage="_DeviceName", DbType="VarChar(50)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this._DeviceName = value;
				}
			}
		}
		
		[Column(Storage="_Quantity", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="Money")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this._UnitPrice = value;
				}
			}
		}
		
		[Column(Storage="_INT_InvFromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> INT_InvFromDate
		{
			get
			{
				return this._INT_InvFromDate;
			}
			set
			{
				if ((this._INT_InvFromDate != value))
				{
					this._INT_InvFromDate = value;
				}
			}
		}
		
		[Column(Storage="_INT_InvToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> INT_InvToDate
		{
			get
			{
				return this._INT_InvToDate;
			}
			set
			{
				if ((this._INT_InvToDate != value))
				{
					this._INT_InvToDate = value;
				}
			}
		}
		
		[Column(Storage="_CoDetailsExtended", DbType="Decimal(29,6)")]
		public System.Nullable<decimal> CoDetailsExtended
		{
			get
			{
				return this._CoDetailsExtended;
			}
			set
			{
				if ((this._CoDetailsExtended != value))
				{
					this._CoDetailsExtended = value;
				}
			}
		}
	}
	
	public partial class PO_ExportToAccpac_OrderItemsResult
	{
		
		private string _RECTYPE;
		
		private string _PORHSEQ;
		
		private string _PORLREV;
		
		private string _OEONUMBER;
		
		private string _ITEMNO;
		
		private string _LOCATION;
		
		private string _EXPARRIVAL;
		
		private string _ITEMDESC;
		
		private string _ORDERUNIT;
		
		private string _OQORDERED;
		
		private string _OQRECEIVED;
		
		private string _OQOUTSTAND;
		
		private string _UNITCOST;
		
		private string _ISCOMPLETE;
		
		private string _TAXCLASS1;
		
		private string _TAXINCLUD1;
		
		private string _GLACEXPENS;
		
		public PO_ExportToAccpac_OrderItemsResult()
		{
		}
		
		[Column(Storage="_RECTYPE", DbType="VarChar(2)")]
		public string RECTYPE
		{
			get
			{
				return this._RECTYPE;
			}
			set
			{
				if ((this._RECTYPE != value))
				{
					this._RECTYPE = value;
				}
			}
		}
		
		[Column(Storage="_PORHSEQ", DbType="VarChar(10)")]
		public string PORHSEQ
		{
			get
			{
				return this._PORHSEQ;
			}
			set
			{
				if ((this._PORHSEQ != value))
				{
					this._PORHSEQ = value;
				}
			}
		}
		
		[Column(Storage="_PORLREV", DbType="VarChar(10)")]
		public string PORLREV
		{
			get
			{
				return this._PORLREV;
			}
			set
			{
				if ((this._PORLREV != value))
				{
					this._PORLREV = value;
				}
			}
		}
		
		[Column(Storage="_OEONUMBER", DbType="VarChar(12)")]
		public string OEONUMBER
		{
			get
			{
				return this._OEONUMBER;
			}
			set
			{
				if ((this._OEONUMBER != value))
				{
					this._OEONUMBER = value;
				}
			}
		}
		
		[Column(Storage="_ITEMNO", DbType="VarChar(MAX)")]
		public string ITEMNO
		{
			get
			{
				return this._ITEMNO;
			}
			set
			{
				if ((this._ITEMNO != value))
				{
					this._ITEMNO = value;
				}
			}
		}
		
		[Column(Storage="_LOCATION", DbType="VarChar(8000)")]
		public string LOCATION
		{
			get
			{
				return this._LOCATION;
			}
			set
			{
				if ((this._LOCATION != value))
				{
					this._LOCATION = value;
				}
			}
		}
		
		[Column(Storage="_EXPARRIVAL", DbType="VarChar(20)")]
		public string EXPARRIVAL
		{
			get
			{
				return this._EXPARRIVAL;
			}
			set
			{
				if ((this._EXPARRIVAL != value))
				{
					this._EXPARRIVAL = value;
				}
			}
		}
		
		[Column(Storage="_ITEMDESC", DbType="VarChar(8000)")]
		public string ITEMDESC
		{
			get
			{
				return this._ITEMDESC;
			}
			set
			{
				if ((this._ITEMDESC != value))
				{
					this._ITEMDESC = value;
				}
			}
		}
		
		[Column(Storage="_ORDERUNIT", DbType="VarChar(20)")]
		public string ORDERUNIT
		{
			get
			{
				return this._ORDERUNIT;
			}
			set
			{
				if ((this._ORDERUNIT != value))
				{
					this._ORDERUNIT = value;
				}
			}
		}
		
		[Column(Storage="_OQORDERED", DbType="VarChar(20)")]
		public string OQORDERED
		{
			get
			{
				return this._OQORDERED;
			}
			set
			{
				if ((this._OQORDERED != value))
				{
					this._OQORDERED = value;
				}
			}
		}
		
		[Column(Storage="_OQRECEIVED", DbType="VarChar(20)")]
		public string OQRECEIVED
		{
			get
			{
				return this._OQRECEIVED;
			}
			set
			{
				if ((this._OQRECEIVED != value))
				{
					this._OQRECEIVED = value;
				}
			}
		}
		
		[Column(Storage="_OQOUTSTAND", DbType="VarChar(20)")]
		public string OQOUTSTAND
		{
			get
			{
				return this._OQOUTSTAND;
			}
			set
			{
				if ((this._OQOUTSTAND != value))
				{
					this._OQOUTSTAND = value;
				}
			}
		}
		
		[Column(Storage="_UNITCOST", DbType="VarChar(20)")]
		public string UNITCOST
		{
			get
			{
				return this._UNITCOST;
			}
			set
			{
				if ((this._UNITCOST != value))
				{
					this._UNITCOST = value;
				}
			}
		}
		
		[Column(Storage="_ISCOMPLETE", DbType="VarChar(20)")]
		public string ISCOMPLETE
		{
			get
			{
				return this._ISCOMPLETE;
			}
			set
			{
				if ((this._ISCOMPLETE != value))
				{
					this._ISCOMPLETE = value;
				}
			}
		}
		
		[Column(Storage="_TAXCLASS1", DbType="VarChar(20)")]
		public string TAXCLASS1
		{
			get
			{
				return this._TAXCLASS1;
			}
			set
			{
				if ((this._TAXCLASS1 != value))
				{
					this._TAXCLASS1 = value;
				}
			}
		}
		
		[Column(Storage="_TAXINCLUD1", DbType="VarChar(20)")]
		public string TAXINCLUD1
		{
			get
			{
				return this._TAXINCLUD1;
			}
			set
			{
				if ((this._TAXINCLUD1 != value))
				{
					this._TAXINCLUD1 = value;
				}
			}
		}
		
		[Column(Storage="_GLACEXPENS", DbType="VarChar(20)")]
		public string GLACEXPENS
		{
			get
			{
				return this._GLACEXPENS;
			}
			set
			{
				if ((this._GLACEXPENS != value))
				{
					this._GLACEXPENS = value;
				}
			}
		}
	}
	
	public partial class Project_GetFieldAccessDetailsResult
	{
		
		private System.Nullable<bool> _Mandatory;
		
		private System.Nullable<bool> _ReadOnly;
		
		private System.Nullable<bool> _NeedPermission;
		
		public Project_GetFieldAccessDetailsResult()
		{
		}
		
		[Column(Storage="_Mandatory", DbType="Bit")]
		public System.Nullable<bool> Mandatory
		{
			get
			{
				return this._Mandatory;
			}
			set
			{
				if ((this._Mandatory != value))
				{
					this._Mandatory = value;
				}
			}
		}
		
		[Column(Storage="_ReadOnly", DbType="Bit")]
		public System.Nullable<bool> ReadOnly
		{
			get
			{
				return this._ReadOnly;
			}
			set
			{
				if ((this._ReadOnly != value))
				{
					this._ReadOnly = value;
				}
			}
		}
		
		[Column(Storage="_NeedPermission", DbType="Bit")]
		public System.Nullable<bool> NeedPermission
		{
			get
			{
				return this._NeedPermission;
			}
			set
			{
				if ((this._NeedPermission != value))
				{
					this._NeedPermission = value;
				}
			}
		}
	}
	
	public partial class Project_GetMandatoryFieldsResult
	{
		
		private string _FieldName;
		
		private System.Nullable<int> _FieldOrder;
		
		public Project_GetMandatoryFieldsResult()
		{
		}
		
		[Column(Storage="_FieldName", DbType="VarChar(50)")]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this._FieldName = value;
				}
			}
		}
		
		[Column(Storage="_FieldOrder", DbType="Int")]
		public System.Nullable<int> FieldOrder
		{
			get
			{
				return this._FieldOrder;
			}
			set
			{
				if ((this._FieldOrder != value))
				{
					this._FieldOrder = value;
				}
			}
		}
	}
	
	public partial class Project_GetProjectTypeResult
	{
		
		private string _Column1;
		
		public Project_GetProjectTypeResult()
		{
		}
		
		[Column(Name="", Storage="_Column1", DbType="VarChar(20)")]
		public string Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class Project_PCR_GetFieldAccessDetailsResult
	{
		
		private System.Nullable<bool> _Mandatory;
		
		private System.Nullable<bool> _ReadOnly;
		
		private System.Nullable<bool> _NeedPermission;
		
		public Project_PCR_GetFieldAccessDetailsResult()
		{
		}
		
		[Column(Storage="_Mandatory", DbType="Bit")]
		public System.Nullable<bool> Mandatory
		{
			get
			{
				return this._Mandatory;
			}
			set
			{
				if ((this._Mandatory != value))
				{
					this._Mandatory = value;
				}
			}
		}
		
		[Column(Storage="_ReadOnly", DbType="Bit")]
		public System.Nullable<bool> ReadOnly
		{
			get
			{
				return this._ReadOnly;
			}
			set
			{
				if ((this._ReadOnly != value))
				{
					this._ReadOnly = value;
				}
			}
		}
		
		[Column(Storage="_NeedPermission", DbType="Bit")]
		public System.Nullable<bool> NeedPermission
		{
			get
			{
				return this._NeedPermission;
			}
			set
			{
				if ((this._NeedPermission != value))
				{
					this._NeedPermission = value;
				}
			}
		}
	}
	
	public partial class Project_PCR_GetMandatoryFieldsResult
	{
		
		private string _FieldName;
		
		private System.Nullable<int> _FieldOrder;
		
		public Project_PCR_GetMandatoryFieldsResult()
		{
		}
		
		[Column(Storage="_FieldName", DbType="VarChar(50)")]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this._FieldName = value;
				}
			}
		}
		
		[Column(Storage="_FieldOrder", DbType="Int")]
		public System.Nullable<int> FieldOrder
		{
			get
			{
				return this._FieldOrder;
			}
			set
			{
				if ((this._FieldOrder != value))
				{
					this._FieldOrder = value;
				}
			}
		}
	}
	
	public partial class SimulateDebtorPaymentResult
	{
		
		private System.Nullable<decimal> _Current;
		
		private System.Nullable<decimal> @__30Days;
		
		private System.Nullable<decimal> @__60Days;
		
		private System.Nullable<decimal> @__90Days;
		
		private System.Nullable<decimal> _Balance;
		
		public SimulateDebtorPaymentResult()
		{
		}
		
		[Column(Storage="_Current", DbType="Money")]
		public System.Nullable<decimal> Current
		{
			get
			{
				return this._Current;
			}
			set
			{
				if ((this._Current != value))
				{
					this._Current = value;
				}
			}
		}
		
		[Column(Name="30Days", Storage="__30Days", DbType="Money")]
		public System.Nullable<decimal> _30Days
		{
			get
			{
				return this.@__30Days;
			}
			set
			{
				if ((this.@__30Days != value))
				{
					this.@__30Days = value;
				}
			}
		}
		
		[Column(Name="60Days", Storage="__60Days", DbType="Money")]
		public System.Nullable<decimal> _60Days
		{
			get
			{
				return this.@__60Days;
			}
			set
			{
				if ((this.@__60Days != value))
				{
					this.@__60Days = value;
				}
			}
		}
		
		[Column(Name="90Days", Storage="__90Days", DbType="Money")]
		public System.Nullable<decimal> _90Days
		{
			get
			{
				return this.@__90Days;
			}
			set
			{
				if ((this.@__90Days != value))
				{
					this.@__90Days = value;
				}
			}
		}
		
		[Column(Storage="_Balance", DbType="Money")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
	}
	
	public partial class Sp_TestStoredProcedureResult
	{
		
		private System.Nullable<int> _Accountid;
		
		private string _Company;
		
		private string _State;
		
		private string _Prodcode;
		
		private string _Devicename;
		
		private string _Engineer;
		
		private string _Brand;
		
		private string _Model;
		
		private string _Machinetype;
		
		private string _Serialno;
		
		private System.Nullable<decimal> _Total;
		
		public Sp_TestStoredProcedureResult()
		{
		}
		
		[Column(Name="accountid", Storage="_Accountid", DbType="Int")]
		public System.Nullable<int> Accountid
		{
			get
			{
				return this._Accountid;
			}
			set
			{
				if ((this._Accountid != value))
				{
					this._Accountid = value;
				}
			}
		}
		
		[Column(Name="company", Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Name="state", Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Name="prodcode", Storage="_Prodcode", DbType="VarChar(35)")]
		public string Prodcode
		{
			get
			{
				return this._Prodcode;
			}
			set
			{
				if ((this._Prodcode != value))
				{
					this._Prodcode = value;
				}
			}
		}
		
		[Column(Name="devicename", Storage="_Devicename", DbType="VarChar(50)")]
		public string Devicename
		{
			get
			{
				return this._Devicename;
			}
			set
			{
				if ((this._Devicename != value))
				{
					this._Devicename = value;
				}
			}
		}
		
		[Column(Name="engineer", Storage="_Engineer", DbType="VarChar(25)")]
		public string Engineer
		{
			get
			{
				return this._Engineer;
			}
			set
			{
				if ((this._Engineer != value))
				{
					this._Engineer = value;
				}
			}
		}
		
		[Column(Name="brand", Storage="_Brand", DbType="VarChar(35)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[Column(Name="model", Storage="_Model", DbType="VarChar(35)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[Column(Name="machinetype", Storage="_Machinetype", DbType="VarChar(50)")]
		public string Machinetype
		{
			get
			{
				return this._Machinetype;
			}
			set
			{
				if ((this._Machinetype != value))
				{
					this._Machinetype = value;
				}
			}
		}
		
		[Column(Name="serialno", Storage="_Serialno", DbType="VarChar(64)")]
		public string Serialno
		{
			get
			{
				return this._Serialno;
			}
			set
			{
				if ((this._Serialno != value))
				{
					this._Serialno = value;
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Money")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	public partial class SpThirdPartyFinanceGUI_GetAgreementDetailsResult
	{
		
		private string _Company;
		
		private string _BillingFrequencyDescription;
		
		private System.Nullable<System.DateTime> _InvoiceStartDate;
		
		private System.Nullable<System.DateTime> _InvoiceEndDate;
		
		public SpThirdPartyFinanceGUI_GetAgreementDetailsResult()
		{
		}
		
		[Column(Storage="_Company", DbType="VarChar(55)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_BillingFrequencyDescription", DbType="VarChar(9)")]
		public string BillingFrequencyDescription
		{
			get
			{
				return this._BillingFrequencyDescription;
			}
			set
			{
				if ((this._BillingFrequencyDescription != value))
				{
					this._BillingFrequencyDescription = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceStartDate
		{
			get
			{
				return this._InvoiceStartDate;
			}
			set
			{
				if ((this._InvoiceStartDate != value))
				{
					this._InvoiceStartDate = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceEndDate
		{
			get
			{
				return this._InvoiceEndDate;
			}
			set
			{
				if ((this._InvoiceEndDate != value))
				{
					this._InvoiceEndDate = value;
				}
			}
		}
	}
	
	public partial class SpThirdPartyFinanceGUI_GetAgreementGLCodeTotalsResult
	{
		
		private string _GLCode;
		
		private System.Nullable<decimal> _AgreementGLCodeTotal;
		
		public SpThirdPartyFinanceGUI_GetAgreementGLCodeTotalsResult()
		{
		}
		
		[Column(Storage="_GLCode", DbType="VarChar(16)")]
		public string GLCode
		{
			get
			{
				return this._GLCode;
			}
			set
			{
				if ((this._GLCode != value))
				{
					this._GLCode = value;
				}
			}
		}
		
		[Column(Storage="_AgreementGLCodeTotal", DbType="Money")]
		public System.Nullable<decimal> AgreementGLCodeTotal
		{
			get
			{
				return this._AgreementGLCodeTotal;
			}
			set
			{
				if ((this._AgreementGLCodeTotal != value))
				{
					this._AgreementGLCodeTotal = value;
				}
			}
		}
	}
	
	public partial class SpThirdPartyFinanceGUI_GetAgreementTotalResult
	{
		
		private System.Nullable<decimal> _AgreementTotal;
		
		public SpThirdPartyFinanceGUI_GetAgreementTotalResult()
		{
		}
		
		[Column(Storage="_AgreementTotal", DbType="Money")]
		public System.Nullable<decimal> AgreementTotal
		{
			get
			{
				return this._AgreementTotal;
			}
			set
			{
				if ((this._AgreementTotal != value))
				{
					this._AgreementTotal = value;
				}
			}
		}
	}
	
	public partial class SpThirdPartyFinanceGUI_GetDeviceDetailsResult
	{
		
		private string _ProdCode;
		
		private string _State;
		
		private string _RevenueCategoryDescription;
		
		private string _GLCode;
		
		private System.Nullable<decimal> _DeviceTotal;
		
		public SpThirdPartyFinanceGUI_GetDeviceDetailsResult()
		{
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategoryDescription", DbType="VarChar(32)")]
		public string RevenueCategoryDescription
		{
			get
			{
				return this._RevenueCategoryDescription;
			}
			set
			{
				if ((this._RevenueCategoryDescription != value))
				{
					this._RevenueCategoryDescription = value;
				}
			}
		}
		
		[Column(Storage="_GLCode", DbType="VarChar(16)")]
		public string GLCode
		{
			get
			{
				return this._GLCode;
			}
			set
			{
				if ((this._GLCode != value))
				{
					this._GLCode = value;
				}
			}
		}
		
		[Column(Storage="_DeviceTotal", DbType="Money")]
		public System.Nullable<decimal> DeviceTotal
		{
			get
			{
				return this._DeviceTotal;
			}
			set
			{
				if ((this._DeviceTotal != value))
				{
					this._DeviceTotal = value;
				}
			}
		}
	}
	
	public partial class SpThirdPartyFinanceGUI_GetInvoiceDeviceDetailsResult
	{
		
		private string _ProdCode;
		
		private string _State;
		
		private string _RevenueCategoryDescription;
		
		private string _GLCode;
		
		private System.Nullable<decimal> _DeviceTotal;
		
		public SpThirdPartyFinanceGUI_GetInvoiceDeviceDetailsResult()
		{
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="VarChar(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategoryDescription", DbType="VarChar(32)")]
		public string RevenueCategoryDescription
		{
			get
			{
				return this._RevenueCategoryDescription;
			}
			set
			{
				if ((this._RevenueCategoryDescription != value))
				{
					this._RevenueCategoryDescription = value;
				}
			}
		}
		
		[Column(Storage="_GLCode", DbType="VarChar(16)")]
		public string GLCode
		{
			get
			{
				return this._GLCode;
			}
			set
			{
				if ((this._GLCode != value))
				{
					this._GLCode = value;
				}
			}
		}
		
		[Column(Storage="_DeviceTotal", DbType="Money")]
		public System.Nullable<decimal> DeviceTotal
		{
			get
			{
				return this._DeviceTotal;
			}
			set
			{
				if ((this._DeviceTotal != value))
				{
					this._DeviceTotal = value;
				}
			}
		}
	}
	
	public partial class SpThirdPartyFinanceGUI_GetInvoiceForDatesResult
	{
		
		private System.Nullable<int> _OrdNum;
		
		private string _InvoiceNum;
		
		private System.Nullable<System.DateTime> _InvoiceFromDate;
		
		private System.Nullable<System.DateTime> _InvoiceToDate;
		
		public SpThirdPartyFinanceGUI_GetInvoiceForDatesResult()
		{
		}
		
		[Column(Storage="_OrdNum", DbType="Int")]
		public System.Nullable<int> OrdNum
		{
			get
			{
				return this._OrdNum;
			}
			set
			{
				if ((this._OrdNum != value))
				{
					this._OrdNum = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceNum", DbType="VarChar(20)")]
		public string InvoiceNum
		{
			get
			{
				return this._InvoiceNum;
			}
			set
			{
				if ((this._InvoiceNum != value))
				{
					this._InvoiceNum = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceFromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceFromDate
		{
			get
			{
				return this._InvoiceFromDate;
			}
			set
			{
				if ((this._InvoiceFromDate != value))
				{
					this._InvoiceFromDate = value;
				}
			}
		}
		
		[Column(Storage="_InvoiceToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceToDate
		{
			get
			{
				return this._InvoiceToDate;
			}
			set
			{
				if ((this._InvoiceToDate != value))
				{
					this._InvoiceToDate = value;
				}
			}
		}
	}
	
	public partial class SpThirdPartyFinanceGUI_GetInvoiceGLCodeTotalsResult
	{
		
		private string _GLCode;
		
		private System.Nullable<decimal> _AgreementGLCodeTotal;
		
		public SpThirdPartyFinanceGUI_GetInvoiceGLCodeTotalsResult()
		{
		}
		
		[Column(Storage="_GLCode", DbType="VarChar(16)")]
		public string GLCode
		{
			get
			{
				return this._GLCode;
			}
			set
			{
				if ((this._GLCode != value))
				{
					this._GLCode = value;
				}
			}
		}
		
		[Column(Storage="_AgreementGLCodeTotal", DbType="Money")]
		public System.Nullable<decimal> AgreementGLCodeTotal
		{
			get
			{
				return this._AgreementGLCodeTotal;
			}
			set
			{
				if ((this._AgreementGLCodeTotal != value))
				{
					this._AgreementGLCodeTotal = value;
				}
			}
		}
	}
	
	public partial class SpThirdPartyFinanceGUI_GetInvoiceTotalResult
	{
		
		private System.Nullable<decimal> _InvoiceTotal;
		
		public SpThirdPartyFinanceGUI_GetInvoiceTotalResult()
		{
		}
		
		[Column(Storage="_InvoiceTotal", DbType="Money")]
		public System.Nullable<decimal> InvoiceTotal
		{
			get
			{
				return this._InvoiceTotal;
			}
			set
			{
				if ((this._InvoiceTotal != value))
				{
					this._InvoiceTotal = value;
				}
			}
		}
	}
	
	public partial class STOCK_GetLastChangedByResult
	{
		
		private System.Nullable<System.DateTime> _UpdDate;
		
		private string _Username;
		
		private string _Type;
		
		public STOCK_GetLastChangedByResult()
		{
		}
		
		[Column(Storage="_UpdDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this._UpdDate = value;
				}
			}
		}
		
		[Column(Storage="_Username", DbType="VarChar(52)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(7)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
	}
	
	public partial class Stock_GetLocQOHResult
	{
		
		private System.Nullable<int> _QOH;
		
		public Stock_GetLocQOHResult()
		{
		}
		
		[Column(Storage="_QOH", DbType="Int")]
		public System.Nullable<int> QOH
		{
			get
			{
				return this._QOH;
			}
			set
			{
				if ((this._QOH != value))
				{
					this._QOH = value;
				}
			}
		}
	}
	
	public partial class STOCK_REPORTResult
	{
		
		private string _ProdCode;
		
		private string _XRefCode;
		
		private string _DistribCode;
		
		private string _SupProdCode;
		
		private string _Type;
		
		private System.Nullable<bool> _Available;
		
		private string _Description;
		
		private string _CardNum;
		
		private string _PriceUnit;
		
		private System.Nullable<decimal> _SupplierCost;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<decimal> _AvgCost;
		
		private System.Nullable<int> _Minimum;
		
		private System.Nullable<int> _Maximum;
		
		private System.Nullable<decimal> _PrevStock;
		
		private string _UPC;
		
		private string _Rep;
		
		private string _SupplierCode;
		
		private string _SupplierCode1;
		
		private string _SupplierCode2;
		
		private string _SupplierCode3;
		
		private System.Nullable<decimal> _MTD_UNITS;
		
		private System.Nullable<decimal> _MTD_COST;
		
		private System.Nullable<decimal> _YTD_UNITS;
		
		private System.Nullable<decimal> _YTD_COST;
		
		private System.Nullable<decimal> _LY_UNITS;
		
		private System.Nullable<decimal> _LY_COST;
		
		private System.Nullable<decimal> _TodayUnits;
		
		private System.Nullable<int> _AvgLast15;
		
		private System.Nullable<int> _AvgLast6;
		
		private System.Nullable<int> _AvgLast3;
		
		private System.Nullable<int> _SuggOrd;
		
		private System.Nullable<bool> _Accepted;
		
		private System.Nullable<int> _SuggOrdAv;
		
		private System.Nullable<bool> _AcceptedAv;
		
		private string _Specifications;
		
		private string _InternalNotes;
		
		private System.Nullable<decimal> _ReStockMin;
		
		private System.Nullable<bool> _Discontinued;
		
		private System.Nullable<System.DateTime> _DateDiscontinued;
		
		private System.Nullable<decimal> _TaxRate;
		
		private string _Group;
		
		private string _Brand;
		
		private string _MachineType;
		
		private string _DeviceCode;
		
		private System.Nullable<decimal> _PRICE;
		
		private string _Model;
		
		private System.Nullable<int> _RevenueCategory;
		
		private string _INT_SerialNo;
		
		private System.Nullable<int> _PartsType;
		
		private System.Nullable<bool> _ExcludeFromSnapshot;
		
		private System.Nullable<bool> _CarbonTaxEligible;
		
		private System.Nullable<decimal> _Price24x7x2;
		
		private System.Nullable<decimal> _Price9x5x4;
		
		private System.Nullable<decimal> _Price24x7x4;
		
		private System.Nullable<decimal> _Price9x5x2;
		
		private System.Nullable<System.DateTime> _PricesLastUpdated;
		
		private string _PricesSource;
		
		public STOCK_REPORTResult()
		{
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Storage="_XRefCode", DbType="VarChar(35)")]
		public string XRefCode
		{
			get
			{
				return this._XRefCode;
			}
			set
			{
				if ((this._XRefCode != value))
				{
					this._XRefCode = value;
				}
			}
		}
		
		[Column(Storage="_DistribCode", DbType="VarChar(16)")]
		public string DistribCode
		{
			get
			{
				return this._DistribCode;
			}
			set
			{
				if ((this._DistribCode != value))
				{
					this._DistribCode = value;
				}
			}
		}
		
		[Column(Storage="_SupProdCode", DbType="VarChar(35)")]
		public string SupProdCode
		{
			get
			{
				return this._SupProdCode;
			}
			set
			{
				if ((this._SupProdCode != value))
				{
					this._SupProdCode = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="Char(1)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_Available", DbType="Bit")]
		public System.Nullable<bool> Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this._Available = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_CardNum", DbType="VarChar(10)")]
		public string CardNum
		{
			get
			{
				return this._CardNum;
			}
			set
			{
				if ((this._CardNum != value))
				{
					this._CardNum = value;
				}
			}
		}
		
		[Column(Storage="_PriceUnit", DbType="VarChar(9)")]
		public string PriceUnit
		{
			get
			{
				return this._PriceUnit;
			}
			set
			{
				if ((this._PriceUnit != value))
				{
					this._PriceUnit = value;
				}
			}
		}
		
		[Column(Storage="_SupplierCost", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SupplierCost
		{
			get
			{
				return this._SupplierCost;
			}
			set
			{
				if ((this._SupplierCost != value))
				{
					this._SupplierCost = value;
				}
			}
		}
		
		[Column(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this._DateUpdated = value;
				}
			}
		}
		
		[Column(Storage="_AvgCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AvgCost
		{
			get
			{
				return this._AvgCost;
			}
			set
			{
				if ((this._AvgCost != value))
				{
					this._AvgCost = value;
				}
			}
		}
		
		[Column(Storage="_Minimum", DbType="Int")]
		public System.Nullable<int> Minimum
		{
			get
			{
				return this._Minimum;
			}
			set
			{
				if ((this._Minimum != value))
				{
					this._Minimum = value;
				}
			}
		}
		
		[Column(Storage="_Maximum", DbType="Int")]
		public System.Nullable<int> Maximum
		{
			get
			{
				return this._Maximum;
			}
			set
			{
				if ((this._Maximum != value))
				{
					this._Maximum = value;
				}
			}
		}
		
		[Column(Storage="_PrevStock", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PrevStock
		{
			get
			{
				return this._PrevStock;
			}
			set
			{
				if ((this._PrevStock != value))
				{
					this._PrevStock = value;
				}
			}
		}
		
		[Column(Storage="_UPC", DbType="VarChar(16)")]
		public string UPC
		{
			get
			{
				return this._UPC;
			}
			set
			{
				if ((this._UPC != value))
				{
					this._UPC = value;
				}
			}
		}
		
		[Column(Storage="_Rep", DbType="VarChar(5)")]
		public string Rep
		{
			get
			{
				return this._Rep;
			}
			set
			{
				if ((this._Rep != value))
				{
					this._Rep = value;
				}
			}
		}
		
		[Column(Storage="_SupplierCode", DbType="VarChar(16)")]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this._SupplierCode = value;
				}
			}
		}
		
		[Column(Storage="_SupplierCode1", DbType="VarChar(16)")]
		public string SupplierCode1
		{
			get
			{
				return this._SupplierCode1;
			}
			set
			{
				if ((this._SupplierCode1 != value))
				{
					this._SupplierCode1 = value;
				}
			}
		}
		
		[Column(Storage="_SupplierCode2", DbType="VarChar(16)")]
		public string SupplierCode2
		{
			get
			{
				return this._SupplierCode2;
			}
			set
			{
				if ((this._SupplierCode2 != value))
				{
					this._SupplierCode2 = value;
				}
			}
		}
		
		[Column(Storage="_SupplierCode3", DbType="VarChar(16)")]
		public string SupplierCode3
		{
			get
			{
				return this._SupplierCode3;
			}
			set
			{
				if ((this._SupplierCode3 != value))
				{
					this._SupplierCode3 = value;
				}
			}
		}
		
		[Column(Storage="_MTD_UNITS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MTD_UNITS
		{
			get
			{
				return this._MTD_UNITS;
			}
			set
			{
				if ((this._MTD_UNITS != value))
				{
					this._MTD_UNITS = value;
				}
			}
		}
		
		[Column(Storage="_MTD_COST", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MTD_COST
		{
			get
			{
				return this._MTD_COST;
			}
			set
			{
				if ((this._MTD_COST != value))
				{
					this._MTD_COST = value;
				}
			}
		}
		
		[Column(Storage="_YTD_UNITS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> YTD_UNITS
		{
			get
			{
				return this._YTD_UNITS;
			}
			set
			{
				if ((this._YTD_UNITS != value))
				{
					this._YTD_UNITS = value;
				}
			}
		}
		
		[Column(Storage="_YTD_COST", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> YTD_COST
		{
			get
			{
				return this._YTD_COST;
			}
			set
			{
				if ((this._YTD_COST != value))
				{
					this._YTD_COST = value;
				}
			}
		}
		
		[Column(Storage="_LY_UNITS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LY_UNITS
		{
			get
			{
				return this._LY_UNITS;
			}
			set
			{
				if ((this._LY_UNITS != value))
				{
					this._LY_UNITS = value;
				}
			}
		}
		
		[Column(Storage="_LY_COST", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LY_COST
		{
			get
			{
				return this._LY_COST;
			}
			set
			{
				if ((this._LY_COST != value))
				{
					this._LY_COST = value;
				}
			}
		}
		
		[Column(Storage="_TodayUnits", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> TodayUnits
		{
			get
			{
				return this._TodayUnits;
			}
			set
			{
				if ((this._TodayUnits != value))
				{
					this._TodayUnits = value;
				}
			}
		}
		
		[Column(Storage="_AvgLast15", DbType="Int")]
		public System.Nullable<int> AvgLast15
		{
			get
			{
				return this._AvgLast15;
			}
			set
			{
				if ((this._AvgLast15 != value))
				{
					this._AvgLast15 = value;
				}
			}
		}
		
		[Column(Storage="_AvgLast6", DbType="Int")]
		public System.Nullable<int> AvgLast6
		{
			get
			{
				return this._AvgLast6;
			}
			set
			{
				if ((this._AvgLast6 != value))
				{
					this._AvgLast6 = value;
				}
			}
		}
		
		[Column(Storage="_AvgLast3", DbType="Int")]
		public System.Nullable<int> AvgLast3
		{
			get
			{
				return this._AvgLast3;
			}
			set
			{
				if ((this._AvgLast3 != value))
				{
					this._AvgLast3 = value;
				}
			}
		}
		
		[Column(Storage="_SuggOrd", DbType="Int")]
		public System.Nullable<int> SuggOrd
		{
			get
			{
				return this._SuggOrd;
			}
			set
			{
				if ((this._SuggOrd != value))
				{
					this._SuggOrd = value;
				}
			}
		}
		
		[Column(Storage="_Accepted", DbType="Bit")]
		public System.Nullable<bool> Accepted
		{
			get
			{
				return this._Accepted;
			}
			set
			{
				if ((this._Accepted != value))
				{
					this._Accepted = value;
				}
			}
		}
		
		[Column(Storage="_SuggOrdAv", DbType="Int")]
		public System.Nullable<int> SuggOrdAv
		{
			get
			{
				return this._SuggOrdAv;
			}
			set
			{
				if ((this._SuggOrdAv != value))
				{
					this._SuggOrdAv = value;
				}
			}
		}
		
		[Column(Storage="_AcceptedAv", DbType="Bit")]
		public System.Nullable<bool> AcceptedAv
		{
			get
			{
				return this._AcceptedAv;
			}
			set
			{
				if ((this._AcceptedAv != value))
				{
					this._AcceptedAv = value;
				}
			}
		}
		
		[Column(Storage="_Specifications", DbType="VarChar(2048)")]
		public string Specifications
		{
			get
			{
				return this._Specifications;
			}
			set
			{
				if ((this._Specifications != value))
				{
					this._Specifications = value;
				}
			}
		}
		
		[Column(Storage="_InternalNotes", DbType="VarChar(2048)")]
		public string InternalNotes
		{
			get
			{
				return this._InternalNotes;
			}
			set
			{
				if ((this._InternalNotes != value))
				{
					this._InternalNotes = value;
				}
			}
		}
		
		[Column(Storage="_ReStockMin", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> ReStockMin
		{
			get
			{
				return this._ReStockMin;
			}
			set
			{
				if ((this._ReStockMin != value))
				{
					this._ReStockMin = value;
				}
			}
		}
		
		[Column(Storage="_Discontinued", DbType="Bit")]
		public System.Nullable<bool> Discontinued
		{
			get
			{
				return this._Discontinued;
			}
			set
			{
				if ((this._Discontinued != value))
				{
					this._Discontinued = value;
				}
			}
		}
		
		[Column(Storage="_DateDiscontinued", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDiscontinued
		{
			get
			{
				return this._DateDiscontinued;
			}
			set
			{
				if ((this._DateDiscontinued != value))
				{
					this._DateDiscontinued = value;
				}
			}
		}
		
		[Column(Storage="_TaxRate", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this._TaxRate = value;
				}
			}
		}
		
		[Column(Storage="_Group", DbType="VarChar(12)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this._Group = value;
				}
			}
		}
		
		[Column(Storage="_Brand", DbType="VarChar(35)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[Column(Storage="_MachineType", DbType="VarChar(50)")]
		public string MachineType
		{
			get
			{
				return this._MachineType;
			}
			set
			{
				if ((this._MachineType != value))
				{
					this._MachineType = value;
				}
			}
		}
		
		[Column(Storage="_DeviceCode", DbType="VarChar(35)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this._DeviceCode = value;
				}
			}
		}
		
		[Column(Storage="_PRICE", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this._PRICE = value;
				}
			}
		}
		
		[Column(Name="model", Storage="_Model", DbType="VarChar(35)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCategory", DbType="Int")]
		public System.Nullable<int> RevenueCategory
		{
			get
			{
				return this._RevenueCategory;
			}
			set
			{
				if ((this._RevenueCategory != value))
				{
					this._RevenueCategory = value;
				}
			}
		}
		
		[Column(Storage="_INT_SerialNo", DbType="VarChar(64)")]
		public string INT_SerialNo
		{
			get
			{
				return this._INT_SerialNo;
			}
			set
			{
				if ((this._INT_SerialNo != value))
				{
					this._INT_SerialNo = value;
				}
			}
		}
		
		[Column(Storage="_PartsType", DbType="Int")]
		public System.Nullable<int> PartsType
		{
			get
			{
				return this._PartsType;
			}
			set
			{
				if ((this._PartsType != value))
				{
					this._PartsType = value;
				}
			}
		}
		
		[Column(Storage="_ExcludeFromSnapshot", DbType="Bit")]
		public System.Nullable<bool> ExcludeFromSnapshot
		{
			get
			{
				return this._ExcludeFromSnapshot;
			}
			set
			{
				if ((this._ExcludeFromSnapshot != value))
				{
					this._ExcludeFromSnapshot = value;
				}
			}
		}
		
		[Column(Storage="_CarbonTaxEligible", DbType="Bit")]
		public System.Nullable<bool> CarbonTaxEligible
		{
			get
			{
				return this._CarbonTaxEligible;
			}
			set
			{
				if ((this._CarbonTaxEligible != value))
				{
					this._CarbonTaxEligible = value;
				}
			}
		}
		
		[Column(Storage="_Price24x7x2", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Price24x7x2
		{
			get
			{
				return this._Price24x7x2;
			}
			set
			{
				if ((this._Price24x7x2 != value))
				{
					this._Price24x7x2 = value;
				}
			}
		}
		
		[Column(Storage="_Price9x5x4", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Price9x5x4
		{
			get
			{
				return this._Price9x5x4;
			}
			set
			{
				if ((this._Price9x5x4 != value))
				{
					this._Price9x5x4 = value;
				}
			}
		}
		
		[Column(Storage="_Price24x7x4", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Price24x7x4
		{
			get
			{
				return this._Price24x7x4;
			}
			set
			{
				if ((this._Price24x7x4 != value))
				{
					this._Price24x7x4 = value;
				}
			}
		}
		
		[Column(Storage="_Price9x5x2", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Price9x5x2
		{
			get
			{
				return this._Price9x5x2;
			}
			set
			{
				if ((this._Price9x5x2 != value))
				{
					this._Price9x5x2 = value;
				}
			}
		}
		
		[Column(Storage="_PricesLastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> PricesLastUpdated
		{
			get
			{
				return this._PricesLastUpdated;
			}
			set
			{
				if ((this._PricesLastUpdated != value))
				{
					this._PricesLastUpdated = value;
				}
			}
		}
		
		[Column(Storage="_PricesSource", DbType="VarChar(100)")]
		public string PricesSource
		{
			get
			{
				return this._PricesSource;
			}
			set
			{
				if ((this._PricesSource != value))
				{
					this._PricesSource = value;
				}
			}
		}
	}
	
	public partial class STOCK_SHELF_HISTORYResult
	{
		
		private string _PRODCODE;
		
		private System.Nullable<int> _LOCATIONID;
		
		private System.Nullable<int> _LASTSHELF;
		
		private string _NAME;
		
		private string _ShelfDesc;
		
		public STOCK_SHELF_HISTORYResult()
		{
		}
		
		[Column(Storage="_PRODCODE", DbType="VarChar(35)")]
		public string PRODCODE
		{
			get
			{
				return this._PRODCODE;
			}
			set
			{
				if ((this._PRODCODE != value))
				{
					this._PRODCODE = value;
				}
			}
		}
		
		[Column(Storage="_LOCATIONID", DbType="Int")]
		public System.Nullable<int> LOCATIONID
		{
			get
			{
				return this._LOCATIONID;
			}
			set
			{
				if ((this._LOCATIONID != value))
				{
					this._LOCATIONID = value;
				}
			}
		}
		
		[Column(Storage="_LASTSHELF", DbType="Int")]
		public System.Nullable<int> LASTSHELF
		{
			get
			{
				return this._LASTSHELF;
			}
			set
			{
				if ((this._LASTSHELF != value))
				{
					this._LASTSHELF = value;
				}
			}
		}
		
		[Column(Storage="_NAME", DbType="VarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
		
		[Column(Storage="_ShelfDesc", DbType="VarChar(98)")]
		public string ShelfDesc
		{
			get
			{
				return this._ShelfDesc;
			}
			set
			{
				if ((this._ShelfDesc != value))
				{
					this._ShelfDesc = value;
				}
			}
		}
	}
	
	public partial class StockGroupNameResult
	{
		
		private string _Group_Name;
		
		public StockGroupNameResult()
		{
		}
		
		[Column(Storage="_Group_Name", DbType="VarChar(50)")]
		public string Group_Name
		{
			get
			{
				return this._Group_Name;
			}
			set
			{
				if ((this._Group_Name != value))
				{
					this._Group_Name = value;
				}
			}
		}
	}
	
	public partial class StockItemInfoResult
	{
		
		private string _ProdCode;
		
		private string _XRefCode;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _Minimum;
		
		private System.Nullable<int> _Maximum;
		
		public StockItemInfoResult()
		{
		}
		
		[Column(Storage="_ProdCode", DbType="VarChar(35)")]
		public string ProdCode
		{
			get
			{
				return this._ProdCode;
			}
			set
			{
				if ((this._ProdCode != value))
				{
					this._ProdCode = value;
				}
			}
		}
		
		[Column(Storage="_XRefCode", DbType="VarChar(35)")]
		public string XRefCode
		{
			get
			{
				return this._XRefCode;
			}
			set
			{
				if ((this._XRefCode != value))
				{
					this._XRefCode = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this._DateUpdated = value;
				}
			}
		}
		
		[Column(Storage="_Minimum", DbType="Int")]
		public System.Nullable<int> Minimum
		{
			get
			{
				return this._Minimum;
			}
			set
			{
				if ((this._Minimum != value))
				{
					this._Minimum = value;
				}
			}
		}
		
		[Column(Storage="_Maximum", DbType="Int")]
		public System.Nullable<int> Maximum
		{
			get
			{
				return this._Maximum;
			}
			set
			{
				if ((this._Maximum != value))
				{
					this._Maximum = value;
				}
			}
		}
	}
	
	public partial class UnAuditedTransactionsResult
	{
		
		private System.Nullable<int> _TransID;
		
		private string _TransType;
		
		public UnAuditedTransactionsResult()
		{
		}
		
		[Column(Storage="_TransID", DbType="Int")]
		public System.Nullable<int> TransID
		{
			get
			{
				return this._TransID;
			}
			set
			{
				if ((this._TransID != value))
				{
					this._TransID = value;
				}
			}
		}
		
		[Column(Storage="_TransType", DbType="VarChar(11)")]
		public string TransType
		{
			get
			{
				return this._TransType;
			}
			set
			{
				if ((this._TransType != value))
				{
					this._TransType = value;
				}
			}
		}
	}
	
	public partial class Usp_ContractExpiry_SelectResult
	{
		
		private string _Company;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private System.Nullable<int> _Months;
		
		private string _SalesPerson;
		
		public Usp_ContractExpiry_SelectResult()
		{
		}
		
		[Column(Storage="_Company", DbType="VarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this._ExpiryDate = value;
				}
			}
		}
		
		[Column(Storage="_Months", DbType="Int")]
		public System.Nullable<int> Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this._Months = value;
				}
			}
		}
		
		[Column(Storage="_SalesPerson", DbType="VarChar(41)")]
		public string SalesPerson
		{
			get
			{
				return this._SalesPerson;
			}
			set
			{
				if ((this._SalesPerson != value))
				{
					this._SalesPerson = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
